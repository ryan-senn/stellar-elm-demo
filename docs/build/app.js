
(function() {
'use strict';

function F2(fun)
{
  function wrapper(a) { return function(b) { return fun(a,b); }; }
  wrapper.arity = 2;
  wrapper.func = fun;
  return wrapper;
}

function F3(fun)
{
  function wrapper(a) {
    return function(b) { return function(c) { return fun(a, b, c); }; };
  }
  wrapper.arity = 3;
  wrapper.func = fun;
  return wrapper;
}

function F4(fun)
{
  function wrapper(a) { return function(b) { return function(c) {
    return function(d) { return fun(a, b, c, d); }; }; };
  }
  wrapper.arity = 4;
  wrapper.func = fun;
  return wrapper;
}

function F5(fun)
{
  function wrapper(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };
  }
  wrapper.arity = 5;
  wrapper.func = fun;
  return wrapper;
}

function F6(fun)
{
  function wrapper(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return fun(a, b, c, d, e, f); }; }; }; }; };
  }
  wrapper.arity = 6;
  wrapper.func = fun;
  return wrapper;
}

function F7(fun)
{
  function wrapper(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };
  }
  wrapper.arity = 7;
  wrapper.func = fun;
  return wrapper;
}

function F8(fun)
{
  function wrapper(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return function(h) {
    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };
  }
  wrapper.arity = 8;
  wrapper.func = fun;
  return wrapper;
}

function F9(fun)
{
  function wrapper(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return function(h) { return function(i) {
    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };
  }
  wrapper.arity = 9;
  wrapper.func = fun;
  return wrapper;
}

function A2(fun, a, b)
{
  return fun.arity === 2
    ? fun.func(a, b)
    : fun(a)(b);
}
function A3(fun, a, b, c)
{
  return fun.arity === 3
    ? fun.func(a, b, c)
    : fun(a)(b)(c);
}
function A4(fun, a, b, c, d)
{
  return fun.arity === 4
    ? fun.func(a, b, c, d)
    : fun(a)(b)(c)(d);
}
function A5(fun, a, b, c, d, e)
{
  return fun.arity === 5
    ? fun.func(a, b, c, d, e)
    : fun(a)(b)(c)(d)(e);
}
function A6(fun, a, b, c, d, e, f)
{
  return fun.arity === 6
    ? fun.func(a, b, c, d, e, f)
    : fun(a)(b)(c)(d)(e)(f);
}
function A7(fun, a, b, c, d, e, f, g)
{
  return fun.arity === 7
    ? fun.func(a, b, c, d, e, f, g)
    : fun(a)(b)(c)(d)(e)(f)(g);
}
function A8(fun, a, b, c, d, e, f, g, h)
{
  return fun.arity === 8
    ? fun.func(a, b, c, d, e, f, g, h)
    : fun(a)(b)(c)(d)(e)(f)(g)(h);
}
function A9(fun, a, b, c, d, e, f, g, h, i)
{
  return fun.arity === 9
    ? fun.func(a, b, c, d, e, f, g, h, i)
    : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);
}

//import Native.Utils //

var _elm_lang$core$Native_Basics = function() {

function div(a, b)
{
	return (a / b) | 0;
}
function rem(a, b)
{
	return a % b;
}
function mod(a, b)
{
	if (b === 0)
	{
		throw new Error('Cannot perform mod 0. Division by zero error.');
	}
	var r = a % b;
	var m = a === 0 ? 0 : (b > 0 ? (a >= 0 ? r : r + b) : -mod(-a, -b));

	return m === b ? 0 : m;
}
function logBase(base, n)
{
	return Math.log(n) / Math.log(base);
}
function negate(n)
{
	return -n;
}
function abs(n)
{
	return n < 0 ? -n : n;
}

function min(a, b)
{
	return _elm_lang$core$Native_Utils.cmp(a, b) < 0 ? a : b;
}
function max(a, b)
{
	return _elm_lang$core$Native_Utils.cmp(a, b) > 0 ? a : b;
}
function clamp(lo, hi, n)
{
	return _elm_lang$core$Native_Utils.cmp(n, lo) < 0
		? lo
		: _elm_lang$core$Native_Utils.cmp(n, hi) > 0
			? hi
			: n;
}

var ord = ['LT', 'EQ', 'GT'];

function compare(x, y)
{
	return { ctor: ord[_elm_lang$core$Native_Utils.cmp(x, y) + 1] };
}

function xor(a, b)
{
	return a !== b;
}
function not(b)
{
	return !b;
}
function isInfinite(n)
{
	return n === Infinity || n === -Infinity;
}

function truncate(n)
{
	return n | 0;
}

function degrees(d)
{
	return d * Math.PI / 180;
}
function turns(t)
{
	return 2 * Math.PI * t;
}
function fromPolar(point)
{
	var r = point._0;
	var t = point._1;
	return _elm_lang$core$Native_Utils.Tuple2(r * Math.cos(t), r * Math.sin(t));
}
function toPolar(point)
{
	var x = point._0;
	var y = point._1;
	return _elm_lang$core$Native_Utils.Tuple2(Math.sqrt(x * x + y * y), Math.atan2(y, x));
}

return {
	div: F2(div),
	rem: F2(rem),
	mod: F2(mod),

	pi: Math.PI,
	e: Math.E,
	cos: Math.cos,
	sin: Math.sin,
	tan: Math.tan,
	acos: Math.acos,
	asin: Math.asin,
	atan: Math.atan,
	atan2: F2(Math.atan2),

	degrees: degrees,
	turns: turns,
	fromPolar: fromPolar,
	toPolar: toPolar,

	sqrt: Math.sqrt,
	logBase: F2(logBase),
	negate: negate,
	abs: abs,
	min: F2(min),
	max: F2(max),
	clamp: F3(clamp),
	compare: F2(compare),

	xor: F2(xor),
	not: not,

	truncate: truncate,
	ceiling: Math.ceil,
	floor: Math.floor,
	round: Math.round,
	toFloat: function(x) { return x; },
	isNaN: isNaN,
	isInfinite: isInfinite
};

}();
//import //

var _elm_lang$core$Native_Utils = function() {

// COMPARISONS

function eq(x, y)
{
	var stack = [];
	var isEqual = eqHelp(x, y, 0, stack);
	var pair;
	while (isEqual && (pair = stack.pop()))
	{
		isEqual = eqHelp(pair.x, pair.y, 0, stack);
	}
	return isEqual;
}


function eqHelp(x, y, depth, stack)
{
	if (depth > 100)
	{
		stack.push({ x: x, y: y });
		return true;
	}

	if (x === y)
	{
		return true;
	}

	if (typeof x !== 'object')
	{
		if (typeof x === 'function')
		{
			throw new Error(
				'Trying to use `(==)` on functions. There is no way to know if functions are "the same" in the Elm sense.'
				+ ' Read more about this at http://package.elm-lang.org/packages/elm-lang/core/latest/Basics#=='
				+ ' which describes why it is this way and what the better version will look like.'
			);
		}
		return false;
	}

	if (x === null || y === null)
	{
		return false
	}

	if (x instanceof Date)
	{
		return x.getTime() === y.getTime();
	}

	if (!('ctor' in x))
	{
		for (var key in x)
		{
			if (!eqHelp(x[key], y[key], depth + 1, stack))
			{
				return false;
			}
		}
		return true;
	}

	// convert Dicts and Sets to lists
	if (x.ctor === 'RBNode_elm_builtin' || x.ctor === 'RBEmpty_elm_builtin')
	{
		x = _elm_lang$core$Dict$toList(x);
		y = _elm_lang$core$Dict$toList(y);
	}
	if (x.ctor === 'Set_elm_builtin')
	{
		x = _elm_lang$core$Set$toList(x);
		y = _elm_lang$core$Set$toList(y);
	}

	// check if lists are equal without recursion
	if (x.ctor === '::')
	{
		var a = x;
		var b = y;
		while (a.ctor === '::' && b.ctor === '::')
		{
			if (!eqHelp(a._0, b._0, depth + 1, stack))
			{
				return false;
			}
			a = a._1;
			b = b._1;
		}
		return a.ctor === b.ctor;
	}

	// check if Arrays are equal
	if (x.ctor === '_Array')
	{
		var xs = _elm_lang$core$Native_Array.toJSArray(x);
		var ys = _elm_lang$core$Native_Array.toJSArray(y);
		if (xs.length !== ys.length)
		{
			return false;
		}
		for (var i = 0; i < xs.length; i++)
		{
			if (!eqHelp(xs[i], ys[i], depth + 1, stack))
			{
				return false;
			}
		}
		return true;
	}

	if (!eqHelp(x.ctor, y.ctor, depth + 1, stack))
	{
		return false;
	}

	for (var key in x)
	{
		if (!eqHelp(x[key], y[key], depth + 1, stack))
		{
			return false;
		}
	}
	return true;
}

// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on
// the particular integer values assigned to LT, EQ, and GT.

var LT = -1, EQ = 0, GT = 1;

function cmp(x, y)
{
	if (typeof x !== 'object')
	{
		return x === y ? EQ : x < y ? LT : GT;
	}

	if (x instanceof String)
	{
		var a = x.valueOf();
		var b = y.valueOf();
		return a === b ? EQ : a < b ? LT : GT;
	}

	if (x.ctor === '::' || x.ctor === '[]')
	{
		while (x.ctor === '::' && y.ctor === '::')
		{
			var ord = cmp(x._0, y._0);
			if (ord !== EQ)
			{
				return ord;
			}
			x = x._1;
			y = y._1;
		}
		return x.ctor === y.ctor ? EQ : x.ctor === '[]' ? LT : GT;
	}

	if (x.ctor.slice(0, 6) === '_Tuple')
	{
		var ord;
		var n = x.ctor.slice(6) - 0;
		var err = 'cannot compare tuples with more than 6 elements.';
		if (n === 0) return EQ;
		if (n >= 1) { ord = cmp(x._0, y._0); if (ord !== EQ) return ord;
		if (n >= 2) { ord = cmp(x._1, y._1); if (ord !== EQ) return ord;
		if (n >= 3) { ord = cmp(x._2, y._2); if (ord !== EQ) return ord;
		if (n >= 4) { ord = cmp(x._3, y._3); if (ord !== EQ) return ord;
		if (n >= 5) { ord = cmp(x._4, y._4); if (ord !== EQ) return ord;
		if (n >= 6) { ord = cmp(x._5, y._5); if (ord !== EQ) return ord;
		if (n >= 7) throw new Error('Comparison error: ' + err); } } } } } }
		return EQ;
	}

	throw new Error(
		'Comparison error: comparison is only defined on ints, '
		+ 'floats, times, chars, strings, lists of comparable values, '
		+ 'and tuples of comparable values.'
	);
}


// COMMON VALUES

var Tuple0 = {
	ctor: '_Tuple0'
};

function Tuple2(x, y)
{
	return {
		ctor: '_Tuple2',
		_0: x,
		_1: y
	};
}

function chr(c)
{
	return new String(c);
}


// GUID

var count = 0;
function guid(_)
{
	return count++;
}


// RECORDS

function update(oldRecord, updatedFields)
{
	var newRecord = {};

	for (var key in oldRecord)
	{
		newRecord[key] = oldRecord[key];
	}

	for (var key in updatedFields)
	{
		newRecord[key] = updatedFields[key];
	}

	return newRecord;
}


//// LIST STUFF ////

var Nil = { ctor: '[]' };

function Cons(hd, tl)
{
	return {
		ctor: '::',
		_0: hd,
		_1: tl
	};
}

function append(xs, ys)
{
	// append Strings
	if (typeof xs === 'string')
	{
		return xs + ys;
	}

	// append Lists
	if (xs.ctor === '[]')
	{
		return ys;
	}
	var root = Cons(xs._0, Nil);
	var curr = root;
	xs = xs._1;
	while (xs.ctor !== '[]')
	{
		curr._1 = Cons(xs._0, Nil);
		xs = xs._1;
		curr = curr._1;
	}
	curr._1 = ys;
	return root;
}


// CRASHES

function crash(moduleName, region)
{
	return function(message) {
		throw new Error(
			'Ran into a `Debug.crash` in module `' + moduleName + '` ' + regionToString(region) + '\n'
			+ 'The message provided by the code author is:\n\n    '
			+ message
		);
	};
}

function crashCase(moduleName, region, value)
{
	return function(message) {
		throw new Error(
			'Ran into a `Debug.crash` in module `' + moduleName + '`\n\n'
			+ 'This was caused by the `case` expression ' + regionToString(region) + '.\n'
			+ 'One of the branches ended with a crash and the following value got through:\n\n    ' + toString(value) + '\n\n'
			+ 'The message provided by the code author is:\n\n    '
			+ message
		);
	};
}

function regionToString(region)
{
	if (region.start.line == region.end.line)
	{
		return 'on line ' + region.start.line;
	}
	return 'between lines ' + region.start.line + ' and ' + region.end.line;
}


// TO STRING

function toString(v)
{
	var type = typeof v;
	if (type === 'function')
	{
		return '<function>';
	}

	if (type === 'boolean')
	{
		return v ? 'True' : 'False';
	}

	if (type === 'number')
	{
		return v + '';
	}

	if (v instanceof String)
	{
		return '\'' + addSlashes(v, true) + '\'';
	}

	if (type === 'string')
	{
		return '"' + addSlashes(v, false) + '"';
	}

	if (v === null)
	{
		return 'null';
	}

	if (type === 'object' && 'ctor' in v)
	{
		var ctorStarter = v.ctor.substring(0, 5);

		if (ctorStarter === '_Tupl')
		{
			var output = [];
			for (var k in v)
			{
				if (k === 'ctor') continue;
				output.push(toString(v[k]));
			}
			return '(' + output.join(',') + ')';
		}

		if (ctorStarter === '_Task')
		{
			return '<task>'
		}

		if (v.ctor === '_Array')
		{
			var list = _elm_lang$core$Array$toList(v);
			return 'Array.fromList ' + toString(list);
		}

		if (v.ctor === '<decoder>')
		{
			return '<decoder>';
		}

		if (v.ctor === '_Process')
		{
			return '<process:' + v.id + '>';
		}

		if (v.ctor === '::')
		{
			var output = '[' + toString(v._0);
			v = v._1;
			while (v.ctor === '::')
			{
				output += ',' + toString(v._0);
				v = v._1;
			}
			return output + ']';
		}

		if (v.ctor === '[]')
		{
			return '[]';
		}

		if (v.ctor === 'Set_elm_builtin')
		{
			return 'Set.fromList ' + toString(_elm_lang$core$Set$toList(v));
		}

		if (v.ctor === 'RBNode_elm_builtin' || v.ctor === 'RBEmpty_elm_builtin')
		{
			return 'Dict.fromList ' + toString(_elm_lang$core$Dict$toList(v));
		}

		var output = '';
		for (var i in v)
		{
			if (i === 'ctor') continue;
			var str = toString(v[i]);
			var c0 = str[0];
			var parenless = c0 === '{' || c0 === '(' || c0 === '<' || c0 === '"' || str.indexOf(' ') < 0;
			output += ' ' + (parenless ? str : '(' + str + ')');
		}
		return v.ctor + output;
	}

	if (type === 'object')
	{
		if (v instanceof Date)
		{
			return '<' + v.toString() + '>';
		}

		if (v.elm_web_socket)
		{
			return '<websocket>';
		}

		var output = [];
		for (var k in v)
		{
			output.push(k + ' = ' + toString(v[k]));
		}
		if (output.length === 0)
		{
			return '{}';
		}
		return '{ ' + output.join(', ') + ' }';
	}

	return '<internal structure>';
}

function addSlashes(str, isChar)
{
	var s = str.replace(/\\/g, '\\\\')
			  .replace(/\n/g, '\\n')
			  .replace(/\t/g, '\\t')
			  .replace(/\r/g, '\\r')
			  .replace(/\v/g, '\\v')
			  .replace(/\0/g, '\\0');
	if (isChar)
	{
		return s.replace(/\'/g, '\\\'');
	}
	else
	{
		return s.replace(/\"/g, '\\"');
	}
}


return {
	eq: eq,
	cmp: cmp,
	Tuple0: Tuple0,
	Tuple2: Tuple2,
	chr: chr,
	update: update,
	guid: guid,

	append: F2(append),

	crash: crash,
	crashCase: crashCase,

	toString: toString
};

}();
var _elm_lang$core$Basics$never = function (_p0) {
	never:
	while (true) {
		var _p1 = _p0;
		var _v1 = _p1._0;
		_p0 = _v1;
		continue never;
	}
};
var _elm_lang$core$Basics$uncurry = F2(
	function (f, _p2) {
		var _p3 = _p2;
		return A2(f, _p3._0, _p3._1);
	});
var _elm_lang$core$Basics$curry = F3(
	function (f, a, b) {
		return f(
			{ctor: '_Tuple2', _0: a, _1: b});
	});
var _elm_lang$core$Basics$flip = F3(
	function (f, b, a) {
		return A2(f, a, b);
	});
var _elm_lang$core$Basics$always = F2(
	function (a, _p4) {
		return a;
	});
var _elm_lang$core$Basics$identity = function (x) {
	return x;
};
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['<|'] = F2(
	function (f, x) {
		return f(x);
	});
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['|>'] = F2(
	function (x, f) {
		return f(x);
	});
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['>>'] = F3(
	function (f, g, x) {
		return g(
			f(x));
	});
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['<<'] = F3(
	function (g, f, x) {
		return g(
			f(x));
	});
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['++'] = _elm_lang$core$Native_Utils.append;
var _elm_lang$core$Basics$toString = _elm_lang$core$Native_Utils.toString;
var _elm_lang$core$Basics$isInfinite = _elm_lang$core$Native_Basics.isInfinite;
var _elm_lang$core$Basics$isNaN = _elm_lang$core$Native_Basics.isNaN;
var _elm_lang$core$Basics$toFloat = _elm_lang$core$Native_Basics.toFloat;
var _elm_lang$core$Basics$ceiling = _elm_lang$core$Native_Basics.ceiling;
var _elm_lang$core$Basics$floor = _elm_lang$core$Native_Basics.floor;
var _elm_lang$core$Basics$truncate = _elm_lang$core$Native_Basics.truncate;
var _elm_lang$core$Basics$round = _elm_lang$core$Native_Basics.round;
var _elm_lang$core$Basics$not = _elm_lang$core$Native_Basics.not;
var _elm_lang$core$Basics$xor = _elm_lang$core$Native_Basics.xor;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['||'] = _elm_lang$core$Native_Basics.or;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['&&'] = _elm_lang$core$Native_Basics.and;
var _elm_lang$core$Basics$max = _elm_lang$core$Native_Basics.max;
var _elm_lang$core$Basics$min = _elm_lang$core$Native_Basics.min;
var _elm_lang$core$Basics$compare = _elm_lang$core$Native_Basics.compare;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['>='] = _elm_lang$core$Native_Basics.ge;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['<='] = _elm_lang$core$Native_Basics.le;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['>'] = _elm_lang$core$Native_Basics.gt;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['<'] = _elm_lang$core$Native_Basics.lt;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['/='] = _elm_lang$core$Native_Basics.neq;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['=='] = _elm_lang$core$Native_Basics.eq;
var _elm_lang$core$Basics$e = _elm_lang$core$Native_Basics.e;
var _elm_lang$core$Basics$pi = _elm_lang$core$Native_Basics.pi;
var _elm_lang$core$Basics$clamp = _elm_lang$core$Native_Basics.clamp;
var _elm_lang$core$Basics$logBase = _elm_lang$core$Native_Basics.logBase;
var _elm_lang$core$Basics$abs = _elm_lang$core$Native_Basics.abs;
var _elm_lang$core$Basics$negate = _elm_lang$core$Native_Basics.negate;
var _elm_lang$core$Basics$sqrt = _elm_lang$core$Native_Basics.sqrt;
var _elm_lang$core$Basics$atan2 = _elm_lang$core$Native_Basics.atan2;
var _elm_lang$core$Basics$atan = _elm_lang$core$Native_Basics.atan;
var _elm_lang$core$Basics$asin = _elm_lang$core$Native_Basics.asin;
var _elm_lang$core$Basics$acos = _elm_lang$core$Native_Basics.acos;
var _elm_lang$core$Basics$tan = _elm_lang$core$Native_Basics.tan;
var _elm_lang$core$Basics$sin = _elm_lang$core$Native_Basics.sin;
var _elm_lang$core$Basics$cos = _elm_lang$core$Native_Basics.cos;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['^'] = _elm_lang$core$Native_Basics.exp;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['%'] = _elm_lang$core$Native_Basics.mod;
var _elm_lang$core$Basics$rem = _elm_lang$core$Native_Basics.rem;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['//'] = _elm_lang$core$Native_Basics.div;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['/'] = _elm_lang$core$Native_Basics.floatDiv;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['*'] = _elm_lang$core$Native_Basics.mul;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['-'] = _elm_lang$core$Native_Basics.sub;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['+'] = _elm_lang$core$Native_Basics.add;
var _elm_lang$core$Basics$toPolar = _elm_lang$core$Native_Basics.toPolar;
var _elm_lang$core$Basics$fromPolar = _elm_lang$core$Native_Basics.fromPolar;
var _elm_lang$core$Basics$turns = _elm_lang$core$Native_Basics.turns;
var _elm_lang$core$Basics$degrees = _elm_lang$core$Native_Basics.degrees;
var _elm_lang$core$Basics$radians = function (t) {
	return t;
};
var _elm_lang$core$Basics$GT = {ctor: 'GT'};
var _elm_lang$core$Basics$EQ = {ctor: 'EQ'};
var _elm_lang$core$Basics$LT = {ctor: 'LT'};
var _elm_lang$core$Basics$JustOneMore = function (a) {
	return {ctor: 'JustOneMore', _0: a};
};

var _elm_lang$core$Maybe$withDefault = F2(
	function ($default, maybe) {
		var _p0 = maybe;
		if (_p0.ctor === 'Just') {
			return _p0._0;
		} else {
			return $default;
		}
	});
var _elm_lang$core$Maybe$Nothing = {ctor: 'Nothing'};
var _elm_lang$core$Maybe$andThen = F2(
	function (callback, maybeValue) {
		var _p1 = maybeValue;
		if (_p1.ctor === 'Just') {
			return callback(_p1._0);
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	});
var _elm_lang$core$Maybe$Just = function (a) {
	return {ctor: 'Just', _0: a};
};
var _elm_lang$core$Maybe$map = F2(
	function (f, maybe) {
		var _p2 = maybe;
		if (_p2.ctor === 'Just') {
			return _elm_lang$core$Maybe$Just(
				f(_p2._0));
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	});
var _elm_lang$core$Maybe$map2 = F3(
	function (func, ma, mb) {
		var _p3 = {ctor: '_Tuple2', _0: ma, _1: mb};
		if (((_p3.ctor === '_Tuple2') && (_p3._0.ctor === 'Just')) && (_p3._1.ctor === 'Just')) {
			return _elm_lang$core$Maybe$Just(
				A2(func, _p3._0._0, _p3._1._0));
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	});
var _elm_lang$core$Maybe$map3 = F4(
	function (func, ma, mb, mc) {
		var _p4 = {ctor: '_Tuple3', _0: ma, _1: mb, _2: mc};
		if ((((_p4.ctor === '_Tuple3') && (_p4._0.ctor === 'Just')) && (_p4._1.ctor === 'Just')) && (_p4._2.ctor === 'Just')) {
			return _elm_lang$core$Maybe$Just(
				A3(func, _p4._0._0, _p4._1._0, _p4._2._0));
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	});
var _elm_lang$core$Maybe$map4 = F5(
	function (func, ma, mb, mc, md) {
		var _p5 = {ctor: '_Tuple4', _0: ma, _1: mb, _2: mc, _3: md};
		if (((((_p5.ctor === '_Tuple4') && (_p5._0.ctor === 'Just')) && (_p5._1.ctor === 'Just')) && (_p5._2.ctor === 'Just')) && (_p5._3.ctor === 'Just')) {
			return _elm_lang$core$Maybe$Just(
				A4(func, _p5._0._0, _p5._1._0, _p5._2._0, _p5._3._0));
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	});
var _elm_lang$core$Maybe$map5 = F6(
	function (func, ma, mb, mc, md, me) {
		var _p6 = {ctor: '_Tuple5', _0: ma, _1: mb, _2: mc, _3: md, _4: me};
		if ((((((_p6.ctor === '_Tuple5') && (_p6._0.ctor === 'Just')) && (_p6._1.ctor === 'Just')) && (_p6._2.ctor === 'Just')) && (_p6._3.ctor === 'Just')) && (_p6._4.ctor === 'Just')) {
			return _elm_lang$core$Maybe$Just(
				A5(func, _p6._0._0, _p6._1._0, _p6._2._0, _p6._3._0, _p6._4._0));
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	});

//import Native.Utils //

var _elm_lang$core$Native_List = function() {

var Nil = { ctor: '[]' };

function Cons(hd, tl)
{
	return { ctor: '::', _0: hd, _1: tl };
}

function fromArray(arr)
{
	var out = Nil;
	for (var i = arr.length; i--; )
	{
		out = Cons(arr[i], out);
	}
	return out;
}

function toArray(xs)
{
	var out = [];
	while (xs.ctor !== '[]')
	{
		out.push(xs._0);
		xs = xs._1;
	}
	return out;
}

function foldr(f, b, xs)
{
	var arr = toArray(xs);
	var acc = b;
	for (var i = arr.length; i--; )
	{
		acc = A2(f, arr[i], acc);
	}
	return acc;
}

function map2(f, xs, ys)
{
	var arr = [];
	while (xs.ctor !== '[]' && ys.ctor !== '[]')
	{
		arr.push(A2(f, xs._0, ys._0));
		xs = xs._1;
		ys = ys._1;
	}
	return fromArray(arr);
}

function map3(f, xs, ys, zs)
{
	var arr = [];
	while (xs.ctor !== '[]' && ys.ctor !== '[]' && zs.ctor !== '[]')
	{
		arr.push(A3(f, xs._0, ys._0, zs._0));
		xs = xs._1;
		ys = ys._1;
		zs = zs._1;
	}
	return fromArray(arr);
}

function map4(f, ws, xs, ys, zs)
{
	var arr = [];
	while (   ws.ctor !== '[]'
		   && xs.ctor !== '[]'
		   && ys.ctor !== '[]'
		   && zs.ctor !== '[]')
	{
		arr.push(A4(f, ws._0, xs._0, ys._0, zs._0));
		ws = ws._1;
		xs = xs._1;
		ys = ys._1;
		zs = zs._1;
	}
	return fromArray(arr);
}

function map5(f, vs, ws, xs, ys, zs)
{
	var arr = [];
	while (   vs.ctor !== '[]'
		   && ws.ctor !== '[]'
		   && xs.ctor !== '[]'
		   && ys.ctor !== '[]'
		   && zs.ctor !== '[]')
	{
		arr.push(A5(f, vs._0, ws._0, xs._0, ys._0, zs._0));
		vs = vs._1;
		ws = ws._1;
		xs = xs._1;
		ys = ys._1;
		zs = zs._1;
	}
	return fromArray(arr);
}

function sortBy(f, xs)
{
	return fromArray(toArray(xs).sort(function(a, b) {
		return _elm_lang$core$Native_Utils.cmp(f(a), f(b));
	}));
}

function sortWith(f, xs)
{
	return fromArray(toArray(xs).sort(function(a, b) {
		var ord = f(a)(b).ctor;
		return ord === 'EQ' ? 0 : ord === 'LT' ? -1 : 1;
	}));
}

return {
	Nil: Nil,
	Cons: Cons,
	cons: F2(Cons),
	toArray: toArray,
	fromArray: fromArray,

	foldr: F3(foldr),

	map2: F3(map2),
	map3: F4(map3),
	map4: F5(map4),
	map5: F6(map5),
	sortBy: F2(sortBy),
	sortWith: F2(sortWith)
};

}();
var _elm_lang$core$List$sortWith = _elm_lang$core$Native_List.sortWith;
var _elm_lang$core$List$sortBy = _elm_lang$core$Native_List.sortBy;
var _elm_lang$core$List$sort = function (xs) {
	return A2(_elm_lang$core$List$sortBy, _elm_lang$core$Basics$identity, xs);
};
var _elm_lang$core$List$singleton = function (value) {
	return {
		ctor: '::',
		_0: value,
		_1: {ctor: '[]'}
	};
};
var _elm_lang$core$List$drop = F2(
	function (n, list) {
		drop:
		while (true) {
			if (_elm_lang$core$Native_Utils.cmp(n, 0) < 1) {
				return list;
			} else {
				var _p0 = list;
				if (_p0.ctor === '[]') {
					return list;
				} else {
					var _v1 = n - 1,
						_v2 = _p0._1;
					n = _v1;
					list = _v2;
					continue drop;
				}
			}
		}
	});
var _elm_lang$core$List$map5 = _elm_lang$core$Native_List.map5;
var _elm_lang$core$List$map4 = _elm_lang$core$Native_List.map4;
var _elm_lang$core$List$map3 = _elm_lang$core$Native_List.map3;
var _elm_lang$core$List$map2 = _elm_lang$core$Native_List.map2;
var _elm_lang$core$List$any = F2(
	function (isOkay, list) {
		any:
		while (true) {
			var _p1 = list;
			if (_p1.ctor === '[]') {
				return false;
			} else {
				if (isOkay(_p1._0)) {
					return true;
				} else {
					var _v4 = isOkay,
						_v5 = _p1._1;
					isOkay = _v4;
					list = _v5;
					continue any;
				}
			}
		}
	});
var _elm_lang$core$List$all = F2(
	function (isOkay, list) {
		return !A2(
			_elm_lang$core$List$any,
			function (_p2) {
				return !isOkay(_p2);
			},
			list);
	});
var _elm_lang$core$List$foldr = _elm_lang$core$Native_List.foldr;
var _elm_lang$core$List$foldl = F3(
	function (func, acc, list) {
		foldl:
		while (true) {
			var _p3 = list;
			if (_p3.ctor === '[]') {
				return acc;
			} else {
				var _v7 = func,
					_v8 = A2(func, _p3._0, acc),
					_v9 = _p3._1;
				func = _v7;
				acc = _v8;
				list = _v9;
				continue foldl;
			}
		}
	});
var _elm_lang$core$List$length = function (xs) {
	return A3(
		_elm_lang$core$List$foldl,
		F2(
			function (_p4, i) {
				return i + 1;
			}),
		0,
		xs);
};
var _elm_lang$core$List$sum = function (numbers) {
	return A3(
		_elm_lang$core$List$foldl,
		F2(
			function (x, y) {
				return x + y;
			}),
		0,
		numbers);
};
var _elm_lang$core$List$product = function (numbers) {
	return A3(
		_elm_lang$core$List$foldl,
		F2(
			function (x, y) {
				return x * y;
			}),
		1,
		numbers);
};
var _elm_lang$core$List$maximum = function (list) {
	var _p5 = list;
	if (_p5.ctor === '::') {
		return _elm_lang$core$Maybe$Just(
			A3(_elm_lang$core$List$foldl, _elm_lang$core$Basics$max, _p5._0, _p5._1));
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _elm_lang$core$List$minimum = function (list) {
	var _p6 = list;
	if (_p6.ctor === '::') {
		return _elm_lang$core$Maybe$Just(
			A3(_elm_lang$core$List$foldl, _elm_lang$core$Basics$min, _p6._0, _p6._1));
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _elm_lang$core$List$member = F2(
	function (x, xs) {
		return A2(
			_elm_lang$core$List$any,
			function (a) {
				return _elm_lang$core$Native_Utils.eq(a, x);
			},
			xs);
	});
var _elm_lang$core$List$isEmpty = function (xs) {
	var _p7 = xs;
	if (_p7.ctor === '[]') {
		return true;
	} else {
		return false;
	}
};
var _elm_lang$core$List$tail = function (list) {
	var _p8 = list;
	if (_p8.ctor === '::') {
		return _elm_lang$core$Maybe$Just(_p8._1);
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _elm_lang$core$List$head = function (list) {
	var _p9 = list;
	if (_p9.ctor === '::') {
		return _elm_lang$core$Maybe$Just(_p9._0);
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _elm_lang$core$List_ops = _elm_lang$core$List_ops || {};
_elm_lang$core$List_ops['::'] = _elm_lang$core$Native_List.cons;
var _elm_lang$core$List$map = F2(
	function (f, xs) {
		return A3(
			_elm_lang$core$List$foldr,
			F2(
				function (x, acc) {
					return {
						ctor: '::',
						_0: f(x),
						_1: acc
					};
				}),
			{ctor: '[]'},
			xs);
	});
var _elm_lang$core$List$filter = F2(
	function (pred, xs) {
		var conditionalCons = F2(
			function (front, back) {
				return pred(front) ? {ctor: '::', _0: front, _1: back} : back;
			});
		return A3(
			_elm_lang$core$List$foldr,
			conditionalCons,
			{ctor: '[]'},
			xs);
	});
var _elm_lang$core$List$maybeCons = F3(
	function (f, mx, xs) {
		var _p10 = f(mx);
		if (_p10.ctor === 'Just') {
			return {ctor: '::', _0: _p10._0, _1: xs};
		} else {
			return xs;
		}
	});
var _elm_lang$core$List$filterMap = F2(
	function (f, xs) {
		return A3(
			_elm_lang$core$List$foldr,
			_elm_lang$core$List$maybeCons(f),
			{ctor: '[]'},
			xs);
	});
var _elm_lang$core$List$reverse = function (list) {
	return A3(
		_elm_lang$core$List$foldl,
		F2(
			function (x, y) {
				return {ctor: '::', _0: x, _1: y};
			}),
		{ctor: '[]'},
		list);
};
var _elm_lang$core$List$scanl = F3(
	function (f, b, xs) {
		var scan1 = F2(
			function (x, accAcc) {
				var _p11 = accAcc;
				if (_p11.ctor === '::') {
					return {
						ctor: '::',
						_0: A2(f, x, _p11._0),
						_1: accAcc
					};
				} else {
					return {ctor: '[]'};
				}
			});
		return _elm_lang$core$List$reverse(
			A3(
				_elm_lang$core$List$foldl,
				scan1,
				{
					ctor: '::',
					_0: b,
					_1: {ctor: '[]'}
				},
				xs));
	});
var _elm_lang$core$List$append = F2(
	function (xs, ys) {
		var _p12 = ys;
		if (_p12.ctor === '[]') {
			return xs;
		} else {
			return A3(
				_elm_lang$core$List$foldr,
				F2(
					function (x, y) {
						return {ctor: '::', _0: x, _1: y};
					}),
				ys,
				xs);
		}
	});
var _elm_lang$core$List$concat = function (lists) {
	return A3(
		_elm_lang$core$List$foldr,
		_elm_lang$core$List$append,
		{ctor: '[]'},
		lists);
};
var _elm_lang$core$List$concatMap = F2(
	function (f, list) {
		return _elm_lang$core$List$concat(
			A2(_elm_lang$core$List$map, f, list));
	});
var _elm_lang$core$List$partition = F2(
	function (pred, list) {
		var step = F2(
			function (x, _p13) {
				var _p14 = _p13;
				var _p16 = _p14._0;
				var _p15 = _p14._1;
				return pred(x) ? {
					ctor: '_Tuple2',
					_0: {ctor: '::', _0: x, _1: _p16},
					_1: _p15
				} : {
					ctor: '_Tuple2',
					_0: _p16,
					_1: {ctor: '::', _0: x, _1: _p15}
				};
			});
		return A3(
			_elm_lang$core$List$foldr,
			step,
			{
				ctor: '_Tuple2',
				_0: {ctor: '[]'},
				_1: {ctor: '[]'}
			},
			list);
	});
var _elm_lang$core$List$unzip = function (pairs) {
	var step = F2(
		function (_p18, _p17) {
			var _p19 = _p18;
			var _p20 = _p17;
			return {
				ctor: '_Tuple2',
				_0: {ctor: '::', _0: _p19._0, _1: _p20._0},
				_1: {ctor: '::', _0: _p19._1, _1: _p20._1}
			};
		});
	return A3(
		_elm_lang$core$List$foldr,
		step,
		{
			ctor: '_Tuple2',
			_0: {ctor: '[]'},
			_1: {ctor: '[]'}
		},
		pairs);
};
var _elm_lang$core$List$intersperse = F2(
	function (sep, xs) {
		var _p21 = xs;
		if (_p21.ctor === '[]') {
			return {ctor: '[]'};
		} else {
			var step = F2(
				function (x, rest) {
					return {
						ctor: '::',
						_0: sep,
						_1: {ctor: '::', _0: x, _1: rest}
					};
				});
			var spersed = A3(
				_elm_lang$core$List$foldr,
				step,
				{ctor: '[]'},
				_p21._1);
			return {ctor: '::', _0: _p21._0, _1: spersed};
		}
	});
var _elm_lang$core$List$takeReverse = F3(
	function (n, list, taken) {
		takeReverse:
		while (true) {
			if (_elm_lang$core$Native_Utils.cmp(n, 0) < 1) {
				return taken;
			} else {
				var _p22 = list;
				if (_p22.ctor === '[]') {
					return taken;
				} else {
					var _v23 = n - 1,
						_v24 = _p22._1,
						_v25 = {ctor: '::', _0: _p22._0, _1: taken};
					n = _v23;
					list = _v24;
					taken = _v25;
					continue takeReverse;
				}
			}
		}
	});
var _elm_lang$core$List$takeTailRec = F2(
	function (n, list) {
		return _elm_lang$core$List$reverse(
			A3(
				_elm_lang$core$List$takeReverse,
				n,
				list,
				{ctor: '[]'}));
	});
var _elm_lang$core$List$takeFast = F3(
	function (ctr, n, list) {
		if (_elm_lang$core$Native_Utils.cmp(n, 0) < 1) {
			return {ctor: '[]'};
		} else {
			var _p23 = {ctor: '_Tuple2', _0: n, _1: list};
			_v26_5:
			do {
				_v26_1:
				do {
					if (_p23.ctor === '_Tuple2') {
						if (_p23._1.ctor === '[]') {
							return list;
						} else {
							if (_p23._1._1.ctor === '::') {
								switch (_p23._0) {
									case 1:
										break _v26_1;
									case 2:
										return {
											ctor: '::',
											_0: _p23._1._0,
											_1: {
												ctor: '::',
												_0: _p23._1._1._0,
												_1: {ctor: '[]'}
											}
										};
									case 3:
										if (_p23._1._1._1.ctor === '::') {
											return {
												ctor: '::',
												_0: _p23._1._0,
												_1: {
													ctor: '::',
													_0: _p23._1._1._0,
													_1: {
														ctor: '::',
														_0: _p23._1._1._1._0,
														_1: {ctor: '[]'}
													}
												}
											};
										} else {
											break _v26_5;
										}
									default:
										if ((_p23._1._1._1.ctor === '::') && (_p23._1._1._1._1.ctor === '::')) {
											var _p28 = _p23._1._1._1._0;
											var _p27 = _p23._1._1._0;
											var _p26 = _p23._1._0;
											var _p25 = _p23._1._1._1._1._0;
											var _p24 = _p23._1._1._1._1._1;
											return (_elm_lang$core$Native_Utils.cmp(ctr, 1000) > 0) ? {
												ctor: '::',
												_0: _p26,
												_1: {
													ctor: '::',
													_0: _p27,
													_1: {
														ctor: '::',
														_0: _p28,
														_1: {
															ctor: '::',
															_0: _p25,
															_1: A2(_elm_lang$core$List$takeTailRec, n - 4, _p24)
														}
													}
												}
											} : {
												ctor: '::',
												_0: _p26,
												_1: {
													ctor: '::',
													_0: _p27,
													_1: {
														ctor: '::',
														_0: _p28,
														_1: {
															ctor: '::',
															_0: _p25,
															_1: A3(_elm_lang$core$List$takeFast, ctr + 1, n - 4, _p24)
														}
													}
												}
											};
										} else {
											break _v26_5;
										}
								}
							} else {
								if (_p23._0 === 1) {
									break _v26_1;
								} else {
									break _v26_5;
								}
							}
						}
					} else {
						break _v26_5;
					}
				} while(false);
				return {
					ctor: '::',
					_0: _p23._1._0,
					_1: {ctor: '[]'}
				};
			} while(false);
			return list;
		}
	});
var _elm_lang$core$List$take = F2(
	function (n, list) {
		return A3(_elm_lang$core$List$takeFast, 0, n, list);
	});
var _elm_lang$core$List$repeatHelp = F3(
	function (result, n, value) {
		repeatHelp:
		while (true) {
			if (_elm_lang$core$Native_Utils.cmp(n, 0) < 1) {
				return result;
			} else {
				var _v27 = {ctor: '::', _0: value, _1: result},
					_v28 = n - 1,
					_v29 = value;
				result = _v27;
				n = _v28;
				value = _v29;
				continue repeatHelp;
			}
		}
	});
var _elm_lang$core$List$repeat = F2(
	function (n, value) {
		return A3(
			_elm_lang$core$List$repeatHelp,
			{ctor: '[]'},
			n,
			value);
	});
var _elm_lang$core$List$rangeHelp = F3(
	function (lo, hi, list) {
		rangeHelp:
		while (true) {
			if (_elm_lang$core$Native_Utils.cmp(lo, hi) < 1) {
				var _v30 = lo,
					_v31 = hi - 1,
					_v32 = {ctor: '::', _0: hi, _1: list};
				lo = _v30;
				hi = _v31;
				list = _v32;
				continue rangeHelp;
			} else {
				return list;
			}
		}
	});
var _elm_lang$core$List$range = F2(
	function (lo, hi) {
		return A3(
			_elm_lang$core$List$rangeHelp,
			lo,
			hi,
			{ctor: '[]'});
	});
var _elm_lang$core$List$indexedMap = F2(
	function (f, xs) {
		return A3(
			_elm_lang$core$List$map2,
			f,
			A2(
				_elm_lang$core$List$range,
				0,
				_elm_lang$core$List$length(xs) - 1),
			xs);
	});

//import Native.Utils //

var _elm_lang$core$Native_Debug = function() {

function log(tag, value)
{
	var msg = tag + ': ' + _elm_lang$core$Native_Utils.toString(value);
	var process = process || {};
	if (process.stdout)
	{
		process.stdout.write(msg);
	}
	else
	{
		console.log(msg);
	}
	return value;
}

function crash(message)
{
	throw new Error(message);
}

return {
	crash: crash,
	log: F2(log)
};

}();
//import Maybe, Native.List, Native.Utils, Result //

var _elm_lang$core$Native_String = function() {

function isEmpty(str)
{
	return str.length === 0;
}
function cons(chr, str)
{
	return chr + str;
}
function uncons(str)
{
	var hd = str[0];
	if (hd)
	{
		return _elm_lang$core$Maybe$Just(_elm_lang$core$Native_Utils.Tuple2(_elm_lang$core$Native_Utils.chr(hd), str.slice(1)));
	}
	return _elm_lang$core$Maybe$Nothing;
}
function append(a, b)
{
	return a + b;
}
function concat(strs)
{
	return _elm_lang$core$Native_List.toArray(strs).join('');
}
function length(str)
{
	return str.length;
}
function map(f, str)
{
	var out = str.split('');
	for (var i = out.length; i--; )
	{
		out[i] = f(_elm_lang$core$Native_Utils.chr(out[i]));
	}
	return out.join('');
}
function filter(pred, str)
{
	return str.split('').map(_elm_lang$core$Native_Utils.chr).filter(pred).join('');
}
function reverse(str)
{
	return str.split('').reverse().join('');
}
function foldl(f, b, str)
{
	var len = str.length;
	for (var i = 0; i < len; ++i)
	{
		b = A2(f, _elm_lang$core$Native_Utils.chr(str[i]), b);
	}
	return b;
}
function foldr(f, b, str)
{
	for (var i = str.length; i--; )
	{
		b = A2(f, _elm_lang$core$Native_Utils.chr(str[i]), b);
	}
	return b;
}
function split(sep, str)
{
	return _elm_lang$core$Native_List.fromArray(str.split(sep));
}
function join(sep, strs)
{
	return _elm_lang$core$Native_List.toArray(strs).join(sep);
}
function repeat(n, str)
{
	var result = '';
	while (n > 0)
	{
		if (n & 1)
		{
			result += str;
		}
		n >>= 1, str += str;
	}
	return result;
}
function slice(start, end, str)
{
	return str.slice(start, end);
}
function left(n, str)
{
	return n < 1 ? '' : str.slice(0, n);
}
function right(n, str)
{
	return n < 1 ? '' : str.slice(-n);
}
function dropLeft(n, str)
{
	return n < 1 ? str : str.slice(n);
}
function dropRight(n, str)
{
	return n < 1 ? str : str.slice(0, -n);
}
function pad(n, chr, str)
{
	var half = (n - str.length) / 2;
	return repeat(Math.ceil(half), chr) + str + repeat(half | 0, chr);
}
function padRight(n, chr, str)
{
	return str + repeat(n - str.length, chr);
}
function padLeft(n, chr, str)
{
	return repeat(n - str.length, chr) + str;
}

function trim(str)
{
	return str.trim();
}
function trimLeft(str)
{
	return str.replace(/^\s+/, '');
}
function trimRight(str)
{
	return str.replace(/\s+$/, '');
}

function words(str)
{
	return _elm_lang$core$Native_List.fromArray(str.trim().split(/\s+/g));
}
function lines(str)
{
	return _elm_lang$core$Native_List.fromArray(str.split(/\r\n|\r|\n/g));
}

function toUpper(str)
{
	return str.toUpperCase();
}
function toLower(str)
{
	return str.toLowerCase();
}

function any(pred, str)
{
	for (var i = str.length; i--; )
	{
		if (pred(_elm_lang$core$Native_Utils.chr(str[i])))
		{
			return true;
		}
	}
	return false;
}
function all(pred, str)
{
	for (var i = str.length; i--; )
	{
		if (!pred(_elm_lang$core$Native_Utils.chr(str[i])))
		{
			return false;
		}
	}
	return true;
}

function contains(sub, str)
{
	return str.indexOf(sub) > -1;
}
function startsWith(sub, str)
{
	return str.indexOf(sub) === 0;
}
function endsWith(sub, str)
{
	return str.length >= sub.length &&
		str.lastIndexOf(sub) === str.length - sub.length;
}
function indexes(sub, str)
{
	var subLen = sub.length;

	if (subLen < 1)
	{
		return _elm_lang$core$Native_List.Nil;
	}

	var i = 0;
	var is = [];

	while ((i = str.indexOf(sub, i)) > -1)
	{
		is.push(i);
		i = i + subLen;
	}

	return _elm_lang$core$Native_List.fromArray(is);
}


function toInt(s)
{
	var len = s.length;

	// if empty
	if (len === 0)
	{
		return intErr(s);
	}

	// if hex
	var c = s[0];
	if (c === '0' && s[1] === 'x')
	{
		for (var i = 2; i < len; ++i)
		{
			var c = s[i];
			if (('0' <= c && c <= '9') || ('A' <= c && c <= 'F') || ('a' <= c && c <= 'f'))
			{
				continue;
			}
			return intErr(s);
		}
		return _elm_lang$core$Result$Ok(parseInt(s, 16));
	}

	// is decimal
	if (c > '9' || (c < '0' && c !== '-' && c !== '+'))
	{
		return intErr(s);
	}
	for (var i = 1; i < len; ++i)
	{
		var c = s[i];
		if (c < '0' || '9' < c)
		{
			return intErr(s);
		}
	}

	return _elm_lang$core$Result$Ok(parseInt(s, 10));
}

function intErr(s)
{
	return _elm_lang$core$Result$Err("could not convert string '" + s + "' to an Int");
}


function toFloat(s)
{
	// check if it is a hex, octal, or binary number
	if (s.length === 0 || /[\sxbo]/.test(s))
	{
		return floatErr(s);
	}
	var n = +s;
	// faster isNaN check
	return n === n ? _elm_lang$core$Result$Ok(n) : floatErr(s);
}

function floatErr(s)
{
	return _elm_lang$core$Result$Err("could not convert string '" + s + "' to a Float");
}


function toList(str)
{
	return _elm_lang$core$Native_List.fromArray(str.split('').map(_elm_lang$core$Native_Utils.chr));
}
function fromList(chars)
{
	return _elm_lang$core$Native_List.toArray(chars).join('');
}

return {
	isEmpty: isEmpty,
	cons: F2(cons),
	uncons: uncons,
	append: F2(append),
	concat: concat,
	length: length,
	map: F2(map),
	filter: F2(filter),
	reverse: reverse,
	foldl: F3(foldl),
	foldr: F3(foldr),

	split: F2(split),
	join: F2(join),
	repeat: F2(repeat),

	slice: F3(slice),
	left: F2(left),
	right: F2(right),
	dropLeft: F2(dropLeft),
	dropRight: F2(dropRight),

	pad: F3(pad),
	padLeft: F3(padLeft),
	padRight: F3(padRight),

	trim: trim,
	trimLeft: trimLeft,
	trimRight: trimRight,

	words: words,
	lines: lines,

	toUpper: toUpper,
	toLower: toLower,

	any: F2(any),
	all: F2(all),

	contains: F2(contains),
	startsWith: F2(startsWith),
	endsWith: F2(endsWith),
	indexes: F2(indexes),

	toInt: toInt,
	toFloat: toFloat,
	toList: toList,
	fromList: fromList
};

}();

//import Native.Utils //

var _elm_lang$core$Native_Char = function() {

return {
	fromCode: function(c) { return _elm_lang$core$Native_Utils.chr(String.fromCharCode(c)); },
	toCode: function(c) { return c.charCodeAt(0); },
	toUpper: function(c) { return _elm_lang$core$Native_Utils.chr(c.toUpperCase()); },
	toLower: function(c) { return _elm_lang$core$Native_Utils.chr(c.toLowerCase()); },
	toLocaleUpper: function(c) { return _elm_lang$core$Native_Utils.chr(c.toLocaleUpperCase()); },
	toLocaleLower: function(c) { return _elm_lang$core$Native_Utils.chr(c.toLocaleLowerCase()); }
};

}();
var _elm_lang$core$Char$fromCode = _elm_lang$core$Native_Char.fromCode;
var _elm_lang$core$Char$toCode = _elm_lang$core$Native_Char.toCode;
var _elm_lang$core$Char$toLocaleLower = _elm_lang$core$Native_Char.toLocaleLower;
var _elm_lang$core$Char$toLocaleUpper = _elm_lang$core$Native_Char.toLocaleUpper;
var _elm_lang$core$Char$toLower = _elm_lang$core$Native_Char.toLower;
var _elm_lang$core$Char$toUpper = _elm_lang$core$Native_Char.toUpper;
var _elm_lang$core$Char$isBetween = F3(
	function (low, high, $char) {
		var code = _elm_lang$core$Char$toCode($char);
		return (_elm_lang$core$Native_Utils.cmp(
			code,
			_elm_lang$core$Char$toCode(low)) > -1) && (_elm_lang$core$Native_Utils.cmp(
			code,
			_elm_lang$core$Char$toCode(high)) < 1);
	});
var _elm_lang$core$Char$isUpper = A2(
	_elm_lang$core$Char$isBetween,
	_elm_lang$core$Native_Utils.chr('A'),
	_elm_lang$core$Native_Utils.chr('Z'));
var _elm_lang$core$Char$isLower = A2(
	_elm_lang$core$Char$isBetween,
	_elm_lang$core$Native_Utils.chr('a'),
	_elm_lang$core$Native_Utils.chr('z'));
var _elm_lang$core$Char$isDigit = A2(
	_elm_lang$core$Char$isBetween,
	_elm_lang$core$Native_Utils.chr('0'),
	_elm_lang$core$Native_Utils.chr('9'));
var _elm_lang$core$Char$isOctDigit = A2(
	_elm_lang$core$Char$isBetween,
	_elm_lang$core$Native_Utils.chr('0'),
	_elm_lang$core$Native_Utils.chr('7'));
var _elm_lang$core$Char$isHexDigit = function ($char) {
	return _elm_lang$core$Char$isDigit($char) || (A3(
		_elm_lang$core$Char$isBetween,
		_elm_lang$core$Native_Utils.chr('a'),
		_elm_lang$core$Native_Utils.chr('f'),
		$char) || A3(
		_elm_lang$core$Char$isBetween,
		_elm_lang$core$Native_Utils.chr('A'),
		_elm_lang$core$Native_Utils.chr('F'),
		$char));
};

var _elm_lang$core$Result$toMaybe = function (result) {
	var _p0 = result;
	if (_p0.ctor === 'Ok') {
		return _elm_lang$core$Maybe$Just(_p0._0);
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _elm_lang$core$Result$withDefault = F2(
	function (def, result) {
		var _p1 = result;
		if (_p1.ctor === 'Ok') {
			return _p1._0;
		} else {
			return def;
		}
	});
var _elm_lang$core$Result$Err = function (a) {
	return {ctor: 'Err', _0: a};
};
var _elm_lang$core$Result$andThen = F2(
	function (callback, result) {
		var _p2 = result;
		if (_p2.ctor === 'Ok') {
			return callback(_p2._0);
		} else {
			return _elm_lang$core$Result$Err(_p2._0);
		}
	});
var _elm_lang$core$Result$Ok = function (a) {
	return {ctor: 'Ok', _0: a};
};
var _elm_lang$core$Result$map = F2(
	function (func, ra) {
		var _p3 = ra;
		if (_p3.ctor === 'Ok') {
			return _elm_lang$core$Result$Ok(
				func(_p3._0));
		} else {
			return _elm_lang$core$Result$Err(_p3._0);
		}
	});
var _elm_lang$core$Result$map2 = F3(
	function (func, ra, rb) {
		var _p4 = {ctor: '_Tuple2', _0: ra, _1: rb};
		if (_p4._0.ctor === 'Ok') {
			if (_p4._1.ctor === 'Ok') {
				return _elm_lang$core$Result$Ok(
					A2(func, _p4._0._0, _p4._1._0));
			} else {
				return _elm_lang$core$Result$Err(_p4._1._0);
			}
		} else {
			return _elm_lang$core$Result$Err(_p4._0._0);
		}
	});
var _elm_lang$core$Result$map3 = F4(
	function (func, ra, rb, rc) {
		var _p5 = {ctor: '_Tuple3', _0: ra, _1: rb, _2: rc};
		if (_p5._0.ctor === 'Ok') {
			if (_p5._1.ctor === 'Ok') {
				if (_p5._2.ctor === 'Ok') {
					return _elm_lang$core$Result$Ok(
						A3(func, _p5._0._0, _p5._1._0, _p5._2._0));
				} else {
					return _elm_lang$core$Result$Err(_p5._2._0);
				}
			} else {
				return _elm_lang$core$Result$Err(_p5._1._0);
			}
		} else {
			return _elm_lang$core$Result$Err(_p5._0._0);
		}
	});
var _elm_lang$core$Result$map4 = F5(
	function (func, ra, rb, rc, rd) {
		var _p6 = {ctor: '_Tuple4', _0: ra, _1: rb, _2: rc, _3: rd};
		if (_p6._0.ctor === 'Ok') {
			if (_p6._1.ctor === 'Ok') {
				if (_p6._2.ctor === 'Ok') {
					if (_p6._3.ctor === 'Ok') {
						return _elm_lang$core$Result$Ok(
							A4(func, _p6._0._0, _p6._1._0, _p6._2._0, _p6._3._0));
					} else {
						return _elm_lang$core$Result$Err(_p6._3._0);
					}
				} else {
					return _elm_lang$core$Result$Err(_p6._2._0);
				}
			} else {
				return _elm_lang$core$Result$Err(_p6._1._0);
			}
		} else {
			return _elm_lang$core$Result$Err(_p6._0._0);
		}
	});
var _elm_lang$core$Result$map5 = F6(
	function (func, ra, rb, rc, rd, re) {
		var _p7 = {ctor: '_Tuple5', _0: ra, _1: rb, _2: rc, _3: rd, _4: re};
		if (_p7._0.ctor === 'Ok') {
			if (_p7._1.ctor === 'Ok') {
				if (_p7._2.ctor === 'Ok') {
					if (_p7._3.ctor === 'Ok') {
						if (_p7._4.ctor === 'Ok') {
							return _elm_lang$core$Result$Ok(
								A5(func, _p7._0._0, _p7._1._0, _p7._2._0, _p7._3._0, _p7._4._0));
						} else {
							return _elm_lang$core$Result$Err(_p7._4._0);
						}
					} else {
						return _elm_lang$core$Result$Err(_p7._3._0);
					}
				} else {
					return _elm_lang$core$Result$Err(_p7._2._0);
				}
			} else {
				return _elm_lang$core$Result$Err(_p7._1._0);
			}
		} else {
			return _elm_lang$core$Result$Err(_p7._0._0);
		}
	});
var _elm_lang$core$Result$mapError = F2(
	function (f, result) {
		var _p8 = result;
		if (_p8.ctor === 'Ok') {
			return _elm_lang$core$Result$Ok(_p8._0);
		} else {
			return _elm_lang$core$Result$Err(
				f(_p8._0));
		}
	});
var _elm_lang$core$Result$fromMaybe = F2(
	function (err, maybe) {
		var _p9 = maybe;
		if (_p9.ctor === 'Just') {
			return _elm_lang$core$Result$Ok(_p9._0);
		} else {
			return _elm_lang$core$Result$Err(err);
		}
	});

var _elm_lang$core$String$fromList = _elm_lang$core$Native_String.fromList;
var _elm_lang$core$String$toList = _elm_lang$core$Native_String.toList;
var _elm_lang$core$String$toFloat = _elm_lang$core$Native_String.toFloat;
var _elm_lang$core$String$toInt = _elm_lang$core$Native_String.toInt;
var _elm_lang$core$String$indices = _elm_lang$core$Native_String.indexes;
var _elm_lang$core$String$indexes = _elm_lang$core$Native_String.indexes;
var _elm_lang$core$String$endsWith = _elm_lang$core$Native_String.endsWith;
var _elm_lang$core$String$startsWith = _elm_lang$core$Native_String.startsWith;
var _elm_lang$core$String$contains = _elm_lang$core$Native_String.contains;
var _elm_lang$core$String$all = _elm_lang$core$Native_String.all;
var _elm_lang$core$String$any = _elm_lang$core$Native_String.any;
var _elm_lang$core$String$toLower = _elm_lang$core$Native_String.toLower;
var _elm_lang$core$String$toUpper = _elm_lang$core$Native_String.toUpper;
var _elm_lang$core$String$lines = _elm_lang$core$Native_String.lines;
var _elm_lang$core$String$words = _elm_lang$core$Native_String.words;
var _elm_lang$core$String$trimRight = _elm_lang$core$Native_String.trimRight;
var _elm_lang$core$String$trimLeft = _elm_lang$core$Native_String.trimLeft;
var _elm_lang$core$String$trim = _elm_lang$core$Native_String.trim;
var _elm_lang$core$String$padRight = _elm_lang$core$Native_String.padRight;
var _elm_lang$core$String$padLeft = _elm_lang$core$Native_String.padLeft;
var _elm_lang$core$String$pad = _elm_lang$core$Native_String.pad;
var _elm_lang$core$String$dropRight = _elm_lang$core$Native_String.dropRight;
var _elm_lang$core$String$dropLeft = _elm_lang$core$Native_String.dropLeft;
var _elm_lang$core$String$right = _elm_lang$core$Native_String.right;
var _elm_lang$core$String$left = _elm_lang$core$Native_String.left;
var _elm_lang$core$String$slice = _elm_lang$core$Native_String.slice;
var _elm_lang$core$String$repeat = _elm_lang$core$Native_String.repeat;
var _elm_lang$core$String$join = _elm_lang$core$Native_String.join;
var _elm_lang$core$String$split = _elm_lang$core$Native_String.split;
var _elm_lang$core$String$foldr = _elm_lang$core$Native_String.foldr;
var _elm_lang$core$String$foldl = _elm_lang$core$Native_String.foldl;
var _elm_lang$core$String$reverse = _elm_lang$core$Native_String.reverse;
var _elm_lang$core$String$filter = _elm_lang$core$Native_String.filter;
var _elm_lang$core$String$map = _elm_lang$core$Native_String.map;
var _elm_lang$core$String$length = _elm_lang$core$Native_String.length;
var _elm_lang$core$String$concat = _elm_lang$core$Native_String.concat;
var _elm_lang$core$String$append = _elm_lang$core$Native_String.append;
var _elm_lang$core$String$uncons = _elm_lang$core$Native_String.uncons;
var _elm_lang$core$String$cons = _elm_lang$core$Native_String.cons;
var _elm_lang$core$String$fromChar = function ($char) {
	return A2(_elm_lang$core$String$cons, $char, '');
};
var _elm_lang$core$String$isEmpty = _elm_lang$core$Native_String.isEmpty;

var _elm_lang$core$Dict$foldr = F3(
	function (f, acc, t) {
		foldr:
		while (true) {
			var _p0 = t;
			if (_p0.ctor === 'RBEmpty_elm_builtin') {
				return acc;
			} else {
				var _v1 = f,
					_v2 = A3(
					f,
					_p0._1,
					_p0._2,
					A3(_elm_lang$core$Dict$foldr, f, acc, _p0._4)),
					_v3 = _p0._3;
				f = _v1;
				acc = _v2;
				t = _v3;
				continue foldr;
			}
		}
	});
var _elm_lang$core$Dict$keys = function (dict) {
	return A3(
		_elm_lang$core$Dict$foldr,
		F3(
			function (key, value, keyList) {
				return {ctor: '::', _0: key, _1: keyList};
			}),
		{ctor: '[]'},
		dict);
};
var _elm_lang$core$Dict$values = function (dict) {
	return A3(
		_elm_lang$core$Dict$foldr,
		F3(
			function (key, value, valueList) {
				return {ctor: '::', _0: value, _1: valueList};
			}),
		{ctor: '[]'},
		dict);
};
var _elm_lang$core$Dict$toList = function (dict) {
	return A3(
		_elm_lang$core$Dict$foldr,
		F3(
			function (key, value, list) {
				return {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: key, _1: value},
					_1: list
				};
			}),
		{ctor: '[]'},
		dict);
};
var _elm_lang$core$Dict$foldl = F3(
	function (f, acc, dict) {
		foldl:
		while (true) {
			var _p1 = dict;
			if (_p1.ctor === 'RBEmpty_elm_builtin') {
				return acc;
			} else {
				var _v5 = f,
					_v6 = A3(
					f,
					_p1._1,
					_p1._2,
					A3(_elm_lang$core$Dict$foldl, f, acc, _p1._3)),
					_v7 = _p1._4;
				f = _v5;
				acc = _v6;
				dict = _v7;
				continue foldl;
			}
		}
	});
var _elm_lang$core$Dict$merge = F6(
	function (leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {
		var stepState = F3(
			function (rKey, rValue, _p2) {
				stepState:
				while (true) {
					var _p3 = _p2;
					var _p9 = _p3._1;
					var _p8 = _p3._0;
					var _p4 = _p8;
					if (_p4.ctor === '[]') {
						return {
							ctor: '_Tuple2',
							_0: _p8,
							_1: A3(rightStep, rKey, rValue, _p9)
						};
					} else {
						var _p7 = _p4._1;
						var _p6 = _p4._0._1;
						var _p5 = _p4._0._0;
						if (_elm_lang$core$Native_Utils.cmp(_p5, rKey) < 0) {
							var _v10 = rKey,
								_v11 = rValue,
								_v12 = {
								ctor: '_Tuple2',
								_0: _p7,
								_1: A3(leftStep, _p5, _p6, _p9)
							};
							rKey = _v10;
							rValue = _v11;
							_p2 = _v12;
							continue stepState;
						} else {
							if (_elm_lang$core$Native_Utils.cmp(_p5, rKey) > 0) {
								return {
									ctor: '_Tuple2',
									_0: _p8,
									_1: A3(rightStep, rKey, rValue, _p9)
								};
							} else {
								return {
									ctor: '_Tuple2',
									_0: _p7,
									_1: A4(bothStep, _p5, _p6, rValue, _p9)
								};
							}
						}
					}
				}
			});
		var _p10 = A3(
			_elm_lang$core$Dict$foldl,
			stepState,
			{
				ctor: '_Tuple2',
				_0: _elm_lang$core$Dict$toList(leftDict),
				_1: initialResult
			},
			rightDict);
		var leftovers = _p10._0;
		var intermediateResult = _p10._1;
		return A3(
			_elm_lang$core$List$foldl,
			F2(
				function (_p11, result) {
					var _p12 = _p11;
					return A3(leftStep, _p12._0, _p12._1, result);
				}),
			intermediateResult,
			leftovers);
	});
var _elm_lang$core$Dict$reportRemBug = F4(
	function (msg, c, lgot, rgot) {
		return _elm_lang$core$Native_Debug.crash(
			_elm_lang$core$String$concat(
				{
					ctor: '::',
					_0: 'Internal red-black tree invariant violated, expected ',
					_1: {
						ctor: '::',
						_0: msg,
						_1: {
							ctor: '::',
							_0: ' and got ',
							_1: {
								ctor: '::',
								_0: _elm_lang$core$Basics$toString(c),
								_1: {
									ctor: '::',
									_0: '/',
									_1: {
										ctor: '::',
										_0: lgot,
										_1: {
											ctor: '::',
											_0: '/',
											_1: {
												ctor: '::',
												_0: rgot,
												_1: {
													ctor: '::',
													_0: '\nPlease report this bug to <https://github.com/elm-lang/core/issues>',
													_1: {ctor: '[]'}
												}
											}
										}
									}
								}
							}
						}
					}
				}));
	});
var _elm_lang$core$Dict$isBBlack = function (dict) {
	var _p13 = dict;
	_v14_2:
	do {
		if (_p13.ctor === 'RBNode_elm_builtin') {
			if (_p13._0.ctor === 'BBlack') {
				return true;
			} else {
				break _v14_2;
			}
		} else {
			if (_p13._0.ctor === 'LBBlack') {
				return true;
			} else {
				break _v14_2;
			}
		}
	} while(false);
	return false;
};
var _elm_lang$core$Dict$sizeHelp = F2(
	function (n, dict) {
		sizeHelp:
		while (true) {
			var _p14 = dict;
			if (_p14.ctor === 'RBEmpty_elm_builtin') {
				return n;
			} else {
				var _v16 = A2(_elm_lang$core$Dict$sizeHelp, n + 1, _p14._4),
					_v17 = _p14._3;
				n = _v16;
				dict = _v17;
				continue sizeHelp;
			}
		}
	});
var _elm_lang$core$Dict$size = function (dict) {
	return A2(_elm_lang$core$Dict$sizeHelp, 0, dict);
};
var _elm_lang$core$Dict$get = F2(
	function (targetKey, dict) {
		get:
		while (true) {
			var _p15 = dict;
			if (_p15.ctor === 'RBEmpty_elm_builtin') {
				return _elm_lang$core$Maybe$Nothing;
			} else {
				var _p16 = A2(_elm_lang$core$Basics$compare, targetKey, _p15._1);
				switch (_p16.ctor) {
					case 'LT':
						var _v20 = targetKey,
							_v21 = _p15._3;
						targetKey = _v20;
						dict = _v21;
						continue get;
					case 'EQ':
						return _elm_lang$core$Maybe$Just(_p15._2);
					default:
						var _v22 = targetKey,
							_v23 = _p15._4;
						targetKey = _v22;
						dict = _v23;
						continue get;
				}
			}
		}
	});
var _elm_lang$core$Dict$member = F2(
	function (key, dict) {
		var _p17 = A2(_elm_lang$core$Dict$get, key, dict);
		if (_p17.ctor === 'Just') {
			return true;
		} else {
			return false;
		}
	});
var _elm_lang$core$Dict$maxWithDefault = F3(
	function (k, v, r) {
		maxWithDefault:
		while (true) {
			var _p18 = r;
			if (_p18.ctor === 'RBEmpty_elm_builtin') {
				return {ctor: '_Tuple2', _0: k, _1: v};
			} else {
				var _v26 = _p18._1,
					_v27 = _p18._2,
					_v28 = _p18._4;
				k = _v26;
				v = _v27;
				r = _v28;
				continue maxWithDefault;
			}
		}
	});
var _elm_lang$core$Dict$NBlack = {ctor: 'NBlack'};
var _elm_lang$core$Dict$BBlack = {ctor: 'BBlack'};
var _elm_lang$core$Dict$Black = {ctor: 'Black'};
var _elm_lang$core$Dict$blackish = function (t) {
	var _p19 = t;
	if (_p19.ctor === 'RBNode_elm_builtin') {
		var _p20 = _p19._0;
		return _elm_lang$core$Native_Utils.eq(_p20, _elm_lang$core$Dict$Black) || _elm_lang$core$Native_Utils.eq(_p20, _elm_lang$core$Dict$BBlack);
	} else {
		return true;
	}
};
var _elm_lang$core$Dict$Red = {ctor: 'Red'};
var _elm_lang$core$Dict$moreBlack = function (color) {
	var _p21 = color;
	switch (_p21.ctor) {
		case 'Black':
			return _elm_lang$core$Dict$BBlack;
		case 'Red':
			return _elm_lang$core$Dict$Black;
		case 'NBlack':
			return _elm_lang$core$Dict$Red;
		default:
			return _elm_lang$core$Native_Debug.crash('Can\'t make a double black node more black!');
	}
};
var _elm_lang$core$Dict$lessBlack = function (color) {
	var _p22 = color;
	switch (_p22.ctor) {
		case 'BBlack':
			return _elm_lang$core$Dict$Black;
		case 'Black':
			return _elm_lang$core$Dict$Red;
		case 'Red':
			return _elm_lang$core$Dict$NBlack;
		default:
			return _elm_lang$core$Native_Debug.crash('Can\'t make a negative black node less black!');
	}
};
var _elm_lang$core$Dict$LBBlack = {ctor: 'LBBlack'};
var _elm_lang$core$Dict$LBlack = {ctor: 'LBlack'};
var _elm_lang$core$Dict$RBEmpty_elm_builtin = function (a) {
	return {ctor: 'RBEmpty_elm_builtin', _0: a};
};
var _elm_lang$core$Dict$empty = _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);
var _elm_lang$core$Dict$isEmpty = function (dict) {
	return _elm_lang$core$Native_Utils.eq(dict, _elm_lang$core$Dict$empty);
};
var _elm_lang$core$Dict$RBNode_elm_builtin = F5(
	function (a, b, c, d, e) {
		return {ctor: 'RBNode_elm_builtin', _0: a, _1: b, _2: c, _3: d, _4: e};
	});
var _elm_lang$core$Dict$ensureBlackRoot = function (dict) {
	var _p23 = dict;
	if ((_p23.ctor === 'RBNode_elm_builtin') && (_p23._0.ctor === 'Red')) {
		return A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p23._1, _p23._2, _p23._3, _p23._4);
	} else {
		return dict;
	}
};
var _elm_lang$core$Dict$lessBlackTree = function (dict) {
	var _p24 = dict;
	if (_p24.ctor === 'RBNode_elm_builtin') {
		return A5(
			_elm_lang$core$Dict$RBNode_elm_builtin,
			_elm_lang$core$Dict$lessBlack(_p24._0),
			_p24._1,
			_p24._2,
			_p24._3,
			_p24._4);
	} else {
		return _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);
	}
};
var _elm_lang$core$Dict$balancedTree = function (col) {
	return function (xk) {
		return function (xv) {
			return function (yk) {
				return function (yv) {
					return function (zk) {
						return function (zv) {
							return function (a) {
								return function (b) {
									return function (c) {
										return function (d) {
											return A5(
												_elm_lang$core$Dict$RBNode_elm_builtin,
												_elm_lang$core$Dict$lessBlack(col),
												yk,
												yv,
												A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, xk, xv, a, b),
												A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, zk, zv, c, d));
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _elm_lang$core$Dict$blacken = function (t) {
	var _p25 = t;
	if (_p25.ctor === 'RBEmpty_elm_builtin') {
		return _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);
	} else {
		return A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p25._1, _p25._2, _p25._3, _p25._4);
	}
};
var _elm_lang$core$Dict$redden = function (t) {
	var _p26 = t;
	if (_p26.ctor === 'RBEmpty_elm_builtin') {
		return _elm_lang$core$Native_Debug.crash('can\'t make a Leaf red');
	} else {
		return A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Red, _p26._1, _p26._2, _p26._3, _p26._4);
	}
};
var _elm_lang$core$Dict$balanceHelp = function (tree) {
	var _p27 = tree;
	_v36_6:
	do {
		_v36_5:
		do {
			_v36_4:
			do {
				_v36_3:
				do {
					_v36_2:
					do {
						_v36_1:
						do {
							_v36_0:
							do {
								if (_p27.ctor === 'RBNode_elm_builtin') {
									if (_p27._3.ctor === 'RBNode_elm_builtin') {
										if (_p27._4.ctor === 'RBNode_elm_builtin') {
											switch (_p27._3._0.ctor) {
												case 'Red':
													switch (_p27._4._0.ctor) {
														case 'Red':
															if ((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Red')) {
																break _v36_0;
															} else {
																if ((_p27._3._4.ctor === 'RBNode_elm_builtin') && (_p27._3._4._0.ctor === 'Red')) {
																	break _v36_1;
																} else {
																	if ((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Red')) {
																		break _v36_2;
																	} else {
																		if ((_p27._4._4.ctor === 'RBNode_elm_builtin') && (_p27._4._4._0.ctor === 'Red')) {
																			break _v36_3;
																		} else {
																			break _v36_6;
																		}
																	}
																}
															}
														case 'NBlack':
															if ((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Red')) {
																break _v36_0;
															} else {
																if ((_p27._3._4.ctor === 'RBNode_elm_builtin') && (_p27._3._4._0.ctor === 'Red')) {
																	break _v36_1;
																} else {
																	if (((((_p27._0.ctor === 'BBlack') && (_p27._4._3.ctor === 'RBNode_elm_builtin')) && (_p27._4._3._0.ctor === 'Black')) && (_p27._4._4.ctor === 'RBNode_elm_builtin')) && (_p27._4._4._0.ctor === 'Black')) {
																		break _v36_4;
																	} else {
																		break _v36_6;
																	}
																}
															}
														default:
															if ((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Red')) {
																break _v36_0;
															} else {
																if ((_p27._3._4.ctor === 'RBNode_elm_builtin') && (_p27._3._4._0.ctor === 'Red')) {
																	break _v36_1;
																} else {
																	break _v36_6;
																}
															}
													}
												case 'NBlack':
													switch (_p27._4._0.ctor) {
														case 'Red':
															if ((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Red')) {
																break _v36_2;
															} else {
																if ((_p27._4._4.ctor === 'RBNode_elm_builtin') && (_p27._4._4._0.ctor === 'Red')) {
																	break _v36_3;
																} else {
																	if (((((_p27._0.ctor === 'BBlack') && (_p27._3._3.ctor === 'RBNode_elm_builtin')) && (_p27._3._3._0.ctor === 'Black')) && (_p27._3._4.ctor === 'RBNode_elm_builtin')) && (_p27._3._4._0.ctor === 'Black')) {
																		break _v36_5;
																	} else {
																		break _v36_6;
																	}
																}
															}
														case 'NBlack':
															if (_p27._0.ctor === 'BBlack') {
																if ((((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Black')) && (_p27._4._4.ctor === 'RBNode_elm_builtin')) && (_p27._4._4._0.ctor === 'Black')) {
																	break _v36_4;
																} else {
																	if ((((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Black')) && (_p27._3._4.ctor === 'RBNode_elm_builtin')) && (_p27._3._4._0.ctor === 'Black')) {
																		break _v36_5;
																	} else {
																		break _v36_6;
																	}
																}
															} else {
																break _v36_6;
															}
														default:
															if (((((_p27._0.ctor === 'BBlack') && (_p27._3._3.ctor === 'RBNode_elm_builtin')) && (_p27._3._3._0.ctor === 'Black')) && (_p27._3._4.ctor === 'RBNode_elm_builtin')) && (_p27._3._4._0.ctor === 'Black')) {
																break _v36_5;
															} else {
																break _v36_6;
															}
													}
												default:
													switch (_p27._4._0.ctor) {
														case 'Red':
															if ((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Red')) {
																break _v36_2;
															} else {
																if ((_p27._4._4.ctor === 'RBNode_elm_builtin') && (_p27._4._4._0.ctor === 'Red')) {
																	break _v36_3;
																} else {
																	break _v36_6;
																}
															}
														case 'NBlack':
															if (((((_p27._0.ctor === 'BBlack') && (_p27._4._3.ctor === 'RBNode_elm_builtin')) && (_p27._4._3._0.ctor === 'Black')) && (_p27._4._4.ctor === 'RBNode_elm_builtin')) && (_p27._4._4._0.ctor === 'Black')) {
																break _v36_4;
															} else {
																break _v36_6;
															}
														default:
															break _v36_6;
													}
											}
										} else {
											switch (_p27._3._0.ctor) {
												case 'Red':
													if ((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Red')) {
														break _v36_0;
													} else {
														if ((_p27._3._4.ctor === 'RBNode_elm_builtin') && (_p27._3._4._0.ctor === 'Red')) {
															break _v36_1;
														} else {
															break _v36_6;
														}
													}
												case 'NBlack':
													if (((((_p27._0.ctor === 'BBlack') && (_p27._3._3.ctor === 'RBNode_elm_builtin')) && (_p27._3._3._0.ctor === 'Black')) && (_p27._3._4.ctor === 'RBNode_elm_builtin')) && (_p27._3._4._0.ctor === 'Black')) {
														break _v36_5;
													} else {
														break _v36_6;
													}
												default:
													break _v36_6;
											}
										}
									} else {
										if (_p27._4.ctor === 'RBNode_elm_builtin') {
											switch (_p27._4._0.ctor) {
												case 'Red':
													if ((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Red')) {
														break _v36_2;
													} else {
														if ((_p27._4._4.ctor === 'RBNode_elm_builtin') && (_p27._4._4._0.ctor === 'Red')) {
															break _v36_3;
														} else {
															break _v36_6;
														}
													}
												case 'NBlack':
													if (((((_p27._0.ctor === 'BBlack') && (_p27._4._3.ctor === 'RBNode_elm_builtin')) && (_p27._4._3._0.ctor === 'Black')) && (_p27._4._4.ctor === 'RBNode_elm_builtin')) && (_p27._4._4._0.ctor === 'Black')) {
														break _v36_4;
													} else {
														break _v36_6;
													}
												default:
													break _v36_6;
											}
										} else {
											break _v36_6;
										}
									}
								} else {
									break _v36_6;
								}
							} while(false);
							return _elm_lang$core$Dict$balancedTree(_p27._0)(_p27._3._3._1)(_p27._3._3._2)(_p27._3._1)(_p27._3._2)(_p27._1)(_p27._2)(_p27._3._3._3)(_p27._3._3._4)(_p27._3._4)(_p27._4);
						} while(false);
						return _elm_lang$core$Dict$balancedTree(_p27._0)(_p27._3._1)(_p27._3._2)(_p27._3._4._1)(_p27._3._4._2)(_p27._1)(_p27._2)(_p27._3._3)(_p27._3._4._3)(_p27._3._4._4)(_p27._4);
					} while(false);
					return _elm_lang$core$Dict$balancedTree(_p27._0)(_p27._1)(_p27._2)(_p27._4._3._1)(_p27._4._3._2)(_p27._4._1)(_p27._4._2)(_p27._3)(_p27._4._3._3)(_p27._4._3._4)(_p27._4._4);
				} while(false);
				return _elm_lang$core$Dict$balancedTree(_p27._0)(_p27._1)(_p27._2)(_p27._4._1)(_p27._4._2)(_p27._4._4._1)(_p27._4._4._2)(_p27._3)(_p27._4._3)(_p27._4._4._3)(_p27._4._4._4);
			} while(false);
			return A5(
				_elm_lang$core$Dict$RBNode_elm_builtin,
				_elm_lang$core$Dict$Black,
				_p27._4._3._1,
				_p27._4._3._2,
				A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p27._1, _p27._2, _p27._3, _p27._4._3._3),
				A5(
					_elm_lang$core$Dict$balance,
					_elm_lang$core$Dict$Black,
					_p27._4._1,
					_p27._4._2,
					_p27._4._3._4,
					_elm_lang$core$Dict$redden(_p27._4._4)));
		} while(false);
		return A5(
			_elm_lang$core$Dict$RBNode_elm_builtin,
			_elm_lang$core$Dict$Black,
			_p27._3._4._1,
			_p27._3._4._2,
			A5(
				_elm_lang$core$Dict$balance,
				_elm_lang$core$Dict$Black,
				_p27._3._1,
				_p27._3._2,
				_elm_lang$core$Dict$redden(_p27._3._3),
				_p27._3._4._3),
			A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p27._1, _p27._2, _p27._3._4._4, _p27._4));
	} while(false);
	return tree;
};
var _elm_lang$core$Dict$balance = F5(
	function (c, k, v, l, r) {
		var tree = A5(_elm_lang$core$Dict$RBNode_elm_builtin, c, k, v, l, r);
		return _elm_lang$core$Dict$blackish(tree) ? _elm_lang$core$Dict$balanceHelp(tree) : tree;
	});
var _elm_lang$core$Dict$bubble = F5(
	function (c, k, v, l, r) {
		return (_elm_lang$core$Dict$isBBlack(l) || _elm_lang$core$Dict$isBBlack(r)) ? A5(
			_elm_lang$core$Dict$balance,
			_elm_lang$core$Dict$moreBlack(c),
			k,
			v,
			_elm_lang$core$Dict$lessBlackTree(l),
			_elm_lang$core$Dict$lessBlackTree(r)) : A5(_elm_lang$core$Dict$RBNode_elm_builtin, c, k, v, l, r);
	});
var _elm_lang$core$Dict$removeMax = F5(
	function (c, k, v, l, r) {
		var _p28 = r;
		if (_p28.ctor === 'RBEmpty_elm_builtin') {
			return A3(_elm_lang$core$Dict$rem, c, l, r);
		} else {
			return A5(
				_elm_lang$core$Dict$bubble,
				c,
				k,
				v,
				l,
				A5(_elm_lang$core$Dict$removeMax, _p28._0, _p28._1, _p28._2, _p28._3, _p28._4));
		}
	});
var _elm_lang$core$Dict$rem = F3(
	function (color, left, right) {
		var _p29 = {ctor: '_Tuple2', _0: left, _1: right};
		if (_p29._0.ctor === 'RBEmpty_elm_builtin') {
			if (_p29._1.ctor === 'RBEmpty_elm_builtin') {
				var _p30 = color;
				switch (_p30.ctor) {
					case 'Red':
						return _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);
					case 'Black':
						return _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBBlack);
					default:
						return _elm_lang$core$Native_Debug.crash('cannot have bblack or nblack nodes at this point');
				}
			} else {
				var _p33 = _p29._1._0;
				var _p32 = _p29._0._0;
				var _p31 = {ctor: '_Tuple3', _0: color, _1: _p32, _2: _p33};
				if ((((_p31.ctor === '_Tuple3') && (_p31._0.ctor === 'Black')) && (_p31._1.ctor === 'LBlack')) && (_p31._2.ctor === 'Red')) {
					return A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p29._1._1, _p29._1._2, _p29._1._3, _p29._1._4);
				} else {
					return A4(
						_elm_lang$core$Dict$reportRemBug,
						'Black/LBlack/Red',
						color,
						_elm_lang$core$Basics$toString(_p32),
						_elm_lang$core$Basics$toString(_p33));
				}
			}
		} else {
			if (_p29._1.ctor === 'RBEmpty_elm_builtin') {
				var _p36 = _p29._1._0;
				var _p35 = _p29._0._0;
				var _p34 = {ctor: '_Tuple3', _0: color, _1: _p35, _2: _p36};
				if ((((_p34.ctor === '_Tuple3') && (_p34._0.ctor === 'Black')) && (_p34._1.ctor === 'Red')) && (_p34._2.ctor === 'LBlack')) {
					return A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p29._0._1, _p29._0._2, _p29._0._3, _p29._0._4);
				} else {
					return A4(
						_elm_lang$core$Dict$reportRemBug,
						'Black/Red/LBlack',
						color,
						_elm_lang$core$Basics$toString(_p35),
						_elm_lang$core$Basics$toString(_p36));
				}
			} else {
				var _p40 = _p29._0._2;
				var _p39 = _p29._0._4;
				var _p38 = _p29._0._1;
				var newLeft = A5(_elm_lang$core$Dict$removeMax, _p29._0._0, _p38, _p40, _p29._0._3, _p39);
				var _p37 = A3(_elm_lang$core$Dict$maxWithDefault, _p38, _p40, _p39);
				var k = _p37._0;
				var v = _p37._1;
				return A5(_elm_lang$core$Dict$bubble, color, k, v, newLeft, right);
			}
		}
	});
var _elm_lang$core$Dict$map = F2(
	function (f, dict) {
		var _p41 = dict;
		if (_p41.ctor === 'RBEmpty_elm_builtin') {
			return _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);
		} else {
			var _p42 = _p41._1;
			return A5(
				_elm_lang$core$Dict$RBNode_elm_builtin,
				_p41._0,
				_p42,
				A2(f, _p42, _p41._2),
				A2(_elm_lang$core$Dict$map, f, _p41._3),
				A2(_elm_lang$core$Dict$map, f, _p41._4));
		}
	});
var _elm_lang$core$Dict$Same = {ctor: 'Same'};
var _elm_lang$core$Dict$Remove = {ctor: 'Remove'};
var _elm_lang$core$Dict$Insert = {ctor: 'Insert'};
var _elm_lang$core$Dict$update = F3(
	function (k, alter, dict) {
		var up = function (dict) {
			var _p43 = dict;
			if (_p43.ctor === 'RBEmpty_elm_builtin') {
				var _p44 = alter(_elm_lang$core$Maybe$Nothing);
				if (_p44.ctor === 'Nothing') {
					return {ctor: '_Tuple2', _0: _elm_lang$core$Dict$Same, _1: _elm_lang$core$Dict$empty};
				} else {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Dict$Insert,
						_1: A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Red, k, _p44._0, _elm_lang$core$Dict$empty, _elm_lang$core$Dict$empty)
					};
				}
			} else {
				var _p55 = _p43._2;
				var _p54 = _p43._4;
				var _p53 = _p43._3;
				var _p52 = _p43._1;
				var _p51 = _p43._0;
				var _p45 = A2(_elm_lang$core$Basics$compare, k, _p52);
				switch (_p45.ctor) {
					case 'EQ':
						var _p46 = alter(
							_elm_lang$core$Maybe$Just(_p55));
						if (_p46.ctor === 'Nothing') {
							return {
								ctor: '_Tuple2',
								_0: _elm_lang$core$Dict$Remove,
								_1: A3(_elm_lang$core$Dict$rem, _p51, _p53, _p54)
							};
						} else {
							return {
								ctor: '_Tuple2',
								_0: _elm_lang$core$Dict$Same,
								_1: A5(_elm_lang$core$Dict$RBNode_elm_builtin, _p51, _p52, _p46._0, _p53, _p54)
							};
						}
					case 'LT':
						var _p47 = up(_p53);
						var flag = _p47._0;
						var newLeft = _p47._1;
						var _p48 = flag;
						switch (_p48.ctor) {
							case 'Same':
								return {
									ctor: '_Tuple2',
									_0: _elm_lang$core$Dict$Same,
									_1: A5(_elm_lang$core$Dict$RBNode_elm_builtin, _p51, _p52, _p55, newLeft, _p54)
								};
							case 'Insert':
								return {
									ctor: '_Tuple2',
									_0: _elm_lang$core$Dict$Insert,
									_1: A5(_elm_lang$core$Dict$balance, _p51, _p52, _p55, newLeft, _p54)
								};
							default:
								return {
									ctor: '_Tuple2',
									_0: _elm_lang$core$Dict$Remove,
									_1: A5(_elm_lang$core$Dict$bubble, _p51, _p52, _p55, newLeft, _p54)
								};
						}
					default:
						var _p49 = up(_p54);
						var flag = _p49._0;
						var newRight = _p49._1;
						var _p50 = flag;
						switch (_p50.ctor) {
							case 'Same':
								return {
									ctor: '_Tuple2',
									_0: _elm_lang$core$Dict$Same,
									_1: A5(_elm_lang$core$Dict$RBNode_elm_builtin, _p51, _p52, _p55, _p53, newRight)
								};
							case 'Insert':
								return {
									ctor: '_Tuple2',
									_0: _elm_lang$core$Dict$Insert,
									_1: A5(_elm_lang$core$Dict$balance, _p51, _p52, _p55, _p53, newRight)
								};
							default:
								return {
									ctor: '_Tuple2',
									_0: _elm_lang$core$Dict$Remove,
									_1: A5(_elm_lang$core$Dict$bubble, _p51, _p52, _p55, _p53, newRight)
								};
						}
				}
			}
		};
		var _p56 = up(dict);
		var flag = _p56._0;
		var updatedDict = _p56._1;
		var _p57 = flag;
		switch (_p57.ctor) {
			case 'Same':
				return updatedDict;
			case 'Insert':
				return _elm_lang$core$Dict$ensureBlackRoot(updatedDict);
			default:
				return _elm_lang$core$Dict$blacken(updatedDict);
		}
	});
var _elm_lang$core$Dict$insert = F3(
	function (key, value, dict) {
		return A3(
			_elm_lang$core$Dict$update,
			key,
			_elm_lang$core$Basics$always(
				_elm_lang$core$Maybe$Just(value)),
			dict);
	});
var _elm_lang$core$Dict$singleton = F2(
	function (key, value) {
		return A3(_elm_lang$core$Dict$insert, key, value, _elm_lang$core$Dict$empty);
	});
var _elm_lang$core$Dict$union = F2(
	function (t1, t2) {
		return A3(_elm_lang$core$Dict$foldl, _elm_lang$core$Dict$insert, t2, t1);
	});
var _elm_lang$core$Dict$filter = F2(
	function (predicate, dictionary) {
		var add = F3(
			function (key, value, dict) {
				return A2(predicate, key, value) ? A3(_elm_lang$core$Dict$insert, key, value, dict) : dict;
			});
		return A3(_elm_lang$core$Dict$foldl, add, _elm_lang$core$Dict$empty, dictionary);
	});
var _elm_lang$core$Dict$intersect = F2(
	function (t1, t2) {
		return A2(
			_elm_lang$core$Dict$filter,
			F2(
				function (k, _p58) {
					return A2(_elm_lang$core$Dict$member, k, t2);
				}),
			t1);
	});
var _elm_lang$core$Dict$partition = F2(
	function (predicate, dict) {
		var add = F3(
			function (key, value, _p59) {
				var _p60 = _p59;
				var _p62 = _p60._1;
				var _p61 = _p60._0;
				return A2(predicate, key, value) ? {
					ctor: '_Tuple2',
					_0: A3(_elm_lang$core$Dict$insert, key, value, _p61),
					_1: _p62
				} : {
					ctor: '_Tuple2',
					_0: _p61,
					_1: A3(_elm_lang$core$Dict$insert, key, value, _p62)
				};
			});
		return A3(
			_elm_lang$core$Dict$foldl,
			add,
			{ctor: '_Tuple2', _0: _elm_lang$core$Dict$empty, _1: _elm_lang$core$Dict$empty},
			dict);
	});
var _elm_lang$core$Dict$fromList = function (assocs) {
	return A3(
		_elm_lang$core$List$foldl,
		F2(
			function (_p63, dict) {
				var _p64 = _p63;
				return A3(_elm_lang$core$Dict$insert, _p64._0, _p64._1, dict);
			}),
		_elm_lang$core$Dict$empty,
		assocs);
};
var _elm_lang$core$Dict$remove = F2(
	function (key, dict) {
		return A3(
			_elm_lang$core$Dict$update,
			key,
			_elm_lang$core$Basics$always(_elm_lang$core$Maybe$Nothing),
			dict);
	});
var _elm_lang$core$Dict$diff = F2(
	function (t1, t2) {
		return A3(
			_elm_lang$core$Dict$foldl,
			F3(
				function (k, v, t) {
					return A2(_elm_lang$core$Dict$remove, k, t);
				}),
			t1,
			t2);
	});

var _elm_lang$core$Debug$crash = _elm_lang$core$Native_Debug.crash;
var _elm_lang$core$Debug$log = _elm_lang$core$Native_Debug.log;

var _elm_lang$core$Tuple$mapSecond = F2(
	function (func, _p0) {
		var _p1 = _p0;
		return {
			ctor: '_Tuple2',
			_0: _p1._0,
			_1: func(_p1._1)
		};
	});
var _elm_lang$core$Tuple$mapFirst = F2(
	function (func, _p2) {
		var _p3 = _p2;
		return {
			ctor: '_Tuple2',
			_0: func(_p3._0),
			_1: _p3._1
		};
	});
var _elm_lang$core$Tuple$second = function (_p4) {
	var _p5 = _p4;
	return _p5._1;
};
var _elm_lang$core$Tuple$first = function (_p6) {
	var _p7 = _p6;
	return _p7._0;
};

//import //

var _elm_lang$core$Native_Platform = function() {


// PROGRAMS

function program(impl)
{
	return function(flagDecoder)
	{
		return function(object, moduleName)
		{
			object['worker'] = function worker(flags)
			{
				if (typeof flags !== 'undefined')
				{
					throw new Error(
						'The `' + moduleName + '` module does not need flags.\n'
						+ 'Call ' + moduleName + '.worker() with no arguments and you should be all set!'
					);
				}

				return initialize(
					impl.init,
					impl.update,
					impl.subscriptions,
					renderer
				);
			};
		};
	};
}

function programWithFlags(impl)
{
	return function(flagDecoder)
	{
		return function(object, moduleName)
		{
			object['worker'] = function worker(flags)
			{
				if (typeof flagDecoder === 'undefined')
				{
					throw new Error(
						'Are you trying to sneak a Never value into Elm? Trickster!\n'
						+ 'It looks like ' + moduleName + '.main is defined with `programWithFlags` but has type `Program Never`.\n'
						+ 'Use `program` instead if you do not want flags.'
					);
				}

				var result = A2(_elm_lang$core$Native_Json.run, flagDecoder, flags);
				if (result.ctor === 'Err')
				{
					throw new Error(
						moduleName + '.worker(...) was called with an unexpected argument.\n'
						+ 'I tried to convert it to an Elm value, but ran into this problem:\n\n'
						+ result._0
					);
				}

				return initialize(
					impl.init(result._0),
					impl.update,
					impl.subscriptions,
					renderer
				);
			};
		};
	};
}

function renderer(enqueue, _)
{
	return function(_) {};
}


// HTML TO PROGRAM

function htmlToProgram(vnode)
{
	var emptyBag = batch(_elm_lang$core$Native_List.Nil);
	var noChange = _elm_lang$core$Native_Utils.Tuple2(
		_elm_lang$core$Native_Utils.Tuple0,
		emptyBag
	);

	return _elm_lang$virtual_dom$VirtualDom$program({
		init: noChange,
		view: function(model) { return main; },
		update: F2(function(msg, model) { return noChange; }),
		subscriptions: function (model) { return emptyBag; }
	});
}


// INITIALIZE A PROGRAM

function initialize(init, update, subscriptions, renderer)
{
	// ambient state
	var managers = {};
	var updateView;

	// init and update state in main process
	var initApp = _elm_lang$core$Native_Scheduler.nativeBinding(function(callback) {
		var model = init._0;
		updateView = renderer(enqueue, model);
		var cmds = init._1;
		var subs = subscriptions(model);
		dispatchEffects(managers, cmds, subs);
		callback(_elm_lang$core$Native_Scheduler.succeed(model));
	});

	function onMessage(msg, model)
	{
		return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback) {
			var results = A2(update, msg, model);
			model = results._0;
			updateView(model);
			var cmds = results._1;
			var subs = subscriptions(model);
			dispatchEffects(managers, cmds, subs);
			callback(_elm_lang$core$Native_Scheduler.succeed(model));
		});
	}

	var mainProcess = spawnLoop(initApp, onMessage);

	function enqueue(msg)
	{
		_elm_lang$core$Native_Scheduler.rawSend(mainProcess, msg);
	}

	var ports = setupEffects(managers, enqueue);

	return ports ? { ports: ports } : {};
}


// EFFECT MANAGERS

var effectManagers = {};

function setupEffects(managers, callback)
{
	var ports;

	// setup all necessary effect managers
	for (var key in effectManagers)
	{
		var manager = effectManagers[key];

		if (manager.isForeign)
		{
			ports = ports || {};
			ports[key] = manager.tag === 'cmd'
				? setupOutgoingPort(key)
				: setupIncomingPort(key, callback);
		}

		managers[key] = makeManager(manager, callback);
	}

	return ports;
}

function makeManager(info, callback)
{
	var router = {
		main: callback,
		self: undefined
	};

	var tag = info.tag;
	var onEffects = info.onEffects;
	var onSelfMsg = info.onSelfMsg;

	function onMessage(msg, state)
	{
		if (msg.ctor === 'self')
		{
			return A3(onSelfMsg, router, msg._0, state);
		}

		var fx = msg._0;
		switch (tag)
		{
			case 'cmd':
				return A3(onEffects, router, fx.cmds, state);

			case 'sub':
				return A3(onEffects, router, fx.subs, state);

			case 'fx':
				return A4(onEffects, router, fx.cmds, fx.subs, state);
		}
	}

	var process = spawnLoop(info.init, onMessage);
	router.self = process;
	return process;
}

function sendToApp(router, msg)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		router.main(msg);
		callback(_elm_lang$core$Native_Scheduler.succeed(_elm_lang$core$Native_Utils.Tuple0));
	});
}

function sendToSelf(router, msg)
{
	return A2(_elm_lang$core$Native_Scheduler.send, router.self, {
		ctor: 'self',
		_0: msg
	});
}


// HELPER for STATEFUL LOOPS

function spawnLoop(init, onMessage)
{
	var andThen = _elm_lang$core$Native_Scheduler.andThen;

	function loop(state)
	{
		var handleMsg = _elm_lang$core$Native_Scheduler.receive(function(msg) {
			return onMessage(msg, state);
		});
		return A2(andThen, loop, handleMsg);
	}

	var task = A2(andThen, loop, init);

	return _elm_lang$core$Native_Scheduler.rawSpawn(task);
}


// BAGS

function leaf(home)
{
	return function(value)
	{
		return {
			type: 'leaf',
			home: home,
			value: value
		};
	};
}

function batch(list)
{
	return {
		type: 'node',
		branches: list
	};
}

function map(tagger, bag)
{
	return {
		type: 'map',
		tagger: tagger,
		tree: bag
	}
}


// PIPE BAGS INTO EFFECT MANAGERS

function dispatchEffects(managers, cmdBag, subBag)
{
	var effectsDict = {};
	gatherEffects(true, cmdBag, effectsDict, null);
	gatherEffects(false, subBag, effectsDict, null);

	for (var home in managers)
	{
		var fx = home in effectsDict
			? effectsDict[home]
			: {
				cmds: _elm_lang$core$Native_List.Nil,
				subs: _elm_lang$core$Native_List.Nil
			};

		_elm_lang$core$Native_Scheduler.rawSend(managers[home], { ctor: 'fx', _0: fx });
	}
}

function gatherEffects(isCmd, bag, effectsDict, taggers)
{
	switch (bag.type)
	{
		case 'leaf':
			var home = bag.home;
			var effect = toEffect(isCmd, home, taggers, bag.value);
			effectsDict[home] = insert(isCmd, effect, effectsDict[home]);
			return;

		case 'node':
			var list = bag.branches;
			while (list.ctor !== '[]')
			{
				gatherEffects(isCmd, list._0, effectsDict, taggers);
				list = list._1;
			}
			return;

		case 'map':
			gatherEffects(isCmd, bag.tree, effectsDict, {
				tagger: bag.tagger,
				rest: taggers
			});
			return;
	}
}

function toEffect(isCmd, home, taggers, value)
{
	function applyTaggers(x)
	{
		var temp = taggers;
		while (temp)
		{
			x = temp.tagger(x);
			temp = temp.rest;
		}
		return x;
	}

	var map = isCmd
		? effectManagers[home].cmdMap
		: effectManagers[home].subMap;

	return A2(map, applyTaggers, value)
}

function insert(isCmd, newEffect, effects)
{
	effects = effects || {
		cmds: _elm_lang$core$Native_List.Nil,
		subs: _elm_lang$core$Native_List.Nil
	};
	if (isCmd)
	{
		effects.cmds = _elm_lang$core$Native_List.Cons(newEffect, effects.cmds);
		return effects;
	}
	effects.subs = _elm_lang$core$Native_List.Cons(newEffect, effects.subs);
	return effects;
}


// PORTS

function checkPortName(name)
{
	if (name in effectManagers)
	{
		throw new Error('There can only be one port named `' + name + '`, but your program has multiple.');
	}
}


// OUTGOING PORTS

function outgoingPort(name, converter)
{
	checkPortName(name);
	effectManagers[name] = {
		tag: 'cmd',
		cmdMap: outgoingPortMap,
		converter: converter,
		isForeign: true
	};
	return leaf(name);
}

var outgoingPortMap = F2(function cmdMap(tagger, value) {
	return value;
});

function setupOutgoingPort(name)
{
	var subs = [];
	var converter = effectManagers[name].converter;

	// CREATE MANAGER

	var init = _elm_lang$core$Native_Scheduler.succeed(null);

	function onEffects(router, cmdList, state)
	{
		while (cmdList.ctor !== '[]')
		{
			// grab a separate reference to subs in case unsubscribe is called
			var currentSubs = subs;
			var value = converter(cmdList._0);
			for (var i = 0; i < currentSubs.length; i++)
			{
				currentSubs[i](value);
			}
			cmdList = cmdList._1;
		}
		return init;
	}

	effectManagers[name].init = init;
	effectManagers[name].onEffects = F3(onEffects);

	// PUBLIC API

	function subscribe(callback)
	{
		subs.push(callback);
	}

	function unsubscribe(callback)
	{
		// copy subs into a new array in case unsubscribe is called within a
		// subscribed callback
		subs = subs.slice();
		var index = subs.indexOf(callback);
		if (index >= 0)
		{
			subs.splice(index, 1);
		}
	}

	return {
		subscribe: subscribe,
		unsubscribe: unsubscribe
	};
}


// INCOMING PORTS

function incomingPort(name, converter)
{
	checkPortName(name);
	effectManagers[name] = {
		tag: 'sub',
		subMap: incomingPortMap,
		converter: converter,
		isForeign: true
	};
	return leaf(name);
}

var incomingPortMap = F2(function subMap(tagger, finalTagger)
{
	return function(value)
	{
		return tagger(finalTagger(value));
	};
});

function setupIncomingPort(name, callback)
{
	var sentBeforeInit = [];
	var subs = _elm_lang$core$Native_List.Nil;
	var converter = effectManagers[name].converter;
	var currentOnEffects = preInitOnEffects;
	var currentSend = preInitSend;

	// CREATE MANAGER

	var init = _elm_lang$core$Native_Scheduler.succeed(null);

	function preInitOnEffects(router, subList, state)
	{
		var postInitResult = postInitOnEffects(router, subList, state);

		for(var i = 0; i < sentBeforeInit.length; i++)
		{
			postInitSend(sentBeforeInit[i]);
		}

		sentBeforeInit = null; // to release objects held in queue
		currentSend = postInitSend;
		currentOnEffects = postInitOnEffects;
		return postInitResult;
	}

	function postInitOnEffects(router, subList, state)
	{
		subs = subList;
		return init;
	}

	function onEffects(router, subList, state)
	{
		return currentOnEffects(router, subList, state);
	}

	effectManagers[name].init = init;
	effectManagers[name].onEffects = F3(onEffects);

	// PUBLIC API

	function preInitSend(value)
	{
		sentBeforeInit.push(value);
	}

	function postInitSend(value)
	{
		var temp = subs;
		while (temp.ctor !== '[]')
		{
			callback(temp._0(value));
			temp = temp._1;
		}
	}

	function send(incomingValue)
	{
		var result = A2(_elm_lang$core$Json_Decode$decodeValue, converter, incomingValue);
		if (result.ctor === 'Err')
		{
			throw new Error('Trying to send an unexpected type of value through port `' + name + '`:\n' + result._0);
		}

		currentSend(result._0);
	}

	return { send: send };
}

return {
	// routers
	sendToApp: F2(sendToApp),
	sendToSelf: F2(sendToSelf),

	// global setup
	effectManagers: effectManagers,
	outgoingPort: outgoingPort,
	incomingPort: incomingPort,

	htmlToProgram: htmlToProgram,
	program: program,
	programWithFlags: programWithFlags,
	initialize: initialize,

	// effect bags
	leaf: leaf,
	batch: batch,
	map: F2(map)
};

}();

//import Native.Utils //

var _elm_lang$core$Native_Scheduler = function() {

var MAX_STEPS = 10000;


// TASKS

function succeed(value)
{
	return {
		ctor: '_Task_succeed',
		value: value
	};
}

function fail(error)
{
	return {
		ctor: '_Task_fail',
		value: error
	};
}

function nativeBinding(callback)
{
	return {
		ctor: '_Task_nativeBinding',
		callback: callback,
		cancel: null
	};
}

function andThen(callback, task)
{
	return {
		ctor: '_Task_andThen',
		callback: callback,
		task: task
	};
}

function onError(callback, task)
{
	return {
		ctor: '_Task_onError',
		callback: callback,
		task: task
	};
}

function receive(callback)
{
	return {
		ctor: '_Task_receive',
		callback: callback
	};
}


// PROCESSES

function rawSpawn(task)
{
	var process = {
		ctor: '_Process',
		id: _elm_lang$core$Native_Utils.guid(),
		root: task,
		stack: null,
		mailbox: []
	};

	enqueue(process);

	return process;
}

function spawn(task)
{
	return nativeBinding(function(callback) {
		var process = rawSpawn(task);
		callback(succeed(process));
	});
}

function rawSend(process, msg)
{
	process.mailbox.push(msg);
	enqueue(process);
}

function send(process, msg)
{
	return nativeBinding(function(callback) {
		rawSend(process, msg);
		callback(succeed(_elm_lang$core$Native_Utils.Tuple0));
	});
}

function kill(process)
{
	return nativeBinding(function(callback) {
		var root = process.root;
		if (root.ctor === '_Task_nativeBinding' && root.cancel)
		{
			root.cancel();
		}

		process.root = null;

		callback(succeed(_elm_lang$core$Native_Utils.Tuple0));
	});
}

function sleep(time)
{
	return nativeBinding(function(callback) {
		var id = setTimeout(function() {
			callback(succeed(_elm_lang$core$Native_Utils.Tuple0));
		}, time);

		return function() { clearTimeout(id); };
	});
}


// STEP PROCESSES

function step(numSteps, process)
{
	while (numSteps < MAX_STEPS)
	{
		var ctor = process.root.ctor;

		if (ctor === '_Task_succeed')
		{
			while (process.stack && process.stack.ctor === '_Task_onError')
			{
				process.stack = process.stack.rest;
			}
			if (process.stack === null)
			{
				break;
			}
			process.root = process.stack.callback(process.root.value);
			process.stack = process.stack.rest;
			++numSteps;
			continue;
		}

		if (ctor === '_Task_fail')
		{
			while (process.stack && process.stack.ctor === '_Task_andThen')
			{
				process.stack = process.stack.rest;
			}
			if (process.stack === null)
			{
				break;
			}
			process.root = process.stack.callback(process.root.value);
			process.stack = process.stack.rest;
			++numSteps;
			continue;
		}

		if (ctor === '_Task_andThen')
		{
			process.stack = {
				ctor: '_Task_andThen',
				callback: process.root.callback,
				rest: process.stack
			};
			process.root = process.root.task;
			++numSteps;
			continue;
		}

		if (ctor === '_Task_onError')
		{
			process.stack = {
				ctor: '_Task_onError',
				callback: process.root.callback,
				rest: process.stack
			};
			process.root = process.root.task;
			++numSteps;
			continue;
		}

		if (ctor === '_Task_nativeBinding')
		{
			process.root.cancel = process.root.callback(function(newRoot) {
				process.root = newRoot;
				enqueue(process);
			});

			break;
		}

		if (ctor === '_Task_receive')
		{
			var mailbox = process.mailbox;
			if (mailbox.length === 0)
			{
				break;
			}

			process.root = process.root.callback(mailbox.shift());
			++numSteps;
			continue;
		}

		throw new Error(ctor);
	}

	if (numSteps < MAX_STEPS)
	{
		return numSteps + 1;
	}
	enqueue(process);

	return numSteps;
}


// WORK QUEUE

var working = false;
var workQueue = [];

function enqueue(process)
{
	workQueue.push(process);

	if (!working)
	{
		setTimeout(work, 0);
		working = true;
	}
}

function work()
{
	var numSteps = 0;
	var process;
	while (numSteps < MAX_STEPS && (process = workQueue.shift()))
	{
		if (process.root)
		{
			numSteps = step(numSteps, process);
		}
	}
	if (!process)
	{
		working = false;
		return;
	}
	setTimeout(work, 0);
}


return {
	succeed: succeed,
	fail: fail,
	nativeBinding: nativeBinding,
	andThen: F2(andThen),
	onError: F2(onError),
	receive: receive,

	spawn: spawn,
	kill: kill,
	sleep: sleep,
	send: F2(send),

	rawSpawn: rawSpawn,
	rawSend: rawSend
};

}();
var _elm_lang$core$Platform_Cmd$batch = _elm_lang$core$Native_Platform.batch;
var _elm_lang$core$Platform_Cmd$none = _elm_lang$core$Platform_Cmd$batch(
	{ctor: '[]'});
var _elm_lang$core$Platform_Cmd_ops = _elm_lang$core$Platform_Cmd_ops || {};
_elm_lang$core$Platform_Cmd_ops['!'] = F2(
	function (model, commands) {
		return {
			ctor: '_Tuple2',
			_0: model,
			_1: _elm_lang$core$Platform_Cmd$batch(commands)
		};
	});
var _elm_lang$core$Platform_Cmd$map = _elm_lang$core$Native_Platform.map;
var _elm_lang$core$Platform_Cmd$Cmd = {ctor: 'Cmd'};

var _elm_lang$core$Platform_Sub$batch = _elm_lang$core$Native_Platform.batch;
var _elm_lang$core$Platform_Sub$none = _elm_lang$core$Platform_Sub$batch(
	{ctor: '[]'});
var _elm_lang$core$Platform_Sub$map = _elm_lang$core$Native_Platform.map;
var _elm_lang$core$Platform_Sub$Sub = {ctor: 'Sub'};

var _elm_lang$core$Platform$hack = _elm_lang$core$Native_Scheduler.succeed;
var _elm_lang$core$Platform$sendToSelf = _elm_lang$core$Native_Platform.sendToSelf;
var _elm_lang$core$Platform$sendToApp = _elm_lang$core$Native_Platform.sendToApp;
var _elm_lang$core$Platform$programWithFlags = _elm_lang$core$Native_Platform.programWithFlags;
var _elm_lang$core$Platform$program = _elm_lang$core$Native_Platform.program;
var _elm_lang$core$Platform$Program = {ctor: 'Program'};
var _elm_lang$core$Platform$Task = {ctor: 'Task'};
var _elm_lang$core$Platform$ProcessId = {ctor: 'ProcessId'};
var _elm_lang$core$Platform$Router = {ctor: 'Router'};

//import Native.List //

var _elm_lang$core$Native_Array = function() {

// A RRB-Tree has two distinct data types.
// Leaf -> "height"  is always 0
//         "table"   is an array of elements
// Node -> "height"  is always greater than 0
//         "table"   is an array of child nodes
//         "lengths" is an array of accumulated lengths of the child nodes

// M is the maximal table size. 32 seems fast. E is the allowed increase
// of search steps when concatting to find an index. Lower values will
// decrease balancing, but will increase search steps.
var M = 32;
var E = 2;

// An empty array.
var empty = {
	ctor: '_Array',
	height: 0,
	table: []
};


function get(i, array)
{
	if (i < 0 || i >= length(array))
	{
		throw new Error(
			'Index ' + i + ' is out of range. Check the length of ' +
			'your array first or use getMaybe or getWithDefault.');
	}
	return unsafeGet(i, array);
}


function unsafeGet(i, array)
{
	for (var x = array.height; x > 0; x--)
	{
		var slot = i >> (x * 5);
		while (array.lengths[slot] <= i)
		{
			slot++;
		}
		if (slot > 0)
		{
			i -= array.lengths[slot - 1];
		}
		array = array.table[slot];
	}
	return array.table[i];
}


// Sets the value at the index i. Only the nodes leading to i will get
// copied and updated.
function set(i, item, array)
{
	if (i < 0 || length(array) <= i)
	{
		return array;
	}
	return unsafeSet(i, item, array);
}


function unsafeSet(i, item, array)
{
	array = nodeCopy(array);

	if (array.height === 0)
	{
		array.table[i] = item;
	}
	else
	{
		var slot = getSlot(i, array);
		if (slot > 0)
		{
			i -= array.lengths[slot - 1];
		}
		array.table[slot] = unsafeSet(i, item, array.table[slot]);
	}
	return array;
}


function initialize(len, f)
{
	if (len <= 0)
	{
		return empty;
	}
	var h = Math.floor( Math.log(len) / Math.log(M) );
	return initialize_(f, h, 0, len);
}

function initialize_(f, h, from, to)
{
	if (h === 0)
	{
		var table = new Array((to - from) % (M + 1));
		for (var i = 0; i < table.length; i++)
		{
		  table[i] = f(from + i);
		}
		return {
			ctor: '_Array',
			height: 0,
			table: table
		};
	}

	var step = Math.pow(M, h);
	var table = new Array(Math.ceil((to - from) / step));
	var lengths = new Array(table.length);
	for (var i = 0; i < table.length; i++)
	{
		table[i] = initialize_(f, h - 1, from + (i * step), Math.min(from + ((i + 1) * step), to));
		lengths[i] = length(table[i]) + (i > 0 ? lengths[i-1] : 0);
	}
	return {
		ctor: '_Array',
		height: h,
		table: table,
		lengths: lengths
	};
}

function fromList(list)
{
	if (list.ctor === '[]')
	{
		return empty;
	}

	// Allocate M sized blocks (table) and write list elements to it.
	var table = new Array(M);
	var nodes = [];
	var i = 0;

	while (list.ctor !== '[]')
	{
		table[i] = list._0;
		list = list._1;
		i++;

		// table is full, so we can push a leaf containing it into the
		// next node.
		if (i === M)
		{
			var leaf = {
				ctor: '_Array',
				height: 0,
				table: table
			};
			fromListPush(leaf, nodes);
			table = new Array(M);
			i = 0;
		}
	}

	// Maybe there is something left on the table.
	if (i > 0)
	{
		var leaf = {
			ctor: '_Array',
			height: 0,
			table: table.splice(0, i)
		};
		fromListPush(leaf, nodes);
	}

	// Go through all of the nodes and eventually push them into higher nodes.
	for (var h = 0; h < nodes.length - 1; h++)
	{
		if (nodes[h].table.length > 0)
		{
			fromListPush(nodes[h], nodes);
		}
	}

	var head = nodes[nodes.length - 1];
	if (head.height > 0 && head.table.length === 1)
	{
		return head.table[0];
	}
	else
	{
		return head;
	}
}

// Push a node into a higher node as a child.
function fromListPush(toPush, nodes)
{
	var h = toPush.height;

	// Maybe the node on this height does not exist.
	if (nodes.length === h)
	{
		var node = {
			ctor: '_Array',
			height: h + 1,
			table: [],
			lengths: []
		};
		nodes.push(node);
	}

	nodes[h].table.push(toPush);
	var len = length(toPush);
	if (nodes[h].lengths.length > 0)
	{
		len += nodes[h].lengths[nodes[h].lengths.length - 1];
	}
	nodes[h].lengths.push(len);

	if (nodes[h].table.length === M)
	{
		fromListPush(nodes[h], nodes);
		nodes[h] = {
			ctor: '_Array',
			height: h + 1,
			table: [],
			lengths: []
		};
	}
}

// Pushes an item via push_ to the bottom right of a tree.
function push(item, a)
{
	var pushed = push_(item, a);
	if (pushed !== null)
	{
		return pushed;
	}

	var newTree = create(item, a.height);
	return siblise(a, newTree);
}

// Recursively tries to push an item to the bottom-right most
// tree possible. If there is no space left for the item,
// null will be returned.
function push_(item, a)
{
	// Handle resursion stop at leaf level.
	if (a.height === 0)
	{
		if (a.table.length < M)
		{
			var newA = {
				ctor: '_Array',
				height: 0,
				table: a.table.slice()
			};
			newA.table.push(item);
			return newA;
		}
		else
		{
		  return null;
		}
	}

	// Recursively push
	var pushed = push_(item, botRight(a));

	// There was space in the bottom right tree, so the slot will
	// be updated.
	if (pushed !== null)
	{
		var newA = nodeCopy(a);
		newA.table[newA.table.length - 1] = pushed;
		newA.lengths[newA.lengths.length - 1]++;
		return newA;
	}

	// When there was no space left, check if there is space left
	// for a new slot with a tree which contains only the item
	// at the bottom.
	if (a.table.length < M)
	{
		var newSlot = create(item, a.height - 1);
		var newA = nodeCopy(a);
		newA.table.push(newSlot);
		newA.lengths.push(newA.lengths[newA.lengths.length - 1] + length(newSlot));
		return newA;
	}
	else
	{
		return null;
	}
}

// Converts an array into a list of elements.
function toList(a)
{
	return toList_(_elm_lang$core$Native_List.Nil, a);
}

function toList_(list, a)
{
	for (var i = a.table.length - 1; i >= 0; i--)
	{
		list =
			a.height === 0
				? _elm_lang$core$Native_List.Cons(a.table[i], list)
				: toList_(list, a.table[i]);
	}
	return list;
}

// Maps a function over the elements of an array.
function map(f, a)
{
	var newA = {
		ctor: '_Array',
		height: a.height,
		table: new Array(a.table.length)
	};
	if (a.height > 0)
	{
		newA.lengths = a.lengths;
	}
	for (var i = 0; i < a.table.length; i++)
	{
		newA.table[i] =
			a.height === 0
				? f(a.table[i])
				: map(f, a.table[i]);
	}
	return newA;
}

// Maps a function over the elements with their index as first argument.
function indexedMap(f, a)
{
	return indexedMap_(f, a, 0);
}

function indexedMap_(f, a, from)
{
	var newA = {
		ctor: '_Array',
		height: a.height,
		table: new Array(a.table.length)
	};
	if (a.height > 0)
	{
		newA.lengths = a.lengths;
	}
	for (var i = 0; i < a.table.length; i++)
	{
		newA.table[i] =
			a.height === 0
				? A2(f, from + i, a.table[i])
				: indexedMap_(f, a.table[i], i == 0 ? from : from + a.lengths[i - 1]);
	}
	return newA;
}

function foldl(f, b, a)
{
	if (a.height === 0)
	{
		for (var i = 0; i < a.table.length; i++)
		{
			b = A2(f, a.table[i], b);
		}
	}
	else
	{
		for (var i = 0; i < a.table.length; i++)
		{
			b = foldl(f, b, a.table[i]);
		}
	}
	return b;
}

function foldr(f, b, a)
{
	if (a.height === 0)
	{
		for (var i = a.table.length; i--; )
		{
			b = A2(f, a.table[i], b);
		}
	}
	else
	{
		for (var i = a.table.length; i--; )
		{
			b = foldr(f, b, a.table[i]);
		}
	}
	return b;
}

// TODO: currently, it slices the right, then the left. This can be
// optimized.
function slice(from, to, a)
{
	if (from < 0)
	{
		from += length(a);
	}
	if (to < 0)
	{
		to += length(a);
	}
	return sliceLeft(from, sliceRight(to, a));
}

function sliceRight(to, a)
{
	if (to === length(a))
	{
		return a;
	}

	// Handle leaf level.
	if (a.height === 0)
	{
		var newA = { ctor:'_Array', height:0 };
		newA.table = a.table.slice(0, to);
		return newA;
	}

	// Slice the right recursively.
	var right = getSlot(to, a);
	var sliced = sliceRight(to - (right > 0 ? a.lengths[right - 1] : 0), a.table[right]);

	// Maybe the a node is not even needed, as sliced contains the whole slice.
	if (right === 0)
	{
		return sliced;
	}

	// Create new node.
	var newA = {
		ctor: '_Array',
		height: a.height,
		table: a.table.slice(0, right),
		lengths: a.lengths.slice(0, right)
	};
	if (sliced.table.length > 0)
	{
		newA.table[right] = sliced;
		newA.lengths[right] = length(sliced) + (right > 0 ? newA.lengths[right - 1] : 0);
	}
	return newA;
}

function sliceLeft(from, a)
{
	if (from === 0)
	{
		return a;
	}

	// Handle leaf level.
	if (a.height === 0)
	{
		var newA = { ctor:'_Array', height:0 };
		newA.table = a.table.slice(from, a.table.length + 1);
		return newA;
	}

	// Slice the left recursively.
	var left = getSlot(from, a);
	var sliced = sliceLeft(from - (left > 0 ? a.lengths[left - 1] : 0), a.table[left]);

	// Maybe the a node is not even needed, as sliced contains the whole slice.
	if (left === a.table.length - 1)
	{
		return sliced;
	}

	// Create new node.
	var newA = {
		ctor: '_Array',
		height: a.height,
		table: a.table.slice(left, a.table.length + 1),
		lengths: new Array(a.table.length - left)
	};
	newA.table[0] = sliced;
	var len = 0;
	for (var i = 0; i < newA.table.length; i++)
	{
		len += length(newA.table[i]);
		newA.lengths[i] = len;
	}

	return newA;
}

// Appends two trees.
function append(a,b)
{
	if (a.table.length === 0)
	{
		return b;
	}
	if (b.table.length === 0)
	{
		return a;
	}

	var c = append_(a, b);

	// Check if both nodes can be crunshed together.
	if (c[0].table.length + c[1].table.length <= M)
	{
		if (c[0].table.length === 0)
		{
			return c[1];
		}
		if (c[1].table.length === 0)
		{
			return c[0];
		}

		// Adjust .table and .lengths
		c[0].table = c[0].table.concat(c[1].table);
		if (c[0].height > 0)
		{
			var len = length(c[0]);
			for (var i = 0; i < c[1].lengths.length; i++)
			{
				c[1].lengths[i] += len;
			}
			c[0].lengths = c[0].lengths.concat(c[1].lengths);
		}

		return c[0];
	}

	if (c[0].height > 0)
	{
		var toRemove = calcToRemove(a, b);
		if (toRemove > E)
		{
			c = shuffle(c[0], c[1], toRemove);
		}
	}

	return siblise(c[0], c[1]);
}

// Returns an array of two nodes; right and left. One node _may_ be empty.
function append_(a, b)
{
	if (a.height === 0 && b.height === 0)
	{
		return [a, b];
	}

	if (a.height !== 1 || b.height !== 1)
	{
		if (a.height === b.height)
		{
			a = nodeCopy(a);
			b = nodeCopy(b);
			var appended = append_(botRight(a), botLeft(b));

			insertRight(a, appended[1]);
			insertLeft(b, appended[0]);
		}
		else if (a.height > b.height)
		{
			a = nodeCopy(a);
			var appended = append_(botRight(a), b);

			insertRight(a, appended[0]);
			b = parentise(appended[1], appended[1].height + 1);
		}
		else
		{
			b = nodeCopy(b);
			var appended = append_(a, botLeft(b));

			var left = appended[0].table.length === 0 ? 0 : 1;
			var right = left === 0 ? 1 : 0;
			insertLeft(b, appended[left]);
			a = parentise(appended[right], appended[right].height + 1);
		}
	}

	// Check if balancing is needed and return based on that.
	if (a.table.length === 0 || b.table.length === 0)
	{
		return [a, b];
	}

	var toRemove = calcToRemove(a, b);
	if (toRemove <= E)
	{
		return [a, b];
	}
	return shuffle(a, b, toRemove);
}

// Helperfunctions for append_. Replaces a child node at the side of the parent.
function insertRight(parent, node)
{
	var index = parent.table.length - 1;
	parent.table[index] = node;
	parent.lengths[index] = length(node);
	parent.lengths[index] += index > 0 ? parent.lengths[index - 1] : 0;
}

function insertLeft(parent, node)
{
	if (node.table.length > 0)
	{
		parent.table[0] = node;
		parent.lengths[0] = length(node);

		var len = length(parent.table[0]);
		for (var i = 1; i < parent.lengths.length; i++)
		{
			len += length(parent.table[i]);
			parent.lengths[i] = len;
		}
	}
	else
	{
		parent.table.shift();
		for (var i = 1; i < parent.lengths.length; i++)
		{
			parent.lengths[i] = parent.lengths[i] - parent.lengths[0];
		}
		parent.lengths.shift();
	}
}

// Returns the extra search steps for E. Refer to the paper.
function calcToRemove(a, b)
{
	var subLengths = 0;
	for (var i = 0; i < a.table.length; i++)
	{
		subLengths += a.table[i].table.length;
	}
	for (var i = 0; i < b.table.length; i++)
	{
		subLengths += b.table[i].table.length;
	}

	var toRemove = a.table.length + b.table.length;
	return toRemove - (Math.floor((subLengths - 1) / M) + 1);
}

// get2, set2 and saveSlot are helpers for accessing elements over two arrays.
function get2(a, b, index)
{
	return index < a.length
		? a[index]
		: b[index - a.length];
}

function set2(a, b, index, value)
{
	if (index < a.length)
	{
		a[index] = value;
	}
	else
	{
		b[index - a.length] = value;
	}
}

function saveSlot(a, b, index, slot)
{
	set2(a.table, b.table, index, slot);

	var l = (index === 0 || index === a.lengths.length)
		? 0
		: get2(a.lengths, a.lengths, index - 1);

	set2(a.lengths, b.lengths, index, l + length(slot));
}

// Creates a node or leaf with a given length at their arrays for perfomance.
// Is only used by shuffle.
function createNode(h, length)
{
	if (length < 0)
	{
		length = 0;
	}
	var a = {
		ctor: '_Array',
		height: h,
		table: new Array(length)
	};
	if (h > 0)
	{
		a.lengths = new Array(length);
	}
	return a;
}

// Returns an array of two balanced nodes.
function shuffle(a, b, toRemove)
{
	var newA = createNode(a.height, Math.min(M, a.table.length + b.table.length - toRemove));
	var newB = createNode(a.height, newA.table.length - (a.table.length + b.table.length - toRemove));

	// Skip the slots with size M. More precise: copy the slot references
	// to the new node
	var read = 0;
	while (get2(a.table, b.table, read).table.length % M === 0)
	{
		set2(newA.table, newB.table, read, get2(a.table, b.table, read));
		set2(newA.lengths, newB.lengths, read, get2(a.lengths, b.lengths, read));
		read++;
	}

	// Pulling items from left to right, caching in a slot before writing
	// it into the new nodes.
	var write = read;
	var slot = new createNode(a.height - 1, 0);
	var from = 0;

	// If the current slot is still containing data, then there will be at
	// least one more write, so we do not break this loop yet.
	while (read - write - (slot.table.length > 0 ? 1 : 0) < toRemove)
	{
		// Find out the max possible items for copying.
		var source = get2(a.table, b.table, read);
		var to = Math.min(M - slot.table.length, source.table.length);

		// Copy and adjust size table.
		slot.table = slot.table.concat(source.table.slice(from, to));
		if (slot.height > 0)
		{
			var len = slot.lengths.length;
			for (var i = len; i < len + to - from; i++)
			{
				slot.lengths[i] = length(slot.table[i]);
				slot.lengths[i] += (i > 0 ? slot.lengths[i - 1] : 0);
			}
		}

		from += to;

		// Only proceed to next slots[i] if the current one was
		// fully copied.
		if (source.table.length <= to)
		{
			read++; from = 0;
		}

		// Only create a new slot if the current one is filled up.
		if (slot.table.length === M)
		{
			saveSlot(newA, newB, write, slot);
			slot = createNode(a.height - 1, 0);
			write++;
		}
	}

	// Cleanup after the loop. Copy the last slot into the new nodes.
	if (slot.table.length > 0)
	{
		saveSlot(newA, newB, write, slot);
		write++;
	}

	// Shift the untouched slots to the left
	while (read < a.table.length + b.table.length )
	{
		saveSlot(newA, newB, write, get2(a.table, b.table, read));
		read++;
		write++;
	}

	return [newA, newB];
}

// Navigation functions
function botRight(a)
{
	return a.table[a.table.length - 1];
}
function botLeft(a)
{
	return a.table[0];
}

// Copies a node for updating. Note that you should not use this if
// only updating only one of "table" or "lengths" for performance reasons.
function nodeCopy(a)
{
	var newA = {
		ctor: '_Array',
		height: a.height,
		table: a.table.slice()
	};
	if (a.height > 0)
	{
		newA.lengths = a.lengths.slice();
	}
	return newA;
}

// Returns how many items are in the tree.
function length(array)
{
	if (array.height === 0)
	{
		return array.table.length;
	}
	else
	{
		return array.lengths[array.lengths.length - 1];
	}
}

// Calculates in which slot of "table" the item probably is, then
// find the exact slot via forward searching in  "lengths". Returns the index.
function getSlot(i, a)
{
	var slot = i >> (5 * a.height);
	while (a.lengths[slot] <= i)
	{
		slot++;
	}
	return slot;
}

// Recursively creates a tree with a given height containing
// only the given item.
function create(item, h)
{
	if (h === 0)
	{
		return {
			ctor: '_Array',
			height: 0,
			table: [item]
		};
	}
	return {
		ctor: '_Array',
		height: h,
		table: [create(item, h - 1)],
		lengths: [1]
	};
}

// Recursively creates a tree that contains the given tree.
function parentise(tree, h)
{
	if (h === tree.height)
	{
		return tree;
	}

	return {
		ctor: '_Array',
		height: h,
		table: [parentise(tree, h - 1)],
		lengths: [length(tree)]
	};
}

// Emphasizes blood brotherhood beneath two trees.
function siblise(a, b)
{
	return {
		ctor: '_Array',
		height: a.height + 1,
		table: [a, b],
		lengths: [length(a), length(a) + length(b)]
	};
}

function toJSArray(a)
{
	var jsArray = new Array(length(a));
	toJSArray_(jsArray, 0, a);
	return jsArray;
}

function toJSArray_(jsArray, i, a)
{
	for (var t = 0; t < a.table.length; t++)
	{
		if (a.height === 0)
		{
			jsArray[i + t] = a.table[t];
		}
		else
		{
			var inc = t === 0 ? 0 : a.lengths[t - 1];
			toJSArray_(jsArray, i + inc, a.table[t]);
		}
	}
}

function fromJSArray(jsArray)
{
	if (jsArray.length === 0)
	{
		return empty;
	}
	var h = Math.floor(Math.log(jsArray.length) / Math.log(M));
	return fromJSArray_(jsArray, h, 0, jsArray.length);
}

function fromJSArray_(jsArray, h, from, to)
{
	if (h === 0)
	{
		return {
			ctor: '_Array',
			height: 0,
			table: jsArray.slice(from, to)
		};
	}

	var step = Math.pow(M, h);
	var table = new Array(Math.ceil((to - from) / step));
	var lengths = new Array(table.length);
	for (var i = 0; i < table.length; i++)
	{
		table[i] = fromJSArray_(jsArray, h - 1, from + (i * step), Math.min(from + ((i + 1) * step), to));
		lengths[i] = length(table[i]) + (i > 0 ? lengths[i - 1] : 0);
	}
	return {
		ctor: '_Array',
		height: h,
		table: table,
		lengths: lengths
	};
}

return {
	empty: empty,
	fromList: fromList,
	toList: toList,
	initialize: F2(initialize),
	append: F2(append),
	push: F2(push),
	slice: F3(slice),
	get: F2(get),
	set: F3(set),
	map: F2(map),
	indexedMap: F2(indexedMap),
	foldl: F3(foldl),
	foldr: F3(foldr),
	length: length,

	toJSArray: toJSArray,
	fromJSArray: fromJSArray
};

}();
var _elm_lang$core$Array$append = _elm_lang$core$Native_Array.append;
var _elm_lang$core$Array$length = _elm_lang$core$Native_Array.length;
var _elm_lang$core$Array$isEmpty = function (array) {
	return _elm_lang$core$Native_Utils.eq(
		_elm_lang$core$Array$length(array),
		0);
};
var _elm_lang$core$Array$slice = _elm_lang$core$Native_Array.slice;
var _elm_lang$core$Array$set = _elm_lang$core$Native_Array.set;
var _elm_lang$core$Array$get = F2(
	function (i, array) {
		return ((_elm_lang$core$Native_Utils.cmp(0, i) < 1) && (_elm_lang$core$Native_Utils.cmp(
			i,
			_elm_lang$core$Native_Array.length(array)) < 0)) ? _elm_lang$core$Maybe$Just(
			A2(_elm_lang$core$Native_Array.get, i, array)) : _elm_lang$core$Maybe$Nothing;
	});
var _elm_lang$core$Array$push = _elm_lang$core$Native_Array.push;
var _elm_lang$core$Array$empty = _elm_lang$core$Native_Array.empty;
var _elm_lang$core$Array$filter = F2(
	function (isOkay, arr) {
		var update = F2(
			function (x, xs) {
				return isOkay(x) ? A2(_elm_lang$core$Native_Array.push, x, xs) : xs;
			});
		return A3(_elm_lang$core$Native_Array.foldl, update, _elm_lang$core$Native_Array.empty, arr);
	});
var _elm_lang$core$Array$foldr = _elm_lang$core$Native_Array.foldr;
var _elm_lang$core$Array$foldl = _elm_lang$core$Native_Array.foldl;
var _elm_lang$core$Array$indexedMap = _elm_lang$core$Native_Array.indexedMap;
var _elm_lang$core$Array$map = _elm_lang$core$Native_Array.map;
var _elm_lang$core$Array$toIndexedList = function (array) {
	return A3(
		_elm_lang$core$List$map2,
		F2(
			function (v0, v1) {
				return {ctor: '_Tuple2', _0: v0, _1: v1};
			}),
		A2(
			_elm_lang$core$List$range,
			0,
			_elm_lang$core$Native_Array.length(array) - 1),
		_elm_lang$core$Native_Array.toList(array));
};
var _elm_lang$core$Array$toList = _elm_lang$core$Native_Array.toList;
var _elm_lang$core$Array$fromList = _elm_lang$core$Native_Array.fromList;
var _elm_lang$core$Array$initialize = _elm_lang$core$Native_Array.initialize;
var _elm_lang$core$Array$repeat = F2(
	function (n, e) {
		return A2(
			_elm_lang$core$Array$initialize,
			n,
			_elm_lang$core$Basics$always(e));
	});
var _elm_lang$core$Array$Array = {ctor: 'Array'};

//import Maybe, Native.Array, Native.List, Native.Utils, Result //

var _elm_lang$core$Native_Json = function() {


// CORE DECODERS

function succeed(msg)
{
	return {
		ctor: '<decoder>',
		tag: 'succeed',
		msg: msg
	};
}

function fail(msg)
{
	return {
		ctor: '<decoder>',
		tag: 'fail',
		msg: msg
	};
}

function decodePrimitive(tag)
{
	return {
		ctor: '<decoder>',
		tag: tag
	};
}

function decodeContainer(tag, decoder)
{
	return {
		ctor: '<decoder>',
		tag: tag,
		decoder: decoder
	};
}

function decodeNull(value)
{
	return {
		ctor: '<decoder>',
		tag: 'null',
		value: value
	};
}

function decodeField(field, decoder)
{
	return {
		ctor: '<decoder>',
		tag: 'field',
		field: field,
		decoder: decoder
	};
}

function decodeIndex(index, decoder)
{
	return {
		ctor: '<decoder>',
		tag: 'index',
		index: index,
		decoder: decoder
	};
}

function decodeKeyValuePairs(decoder)
{
	return {
		ctor: '<decoder>',
		tag: 'key-value',
		decoder: decoder
	};
}

function mapMany(f, decoders)
{
	return {
		ctor: '<decoder>',
		tag: 'map-many',
		func: f,
		decoders: decoders
	};
}

function andThen(callback, decoder)
{
	return {
		ctor: '<decoder>',
		tag: 'andThen',
		decoder: decoder,
		callback: callback
	};
}

function oneOf(decoders)
{
	return {
		ctor: '<decoder>',
		tag: 'oneOf',
		decoders: decoders
	};
}


// DECODING OBJECTS

function map1(f, d1)
{
	return mapMany(f, [d1]);
}

function map2(f, d1, d2)
{
	return mapMany(f, [d1, d2]);
}

function map3(f, d1, d2, d3)
{
	return mapMany(f, [d1, d2, d3]);
}

function map4(f, d1, d2, d3, d4)
{
	return mapMany(f, [d1, d2, d3, d4]);
}

function map5(f, d1, d2, d3, d4, d5)
{
	return mapMany(f, [d1, d2, d3, d4, d5]);
}

function map6(f, d1, d2, d3, d4, d5, d6)
{
	return mapMany(f, [d1, d2, d3, d4, d5, d6]);
}

function map7(f, d1, d2, d3, d4, d5, d6, d7)
{
	return mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);
}

function map8(f, d1, d2, d3, d4, d5, d6, d7, d8)
{
	return mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);
}


// DECODE HELPERS

function ok(value)
{
	return { tag: 'ok', value: value };
}

function badPrimitive(type, value)
{
	return { tag: 'primitive', type: type, value: value };
}

function badIndex(index, nestedProblems)
{
	return { tag: 'index', index: index, rest: nestedProblems };
}

function badField(field, nestedProblems)
{
	return { tag: 'field', field: field, rest: nestedProblems };
}

function badIndex(index, nestedProblems)
{
	return { tag: 'index', index: index, rest: nestedProblems };
}

function badOneOf(problems)
{
	return { tag: 'oneOf', problems: problems };
}

function bad(msg)
{
	return { tag: 'fail', msg: msg };
}

function badToString(problem)
{
	var context = '_';
	while (problem)
	{
		switch (problem.tag)
		{
			case 'primitive':
				return 'Expecting ' + problem.type
					+ (context === '_' ? '' : ' at ' + context)
					+ ' but instead got: ' + jsToString(problem.value);

			case 'index':
				context += '[' + problem.index + ']';
				problem = problem.rest;
				break;

			case 'field':
				context += '.' + problem.field;
				problem = problem.rest;
				break;

			case 'oneOf':
				var problems = problem.problems;
				for (var i = 0; i < problems.length; i++)
				{
					problems[i] = badToString(problems[i]);
				}
				return 'I ran into the following problems'
					+ (context === '_' ? '' : ' at ' + context)
					+ ':\n\n' + problems.join('\n');

			case 'fail':
				return 'I ran into a `fail` decoder'
					+ (context === '_' ? '' : ' at ' + context)
					+ ': ' + problem.msg;
		}
	}
}

function jsToString(value)
{
	return value === undefined
		? 'undefined'
		: JSON.stringify(value);
}


// DECODE

function runOnString(decoder, string)
{
	var json;
	try
	{
		json = JSON.parse(string);
	}
	catch (e)
	{
		return _elm_lang$core$Result$Err('Given an invalid JSON: ' + e.message);
	}
	return run(decoder, json);
}

function run(decoder, value)
{
	var result = runHelp(decoder, value);
	return (result.tag === 'ok')
		? _elm_lang$core$Result$Ok(result.value)
		: _elm_lang$core$Result$Err(badToString(result));
}

function runHelp(decoder, value)
{
	switch (decoder.tag)
	{
		case 'bool':
			return (typeof value === 'boolean')
				? ok(value)
				: badPrimitive('a Bool', value);

		case 'int':
			if (typeof value !== 'number') {
				return badPrimitive('an Int', value);
			}

			if (-2147483647 < value && value < 2147483647 && (value | 0) === value) {
				return ok(value);
			}

			if (isFinite(value) && !(value % 1)) {
				return ok(value);
			}

			return badPrimitive('an Int', value);

		case 'float':
			return (typeof value === 'number')
				? ok(value)
				: badPrimitive('a Float', value);

		case 'string':
			return (typeof value === 'string')
				? ok(value)
				: (value instanceof String)
					? ok(value + '')
					: badPrimitive('a String', value);

		case 'null':
			return (value === null)
				? ok(decoder.value)
				: badPrimitive('null', value);

		case 'value':
			return ok(value);

		case 'list':
			if (!(value instanceof Array))
			{
				return badPrimitive('a List', value);
			}

			var list = _elm_lang$core$Native_List.Nil;
			for (var i = value.length; i--; )
			{
				var result = runHelp(decoder.decoder, value[i]);
				if (result.tag !== 'ok')
				{
					return badIndex(i, result)
				}
				list = _elm_lang$core$Native_List.Cons(result.value, list);
			}
			return ok(list);

		case 'array':
			if (!(value instanceof Array))
			{
				return badPrimitive('an Array', value);
			}

			var len = value.length;
			var array = new Array(len);
			for (var i = len; i--; )
			{
				var result = runHelp(decoder.decoder, value[i]);
				if (result.tag !== 'ok')
				{
					return badIndex(i, result);
				}
				array[i] = result.value;
			}
			return ok(_elm_lang$core$Native_Array.fromJSArray(array));

		case 'maybe':
			var result = runHelp(decoder.decoder, value);
			return (result.tag === 'ok')
				? ok(_elm_lang$core$Maybe$Just(result.value))
				: ok(_elm_lang$core$Maybe$Nothing);

		case 'field':
			var field = decoder.field;
			if (typeof value !== 'object' || value === null || !(field in value))
			{
				return badPrimitive('an object with a field named `' + field + '`', value);
			}

			var result = runHelp(decoder.decoder, value[field]);
			return (result.tag === 'ok') ? result : badField(field, result);

		case 'index':
			var index = decoder.index;
			if (!(value instanceof Array))
			{
				return badPrimitive('an array', value);
			}
			if (index >= value.length)
			{
				return badPrimitive('a longer array. Need index ' + index + ' but there are only ' + value.length + ' entries', value);
			}

			var result = runHelp(decoder.decoder, value[index]);
			return (result.tag === 'ok') ? result : badIndex(index, result);

		case 'key-value':
			if (typeof value !== 'object' || value === null || value instanceof Array)
			{
				return badPrimitive('an object', value);
			}

			var keyValuePairs = _elm_lang$core$Native_List.Nil;
			for (var key in value)
			{
				var result = runHelp(decoder.decoder, value[key]);
				if (result.tag !== 'ok')
				{
					return badField(key, result);
				}
				var pair = _elm_lang$core$Native_Utils.Tuple2(key, result.value);
				keyValuePairs = _elm_lang$core$Native_List.Cons(pair, keyValuePairs);
			}
			return ok(keyValuePairs);

		case 'map-many':
			var answer = decoder.func;
			var decoders = decoder.decoders;
			for (var i = 0; i < decoders.length; i++)
			{
				var result = runHelp(decoders[i], value);
				if (result.tag !== 'ok')
				{
					return result;
				}
				answer = answer(result.value);
			}
			return ok(answer);

		case 'andThen':
			var result = runHelp(decoder.decoder, value);
			return (result.tag !== 'ok')
				? result
				: runHelp(decoder.callback(result.value), value);

		case 'oneOf':
			var errors = [];
			var temp = decoder.decoders;
			while (temp.ctor !== '[]')
			{
				var result = runHelp(temp._0, value);

				if (result.tag === 'ok')
				{
					return result;
				}

				errors.push(result);

				temp = temp._1;
			}
			return badOneOf(errors);

		case 'fail':
			return bad(decoder.msg);

		case 'succeed':
			return ok(decoder.msg);
	}
}


// EQUALITY

function equality(a, b)
{
	if (a === b)
	{
		return true;
	}

	if (a.tag !== b.tag)
	{
		return false;
	}

	switch (a.tag)
	{
		case 'succeed':
		case 'fail':
			return a.msg === b.msg;

		case 'bool':
		case 'int':
		case 'float':
		case 'string':
		case 'value':
			return true;

		case 'null':
			return a.value === b.value;

		case 'list':
		case 'array':
		case 'maybe':
		case 'key-value':
			return equality(a.decoder, b.decoder);

		case 'field':
			return a.field === b.field && equality(a.decoder, b.decoder);

		case 'index':
			return a.index === b.index && equality(a.decoder, b.decoder);

		case 'map-many':
			if (a.func !== b.func)
			{
				return false;
			}
			return listEquality(a.decoders, b.decoders);

		case 'andThen':
			return a.callback === b.callback && equality(a.decoder, b.decoder);

		case 'oneOf':
			return listEquality(a.decoders, b.decoders);
	}
}

function listEquality(aDecoders, bDecoders)
{
	var len = aDecoders.length;
	if (len !== bDecoders.length)
	{
		return false;
	}
	for (var i = 0; i < len; i++)
	{
		if (!equality(aDecoders[i], bDecoders[i]))
		{
			return false;
		}
	}
	return true;
}


// ENCODE

function encode(indentLevel, value)
{
	return JSON.stringify(value, null, indentLevel);
}

function identity(value)
{
	return value;
}

function encodeObject(keyValuePairs)
{
	var obj = {};
	while (keyValuePairs.ctor !== '[]')
	{
		var pair = keyValuePairs._0;
		obj[pair._0] = pair._1;
		keyValuePairs = keyValuePairs._1;
	}
	return obj;
}

return {
	encode: F2(encode),
	runOnString: F2(runOnString),
	run: F2(run),

	decodeNull: decodeNull,
	decodePrimitive: decodePrimitive,
	decodeContainer: F2(decodeContainer),

	decodeField: F2(decodeField),
	decodeIndex: F2(decodeIndex),

	map1: F2(map1),
	map2: F3(map2),
	map3: F4(map3),
	map4: F5(map4),
	map5: F6(map5),
	map6: F7(map6),
	map7: F8(map7),
	map8: F9(map8),
	decodeKeyValuePairs: decodeKeyValuePairs,

	andThen: F2(andThen),
	fail: fail,
	succeed: succeed,
	oneOf: oneOf,

	identity: identity,
	encodeNull: null,
	encodeArray: _elm_lang$core$Native_Array.toJSArray,
	encodeList: _elm_lang$core$Native_List.toArray,
	encodeObject: encodeObject,

	equality: equality
};

}();

var _elm_lang$core$Json_Encode$list = _elm_lang$core$Native_Json.encodeList;
var _elm_lang$core$Json_Encode$array = _elm_lang$core$Native_Json.encodeArray;
var _elm_lang$core$Json_Encode$object = _elm_lang$core$Native_Json.encodeObject;
var _elm_lang$core$Json_Encode$null = _elm_lang$core$Native_Json.encodeNull;
var _elm_lang$core$Json_Encode$bool = _elm_lang$core$Native_Json.identity;
var _elm_lang$core$Json_Encode$float = _elm_lang$core$Native_Json.identity;
var _elm_lang$core$Json_Encode$int = _elm_lang$core$Native_Json.identity;
var _elm_lang$core$Json_Encode$string = _elm_lang$core$Native_Json.identity;
var _elm_lang$core$Json_Encode$encode = _elm_lang$core$Native_Json.encode;
var _elm_lang$core$Json_Encode$Value = {ctor: 'Value'};

var _elm_lang$core$Json_Decode$null = _elm_lang$core$Native_Json.decodeNull;
var _elm_lang$core$Json_Decode$value = _elm_lang$core$Native_Json.decodePrimitive('value');
var _elm_lang$core$Json_Decode$andThen = _elm_lang$core$Native_Json.andThen;
var _elm_lang$core$Json_Decode$fail = _elm_lang$core$Native_Json.fail;
var _elm_lang$core$Json_Decode$succeed = _elm_lang$core$Native_Json.succeed;
var _elm_lang$core$Json_Decode$lazy = function (thunk) {
	return A2(
		_elm_lang$core$Json_Decode$andThen,
		thunk,
		_elm_lang$core$Json_Decode$succeed(
			{ctor: '_Tuple0'}));
};
var _elm_lang$core$Json_Decode$decodeValue = _elm_lang$core$Native_Json.run;
var _elm_lang$core$Json_Decode$decodeString = _elm_lang$core$Native_Json.runOnString;
var _elm_lang$core$Json_Decode$map8 = _elm_lang$core$Native_Json.map8;
var _elm_lang$core$Json_Decode$map7 = _elm_lang$core$Native_Json.map7;
var _elm_lang$core$Json_Decode$map6 = _elm_lang$core$Native_Json.map6;
var _elm_lang$core$Json_Decode$map5 = _elm_lang$core$Native_Json.map5;
var _elm_lang$core$Json_Decode$map4 = _elm_lang$core$Native_Json.map4;
var _elm_lang$core$Json_Decode$map3 = _elm_lang$core$Native_Json.map3;
var _elm_lang$core$Json_Decode$map2 = _elm_lang$core$Native_Json.map2;
var _elm_lang$core$Json_Decode$map = _elm_lang$core$Native_Json.map1;
var _elm_lang$core$Json_Decode$oneOf = _elm_lang$core$Native_Json.oneOf;
var _elm_lang$core$Json_Decode$maybe = function (decoder) {
	return A2(_elm_lang$core$Native_Json.decodeContainer, 'maybe', decoder);
};
var _elm_lang$core$Json_Decode$index = _elm_lang$core$Native_Json.decodeIndex;
var _elm_lang$core$Json_Decode$field = _elm_lang$core$Native_Json.decodeField;
var _elm_lang$core$Json_Decode$at = F2(
	function (fields, decoder) {
		return A3(_elm_lang$core$List$foldr, _elm_lang$core$Json_Decode$field, decoder, fields);
	});
var _elm_lang$core$Json_Decode$keyValuePairs = _elm_lang$core$Native_Json.decodeKeyValuePairs;
var _elm_lang$core$Json_Decode$dict = function (decoder) {
	return A2(
		_elm_lang$core$Json_Decode$map,
		_elm_lang$core$Dict$fromList,
		_elm_lang$core$Json_Decode$keyValuePairs(decoder));
};
var _elm_lang$core$Json_Decode$array = function (decoder) {
	return A2(_elm_lang$core$Native_Json.decodeContainer, 'array', decoder);
};
var _elm_lang$core$Json_Decode$list = function (decoder) {
	return A2(_elm_lang$core$Native_Json.decodeContainer, 'list', decoder);
};
var _elm_lang$core$Json_Decode$nullable = function (decoder) {
	return _elm_lang$core$Json_Decode$oneOf(
		{
			ctor: '::',
			_0: _elm_lang$core$Json_Decode$null(_elm_lang$core$Maybe$Nothing),
			_1: {
				ctor: '::',
				_0: A2(_elm_lang$core$Json_Decode$map, _elm_lang$core$Maybe$Just, decoder),
				_1: {ctor: '[]'}
			}
		});
};
var _elm_lang$core$Json_Decode$float = _elm_lang$core$Native_Json.decodePrimitive('float');
var _elm_lang$core$Json_Decode$int = _elm_lang$core$Native_Json.decodePrimitive('int');
var _elm_lang$core$Json_Decode$bool = _elm_lang$core$Native_Json.decodePrimitive('bool');
var _elm_lang$core$Json_Decode$string = _elm_lang$core$Native_Json.decodePrimitive('string');
var _elm_lang$core$Json_Decode$Decoder = {ctor: 'Decoder'};

var _NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode = _elm_lang$core$Json_Decode$succeed;
var _NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$resolve = _elm_lang$core$Json_Decode$andThen(_elm_lang$core$Basics$identity);
var _NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$custom = F2(
	function (decoder, wrapped) {
		return A3(
			_elm_lang$core$Json_Decode$map2,
			F2(
				function (x, y) {
					return x(y);
				}),
			wrapped,
			decoder);
	});
var _NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$hardcoded = function (_p0) {
	return _NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$custom(
		_elm_lang$core$Json_Decode$succeed(_p0));
};
var _NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optionalDecoder = F3(
	function (pathDecoder, valDecoder, fallback) {
		var nullOr = function (decoder) {
			return _elm_lang$core$Json_Decode$oneOf(
				{
					ctor: '::',
					_0: decoder,
					_1: {
						ctor: '::',
						_0: _elm_lang$core$Json_Decode$null(fallback),
						_1: {ctor: '[]'}
					}
				});
		};
		var handleResult = function (input) {
			var _p1 = A2(_elm_lang$core$Json_Decode$decodeValue, pathDecoder, input);
			if (_p1.ctor === 'Ok') {
				var _p2 = A2(
					_elm_lang$core$Json_Decode$decodeValue,
					nullOr(valDecoder),
					_p1._0);
				if (_p2.ctor === 'Ok') {
					return _elm_lang$core$Json_Decode$succeed(_p2._0);
				} else {
					return _elm_lang$core$Json_Decode$fail(_p2._0);
				}
			} else {
				var _p3 = A2(
					_elm_lang$core$Json_Decode$decodeValue,
					_elm_lang$core$Json_Decode$keyValuePairs(_elm_lang$core$Json_Decode$value),
					input);
				if (_p3.ctor === 'Ok') {
					return _elm_lang$core$Json_Decode$succeed(fallback);
				} else {
					return _elm_lang$core$Json_Decode$fail(_p3._0);
				}
			}
		};
		return A2(_elm_lang$core$Json_Decode$andThen, handleResult, _elm_lang$core$Json_Decode$value);
	});
var _NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optionalAt = F4(
	function (path, valDecoder, fallback, decoder) {
		return A2(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$custom,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optionalDecoder,
				A2(_elm_lang$core$Json_Decode$at, path, _elm_lang$core$Json_Decode$value),
				valDecoder,
				fallback),
			decoder);
	});
var _NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional = F4(
	function (key, valDecoder, fallback, decoder) {
		return A2(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$custom,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optionalDecoder,
				A2(_elm_lang$core$Json_Decode$field, key, _elm_lang$core$Json_Decode$value),
				valDecoder,
				fallback),
			decoder);
	});
var _NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$requiredAt = F3(
	function (path, valDecoder, decoder) {
		return A2(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$custom,
			A2(_elm_lang$core$Json_Decode$at, path, valDecoder),
			decoder);
	});
var _NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required = F3(
	function (key, valDecoder, decoder) {
		return A2(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$custom,
			A2(_elm_lang$core$Json_Decode$field, key, valDecoder),
			decoder);
	});

var _elm_lang$core$Native_Bitwise = function() {

return {
	and: F2(function and(a, b) { return a & b; }),
	or: F2(function or(a, b) { return a | b; }),
	xor: F2(function xor(a, b) { return a ^ b; }),
	complement: function complement(a) { return ~a; },
	shiftLeftBy: F2(function(offset, a) { return a << offset; }),
	shiftRightBy: F2(function(offset, a) { return a >> offset; }),
	shiftRightZfBy: F2(function(offset, a) { return a >>> offset; })
};

}();

var _elm_lang$core$Bitwise$shiftRightZfBy = _elm_lang$core$Native_Bitwise.shiftRightZfBy;
var _elm_lang$core$Bitwise$shiftRightBy = _elm_lang$core$Native_Bitwise.shiftRightBy;
var _elm_lang$core$Bitwise$shiftLeftBy = _elm_lang$core$Native_Bitwise.shiftLeftBy;
var _elm_lang$core$Bitwise$complement = _elm_lang$core$Native_Bitwise.complement;
var _elm_lang$core$Bitwise$xor = _elm_lang$core$Native_Bitwise.xor;
var _elm_lang$core$Bitwise$or = _elm_lang$core$Native_Bitwise.or;
var _elm_lang$core$Bitwise$and = _elm_lang$core$Native_Bitwise.and;

var _Skinney$murmur3$UTF8$accumulate = F3(
	function (add, $char, _p0) {
		var _p1 = _p0;
		var _p3 = _p1._0;
		var _p2 = _p1._1;
		if (_p2.ctor === 'Nothing') {
			return (_elm_lang$core$Native_Utils.cmp($char, 128) < 0) ? {
				ctor: '_Tuple2',
				_0: A2(add, $char, _p3),
				_1: _elm_lang$core$Maybe$Nothing
			} : ((_elm_lang$core$Native_Utils.cmp($char, 2048) < 0) ? {
				ctor: '_Tuple2',
				_0: A2(
					add,
					128 | (63 & $char),
					A2(add, 192 | ($char >>> 6), _p3)),
				_1: _elm_lang$core$Maybe$Nothing
			} : (((_elm_lang$core$Native_Utils.cmp($char, 55296) < 0) || (_elm_lang$core$Native_Utils.cmp($char, 57344) > -1)) ? {
				ctor: '_Tuple2',
				_0: A2(
					add,
					128 | (63 & $char),
					A2(
						add,
						128 | (63 & ($char >>> 6)),
						A2(add, 224 | ($char >>> 12), _p3))),
				_1: _elm_lang$core$Maybe$Nothing
			} : {
				ctor: '_Tuple2',
				_0: _p3,
				_1: _elm_lang$core$Maybe$Just($char)
			}));
		} else {
			var combined = ((1023 & $char) | ((1023 & _p2._0) << 10)) + 65536;
			return {
				ctor: '_Tuple2',
				_0: A2(
					add,
					128 | (63 & combined),
					A2(
						add,
						128 | (63 & (combined >>> 6)),
						A2(
							add,
							128 | (63 & (combined >>> 12)),
							A2(add, 240 | (combined >>> 18), _p3)))),
				_1: _elm_lang$core$Maybe$Nothing
			};
		}
	});
var _Skinney$murmur3$UTF8$foldl = F3(
	function (op, acc, input) {
		var helper = F2(
			function ($char, acc) {
				return A3(
					_Skinney$murmur3$UTF8$accumulate,
					op,
					_elm_lang$core$Char$toCode($char),
					acc);
			});
		return _elm_lang$core$Tuple$first(
			A3(
				_elm_lang$core$String$foldl,
				helper,
				{ctor: '_Tuple2', _0: acc, _1: _elm_lang$core$Maybe$Nothing},
				input));
	});

var _Skinney$murmur3$Murmur3$mur = F2(
	function (c, h) {
		return 4294967295 & (((h & 65535) * c) + ((65535 & ((h >>> 16) * c)) << 16));
	});
var _Skinney$murmur3$Murmur3$step = function (acc) {
	var h1 = A2(_Skinney$murmur3$Murmur3$mur, 5, (acc >>> 19) | (acc << 13));
	return ((h1 & 65535) + 27492) + ((65535 & ((h1 >>> 16) + 58964)) << 16);
};
var _Skinney$murmur3$Murmur3$mix = F2(
	function (h1, h2) {
		var k1 = A2(_Skinney$murmur3$Murmur3$mur, 3432918353, h2);
		return h1 ^ A2(_Skinney$murmur3$Murmur3$mur, 461845907, (k1 >>> 17) | (k1 << 15));
	});
var _Skinney$murmur3$Murmur3$finalize = function (data) {
	var acc = (!_elm_lang$core$Native_Utils.eq(data.hash, 0)) ? A2(_Skinney$murmur3$Murmur3$mix, data.seed, data.hash) : data.seed;
	var h1 = acc ^ data.charsProcessed;
	var h2 = A2(_Skinney$murmur3$Murmur3$mur, 2246822507, h1 ^ (h1 >>> 16));
	var h3 = A2(_Skinney$murmur3$Murmur3$mur, 3266489909, h2 ^ (h2 >>> 13));
	return (h3 ^ (h3 >>> 16)) >>> 0;
};
var _Skinney$murmur3$Murmur3$hashFold = F2(
	function (c, data) {
		var res = data.hash | (c << data.shift);
		var _p0 = data.shift;
		if (_p0 === 24) {
			var newHash = _Skinney$murmur3$Murmur3$step(
				A2(_Skinney$murmur3$Murmur3$mix, data.seed, res));
			return {shift: 0, seed: newHash, hash: 0, charsProcessed: data.charsProcessed + 1};
		} else {
			return {shift: data.shift + 8, seed: data.seed, hash: res, charsProcessed: data.charsProcessed + 1};
		}
	});
var _Skinney$murmur3$Murmur3$HashData = F4(
	function (a, b, c, d) {
		return {shift: a, seed: b, hash: c, charsProcessed: d};
	});
var _Skinney$murmur3$Murmur3$hashString = F2(
	function (seed, str) {
		return _Skinney$murmur3$Murmur3$finalize(
			A3(
				_Skinney$murmur3$UTF8$foldl,
				_Skinney$murmur3$Murmur3$hashFold,
				A4(_Skinney$murmur3$Murmur3$HashData, 0, seed, 0, 0),
				str));
	});

var _elm_lang$core$Color$fmod = F2(
	function (f, n) {
		var integer = _elm_lang$core$Basics$floor(f);
		return (_elm_lang$core$Basics$toFloat(
			A2(_elm_lang$core$Basics_ops['%'], integer, n)) + f) - _elm_lang$core$Basics$toFloat(integer);
	});
var _elm_lang$core$Color$rgbToHsl = F3(
	function (red, green, blue) {
		var b = _elm_lang$core$Basics$toFloat(blue) / 255;
		var g = _elm_lang$core$Basics$toFloat(green) / 255;
		var r = _elm_lang$core$Basics$toFloat(red) / 255;
		var cMax = A2(
			_elm_lang$core$Basics$max,
			A2(_elm_lang$core$Basics$max, r, g),
			b);
		var cMin = A2(
			_elm_lang$core$Basics$min,
			A2(_elm_lang$core$Basics$min, r, g),
			b);
		var c = cMax - cMin;
		var lightness = (cMax + cMin) / 2;
		var saturation = _elm_lang$core$Native_Utils.eq(lightness, 0) ? 0 : (c / (1 - _elm_lang$core$Basics$abs((2 * lightness) - 1)));
		var hue = _elm_lang$core$Basics$degrees(60) * (_elm_lang$core$Native_Utils.eq(cMax, r) ? A2(_elm_lang$core$Color$fmod, (g - b) / c, 6) : (_elm_lang$core$Native_Utils.eq(cMax, g) ? (((b - r) / c) + 2) : (((r - g) / c) + 4)));
		return {ctor: '_Tuple3', _0: hue, _1: saturation, _2: lightness};
	});
var _elm_lang$core$Color$hslToRgb = F3(
	function (hue, saturation, lightness) {
		var normHue = hue / _elm_lang$core$Basics$degrees(60);
		var chroma = (1 - _elm_lang$core$Basics$abs((2 * lightness) - 1)) * saturation;
		var x = chroma * (1 - _elm_lang$core$Basics$abs(
			A2(_elm_lang$core$Color$fmod, normHue, 2) - 1));
		var _p0 = (_elm_lang$core$Native_Utils.cmp(normHue, 0) < 0) ? {ctor: '_Tuple3', _0: 0, _1: 0, _2: 0} : ((_elm_lang$core$Native_Utils.cmp(normHue, 1) < 0) ? {ctor: '_Tuple3', _0: chroma, _1: x, _2: 0} : ((_elm_lang$core$Native_Utils.cmp(normHue, 2) < 0) ? {ctor: '_Tuple3', _0: x, _1: chroma, _2: 0} : ((_elm_lang$core$Native_Utils.cmp(normHue, 3) < 0) ? {ctor: '_Tuple3', _0: 0, _1: chroma, _2: x} : ((_elm_lang$core$Native_Utils.cmp(normHue, 4) < 0) ? {ctor: '_Tuple3', _0: 0, _1: x, _2: chroma} : ((_elm_lang$core$Native_Utils.cmp(normHue, 5) < 0) ? {ctor: '_Tuple3', _0: x, _1: 0, _2: chroma} : ((_elm_lang$core$Native_Utils.cmp(normHue, 6) < 0) ? {ctor: '_Tuple3', _0: chroma, _1: 0, _2: x} : {ctor: '_Tuple3', _0: 0, _1: 0, _2: 0}))))));
		var r = _p0._0;
		var g = _p0._1;
		var b = _p0._2;
		var m = lightness - (chroma / 2);
		return {ctor: '_Tuple3', _0: r + m, _1: g + m, _2: b + m};
	});
var _elm_lang$core$Color$toRgb = function (color) {
	var _p1 = color;
	if (_p1.ctor === 'RGBA') {
		return {red: _p1._0, green: _p1._1, blue: _p1._2, alpha: _p1._3};
	} else {
		var _p2 = A3(_elm_lang$core$Color$hslToRgb, _p1._0, _p1._1, _p1._2);
		var r = _p2._0;
		var g = _p2._1;
		var b = _p2._2;
		return {
			red: _elm_lang$core$Basics$round(255 * r),
			green: _elm_lang$core$Basics$round(255 * g),
			blue: _elm_lang$core$Basics$round(255 * b),
			alpha: _p1._3
		};
	}
};
var _elm_lang$core$Color$toHsl = function (color) {
	var _p3 = color;
	if (_p3.ctor === 'HSLA') {
		return {hue: _p3._0, saturation: _p3._1, lightness: _p3._2, alpha: _p3._3};
	} else {
		var _p4 = A3(_elm_lang$core$Color$rgbToHsl, _p3._0, _p3._1, _p3._2);
		var h = _p4._0;
		var s = _p4._1;
		var l = _p4._2;
		return {hue: h, saturation: s, lightness: l, alpha: _p3._3};
	}
};
var _elm_lang$core$Color$HSLA = F4(
	function (a, b, c, d) {
		return {ctor: 'HSLA', _0: a, _1: b, _2: c, _3: d};
	});
var _elm_lang$core$Color$hsla = F4(
	function (hue, saturation, lightness, alpha) {
		return A4(
			_elm_lang$core$Color$HSLA,
			hue - _elm_lang$core$Basics$turns(
				_elm_lang$core$Basics$toFloat(
					_elm_lang$core$Basics$floor(hue / (2 * _elm_lang$core$Basics$pi)))),
			saturation,
			lightness,
			alpha);
	});
var _elm_lang$core$Color$hsl = F3(
	function (hue, saturation, lightness) {
		return A4(_elm_lang$core$Color$hsla, hue, saturation, lightness, 1);
	});
var _elm_lang$core$Color$complement = function (color) {
	var _p5 = color;
	if (_p5.ctor === 'HSLA') {
		return A4(
			_elm_lang$core$Color$hsla,
			_p5._0 + _elm_lang$core$Basics$degrees(180),
			_p5._1,
			_p5._2,
			_p5._3);
	} else {
		var _p6 = A3(_elm_lang$core$Color$rgbToHsl, _p5._0, _p5._1, _p5._2);
		var h = _p6._0;
		var s = _p6._1;
		var l = _p6._2;
		return A4(
			_elm_lang$core$Color$hsla,
			h + _elm_lang$core$Basics$degrees(180),
			s,
			l,
			_p5._3);
	}
};
var _elm_lang$core$Color$grayscale = function (p) {
	return A4(_elm_lang$core$Color$HSLA, 0, 0, 1 - p, 1);
};
var _elm_lang$core$Color$greyscale = function (p) {
	return A4(_elm_lang$core$Color$HSLA, 0, 0, 1 - p, 1);
};
var _elm_lang$core$Color$RGBA = F4(
	function (a, b, c, d) {
		return {ctor: 'RGBA', _0: a, _1: b, _2: c, _3: d};
	});
var _elm_lang$core$Color$rgba = _elm_lang$core$Color$RGBA;
var _elm_lang$core$Color$rgb = F3(
	function (r, g, b) {
		return A4(_elm_lang$core$Color$RGBA, r, g, b, 1);
	});
var _elm_lang$core$Color$lightRed = A4(_elm_lang$core$Color$RGBA, 239, 41, 41, 1);
var _elm_lang$core$Color$red = A4(_elm_lang$core$Color$RGBA, 204, 0, 0, 1);
var _elm_lang$core$Color$darkRed = A4(_elm_lang$core$Color$RGBA, 164, 0, 0, 1);
var _elm_lang$core$Color$lightOrange = A4(_elm_lang$core$Color$RGBA, 252, 175, 62, 1);
var _elm_lang$core$Color$orange = A4(_elm_lang$core$Color$RGBA, 245, 121, 0, 1);
var _elm_lang$core$Color$darkOrange = A4(_elm_lang$core$Color$RGBA, 206, 92, 0, 1);
var _elm_lang$core$Color$lightYellow = A4(_elm_lang$core$Color$RGBA, 255, 233, 79, 1);
var _elm_lang$core$Color$yellow = A4(_elm_lang$core$Color$RGBA, 237, 212, 0, 1);
var _elm_lang$core$Color$darkYellow = A4(_elm_lang$core$Color$RGBA, 196, 160, 0, 1);
var _elm_lang$core$Color$lightGreen = A4(_elm_lang$core$Color$RGBA, 138, 226, 52, 1);
var _elm_lang$core$Color$green = A4(_elm_lang$core$Color$RGBA, 115, 210, 22, 1);
var _elm_lang$core$Color$darkGreen = A4(_elm_lang$core$Color$RGBA, 78, 154, 6, 1);
var _elm_lang$core$Color$lightBlue = A4(_elm_lang$core$Color$RGBA, 114, 159, 207, 1);
var _elm_lang$core$Color$blue = A4(_elm_lang$core$Color$RGBA, 52, 101, 164, 1);
var _elm_lang$core$Color$darkBlue = A4(_elm_lang$core$Color$RGBA, 32, 74, 135, 1);
var _elm_lang$core$Color$lightPurple = A4(_elm_lang$core$Color$RGBA, 173, 127, 168, 1);
var _elm_lang$core$Color$purple = A4(_elm_lang$core$Color$RGBA, 117, 80, 123, 1);
var _elm_lang$core$Color$darkPurple = A4(_elm_lang$core$Color$RGBA, 92, 53, 102, 1);
var _elm_lang$core$Color$lightBrown = A4(_elm_lang$core$Color$RGBA, 233, 185, 110, 1);
var _elm_lang$core$Color$brown = A4(_elm_lang$core$Color$RGBA, 193, 125, 17, 1);
var _elm_lang$core$Color$darkBrown = A4(_elm_lang$core$Color$RGBA, 143, 89, 2, 1);
var _elm_lang$core$Color$black = A4(_elm_lang$core$Color$RGBA, 0, 0, 0, 1);
var _elm_lang$core$Color$white = A4(_elm_lang$core$Color$RGBA, 255, 255, 255, 1);
var _elm_lang$core$Color$lightGrey = A4(_elm_lang$core$Color$RGBA, 238, 238, 236, 1);
var _elm_lang$core$Color$grey = A4(_elm_lang$core$Color$RGBA, 211, 215, 207, 1);
var _elm_lang$core$Color$darkGrey = A4(_elm_lang$core$Color$RGBA, 186, 189, 182, 1);
var _elm_lang$core$Color$lightGray = A4(_elm_lang$core$Color$RGBA, 238, 238, 236, 1);
var _elm_lang$core$Color$gray = A4(_elm_lang$core$Color$RGBA, 211, 215, 207, 1);
var _elm_lang$core$Color$darkGray = A4(_elm_lang$core$Color$RGBA, 186, 189, 182, 1);
var _elm_lang$core$Color$lightCharcoal = A4(_elm_lang$core$Color$RGBA, 136, 138, 133, 1);
var _elm_lang$core$Color$charcoal = A4(_elm_lang$core$Color$RGBA, 85, 87, 83, 1);
var _elm_lang$core$Color$darkCharcoal = A4(_elm_lang$core$Color$RGBA, 46, 52, 54, 1);
var _elm_lang$core$Color$Radial = F5(
	function (a, b, c, d, e) {
		return {ctor: 'Radial', _0: a, _1: b, _2: c, _3: d, _4: e};
	});
var _elm_lang$core$Color$radial = _elm_lang$core$Color$Radial;
var _elm_lang$core$Color$Linear = F3(
	function (a, b, c) {
		return {ctor: 'Linear', _0: a, _1: b, _2: c};
	});
var _elm_lang$core$Color$linear = _elm_lang$core$Color$Linear;

//import Maybe, Native.List //

var _elm_lang$core$Native_Regex = function() {

function escape(str)
{
	return str.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
}
function caseInsensitive(re)
{
	return new RegExp(re.source, 'gi');
}
function regex(raw)
{
	return new RegExp(raw, 'g');
}

function contains(re, string)
{
	return string.match(re) !== null;
}

function find(n, re, str)
{
	n = n.ctor === 'All' ? Infinity : n._0;
	var out = [];
	var number = 0;
	var string = str;
	var lastIndex = re.lastIndex;
	var prevLastIndex = -1;
	var result;
	while (number++ < n && (result = re.exec(string)))
	{
		if (prevLastIndex === re.lastIndex) break;
		var i = result.length - 1;
		var subs = new Array(i);
		while (i > 0)
		{
			var submatch = result[i];
			subs[--i] = submatch === undefined
				? _elm_lang$core$Maybe$Nothing
				: _elm_lang$core$Maybe$Just(submatch);
		}
		out.push({
			match: result[0],
			submatches: _elm_lang$core$Native_List.fromArray(subs),
			index: result.index,
			number: number
		});
		prevLastIndex = re.lastIndex;
	}
	re.lastIndex = lastIndex;
	return _elm_lang$core$Native_List.fromArray(out);
}

function replace(n, re, replacer, string)
{
	n = n.ctor === 'All' ? Infinity : n._0;
	var count = 0;
	function jsReplacer(match)
	{
		if (count++ >= n)
		{
			return match;
		}
		var i = arguments.length - 3;
		var submatches = new Array(i);
		while (i > 0)
		{
			var submatch = arguments[i];
			submatches[--i] = submatch === undefined
				? _elm_lang$core$Maybe$Nothing
				: _elm_lang$core$Maybe$Just(submatch);
		}
		return replacer({
			match: match,
			submatches: _elm_lang$core$Native_List.fromArray(submatches),
			index: arguments[arguments.length - 2],
			number: count
		});
	}
	return string.replace(re, jsReplacer);
}

function split(n, re, str)
{
	n = n.ctor === 'All' ? Infinity : n._0;
	if (n === Infinity)
	{
		return _elm_lang$core$Native_List.fromArray(str.split(re));
	}
	var string = str;
	var result;
	var out = [];
	var start = re.lastIndex;
	var restoreLastIndex = re.lastIndex;
	while (n--)
	{
		if (!(result = re.exec(string))) break;
		out.push(string.slice(start, result.index));
		start = re.lastIndex;
	}
	out.push(string.slice(start));
	re.lastIndex = restoreLastIndex;
	return _elm_lang$core$Native_List.fromArray(out);
}

return {
	regex: regex,
	caseInsensitive: caseInsensitive,
	escape: escape,

	contains: F2(contains),
	find: F3(find),
	replace: F4(replace),
	split: F3(split)
};

}();

var _elm_lang$core$Regex$split = _elm_lang$core$Native_Regex.split;
var _elm_lang$core$Regex$replace = _elm_lang$core$Native_Regex.replace;
var _elm_lang$core$Regex$find = _elm_lang$core$Native_Regex.find;
var _elm_lang$core$Regex$contains = _elm_lang$core$Native_Regex.contains;
var _elm_lang$core$Regex$caseInsensitive = _elm_lang$core$Native_Regex.caseInsensitive;
var _elm_lang$core$Regex$regex = _elm_lang$core$Native_Regex.regex;
var _elm_lang$core$Regex$escape = _elm_lang$core$Native_Regex.escape;
var _elm_lang$core$Regex$Match = F4(
	function (a, b, c, d) {
		return {match: a, submatches: b, index: c, number: d};
	});
var _elm_lang$core$Regex$Regex = {ctor: 'Regex'};
var _elm_lang$core$Regex$AtMost = function (a) {
	return {ctor: 'AtMost', _0: a};
};
var _elm_lang$core$Regex$All = {ctor: 'All'};

var _rtfeldman$elm_css_util$Css_Helpers$toCssIdentifier = function (identifier) {
	return A4(
		_elm_lang$core$Regex$replace,
		_elm_lang$core$Regex$All,
		_elm_lang$core$Regex$regex('[^a-zA-Z0-9_-]'),
		function (_p0) {
			return '';
		},
		A4(
			_elm_lang$core$Regex$replace,
			_elm_lang$core$Regex$All,
			_elm_lang$core$Regex$regex('\\s+'),
			function (_p1) {
				return '-';
			},
			_elm_lang$core$String$trim(
				_elm_lang$core$Basics$toString(identifier))));
};
var _rtfeldman$elm_css_util$Css_Helpers$identifierToString = F2(
	function (name, identifier) {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			_rtfeldman$elm_css_util$Css_Helpers$toCssIdentifier(name),
			_rtfeldman$elm_css_util$Css_Helpers$toCssIdentifier(identifier));
	});

var _rtfeldman$elm_css$Css_Structure$dropEmptyDeclarations = function (declarations) {
	dropEmptyDeclarations:
	while (true) {
		var _p0 = declarations;
		if (_p0.ctor === '[]') {
			return {ctor: '[]'};
		} else {
			switch (_p0._0.ctor) {
				case 'StyleBlockDeclaration':
					var _p1 = _p0._1;
					if (_elm_lang$core$List$isEmpty(_p0._0._0._2)) {
						var _v1 = _p1;
						declarations = _v1;
						continue dropEmptyDeclarations;
					} else {
						return {
							ctor: '::',
							_0: _p0._0,
							_1: _rtfeldman$elm_css$Css_Structure$dropEmptyDeclarations(_p1)
						};
					}
				case 'MediaRule':
					var _p4 = _p0._1;
					if (A2(
						_elm_lang$core$List$all,
						function (_p2) {
							var _p3 = _p2;
							return _elm_lang$core$List$isEmpty(_p3._2);
						},
						_p0._0._1)) {
						var _v3 = _p4;
						declarations = _v3;
						continue dropEmptyDeclarations;
					} else {
						return {
							ctor: '::',
							_0: _p0._0,
							_1: _rtfeldman$elm_css$Css_Structure$dropEmptyDeclarations(_p4)
						};
					}
				case 'SupportsRule':
					var _p5 = _p0._1;
					if (_elm_lang$core$List$isEmpty(_p0._0._1)) {
						var _v4 = _p5;
						declarations = _v4;
						continue dropEmptyDeclarations;
					} else {
						return {
							ctor: '::',
							_0: _p0._0,
							_1: _rtfeldman$elm_css$Css_Structure$dropEmptyDeclarations(_p5)
						};
					}
				case 'DocumentRule':
					return {
						ctor: '::',
						_0: _p0._0,
						_1: _rtfeldman$elm_css$Css_Structure$dropEmptyDeclarations(_p0._1)
					};
				case 'PageRule':
					var _p6 = _p0._1;
					if (_elm_lang$core$List$isEmpty(_p0._0._1)) {
						var _v5 = _p6;
						declarations = _v5;
						continue dropEmptyDeclarations;
					} else {
						return {
							ctor: '::',
							_0: _p0._0,
							_1: _rtfeldman$elm_css$Css_Structure$dropEmptyDeclarations(_p6)
						};
					}
				case 'FontFace':
					var _p7 = _p0._1;
					if (_elm_lang$core$List$isEmpty(_p0._0._0)) {
						var _v6 = _p7;
						declarations = _v6;
						continue dropEmptyDeclarations;
					} else {
						return {
							ctor: '::',
							_0: _p0._0,
							_1: _rtfeldman$elm_css$Css_Structure$dropEmptyDeclarations(_p7)
						};
					}
				case 'Keyframes':
					var _p8 = _p0._1;
					if (_elm_lang$core$List$isEmpty(_p0._0._1)) {
						var _v7 = _p8;
						declarations = _v7;
						continue dropEmptyDeclarations;
					} else {
						return {
							ctor: '::',
							_0: _p0._0,
							_1: _rtfeldman$elm_css$Css_Structure$dropEmptyDeclarations(_p8)
						};
					}
				case 'Viewport':
					var _p9 = _p0._1;
					if (_elm_lang$core$List$isEmpty(_p0._0._0)) {
						var _v8 = _p9;
						declarations = _v8;
						continue dropEmptyDeclarations;
					} else {
						return {
							ctor: '::',
							_0: _p0._0,
							_1: _rtfeldman$elm_css$Css_Structure$dropEmptyDeclarations(_p9)
						};
					}
				case 'CounterStyle':
					var _p10 = _p0._1;
					if (_elm_lang$core$List$isEmpty(_p0._0._0)) {
						var _v9 = _p10;
						declarations = _v9;
						continue dropEmptyDeclarations;
					} else {
						return {
							ctor: '::',
							_0: _p0._0,
							_1: _rtfeldman$elm_css$Css_Structure$dropEmptyDeclarations(_p10)
						};
					}
				default:
					var _p13 = _p0._1;
					if (A2(
						_elm_lang$core$List$all,
						function (_p11) {
							var _p12 = _p11;
							return _elm_lang$core$List$isEmpty(_p12._1);
						},
						_p0._0._0)) {
						var _v11 = _p13;
						declarations = _v11;
						continue dropEmptyDeclarations;
					} else {
						return {
							ctor: '::',
							_0: _p0._0,
							_1: _rtfeldman$elm_css$Css_Structure$dropEmptyDeclarations(_p13)
						};
					}
			}
		}
	}
};
var _rtfeldman$elm_css$Css_Structure$dropEmpty = function (_p14) {
	var _p15 = _p14;
	return {
		charset: _p15.charset,
		imports: _p15.imports,
		namespaces: _p15.namespaces,
		declarations: _rtfeldman$elm_css$Css_Structure$dropEmptyDeclarations(_p15.declarations)
	};
};
var _rtfeldman$elm_css$Css_Structure$concatMapLast = F2(
	function (update, list) {
		var _p16 = list;
		if (_p16.ctor === '[]') {
			return list;
		} else {
			if (_p16._1.ctor === '[]') {
				return update(_p16._0);
			} else {
				return {
					ctor: '::',
					_0: _p16._0,
					_1: A2(_rtfeldman$elm_css$Css_Structure$concatMapLast, update, _p16._1)
				};
			}
		}
	});
var _rtfeldman$elm_css$Css_Structure$mapLast = F2(
	function (update, list) {
		var _p17 = list;
		if (_p17.ctor === '[]') {
			return list;
		} else {
			if (_p17._1.ctor === '[]') {
				return {
					ctor: '::',
					_0: update(_p17._0),
					_1: {ctor: '[]'}
				};
			} else {
				return {
					ctor: '::',
					_0: _p17._0,
					_1: A2(_rtfeldman$elm_css$Css_Structure$mapLast, update, _p17._1)
				};
			}
		}
	});
var _rtfeldman$elm_css$Css_Structure$Property = F3(
	function (a, b, c) {
		return {important: a, key: b, value: c};
	});
var _rtfeldman$elm_css$Css_Structure$Stylesheet = F4(
	function (a, b, c, d) {
		return {charset: a, imports: b, namespaces: c, declarations: d};
	});
var _rtfeldman$elm_css$Css_Structure$MediaExpression = F2(
	function (a, b) {
		return {feature: a, value: b};
	});
var _rtfeldman$elm_css$Css_Structure$Compatible = {ctor: 'Compatible'};
var _rtfeldman$elm_css$Css_Structure$FontFeatureValues = function (a) {
	return {ctor: 'FontFeatureValues', _0: a};
};
var _rtfeldman$elm_css$Css_Structure$CounterStyle = function (a) {
	return {ctor: 'CounterStyle', _0: a};
};
var _rtfeldman$elm_css$Css_Structure$Viewport = function (a) {
	return {ctor: 'Viewport', _0: a};
};
var _rtfeldman$elm_css$Css_Structure$Keyframes = F2(
	function (a, b) {
		return {ctor: 'Keyframes', _0: a, _1: b};
	});
var _rtfeldman$elm_css$Css_Structure$FontFace = function (a) {
	return {ctor: 'FontFace', _0: a};
};
var _rtfeldman$elm_css$Css_Structure$PageRule = F2(
	function (a, b) {
		return {ctor: 'PageRule', _0: a, _1: b};
	});
var _rtfeldman$elm_css$Css_Structure$DocumentRule = F5(
	function (a, b, c, d, e) {
		return {ctor: 'DocumentRule', _0: a, _1: b, _2: c, _3: d, _4: e};
	});
var _rtfeldman$elm_css$Css_Structure$SupportsRule = F2(
	function (a, b) {
		return {ctor: 'SupportsRule', _0: a, _1: b};
	});
var _rtfeldman$elm_css$Css_Structure$MediaRule = F2(
	function (a, b) {
		return {ctor: 'MediaRule', _0: a, _1: b};
	});
var _rtfeldman$elm_css$Css_Structure$StyleBlockDeclaration = function (a) {
	return {ctor: 'StyleBlockDeclaration', _0: a};
};
var _rtfeldman$elm_css$Css_Structure$concatMapLastStyleBlock = F2(
	function (update, declarations) {
		var _p18 = declarations;
		_v15_12:
		do {
			if (_p18.ctor === '[]') {
				return declarations;
			} else {
				if (_p18._1.ctor === '[]') {
					switch (_p18._0.ctor) {
						case 'StyleBlockDeclaration':
							return A2(
								_elm_lang$core$List$map,
								_rtfeldman$elm_css$Css_Structure$StyleBlockDeclaration,
								update(_p18._0._0));
						case 'MediaRule':
							if (_p18._0._1.ctor === '::') {
								if (_p18._0._1._1.ctor === '[]') {
									return {
										ctor: '::',
										_0: A2(
											_rtfeldman$elm_css$Css_Structure$MediaRule,
											_p18._0._0,
											update(_p18._0._1._0)),
										_1: {ctor: '[]'}
									};
								} else {
									var _p19 = A2(
										_rtfeldman$elm_css$Css_Structure$concatMapLastStyleBlock,
										update,
										{
											ctor: '::',
											_0: A2(_rtfeldman$elm_css$Css_Structure$MediaRule, _p18._0._0, _p18._0._1._1),
											_1: {ctor: '[]'}
										});
									if (((_p19.ctor === '::') && (_p19._0.ctor === 'MediaRule')) && (_p19._1.ctor === '[]')) {
										return {
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Css_Structure$MediaRule,
												_p19._0._0,
												{ctor: '::', _0: _p18._0._1._0, _1: _p19._0._1}),
											_1: {ctor: '[]'}
										};
									} else {
										return _p19;
									}
								}
							} else {
								break _v15_12;
							}
						case 'SupportsRule':
							return {
								ctor: '::',
								_0: A2(
									_rtfeldman$elm_css$Css_Structure$SupportsRule,
									_p18._0._0,
									A2(_rtfeldman$elm_css$Css_Structure$concatMapLastStyleBlock, update, _p18._0._1)),
								_1: {ctor: '[]'}
							};
						case 'DocumentRule':
							return A2(
								_elm_lang$core$List$map,
								A4(_rtfeldman$elm_css$Css_Structure$DocumentRule, _p18._0._0, _p18._0._1, _p18._0._2, _p18._0._3),
								update(_p18._0._4));
						case 'PageRule':
							return declarations;
						case 'FontFace':
							return declarations;
						case 'Keyframes':
							return declarations;
						case 'Viewport':
							return declarations;
						case 'CounterStyle':
							return declarations;
						default:
							return declarations;
					}
				} else {
					break _v15_12;
				}
			}
		} while(false);
		return {
			ctor: '::',
			_0: _p18._0,
			_1: A2(_rtfeldman$elm_css$Css_Structure$concatMapLastStyleBlock, update, _p18._1)
		};
	});
var _rtfeldman$elm_css$Css_Structure$StyleBlock = F3(
	function (a, b, c) {
		return {ctor: 'StyleBlock', _0: a, _1: b, _2: c};
	});
var _rtfeldman$elm_css$Css_Structure$withPropertyAppended = F2(
	function (property, _p20) {
		var _p21 = _p20;
		return A3(
			_rtfeldman$elm_css$Css_Structure$StyleBlock,
			_p21._0,
			_p21._1,
			A2(
				_elm_lang$core$Basics_ops['++'],
				_p21._2,
				{
					ctor: '::',
					_0: property,
					_1: {ctor: '[]'}
				}));
	});
var _rtfeldman$elm_css$Css_Structure$appendProperty = F2(
	function (property, declarations) {
		var _p22 = declarations;
		if (_p22.ctor === '[]') {
			return declarations;
		} else {
			if (_p22._1.ctor === '[]') {
				switch (_p22._0.ctor) {
					case 'StyleBlockDeclaration':
						return {
							ctor: '::',
							_0: _rtfeldman$elm_css$Css_Structure$StyleBlockDeclaration(
								A2(_rtfeldman$elm_css$Css_Structure$withPropertyAppended, property, _p22._0._0)),
							_1: {ctor: '[]'}
						};
					case 'MediaRule':
						return {
							ctor: '::',
							_0: A2(
								_rtfeldman$elm_css$Css_Structure$MediaRule,
								_p22._0._0,
								A2(
									_rtfeldman$elm_css$Css_Structure$mapLast,
									_rtfeldman$elm_css$Css_Structure$withPropertyAppended(property),
									_p22._0._1)),
							_1: {ctor: '[]'}
						};
					default:
						return declarations;
				}
			} else {
				return {
					ctor: '::',
					_0: _p22._0,
					_1: A2(_rtfeldman$elm_css$Css_Structure$appendProperty, property, _p22._1)
				};
			}
		}
	});
var _rtfeldman$elm_css$Css_Structure$appendToLastSelector = F2(
	function (f, styleBlock) {
		var _p23 = styleBlock;
		if (_p23._1.ctor === '[]') {
			var _p24 = _p23._0;
			return {
				ctor: '::',
				_0: A3(
					_rtfeldman$elm_css$Css_Structure$StyleBlock,
					_p24,
					{ctor: '[]'},
					_p23._2),
				_1: {
					ctor: '::',
					_0: A3(
						_rtfeldman$elm_css$Css_Structure$StyleBlock,
						f(_p24),
						{ctor: '[]'},
						{ctor: '[]'}),
					_1: {ctor: '[]'}
				}
			};
		} else {
			var _p26 = _p23._1;
			var _p25 = _p23._0;
			var newFirst = f(_p25);
			var newRest = A2(_elm_lang$core$List$map, f, _p26);
			return {
				ctor: '::',
				_0: A3(_rtfeldman$elm_css$Css_Structure$StyleBlock, _p25, _p26, _p23._2),
				_1: {
					ctor: '::',
					_0: A3(
						_rtfeldman$elm_css$Css_Structure$StyleBlock,
						newFirst,
						newRest,
						{ctor: '[]'}),
					_1: {ctor: '[]'}
				}
			};
		}
	});
var _rtfeldman$elm_css$Css_Structure$Speech = {ctor: 'Speech'};
var _rtfeldman$elm_css$Css_Structure$Screen = {ctor: 'Screen'};
var _rtfeldman$elm_css$Css_Structure$Print = {ctor: 'Print'};
var _rtfeldman$elm_css$Css_Structure$CustomQuery = function (a) {
	return {ctor: 'CustomQuery', _0: a};
};
var _rtfeldman$elm_css$Css_Structure$NotQuery = F2(
	function (a, b) {
		return {ctor: 'NotQuery', _0: a, _1: b};
	});
var _rtfeldman$elm_css$Css_Structure$OnlyQuery = F2(
	function (a, b) {
		return {ctor: 'OnlyQuery', _0: a, _1: b};
	});
var _rtfeldman$elm_css$Css_Structure$AllQuery = function (a) {
	return {ctor: 'AllQuery', _0: a};
};
var _rtfeldman$elm_css$Css_Structure$Selector = F3(
	function (a, b, c) {
		return {ctor: 'Selector', _0: a, _1: b, _2: c};
	});
var _rtfeldman$elm_css$Css_Structure$applyPseudoElement = F2(
	function (pseudo, _p27) {
		var _p28 = _p27;
		return A3(
			_rtfeldman$elm_css$Css_Structure$Selector,
			_p28._0,
			_p28._1,
			_elm_lang$core$Maybe$Just(pseudo));
	});
var _rtfeldman$elm_css$Css_Structure$appendPseudoElementToLastSelector = F2(
	function (pseudo, styleBlock) {
		return A2(
			_rtfeldman$elm_css$Css_Structure$appendToLastSelector,
			_rtfeldman$elm_css$Css_Structure$applyPseudoElement(pseudo),
			styleBlock);
	});
var _rtfeldman$elm_css$Css_Structure$CustomSelector = F2(
	function (a, b) {
		return {ctor: 'CustomSelector', _0: a, _1: b};
	});
var _rtfeldman$elm_css$Css_Structure$UniversalSelectorSequence = function (a) {
	return {ctor: 'UniversalSelectorSequence', _0: a};
};
var _rtfeldman$elm_css$Css_Structure$TypeSelectorSequence = F2(
	function (a, b) {
		return {ctor: 'TypeSelectorSequence', _0: a, _1: b};
	});
var _rtfeldman$elm_css$Css_Structure$appendRepeatable = F2(
	function (selector, sequence) {
		var _p29 = sequence;
		switch (_p29.ctor) {
			case 'TypeSelectorSequence':
				return A2(
					_rtfeldman$elm_css$Css_Structure$TypeSelectorSequence,
					_p29._0,
					A2(
						_elm_lang$core$Basics_ops['++'],
						_p29._1,
						{
							ctor: '::',
							_0: selector,
							_1: {ctor: '[]'}
						}));
			case 'UniversalSelectorSequence':
				return _rtfeldman$elm_css$Css_Structure$UniversalSelectorSequence(
					A2(
						_elm_lang$core$Basics_ops['++'],
						_p29._0,
						{
							ctor: '::',
							_0: selector,
							_1: {ctor: '[]'}
						}));
			default:
				return A2(
					_rtfeldman$elm_css$Css_Structure$CustomSelector,
					_p29._0,
					A2(
						_elm_lang$core$Basics_ops['++'],
						_p29._1,
						{
							ctor: '::',
							_0: selector,
							_1: {ctor: '[]'}
						}));
		}
	});
var _rtfeldman$elm_css$Css_Structure$appendRepeatableWithCombinator = F2(
	function (selector, list) {
		var _p30 = list;
		if (_p30.ctor === '[]') {
			return {ctor: '[]'};
		} else {
			if ((_p30._0.ctor === '_Tuple2') && (_p30._1.ctor === '[]')) {
				return {
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: _p30._0._0,
						_1: A2(_rtfeldman$elm_css$Css_Structure$appendRepeatable, selector, _p30._0._1)
					},
					_1: {ctor: '[]'}
				};
			} else {
				return {
					ctor: '::',
					_0: _p30._0,
					_1: A2(_rtfeldman$elm_css$Css_Structure$appendRepeatableWithCombinator, selector, _p30._1)
				};
			}
		}
	});
var _rtfeldman$elm_css$Css_Structure$appendRepeatableSelector = F2(
	function (repeatableSimpleSelector, selector) {
		var _p31 = selector;
		if (_p31._1.ctor === '[]') {
			return A3(
				_rtfeldman$elm_css$Css_Structure$Selector,
				A2(_rtfeldman$elm_css$Css_Structure$appendRepeatable, repeatableSimpleSelector, _p31._0),
				{ctor: '[]'},
				_p31._2);
		} else {
			return A3(
				_rtfeldman$elm_css$Css_Structure$Selector,
				_p31._0,
				A2(_rtfeldman$elm_css$Css_Structure$appendRepeatableWithCombinator, repeatableSimpleSelector, _p31._1),
				_p31._2);
		}
	});
var _rtfeldman$elm_css$Css_Structure$extendLastSelector = F2(
	function (selector, declarations) {
		var _p32 = declarations;
		_v24_15:
		do {
			if (_p32.ctor === '[]') {
				return declarations;
			} else {
				if (_p32._1.ctor === '[]') {
					switch (_p32._0.ctor) {
						case 'StyleBlockDeclaration':
							if (_p32._0._0._1.ctor === '[]') {
								return {
									ctor: '::',
									_0: _rtfeldman$elm_css$Css_Structure$StyleBlockDeclaration(
										A3(
											_rtfeldman$elm_css$Css_Structure$StyleBlock,
											A2(_rtfeldman$elm_css$Css_Structure$appendRepeatableSelector, selector, _p32._0._0._0),
											{ctor: '[]'},
											_p32._0._0._2)),
									_1: {ctor: '[]'}
								};
							} else {
								var newRest = A2(
									_rtfeldman$elm_css$Css_Structure$mapLast,
									_rtfeldman$elm_css$Css_Structure$appendRepeatableSelector(selector),
									_p32._0._0._1);
								return {
									ctor: '::',
									_0: _rtfeldman$elm_css$Css_Structure$StyleBlockDeclaration(
										A3(_rtfeldman$elm_css$Css_Structure$StyleBlock, _p32._0._0._0, newRest, _p32._0._0._2)),
									_1: {ctor: '[]'}
								};
							}
						case 'MediaRule':
							if (_p32._0._1.ctor === '::') {
								if (_p32._0._1._1.ctor === '[]') {
									if (_p32._0._1._0._1.ctor === '[]') {
										var newStyleBlock = A3(
											_rtfeldman$elm_css$Css_Structure$StyleBlock,
											A2(_rtfeldman$elm_css$Css_Structure$appendRepeatableSelector, selector, _p32._0._1._0._0),
											{ctor: '[]'},
											_p32._0._1._0._2);
										return {
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Css_Structure$MediaRule,
												_p32._0._0,
												{
													ctor: '::',
													_0: newStyleBlock,
													_1: {ctor: '[]'}
												}),
											_1: {ctor: '[]'}
										};
									} else {
										var newRest = A2(
											_rtfeldman$elm_css$Css_Structure$mapLast,
											_rtfeldman$elm_css$Css_Structure$appendRepeatableSelector(selector),
											_p32._0._1._0._1);
										var newStyleBlock = A3(_rtfeldman$elm_css$Css_Structure$StyleBlock, _p32._0._1._0._0, newRest, _p32._0._1._0._2);
										return {
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Css_Structure$MediaRule,
												_p32._0._0,
												{
													ctor: '::',
													_0: newStyleBlock,
													_1: {ctor: '[]'}
												}),
											_1: {ctor: '[]'}
										};
									}
								} else {
									var _p33 = A2(
										_rtfeldman$elm_css$Css_Structure$extendLastSelector,
										selector,
										{
											ctor: '::',
											_0: A2(_rtfeldman$elm_css$Css_Structure$MediaRule, _p32._0._0, _p32._0._1._1),
											_1: {ctor: '[]'}
										});
									if (((_p33.ctor === '::') && (_p33._0.ctor === 'MediaRule')) && (_p33._1.ctor === '[]')) {
										return {
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Css_Structure$MediaRule,
												_p33._0._0,
												{ctor: '::', _0: _p32._0._1._0, _1: _p33._0._1}),
											_1: {ctor: '[]'}
										};
									} else {
										return _p33;
									}
								}
							} else {
								break _v24_15;
							}
						case 'SupportsRule':
							return {
								ctor: '::',
								_0: A2(
									_rtfeldman$elm_css$Css_Structure$SupportsRule,
									_p32._0._0,
									A2(_rtfeldman$elm_css$Css_Structure$extendLastSelector, selector, _p32._0._1)),
								_1: {ctor: '[]'}
							};
						case 'DocumentRule':
							if (_p32._0._4._1.ctor === '[]') {
								var newStyleBlock = A3(
									_rtfeldman$elm_css$Css_Structure$StyleBlock,
									A2(_rtfeldman$elm_css$Css_Structure$appendRepeatableSelector, selector, _p32._0._4._0),
									{ctor: '[]'},
									_p32._0._4._2);
								return {
									ctor: '::',
									_0: A5(_rtfeldman$elm_css$Css_Structure$DocumentRule, _p32._0._0, _p32._0._1, _p32._0._2, _p32._0._3, newStyleBlock),
									_1: {ctor: '[]'}
								};
							} else {
								var newRest = A2(
									_rtfeldman$elm_css$Css_Structure$mapLast,
									_rtfeldman$elm_css$Css_Structure$appendRepeatableSelector(selector),
									_p32._0._4._1);
								var newStyleBlock = A3(_rtfeldman$elm_css$Css_Structure$StyleBlock, _p32._0._4._0, newRest, _p32._0._4._2);
								return {
									ctor: '::',
									_0: A5(_rtfeldman$elm_css$Css_Structure$DocumentRule, _p32._0._0, _p32._0._1, _p32._0._2, _p32._0._3, newStyleBlock),
									_1: {ctor: '[]'}
								};
							}
						case 'PageRule':
							return declarations;
						case 'FontFace':
							return declarations;
						case 'Keyframes':
							return declarations;
						case 'Viewport':
							return declarations;
						case 'CounterStyle':
							return declarations;
						default:
							return declarations;
					}
				} else {
					break _v24_15;
				}
			}
		} while(false);
		return {
			ctor: '::',
			_0: _p32._0,
			_1: A2(_rtfeldman$elm_css$Css_Structure$extendLastSelector, selector, _p32._1)
		};
	});
var _rtfeldman$elm_css$Css_Structure$appendRepeatableToLastSelector = F2(
	function (selector, styleBlock) {
		return A2(
			_rtfeldman$elm_css$Css_Structure$appendToLastSelector,
			_rtfeldman$elm_css$Css_Structure$appendRepeatableSelector(selector),
			styleBlock);
	});
var _rtfeldman$elm_css$Css_Structure$PseudoClassSelector = function (a) {
	return {ctor: 'PseudoClassSelector', _0: a};
};
var _rtfeldman$elm_css$Css_Structure$IdSelector = function (a) {
	return {ctor: 'IdSelector', _0: a};
};
var _rtfeldman$elm_css$Css_Structure$ClassSelector = function (a) {
	return {ctor: 'ClassSelector', _0: a};
};
var _rtfeldman$elm_css$Css_Structure$TypeSelector = function (a) {
	return {ctor: 'TypeSelector', _0: a};
};
var _rtfeldman$elm_css$Css_Structure$PseudoElement = function (a) {
	return {ctor: 'PseudoElement', _0: a};
};
var _rtfeldman$elm_css$Css_Structure$Descendant = {ctor: 'Descendant'};
var _rtfeldman$elm_css$Css_Structure$Child = {ctor: 'Child'};
var _rtfeldman$elm_css$Css_Structure$GeneralSibling = {ctor: 'GeneralSibling'};
var _rtfeldman$elm_css$Css_Structure$AdjacentSibling = {ctor: 'AdjacentSibling'};

var _rtfeldman$elm_css$Css_Preprocess$propertyToPair = function (property) {
	var value = property.important ? A2(_elm_lang$core$Basics_ops['++'], property.value, ' !important') : property.value;
	return {ctor: '_Tuple2', _0: property.key, _1: value};
};
var _rtfeldman$elm_css$Css_Preprocess$toPropertyPairs = function (styles) {
	toPropertyPairs:
	while (true) {
		var _p0 = styles;
		if (_p0.ctor === '[]') {
			return {ctor: '[]'};
		} else {
			switch (_p0._0.ctor) {
				case 'AppendProperty':
					return {
						ctor: '::',
						_0: _rtfeldman$elm_css$Css_Preprocess$propertyToPair(_p0._0._0),
						_1: _rtfeldman$elm_css$Css_Preprocess$toPropertyPairs(_p0._1)
					};
				case 'ApplyStyles':
					return A2(
						_elm_lang$core$Basics_ops['++'],
						_rtfeldman$elm_css$Css_Preprocess$toPropertyPairs(_p0._0._0),
						_rtfeldman$elm_css$Css_Preprocess$toPropertyPairs(_p0._1));
				default:
					var _v1 = _p0._1;
					styles = _v1;
					continue toPropertyPairs;
			}
		}
	}
};
var _rtfeldman$elm_css$Css_Preprocess$unwrapSnippet = function (_p1) {
	var _p2 = _p1;
	return _p2._0;
};
var _rtfeldman$elm_css$Css_Preprocess$toMediaRule = F2(
	function (mediaQueries, declaration) {
		var _p3 = declaration;
		switch (_p3.ctor) {
			case 'StyleBlockDeclaration':
				return A2(
					_rtfeldman$elm_css$Css_Structure$MediaRule,
					mediaQueries,
					{
						ctor: '::',
						_0: _p3._0,
						_1: {ctor: '[]'}
					});
			case 'MediaRule':
				return A2(
					_rtfeldman$elm_css$Css_Structure$MediaRule,
					A2(_elm_lang$core$Basics_ops['++'], mediaQueries, _p3._0),
					_p3._1);
			case 'SupportsRule':
				return A2(
					_rtfeldman$elm_css$Css_Structure$SupportsRule,
					_p3._0,
					A2(
						_elm_lang$core$List$map,
						_rtfeldman$elm_css$Css_Preprocess$toMediaRule(mediaQueries),
						_p3._1));
			case 'DocumentRule':
				return A5(_rtfeldman$elm_css$Css_Structure$DocumentRule, _p3._0, _p3._1, _p3._2, _p3._3, _p3._4);
			case 'PageRule':
				return declaration;
			case 'FontFace':
				return declaration;
			case 'Keyframes':
				return declaration;
			case 'Viewport':
				return declaration;
			case 'CounterStyle':
				return declaration;
			default:
				return declaration;
		}
	});
var _rtfeldman$elm_css$Css_Preprocess$stylesheet = function (snippets) {
	return {
		charset: _elm_lang$core$Maybe$Nothing,
		imports: {ctor: '[]'},
		namespaces: {ctor: '[]'},
		snippets: snippets
	};
};
var _rtfeldman$elm_css$Css_Preprocess$Property = F4(
	function (a, b, c, d) {
		return {key: a, value: b, important: c, warnings: d};
	});
var _rtfeldman$elm_css$Css_Preprocess$Stylesheet = F4(
	function (a, b, c, d) {
		return {charset: a, imports: b, namespaces: c, snippets: d};
	});
var _rtfeldman$elm_css$Css_Preprocess$ApplyStyles = function (a) {
	return {ctor: 'ApplyStyles', _0: a};
};
var _rtfeldman$elm_css$Css_Preprocess$WithMedia = F2(
	function (a, b) {
		return {ctor: 'WithMedia', _0: a, _1: b};
	});
var _rtfeldman$elm_css$Css_Preprocess$WithPseudoElement = F2(
	function (a, b) {
		return {ctor: 'WithPseudoElement', _0: a, _1: b};
	});
var _rtfeldman$elm_css$Css_Preprocess$NestSnippet = F2(
	function (a, b) {
		return {ctor: 'NestSnippet', _0: a, _1: b};
	});
var _rtfeldman$elm_css$Css_Preprocess$ExtendSelector = F2(
	function (a, b) {
		return {ctor: 'ExtendSelector', _0: a, _1: b};
	});
var _rtfeldman$elm_css$Css_Preprocess$AppendProperty = function (a) {
	return {ctor: 'AppendProperty', _0: a};
};
var _rtfeldman$elm_css$Css_Preprocess$mapLastProperty = F2(
	function (update, style) {
		var _p4 = style;
		switch (_p4.ctor) {
			case 'AppendProperty':
				return _rtfeldman$elm_css$Css_Preprocess$AppendProperty(
					update(_p4._0));
			case 'ExtendSelector':
				return A2(
					_rtfeldman$elm_css$Css_Preprocess$ExtendSelector,
					_p4._0,
					A2(_rtfeldman$elm_css$Css_Preprocess$mapAllLastProperty, update, _p4._1));
			case 'NestSnippet':
				return style;
			case 'WithPseudoElement':
				return style;
			case 'WithMedia':
				return style;
			default:
				return _rtfeldman$elm_css$Css_Preprocess$ApplyStyles(
					A2(
						_rtfeldman$elm_css$Css_Structure$mapLast,
						_rtfeldman$elm_css$Css_Preprocess$mapLastProperty(update),
						_p4._0));
		}
	});
var _rtfeldman$elm_css$Css_Preprocess$mapAllLastProperty = F2(
	function (update, styles) {
		var _p5 = styles;
		if (_p5.ctor === '[]') {
			return styles;
		} else {
			if (_p5._1.ctor === '[]') {
				return {
					ctor: '::',
					_0: A2(_rtfeldman$elm_css$Css_Preprocess$mapLastProperty, update, _p5._0),
					_1: {ctor: '[]'}
				};
			} else {
				return {
					ctor: '::',
					_0: _p5._0,
					_1: A2(_rtfeldman$elm_css$Css_Preprocess$mapAllLastProperty, update, _p5._1)
				};
			}
		}
	});
var _rtfeldman$elm_css$Css_Preprocess$Snippet = function (a) {
	return {ctor: 'Snippet', _0: a};
};
var _rtfeldman$elm_css$Css_Preprocess$FontFeatureValues = function (a) {
	return {ctor: 'FontFeatureValues', _0: a};
};
var _rtfeldman$elm_css$Css_Preprocess$CounterStyle = function (a) {
	return {ctor: 'CounterStyle', _0: a};
};
var _rtfeldman$elm_css$Css_Preprocess$Viewport = function (a) {
	return {ctor: 'Viewport', _0: a};
};
var _rtfeldman$elm_css$Css_Preprocess$Keyframes = F2(
	function (a, b) {
		return {ctor: 'Keyframes', _0: a, _1: b};
	});
var _rtfeldman$elm_css$Css_Preprocess$FontFace = function (a) {
	return {ctor: 'FontFace', _0: a};
};
var _rtfeldman$elm_css$Css_Preprocess$PageRule = F2(
	function (a, b) {
		return {ctor: 'PageRule', _0: a, _1: b};
	});
var _rtfeldman$elm_css$Css_Preprocess$DocumentRule = F5(
	function (a, b, c, d, e) {
		return {ctor: 'DocumentRule', _0: a, _1: b, _2: c, _3: d, _4: e};
	});
var _rtfeldman$elm_css$Css_Preprocess$SupportsRule = F2(
	function (a, b) {
		return {ctor: 'SupportsRule', _0: a, _1: b};
	});
var _rtfeldman$elm_css$Css_Preprocess$MediaRule = F2(
	function (a, b) {
		return {ctor: 'MediaRule', _0: a, _1: b};
	});
var _rtfeldman$elm_css$Css_Preprocess$StyleBlockDeclaration = function (a) {
	return {ctor: 'StyleBlockDeclaration', _0: a};
};
var _rtfeldman$elm_css$Css_Preprocess$StyleBlock = F3(
	function (a, b, c) {
		return {ctor: 'StyleBlock', _0: a, _1: b, _2: c};
	});

var _rtfeldman$hex$Hex$toString = function (num) {
	return _elm_lang$core$String$fromList(
		(_elm_lang$core$Native_Utils.cmp(num, 0) < 0) ? {
			ctor: '::',
			_0: _elm_lang$core$Native_Utils.chr('-'),
			_1: A2(
				_rtfeldman$hex$Hex$unsafePositiveToDigits,
				{ctor: '[]'},
				_elm_lang$core$Basics$negate(num))
		} : A2(
			_rtfeldman$hex$Hex$unsafePositiveToDigits,
			{ctor: '[]'},
			num));
};
var _rtfeldman$hex$Hex$unsafePositiveToDigits = F2(
	function (digits, num) {
		unsafePositiveToDigits:
		while (true) {
			if (_elm_lang$core$Native_Utils.cmp(num, 16) < 0) {
				return {
					ctor: '::',
					_0: _rtfeldman$hex$Hex$unsafeToDigit(num),
					_1: digits
				};
			} else {
				var _v0 = {
					ctor: '::',
					_0: _rtfeldman$hex$Hex$unsafeToDigit(
						A2(_elm_lang$core$Basics_ops['%'], num, 16)),
					_1: digits
				},
					_v1 = (num / 16) | 0;
				digits = _v0;
				num = _v1;
				continue unsafePositiveToDigits;
			}
		}
	});
var _rtfeldman$hex$Hex$unsafeToDigit = function (num) {
	var _p0 = num;
	switch (_p0) {
		case 0:
			return _elm_lang$core$Native_Utils.chr('0');
		case 1:
			return _elm_lang$core$Native_Utils.chr('1');
		case 2:
			return _elm_lang$core$Native_Utils.chr('2');
		case 3:
			return _elm_lang$core$Native_Utils.chr('3');
		case 4:
			return _elm_lang$core$Native_Utils.chr('4');
		case 5:
			return _elm_lang$core$Native_Utils.chr('5');
		case 6:
			return _elm_lang$core$Native_Utils.chr('6');
		case 7:
			return _elm_lang$core$Native_Utils.chr('7');
		case 8:
			return _elm_lang$core$Native_Utils.chr('8');
		case 9:
			return _elm_lang$core$Native_Utils.chr('9');
		case 10:
			return _elm_lang$core$Native_Utils.chr('a');
		case 11:
			return _elm_lang$core$Native_Utils.chr('b');
		case 12:
			return _elm_lang$core$Native_Utils.chr('c');
		case 13:
			return _elm_lang$core$Native_Utils.chr('d');
		case 14:
			return _elm_lang$core$Native_Utils.chr('e');
		case 15:
			return _elm_lang$core$Native_Utils.chr('f');
		default:
			return _elm_lang$core$Native_Utils.crashCase(
				'Hex',
				{
					start: {line: 138, column: 5},
					end: {line: 188, column: 84}
				},
				_p0)(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'Tried to convert ',
					A2(
						_elm_lang$core$Basics_ops['++'],
						_rtfeldman$hex$Hex$toString(num),
						' to hexadecimal.')));
	}
};
var _rtfeldman$hex$Hex$fromStringHelp = F3(
	function (position, chars, accumulated) {
		var _p2 = chars;
		if (_p2.ctor === '[]') {
			return _elm_lang$core$Result$Ok(accumulated);
		} else {
			var recurse = function (additional) {
				return A3(
					_rtfeldman$hex$Hex$fromStringHelp,
					position - 1,
					_p2._1,
					accumulated + (additional * Math.pow(16, position)));
			};
			var _p3 = _p2._0;
			switch (_p3.valueOf()) {
				case '0':
					return recurse(0);
				case '1':
					return recurse(1);
				case '2':
					return recurse(2);
				case '3':
					return recurse(3);
				case '4':
					return recurse(4);
				case '5':
					return recurse(5);
				case '6':
					return recurse(6);
				case '7':
					return recurse(7);
				case '8':
					return recurse(8);
				case '9':
					return recurse(9);
				case 'a':
					return recurse(10);
				case 'b':
					return recurse(11);
				case 'c':
					return recurse(12);
				case 'd':
					return recurse(13);
				case 'e':
					return recurse(14);
				case 'f':
					return recurse(15);
				default:
					return _elm_lang$core$Result$Err(
						A2(
							_elm_lang$core$Basics_ops['++'],
							_elm_lang$core$Basics$toString(_p3),
							' is not a valid hexadecimal character.'));
			}
		}
	});
var _rtfeldman$hex$Hex$fromString = function (str) {
	if (_elm_lang$core$String$isEmpty(str)) {
		return _elm_lang$core$Result$Err('Empty strings are not valid hexadecimal strings.');
	} else {
		var formatError = function (err) {
			return A2(
				_elm_lang$core$String$join,
				' ',
				{
					ctor: '::',
					_0: _elm_lang$core$Basics$toString(str),
					_1: {
						ctor: '::',
						_0: 'is not a valid hexadecimal string because',
						_1: {
							ctor: '::',
							_0: err,
							_1: {ctor: '[]'}
						}
					}
				});
		};
		var result = function () {
			if (A2(_elm_lang$core$String$startsWith, '-', str)) {
				var list = A2(
					_elm_lang$core$Maybe$withDefault,
					{ctor: '[]'},
					_elm_lang$core$List$tail(
						_elm_lang$core$String$toList(str)));
				return A2(
					_elm_lang$core$Result$map,
					_elm_lang$core$Basics$negate,
					A3(
						_rtfeldman$hex$Hex$fromStringHelp,
						_elm_lang$core$List$length(list) - 1,
						list,
						0));
			} else {
				return A3(
					_rtfeldman$hex$Hex$fromStringHelp,
					_elm_lang$core$String$length(str) - 1,
					_elm_lang$core$String$toList(str),
					0);
			}
		}();
		return A2(_elm_lang$core$Result$mapError, formatError, result);
	}
};

var _rtfeldman$elm_css$Css$stroke = {value: 'stroke', pointerEvents: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$painted = {value: 'painted', pointerEvents: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$visibleStroke = {value: 'visibleStroke', pointerEvents: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$visibleFill = {value: 'visibleFill', pointerEvents: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$visiblePainted = {value: 'visiblePainted', pointerEvents: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$manipulation = {value: 'manipulation', touchAction: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$pinchZoom = {value: 'pinch-zoom', touchAction: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$panDown = {value: 'pan-down', touchAction: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$panUp = {value: 'pan-up', touchAction: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$panY = {value: 'pan-y', touchAction: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$panRight = {value: 'pan-right', touchAction: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$panLeft = {value: 'pan-left', touchAction: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$panX = {value: 'pan-x', touchAction: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$stringsToValue = function (list) {
	return _elm_lang$core$List$isEmpty(list) ? {value: 'none'} : {
		value: A2(
			_elm_lang$core$String$join,
			', ',
			A2(
				_elm_lang$core$List$map,
				function (s) {
					return s;
				},
				list))
	};
};
var _rtfeldman$elm_css$Css$valuesOrNone = function (list) {
	return _elm_lang$core$List$isEmpty(list) ? {value: 'none'} : {
		value: A2(
			_elm_lang$core$String$join,
			' ',
			A2(
				_elm_lang$core$List$map,
				function (_) {
					return _.value;
				},
				list))
	};
};
var _rtfeldman$elm_css$Css$stringToInt = function (str) {
	return A2(
		_elm_lang$core$Result$withDefault,
		0,
		_elm_lang$core$String$toInt(str));
};
var _rtfeldman$elm_css$Css$numberToString = function (num) {
	return _elm_lang$core$Basics$toString(num + 0);
};
var _rtfeldman$elm_css$Css$numericalPercentageToString = function (value) {
	return A3(
		_elm_lang$core$Basics$flip,
		F2(
			function (x, y) {
				return A2(_elm_lang$core$Basics_ops['++'], x, y);
			}),
		'%',
		_rtfeldman$elm_css$Css$numberToString(
			A2(
				F2(
					function (x, y) {
						return x * y;
					}),
				100,
				value)));
};
var _rtfeldman$elm_css$Css$pseudoElement = function (element) {
	return _rtfeldman$elm_css$Css_Preprocess$WithPseudoElement(
		_rtfeldman$elm_css$Css_Structure$PseudoElement(element));
};
var _rtfeldman$elm_css$Css$after = _rtfeldman$elm_css$Css$pseudoElement('after');
var _rtfeldman$elm_css$Css$before = _rtfeldman$elm_css$Css$pseudoElement('before');
var _rtfeldman$elm_css$Css$firstLetter = _rtfeldman$elm_css$Css$pseudoElement('first-letter');
var _rtfeldman$elm_css$Css$firstLine = _rtfeldman$elm_css$Css$pseudoElement('first-line');
var _rtfeldman$elm_css$Css$selection = _rtfeldman$elm_css$Css$pseudoElement('selection');
var _rtfeldman$elm_css$Css$pseudoClass = function ($class) {
	return _rtfeldman$elm_css$Css_Preprocess$ExtendSelector(
		_rtfeldman$elm_css$Css_Structure$PseudoClassSelector($class));
};
var _rtfeldman$elm_css$Css$active = _rtfeldman$elm_css$Css$pseudoClass('active');
var _rtfeldman$elm_css$Css$any = function (str) {
	return _rtfeldman$elm_css$Css$pseudoClass(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'any(',
			A2(_elm_lang$core$Basics_ops['++'], str, ')')));
};
var _rtfeldman$elm_css$Css$checked = _rtfeldman$elm_css$Css$pseudoClass('checked');
var _rtfeldman$elm_css$Css$disabled = _rtfeldman$elm_css$Css$pseudoClass('disabled');
var _rtfeldman$elm_css$Css$empty = _rtfeldman$elm_css$Css$pseudoClass('empty');
var _rtfeldman$elm_css$Css$enabled = _rtfeldman$elm_css$Css$pseudoClass('enabled');
var _rtfeldman$elm_css$Css$first = _rtfeldman$elm_css$Css$pseudoClass('first');
var _rtfeldman$elm_css$Css$firstChild = _rtfeldman$elm_css$Css$pseudoClass('first-child');
var _rtfeldman$elm_css$Css$firstOfType = _rtfeldman$elm_css$Css$pseudoClass('first-of-type');
var _rtfeldman$elm_css$Css$fullscreen = _rtfeldman$elm_css$Css$pseudoClass('fullscreen');
var _rtfeldman$elm_css$Css$focus = _rtfeldman$elm_css$Css$pseudoClass('focus');
var _rtfeldman$elm_css$Css$hover = _rtfeldman$elm_css$Css$pseudoClass('hover');
var _rtfeldman$elm_css$Css$visited = _rtfeldman$elm_css$Css$pseudoClass('visited');
var _rtfeldman$elm_css$Css$indeterminate = _rtfeldman$elm_css$Css$pseudoClass('indeterminate');
var _rtfeldman$elm_css$Css$invalid = _rtfeldman$elm_css$Css$pseudoClass('invalid');
var _rtfeldman$elm_css$Css$lang = function (str) {
	return _rtfeldman$elm_css$Css$pseudoClass(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'lang(',
			A2(_elm_lang$core$Basics_ops['++'], str, ')')));
};
var _rtfeldman$elm_css$Css$lastChild = _rtfeldman$elm_css$Css$pseudoClass('last-child');
var _rtfeldman$elm_css$Css$lastOfType = _rtfeldman$elm_css$Css$pseudoClass('last-of-type');
var _rtfeldman$elm_css$Css$link = _rtfeldman$elm_css$Css$pseudoClass('link');
var _rtfeldman$elm_css$Css$nthChild = function (str) {
	return _rtfeldman$elm_css$Css$pseudoClass(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'nth-child(',
			A2(_elm_lang$core$Basics_ops['++'], str, ')')));
};
var _rtfeldman$elm_css$Css$nthLastChild = function (str) {
	return _rtfeldman$elm_css$Css$pseudoClass(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'nth-last-child(',
			A2(_elm_lang$core$Basics_ops['++'], str, ')')));
};
var _rtfeldman$elm_css$Css$nthLastOfType = function (str) {
	return _rtfeldman$elm_css$Css$pseudoClass(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'nth-last-of-type(',
			A2(_elm_lang$core$Basics_ops['++'], str, ')')));
};
var _rtfeldman$elm_css$Css$nthOfType = function (str) {
	return _rtfeldman$elm_css$Css$pseudoClass(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'nth-of-type(',
			A2(_elm_lang$core$Basics_ops['++'], str, ')')));
};
var _rtfeldman$elm_css$Css$onlyChild = _rtfeldman$elm_css$Css$pseudoClass('only-child');
var _rtfeldman$elm_css$Css$onlyOfType = _rtfeldman$elm_css$Css$pseudoClass('only-of-type');
var _rtfeldman$elm_css$Css$optional = _rtfeldman$elm_css$Css$pseudoClass('optional');
var _rtfeldman$elm_css$Css$outOfRange = _rtfeldman$elm_css$Css$pseudoClass('out-of-range');
var _rtfeldman$elm_css$Css$readWrite = _rtfeldman$elm_css$Css$pseudoClass('read-write');
var _rtfeldman$elm_css$Css$required = _rtfeldman$elm_css$Css$pseudoClass('required');
var _rtfeldman$elm_css$Css$root = _rtfeldman$elm_css$Css$pseudoClass('root');
var _rtfeldman$elm_css$Css$scope = _rtfeldman$elm_css$Css$pseudoClass('scope');
var _rtfeldman$elm_css$Css$target = _rtfeldman$elm_css$Css$pseudoClass('target');
var _rtfeldman$elm_css$Css$valid = _rtfeldman$elm_css$Css$pseudoClass('valid');
var _rtfeldman$elm_css$Css$directionalityToString = function (directionality) {
	var _p0 = directionality;
	if (_p0.ctor === 'Ltr') {
		return 'ltr';
	} else {
		return 'rtl';
	}
};
var _rtfeldman$elm_css$Css$dir = function (directionality) {
	return _rtfeldman$elm_css$Css$pseudoClass(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'dir(',
			A2(
				_elm_lang$core$Basics_ops['++'],
				_rtfeldman$elm_css$Css$directionalityToString(directionality),
				')')));
};
var _rtfeldman$elm_css$Css$propertyWithWarnings = F3(
	function (warnings, key, value) {
		return _rtfeldman$elm_css$Css_Preprocess$AppendProperty(
			{key: key, value: value, important: false, warnings: warnings});
	});
var _rtfeldman$elm_css$Css$property = _rtfeldman$elm_css$Css$propertyWithWarnings(
	{ctor: '[]'});
var _rtfeldman$elm_css$Css$pointerEventsFill = A2(_rtfeldman$elm_css$Css$property, 'pointer-events', 'fill');
var _rtfeldman$elm_css$Css$pointerEventsAll = A2(_rtfeldman$elm_css$Css$property, 'pointer-events', 'all');
var _rtfeldman$elm_css$Css$batch = _rtfeldman$elm_css$Css_Preprocess$ApplyStyles;
var _rtfeldman$elm_css$Css$animationNames = function (identifiers) {
	var value = A2(
		_elm_lang$core$String$join,
		', ',
		A2(
			_elm_lang$core$List$map,
			_rtfeldman$elm_css_util$Css_Helpers$identifierToString(''),
			identifiers));
	return A2(_rtfeldman$elm_css$Css$property, 'animation-name', value);
};
var _rtfeldman$elm_css$Css$animationName = function (identifier) {
	return _rtfeldman$elm_css$Css$animationNames(
		{
			ctor: '::',
			_0: identifier,
			_1: {ctor: '[]'}
		});
};
var _rtfeldman$elm_css$Css$preLine = {value: 'pre-line', whiteSpace: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$preWrap = {value: 'pre-wrap', whiteSpace: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$pre = {value: 'pre', whiteSpace: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$grabbing = {value: 'grabbing', cursor: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$grab = {value: 'grab', cursor: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$zoomOut = {value: 'zoom-out', cursor: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$zoomIn = {value: 'zoom-in', cursor: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$allScroll = {value: 'all-scroll', cursor: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$rowResize = {value: 'row-resize', cursor: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$colResize = {value: 'col-resize', cursor: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$nwseResize = {value: 'nwse-resize', cursor: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$neswResize = {value: 'nesw-resize', cursor: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$nsResize = {value: 'ns-resize', cursor: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$ewResize = {value: 'ew-resize', cursor: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$wResize = {value: 'w-resize', cursor: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$swResize = {value: 'sw-resize', cursor: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$seResize = {value: 'se-resize', cursor: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$sResize = {value: 's-resize', cursor: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$nwResize = {value: 'nw-resize', cursor: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$neResize = {value: 'ne-resize', cursor: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$nResize = {value: 'n-resize', cursor: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$eResize = {value: 'e-resize', cursor: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$notAllowed = {value: 'not-allowed', cursor: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$noDrop = {value: 'no-drop', cursor: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$move = {value: 'move', cursor: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$copy = {value: 'copy', cursor: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$cursorAlias = {value: 'alias', cursor: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$verticalText = {value: 'vertical-text', cursor: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$text_ = {value: 'text', cursor: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$cell = {value: 'cell', cursor: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$wait = {value: 'wait', cursor: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$progress = {value: 'progress', cursor: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$pointer = {value: 'pointer', cursor: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$help = {value: 'help', cursor: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$contextMenu = {value: 'context-menu', cursor: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$crosshair = {value: 'crosshair', cursor: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$default = {value: 'default', cursor: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$fontWeight = function (_p1) {
	var _p2 = _p1;
	var _p3 = _p2.value;
	var validWeight = function (weight) {
		return (!_elm_lang$core$Native_Utils.eq(
			_p3,
			_elm_lang$core$Basics$toString(weight))) ? true : A2(
			_elm_lang$core$List$member,
			weight,
			A2(
				_elm_lang$core$List$map,
				F2(
					function (x, y) {
						return x * y;
					})(100),
				A2(_elm_lang$core$List$range, 1, 9)));
	};
	var warnings = validWeight(
		_rtfeldman$elm_css$Css$stringToInt(_p3)) ? {ctor: '[]'} : {
		ctor: '::',
		_0: A2(
			_elm_lang$core$Basics_ops['++'],
			'fontWeight ',
			A2(_elm_lang$core$Basics_ops['++'], _p3, ' is invalid. Valid weights are: 100, 200, 300, 400, 500, 600, 700, 800, 900. Please see https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Values')),
		_1: {ctor: '[]'}
	};
	return A3(_rtfeldman$elm_css$Css$propertyWithWarnings, warnings, 'font-weight', _p3);
};
var _rtfeldman$elm_css$Css$fontFeatureSettingsList = function (featureTagValues) {
	var warnings = _elm_lang$core$List$concat(
		A2(
			_elm_lang$core$List$map,
			function (_) {
				return _.warnings;
			},
			featureTagValues));
	var value = A2(
		_elm_lang$core$String$join,
		', ',
		A2(
			_elm_lang$core$List$map,
			function (_) {
				return _.value;
			},
			featureTagValues));
	return A3(_rtfeldman$elm_css$Css$propertyWithWarnings, warnings, 'font-feature-settings', value);
};
var _rtfeldman$elm_css$Css$fontFeatureSettings = function (_p4) {
	var _p5 = _p4;
	return A3(_rtfeldman$elm_css$Css$propertyWithWarnings, _p5.warnings, 'font-feature-settings', _p5.value);
};
var _rtfeldman$elm_css$Css$qt = function (str) {
	return _elm_lang$core$Basics$toString(str);
};
var _rtfeldman$elm_css$Css$fontFace = function (value) {
	return A2(_elm_lang$core$Basics_ops['++'], 'font-face ', value);
};
var _rtfeldman$elm_css$Css$src_ = function (value) {
	return _elm_lang$core$Basics$toString(value.value);
};
var _rtfeldman$elm_css$Css$color = function (c) {
	return A3(_rtfeldman$elm_css$Css$propertyWithWarnings, c.warnings, 'color', c.value);
};
var _rtfeldman$elm_css$Css$backgroundColor = function (c) {
	return A3(_rtfeldman$elm_css$Css$propertyWithWarnings, c.warnings, 'background-color', c.value);
};
var _rtfeldman$elm_css$Css$outlineColor = function (c) {
	return A3(_rtfeldman$elm_css$Css$propertyWithWarnings, c.warnings, 'outline-color', c.value);
};
var _rtfeldman$elm_css$Css$borderColor4 = F4(
	function (c1, c2, c3, c4) {
		var value = A2(
			_elm_lang$core$String$join,
			' ',
			{
				ctor: '::',
				_0: c1.value,
				_1: {
					ctor: '::',
					_0: c2.value,
					_1: {
						ctor: '::',
						_0: c3.value,
						_1: {
							ctor: '::',
							_0: c4.value,
							_1: {ctor: '[]'}
						}
					}
				}
			});
		var warnings = A2(
			_elm_lang$core$Basics_ops['++'],
			c1.warnings,
			A2(
				_elm_lang$core$Basics_ops['++'],
				c2.warnings,
				A2(_elm_lang$core$Basics_ops['++'], c3.warnings, c4.warnings)));
		return A3(_rtfeldman$elm_css$Css$propertyWithWarnings, warnings, 'border-color', value);
	});
var _rtfeldman$elm_css$Css$borderColor3 = F3(
	function (c1, c2, c3) {
		var value = A2(
			_elm_lang$core$String$join,
			' ',
			{
				ctor: '::',
				_0: c1.value,
				_1: {
					ctor: '::',
					_0: c2.value,
					_1: {
						ctor: '::',
						_0: c3.value,
						_1: {ctor: '[]'}
					}
				}
			});
		var warnings = A2(
			_elm_lang$core$Basics_ops['++'],
			c1.warnings,
			A2(_elm_lang$core$Basics_ops['++'], c2.warnings, c3.warnings));
		return A3(_rtfeldman$elm_css$Css$propertyWithWarnings, warnings, 'border-color', value);
	});
var _rtfeldman$elm_css$Css$borderColor2 = F2(
	function (c1, c2) {
		var value = A2(
			_elm_lang$core$String$join,
			' ',
			{
				ctor: '::',
				_0: c1.value,
				_1: {
					ctor: '::',
					_0: c2.value,
					_1: {ctor: '[]'}
				}
			});
		var warnings = A2(_elm_lang$core$Basics_ops['++'], c1.warnings, c2.warnings);
		return A3(_rtfeldman$elm_css$Css$propertyWithWarnings, warnings, 'border-color', value);
	});
var _rtfeldman$elm_css$Css$borderColor = function (c) {
	return A3(_rtfeldman$elm_css$Css$propertyWithWarnings, c.warnings, 'border-color', c.value);
};
var _rtfeldman$elm_css$Css$borderBlockEndColor = function (c) {
	return A3(_rtfeldman$elm_css$Css$propertyWithWarnings, c.warnings, 'border-block-end-color', c.value);
};
var _rtfeldman$elm_css$Css$borderTopColor = function (c) {
	return A3(_rtfeldman$elm_css$Css$propertyWithWarnings, c.warnings, 'border-top-color', c.value);
};
var _rtfeldman$elm_css$Css$borderRightColor = function (c) {
	return A3(_rtfeldman$elm_css$Css$propertyWithWarnings, c.warnings, 'border-right-color', c.value);
};
var _rtfeldman$elm_css$Css$borderLeftColor = function (c) {
	return A3(_rtfeldman$elm_css$Css$propertyWithWarnings, c.warnings, 'border-left-color', c.value);
};
var _rtfeldman$elm_css$Css$borderInlineEndColor = function (c) {
	return A3(_rtfeldman$elm_css$Css$propertyWithWarnings, c.warnings, 'border-inline-end-color', c.value);
};
var _rtfeldman$elm_css$Css$borderInlineStartColor = function (c) {
	return A3(_rtfeldman$elm_css$Css$propertyWithWarnings, c.warnings, 'border-inline-start-color', c.value);
};
var _rtfeldman$elm_css$Css$borderBottomColor = function (c) {
	return A3(_rtfeldman$elm_css$Css$propertyWithWarnings, c.warnings, 'border-bottom-color', c.value);
};
var _rtfeldman$elm_css$Css$borderBlockStartColor = function (c) {
	return A3(_rtfeldman$elm_css$Css$propertyWithWarnings, c.warnings, 'border-block-start-color', c.value);
};
var _rtfeldman$elm_css$Css$featureTag2 = F2(
	function (tag, value) {
		var potentialWarnings = {
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: !_elm_lang$core$Native_Utils.eq(
					_elm_lang$core$String$length(tag),
					4),
				_1: A2(
					_elm_lang$core$Basics_ops['++'],
					'Feature tags must be exactly 4 characters long. ',
					A2(_elm_lang$core$Basics_ops['++'], tag, ' is invalid.'))
			},
			_1: {
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.cmp(value, 0) < 0,
					_1: A2(
						_elm_lang$core$Basics_ops['++'],
						'Feature values cannot be negative. ',
						A2(
							_elm_lang$core$Basics_ops['++'],
							_elm_lang$core$Basics$toString(value),
							' is invalid.'))
				},
				_1: {ctor: '[]'}
			}
		};
		var warnings = A2(
			_elm_lang$core$List$map,
			_elm_lang$core$Tuple$second,
			A2(_elm_lang$core$List$filter, _elm_lang$core$Tuple$first, potentialWarnings));
		return {
			value: A2(
				_elm_lang$core$Basics_ops['++'],
				_elm_lang$core$Basics$toString(tag),
				A2(
					_elm_lang$core$Basics_ops['++'],
					' ',
					_elm_lang$core$Basics$toString(value))),
			featureTagValue: _rtfeldman$elm_css$Css_Structure$Compatible,
			warnings: warnings
		};
	});
var _rtfeldman$elm_css$Css$featureTag = function (tag) {
	return A2(_rtfeldman$elm_css$Css$featureTag2, tag, 1);
};
var _rtfeldman$elm_css$Css$featureOff = 0;
var _rtfeldman$elm_css$Css$featureOn = 1;
var _rtfeldman$elm_css$Css$slashedZero = {value: 'slashed-zero', fontVariant: _rtfeldman$elm_css$Css_Structure$Compatible, fontVariantNumeric: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$ordinal = {value: 'ordinal', fontVariant: _rtfeldman$elm_css$Css_Structure$Compatible, fontVariantNumeric: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$stackedFractions = {value: 'stacked-fractions', fontVariant: _rtfeldman$elm_css$Css_Structure$Compatible, fontVariantNumeric: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$diagonalFractions = {value: 'diagonal-fractions', fontVariant: _rtfeldman$elm_css$Css_Structure$Compatible, fontVariantNumeric: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$tabularNums = {value: 'tabular-nums', fontVariant: _rtfeldman$elm_css$Css_Structure$Compatible, fontVariantNumeric: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$proportionalNums = {value: 'proportional-nums', fontVariant: _rtfeldman$elm_css$Css_Structure$Compatible, fontVariantNumeric: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$oldstyleNums = {value: 'oldstyle-nums', fontVariant: _rtfeldman$elm_css$Css_Structure$Compatible, fontVariantNumeric: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$liningNums = {value: 'lining-nums', fontVariant: _rtfeldman$elm_css$Css_Structure$Compatible, fontVariantNumeric: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$noContextual = {value: 'no-contextual', fontVariant: _rtfeldman$elm_css$Css_Structure$Compatible, fontVariantLigatures: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$contextual = {value: 'context', fontVariant: _rtfeldman$elm_css$Css_Structure$Compatible, fontVariantLigatures: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$noHistoricalLigatures = {value: 'no-historical-ligatures', fontVariant: _rtfeldman$elm_css$Css_Structure$Compatible, fontVariantLigatures: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$historicalLigatures = {value: 'historical-ligatures', fontVariant: _rtfeldman$elm_css$Css_Structure$Compatible, fontVariantLigatures: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$noDiscretionaryLigatures = {value: 'no-discretionary-ligatures', fontVariant: _rtfeldman$elm_css$Css_Structure$Compatible, fontVariantLigatures: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$discretionaryLigatures = {value: 'discretionary-ligatures', fontVariant: _rtfeldman$elm_css$Css_Structure$Compatible, fontVariantLigatures: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$noCommonLigatures = {value: 'no-common-ligatures', fontVariant: _rtfeldman$elm_css$Css_Structure$Compatible, fontVariantLigatures: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$commonLigatures = {value: 'common-ligatures', fontVariant: _rtfeldman$elm_css$Css_Structure$Compatible, fontVariantLigatures: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$titlingCaps = {value: 'titling-caps', fontVariant: _rtfeldman$elm_css$Css_Structure$Compatible, fontVariantCaps: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$unicase = {value: 'unicase', fontVariant: _rtfeldman$elm_css$Css_Structure$Compatible, fontVariantCaps: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$allPetiteCaps = {value: 'all-petite-caps', fontVariant: _rtfeldman$elm_css$Css_Structure$Compatible, fontVariantCaps: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$petiteCaps = {value: 'petite-caps', fontVariant: _rtfeldman$elm_css$Css_Structure$Compatible, fontVariantCaps: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$allSmallCaps = {value: 'all-small-caps', fontVariant: _rtfeldman$elm_css$Css_Structure$Compatible, fontVariantCaps: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$smallCaps = {value: 'small-caps', fontVariant: _rtfeldman$elm_css$Css_Structure$Compatible, fontVariantCaps: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$bolder = {value: 'bolder', fontWeight: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$lighter = {value: 'lighter', fontWeight: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$bold = {value: 'bold', fontWeight: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$oblique = {value: 'oblique', fontStyle: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$italic = {value: 'italic', fontStyle: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$normal = {
	value: 'normal',
	warnings: {ctor: '[]'},
	fontStyle: _rtfeldman$elm_css$Css_Structure$Compatible,
	fontWeight: _rtfeldman$elm_css$Css_Structure$Compatible,
	featureTagValue: _rtfeldman$elm_css$Css_Structure$Compatible,
	overflowWrap: _rtfeldman$elm_css$Css_Structure$Compatible,
	whiteSpace: _rtfeldman$elm_css$Css_Structure$Compatible
};
var _rtfeldman$elm_css$Css$larger = {value: 'larger', fontSize: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$smaller = {value: 'smaller', fontSize: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$xxLarge = {value: 'xx-large', fontSize: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$xLarge = {value: 'x-large', fontSize: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$large = {value: 'large', fontSize: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$medium = {value: 'medium', fontSize: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$small = {value: 'small', fontSize: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$xSmall = {value: 'x-small', fontSize: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$xxSmall = {value: 'xx-small', fontSize: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$fantasy = {value: 'fantasy', fontFamily: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$cursive = {value: 'cursive', fontFamily: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$monospace = {value: 'monospace', fontFamily: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$sansSerif = {value: 'sans-serif', fontFamily: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$serif = {value: 'serif', fontFamily: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$absolute = {value: 'absolute', position: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$relative = {value: 'relative', position: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$sticky = {value: 'sticky', position: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$fixed = {value: 'fixed', position: _rtfeldman$elm_css$Css_Structure$Compatible, backgroundAttachment: _rtfeldman$elm_css$Css_Structure$Compatible, tableLayout: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$static = {value: 'static', position: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$fillAvailable = {value: 'fill-available', minMaxDimension: _rtfeldman$elm_css$Css_Structure$Compatible, lengthOrMinMaxDimension: _rtfeldman$elm_css$Css_Structure$Compatible, lengthOrNoneOrMinMaxDimension: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$fitContent = _elm_lang$core$Native_Utils.update(
	_rtfeldman$elm_css$Css$fillAvailable,
	{value: 'fit-content'});
var _rtfeldman$elm_css$Css$minContent = _elm_lang$core$Native_Utils.update(
	_rtfeldman$elm_css$Css$fillAvailable,
	{value: 'min-content'});
var _rtfeldman$elm_css$Css$maxContent = _elm_lang$core$Native_Utils.update(
	_rtfeldman$elm_css$Css$fillAvailable,
	{value: 'max-content'});
var _rtfeldman$elm_css$Css$displayFlex = A2(_rtfeldman$elm_css$Css$property, 'display', 'flex');
var _rtfeldman$elm_css$Css$textEmphasisColor = function (c) {
	return A3(_rtfeldman$elm_css$Css$propertyWithWarnings, c.warnings, 'text-emphasis-color', c.value);
};
var _rtfeldman$elm_css$Css$textDecorationColor = function (c) {
	return A3(_rtfeldman$elm_css$Css$propertyWithWarnings, c.warnings, 'text-decoration-color', c.value);
};
var _rtfeldman$elm_css$Css$prop6 = F7(
	function (key, argA, argB, argC, argD, argE, argF) {
		return A2(
			_rtfeldman$elm_css$Css$property,
			key,
			A2(
				_elm_lang$core$String$join,
				' ',
				{
					ctor: '::',
					_0: argA.value,
					_1: {
						ctor: '::',
						_0: argB.value,
						_1: {
							ctor: '::',
							_0: argC.value,
							_1: {
								ctor: '::',
								_0: argD.value,
								_1: {
									ctor: '::',
									_0: argE.value,
									_1: {
										ctor: '::',
										_0: argF.value,
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}
				}));
	});
var _rtfeldman$elm_css$Css$boxShadow6 = _rtfeldman$elm_css$Css$prop6('box-shadow');
var _rtfeldman$elm_css$Css$prop5 = F6(
	function (key, argA, argB, argC, argD, argE) {
		return A2(
			_rtfeldman$elm_css$Css$property,
			key,
			A2(
				_elm_lang$core$String$join,
				' ',
				{
					ctor: '::',
					_0: argA.value,
					_1: {
						ctor: '::',
						_0: argB.value,
						_1: {
							ctor: '::',
							_0: argC.value,
							_1: {
								ctor: '::',
								_0: argD.value,
								_1: {
									ctor: '::',
									_0: argE.value,
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}));
	});
var _rtfeldman$elm_css$Css$boxShadow5 = _rtfeldman$elm_css$Css$prop5('box-shadow');
var _rtfeldman$elm_css$Css$prop4 = F5(
	function (key, argA, argB, argC, argD) {
		return A2(
			_rtfeldman$elm_css$Css$property,
			key,
			A2(
				_elm_lang$core$String$join,
				' ',
				{
					ctor: '::',
					_0: argA.value,
					_1: {
						ctor: '::',
						_0: argB.value,
						_1: {
							ctor: '::',
							_0: argC.value,
							_1: {
								ctor: '::',
								_0: argD.value,
								_1: {ctor: '[]'}
							}
						}
					}
				}));
	});
var _rtfeldman$elm_css$Css$textShadow4 = _rtfeldman$elm_css$Css$prop4('text-shadow');
var _rtfeldman$elm_css$Css$boxShadow4 = _rtfeldman$elm_css$Css$prop4('box-shadow');
var _rtfeldman$elm_css$Css$padding4 = _rtfeldman$elm_css$Css$prop4('padding');
var _rtfeldman$elm_css$Css$margin4 = _rtfeldman$elm_css$Css$prop4('margin');
var _rtfeldman$elm_css$Css$borderImageOutset4 = _rtfeldman$elm_css$Css$prop4('border-image-outset');
var _rtfeldman$elm_css$Css$borderImageWidth4 = _rtfeldman$elm_css$Css$prop4('border-image-width');
var _rtfeldman$elm_css$Css$borderWidth4 = _rtfeldman$elm_css$Css$prop4('border-width');
var _rtfeldman$elm_css$Css$borderRadius4 = _rtfeldman$elm_css$Css$prop4('border-radius');
var _rtfeldman$elm_css$Css$prop3 = F4(
	function (key, argA, argB, argC) {
		return A2(
			_rtfeldman$elm_css$Css$property,
			key,
			A2(
				_elm_lang$core$String$join,
				' ',
				{
					ctor: '::',
					_0: argA.value,
					_1: {
						ctor: '::',
						_0: argB.value,
						_1: {
							ctor: '::',
							_0: argC.value,
							_1: {ctor: '[]'}
						}
					}
				}));
	});
var _rtfeldman$elm_css$Css$textShadow3 = _rtfeldman$elm_css$Css$prop3('text-shadow');
var _rtfeldman$elm_css$Css$boxShadow3 = _rtfeldman$elm_css$Css$prop3('box-shadow');
var _rtfeldman$elm_css$Css$textIndent3 = _rtfeldman$elm_css$Css$prop3('text-indent');
var _rtfeldman$elm_css$Css$padding3 = _rtfeldman$elm_css$Css$prop3('padding');
var _rtfeldman$elm_css$Css$margin3 = _rtfeldman$elm_css$Css$prop3('margin');
var _rtfeldman$elm_css$Css$border3 = _rtfeldman$elm_css$Css$prop3('border');
var _rtfeldman$elm_css$Css$borderTop3 = _rtfeldman$elm_css$Css$prop3('border-top');
var _rtfeldman$elm_css$Css$borderBottom3 = _rtfeldman$elm_css$Css$prop3('border-bottom');
var _rtfeldman$elm_css$Css$borderLeft3 = _rtfeldman$elm_css$Css$prop3('border-left');
var _rtfeldman$elm_css$Css$borderRight3 = _rtfeldman$elm_css$Css$prop3('border-right');
var _rtfeldman$elm_css$Css$borderBlockStart3 = _rtfeldman$elm_css$Css$prop3('border-block-start');
var _rtfeldman$elm_css$Css$borderBlockEnd3 = _rtfeldman$elm_css$Css$prop3('border-block-end');
var _rtfeldman$elm_css$Css$borderInlineStart3 = _rtfeldman$elm_css$Css$prop3('border-block-start');
var _rtfeldman$elm_css$Css$borderInlineEnd3 = _rtfeldman$elm_css$Css$prop3('border-block-end');
var _rtfeldman$elm_css$Css$borderImageOutset3 = _rtfeldman$elm_css$Css$prop3('border-image-outset');
var _rtfeldman$elm_css$Css$borderImageWidth3 = _rtfeldman$elm_css$Css$prop3('border-image-width');
var _rtfeldman$elm_css$Css$borderWidth3 = _rtfeldman$elm_css$Css$prop3('border-width');
var _rtfeldman$elm_css$Css$borderRadius3 = _rtfeldman$elm_css$Css$prop3('border-radius');
var _rtfeldman$elm_css$Css$outline3 = _rtfeldman$elm_css$Css$prop3('outline');
var _rtfeldman$elm_css$Css$fontVariant3 = _rtfeldman$elm_css$Css$prop3('font-variant');
var _rtfeldman$elm_css$Css$fontVariantNumeric3 = _rtfeldman$elm_css$Css$prop3('font-variant-numeric');
var _rtfeldman$elm_css$Css$textDecoration3 = _rtfeldman$elm_css$Css$prop3('text-decoration');
var _rtfeldman$elm_css$Css$textDecorations3 = function (_p6) {
	return A2(
		_rtfeldman$elm_css$Css$prop3,
		'text-decoration',
		_rtfeldman$elm_css$Css$valuesOrNone(_p6));
};
var _rtfeldman$elm_css$Css$prop2 = F3(
	function (key, argA, argB) {
		return A2(
			_rtfeldman$elm_css$Css$property,
			key,
			A2(
				_elm_lang$core$String$join,
				' ',
				{
					ctor: '::',
					_0: argA.value,
					_1: {
						ctor: '::',
						_0: argB.value,
						_1: {ctor: '[]'}
					}
				}));
	});
var _rtfeldman$elm_css$Css$textShadow2 = _rtfeldman$elm_css$Css$prop2('text-shadow');
var _rtfeldman$elm_css$Css$boxShadow2 = _rtfeldman$elm_css$Css$prop2('box-shadow');
var _rtfeldman$elm_css$Css$textIndent2 = _rtfeldman$elm_css$Css$prop2('text-indent');
var _rtfeldman$elm_css$Css$padding2 = _rtfeldman$elm_css$Css$prop2('padding');
var _rtfeldman$elm_css$Css$margin2 = _rtfeldman$elm_css$Css$prop2('margin');
var _rtfeldman$elm_css$Css$border2 = _rtfeldman$elm_css$Css$prop2('border');
var _rtfeldman$elm_css$Css$borderTop2 = _rtfeldman$elm_css$Css$prop2('border-top');
var _rtfeldman$elm_css$Css$borderBottom2 = _rtfeldman$elm_css$Css$prop2('border-bottom');
var _rtfeldman$elm_css$Css$borderLeft2 = _rtfeldman$elm_css$Css$prop2('border-left');
var _rtfeldman$elm_css$Css$borderRight2 = _rtfeldman$elm_css$Css$prop2('border-right');
var _rtfeldman$elm_css$Css$borderBlockStart2 = _rtfeldman$elm_css$Css$prop2('border-block-start');
var _rtfeldman$elm_css$Css$borderBlockEnd2 = _rtfeldman$elm_css$Css$prop2('border-block-end');
var _rtfeldman$elm_css$Css$borderInlineStart2 = _rtfeldman$elm_css$Css$prop2('border-block-start');
var _rtfeldman$elm_css$Css$borderInlineEnd2 = _rtfeldman$elm_css$Css$prop2('border-block-end');
var _rtfeldman$elm_css$Css$borderImageOutset2 = _rtfeldman$elm_css$Css$prop2('border-image-outset');
var _rtfeldman$elm_css$Css$borderImageWidth2 = _rtfeldman$elm_css$Css$prop2('border-image-width');
var _rtfeldman$elm_css$Css$borderWidth2 = _rtfeldman$elm_css$Css$prop2('border-width');
var _rtfeldman$elm_css$Css$borderTopWidth2 = _rtfeldman$elm_css$Css$prop2('border-top-width');
var _rtfeldman$elm_css$Css$borderBottomLeftRadius2 = _rtfeldman$elm_css$Css$prop2('border-bottom-left-radius');
var _rtfeldman$elm_css$Css$borderBottomRightRadius2 = _rtfeldman$elm_css$Css$prop2('border-bottom-right-radius');
var _rtfeldman$elm_css$Css$borderTopLeftRadius2 = _rtfeldman$elm_css$Css$prop2('border-top-left-radius');
var _rtfeldman$elm_css$Css$borderTopRightRadius2 = _rtfeldman$elm_css$Css$prop2('border-top-right-radius');
var _rtfeldman$elm_css$Css$borderRadius2 = _rtfeldman$elm_css$Css$prop2('border-radius');
var _rtfeldman$elm_css$Css$borderSpacing2 = _rtfeldman$elm_css$Css$prop2('border-spacing');
var _rtfeldman$elm_css$Css$backgroundRepeat2 = _rtfeldman$elm_css$Css$prop2('background-repeat');
var _rtfeldman$elm_css$Css$backgroundPosition2 = _rtfeldman$elm_css$Css$prop2('background-position');
var _rtfeldman$elm_css$Css$backgroundSize2 = _rtfeldman$elm_css$Css$prop2('background-size');
var _rtfeldman$elm_css$Css$fontVariant2 = _rtfeldman$elm_css$Css$prop2('font-variant');
var _rtfeldman$elm_css$Css$fontVariantNumeric2 = _rtfeldman$elm_css$Css$prop2('font-variant-numeric');
var _rtfeldman$elm_css$Css$textDecoration2 = _rtfeldman$elm_css$Css$prop2('text-decoration');
var _rtfeldman$elm_css$Css$textDecorations2 = function (_p7) {
	return A2(
		_rtfeldman$elm_css$Css$prop2,
		'text-decoration',
		_rtfeldman$elm_css$Css$valuesOrNone(_p7));
};
var _rtfeldman$elm_css$Css$prop1 = F2(
	function (key, arg) {
		return A2(_rtfeldman$elm_css$Css$property, key, arg.value);
	});
var _rtfeldman$elm_css$Css$textRendering = _rtfeldman$elm_css$Css$prop1('text-rendering');
var _rtfeldman$elm_css$Css$textOrientation = _rtfeldman$elm_css$Css$prop1('text-orientation');
var _rtfeldman$elm_css$Css$textOverflow = _rtfeldman$elm_css$Css$prop1('text-overflow');
var _rtfeldman$elm_css$Css$textShadow = _rtfeldman$elm_css$Css$prop1('text-shadow');
var _rtfeldman$elm_css$Css$boxShadow = _rtfeldman$elm_css$Css$prop1('box-shadow');
var _rtfeldman$elm_css$Css$textIndent = _rtfeldman$elm_css$Css$prop1('text-indent');
var _rtfeldman$elm_css$Css$textTransform = _rtfeldman$elm_css$Css$prop1('text-transform');
var _rtfeldman$elm_css$Css$display = _rtfeldman$elm_css$Css$prop1('display');
var _rtfeldman$elm_css$Css$opacity = _rtfeldman$elm_css$Css$prop1('opacity');
var _rtfeldman$elm_css$Css$width = _rtfeldman$elm_css$Css$prop1('width');
var _rtfeldman$elm_css$Css$maxWidth = _rtfeldman$elm_css$Css$prop1('max-width');
var _rtfeldman$elm_css$Css$minWidth = _rtfeldman$elm_css$Css$prop1('min-width');
var _rtfeldman$elm_css$Css$height = _rtfeldman$elm_css$Css$prop1('height');
var _rtfeldman$elm_css$Css$minHeight = _rtfeldman$elm_css$Css$prop1('min-height');
var _rtfeldman$elm_css$Css$maxHeight = _rtfeldman$elm_css$Css$prop1('max-height');
var _rtfeldman$elm_css$Css$padding = _rtfeldman$elm_css$Css$prop1('padding');
var _rtfeldman$elm_css$Css$paddingBlockStart = _rtfeldman$elm_css$Css$prop1('padding-block-start');
var _rtfeldman$elm_css$Css$paddingBlockEnd = _rtfeldman$elm_css$Css$prop1('padding-block-end');
var _rtfeldman$elm_css$Css$paddingInlineStart = _rtfeldman$elm_css$Css$prop1('padding-inline-start');
var _rtfeldman$elm_css$Css$paddingInlineEnd = _rtfeldman$elm_css$Css$prop1('padding-inline-end');
var _rtfeldman$elm_css$Css$paddingTop = _rtfeldman$elm_css$Css$prop1('padding-top');
var _rtfeldman$elm_css$Css$paddingBottom = _rtfeldman$elm_css$Css$prop1('padding-bottom');
var _rtfeldman$elm_css$Css$paddingRight = _rtfeldman$elm_css$Css$prop1('padding-right');
var _rtfeldman$elm_css$Css$paddingLeft = _rtfeldman$elm_css$Css$prop1('padding-left');
var _rtfeldman$elm_css$Css$margin = _rtfeldman$elm_css$Css$prop1('margin');
var _rtfeldman$elm_css$Css$marginTop = _rtfeldman$elm_css$Css$prop1('margin-top');
var _rtfeldman$elm_css$Css$marginBottom = _rtfeldman$elm_css$Css$prop1('margin-bottom');
var _rtfeldman$elm_css$Css$marginRight = _rtfeldman$elm_css$Css$prop1('margin-right');
var _rtfeldman$elm_css$Css$marginLeft = _rtfeldman$elm_css$Css$prop1('margin-left');
var _rtfeldman$elm_css$Css$marginBlockStart = _rtfeldman$elm_css$Css$prop1('margin-block-start');
var _rtfeldman$elm_css$Css$marginBlockEnd = _rtfeldman$elm_css$Css$prop1('margin-block-end');
var _rtfeldman$elm_css$Css$marginInlineStart = _rtfeldman$elm_css$Css$prop1('margin-inline-start');
var _rtfeldman$elm_css$Css$marginInlineEnd = _rtfeldman$elm_css$Css$prop1('margin-inline-end');
var _rtfeldman$elm_css$Css$top = _rtfeldman$elm_css$Css$prop1('top');
var _rtfeldman$elm_css$Css$bottom = _rtfeldman$elm_css$Css$prop1('bottom');
var _rtfeldman$elm_css$Css$left = _rtfeldman$elm_css$Css$prop1('left');
var _rtfeldman$elm_css$Css$right = _rtfeldman$elm_css$Css$prop1('right');
var _rtfeldman$elm_css$Css$border = _rtfeldman$elm_css$Css$prop1('border');
var _rtfeldman$elm_css$Css$borderTop = _rtfeldman$elm_css$Css$prop1('border-top');
var _rtfeldman$elm_css$Css$borderBottom = _rtfeldman$elm_css$Css$prop1('border-bottom');
var _rtfeldman$elm_css$Css$borderLeft = _rtfeldman$elm_css$Css$prop1('border-left');
var _rtfeldman$elm_css$Css$borderRight = _rtfeldman$elm_css$Css$prop1('border-right');
var _rtfeldman$elm_css$Css$borderBlockStart = _rtfeldman$elm_css$Css$prop1('border-block-start');
var _rtfeldman$elm_css$Css$borderBlockEnd = _rtfeldman$elm_css$Css$prop1('border-block-end');
var _rtfeldman$elm_css$Css$borderInlineStart = _rtfeldman$elm_css$Css$prop1('border-block-start');
var _rtfeldman$elm_css$Css$borderInlineEnd = _rtfeldman$elm_css$Css$prop1('border-block-end');
var _rtfeldman$elm_css$Css$borderImageOutset = _rtfeldman$elm_css$Css$prop1('border-image-outset');
var _rtfeldman$elm_css$Css$borderImageWidth = _rtfeldman$elm_css$Css$prop1('border-image-width');
var _rtfeldman$elm_css$Css$borderBlockEndStyle = _rtfeldman$elm_css$Css$prop1('border-block-end-style');
var _rtfeldman$elm_css$Css$borderBlockStartStyle = _rtfeldman$elm_css$Css$prop1('border-block-start-style');
var _rtfeldman$elm_css$Css$borderInlineEndStyle = _rtfeldman$elm_css$Css$prop1('border-inline-end-style');
var _rtfeldman$elm_css$Css$borderBottomStyle = _rtfeldman$elm_css$Css$prop1('border-bottom-style');
var _rtfeldman$elm_css$Css$borderInlineStartStyle = _rtfeldman$elm_css$Css$prop1('border-inline-start-style');
var _rtfeldman$elm_css$Css$borderLeftStyle = _rtfeldman$elm_css$Css$prop1('border-left-style');
var _rtfeldman$elm_css$Css$borderRightStyle = _rtfeldman$elm_css$Css$prop1('border-right-style');
var _rtfeldman$elm_css$Css$borderTopStyle = _rtfeldman$elm_css$Css$prop1('border-top-style');
var _rtfeldman$elm_css$Css$borderStyle = _rtfeldman$elm_css$Css$prop1('border-style');
var _rtfeldman$elm_css$Css$borderCollapse = _rtfeldman$elm_css$Css$prop1('border-collapse');
var _rtfeldman$elm_css$Css$borderWidth = _rtfeldman$elm_css$Css$prop1('border-width');
var _rtfeldman$elm_css$Css$borderBottomWidth = _rtfeldman$elm_css$Css$prop1('border-bottom-width');
var _rtfeldman$elm_css$Css$borderInlineEndWidth = _rtfeldman$elm_css$Css$prop1('border-inline-end-width');
var _rtfeldman$elm_css$Css$borderLeftWidth = _rtfeldman$elm_css$Css$prop1('border-left-width');
var _rtfeldman$elm_css$Css$borderRightWidth = _rtfeldman$elm_css$Css$prop1('border-right-width');
var _rtfeldman$elm_css$Css$borderTopWidth = _rtfeldman$elm_css$Css$prop1('border-top-width');
var _rtfeldman$elm_css$Css$borderBottomLeftRadius = _rtfeldman$elm_css$Css$prop1('border-bottom-left-radius');
var _rtfeldman$elm_css$Css$borderBottomRightRadius = _rtfeldman$elm_css$Css$prop1('border-bottom-right-radius');
var _rtfeldman$elm_css$Css$borderTopLeftRadius = _rtfeldman$elm_css$Css$prop1('border-top-left-radius');
var _rtfeldman$elm_css$Css$borderTopRightRadius = _rtfeldman$elm_css$Css$prop1('border-top-right-radius');
var _rtfeldman$elm_css$Css$borderRadius = _rtfeldman$elm_css$Css$prop1('border-radius');
var _rtfeldman$elm_css$Css$borderSpacing = _rtfeldman$elm_css$Css$prop1('border-spacing');
var _rtfeldman$elm_css$Css$outline = _rtfeldman$elm_css$Css$prop1('outline');
var _rtfeldman$elm_css$Css$outlineWidth = _rtfeldman$elm_css$Css$prop1('outline-width');
var _rtfeldman$elm_css$Css$outlineStyle = _rtfeldman$elm_css$Css$prop1('outline-style');
var _rtfeldman$elm_css$Css$outlineOffset = _rtfeldman$elm_css$Css$prop1('outline-offset');
var _rtfeldman$elm_css$Css$resize = _rtfeldman$elm_css$Css$prop1('resize');
var _rtfeldman$elm_css$Css$fill = _rtfeldman$elm_css$Css$prop1('fill');
var _rtfeldman$elm_css$Css$visibility = _rtfeldman$elm_css$Css$prop1('visibility');
var _rtfeldman$elm_css$Css$overflow = _rtfeldman$elm_css$Css$prop1('overflow');
var _rtfeldman$elm_css$Css$overflowX = _rtfeldman$elm_css$Css$prop1('overflow-x');
var _rtfeldman$elm_css$Css$overflowY = _rtfeldman$elm_css$Css$prop1('overflow-y');
var _rtfeldman$elm_css$Css$overflowWrap = _rtfeldman$elm_css$Css$prop1('overflow-wrap');
var _rtfeldman$elm_css$Css$whiteSpace = _rtfeldman$elm_css$Css$prop1('white-space');
var _rtfeldman$elm_css$Css$backgroundRepeat = _rtfeldman$elm_css$Css$prop1('background-repeat');
var _rtfeldman$elm_css$Css$backgroundAttachment = _rtfeldman$elm_css$Css$prop1('background-attachment');
var _rtfeldman$elm_css$Css$backgroundClip = _rtfeldman$elm_css$Css$prop1('background-clip');
var _rtfeldman$elm_css$Css$backgroundOrigin = _rtfeldman$elm_css$Css$prop1('background-origin');
var _rtfeldman$elm_css$Css$backgroundImage = _rtfeldman$elm_css$Css$prop1('background-image');
var _rtfeldman$elm_css$Css$backgroundSize = _rtfeldman$elm_css$Css$prop1('background-size');
var _rtfeldman$elm_css$Css$lineHeight = _rtfeldman$elm_css$Css$prop1('line-height');
var _rtfeldman$elm_css$Css$letterSpacing = _rtfeldman$elm_css$Css$prop1('letter-spacing');
var _rtfeldman$elm_css$Css$fontFamily = _rtfeldman$elm_css$Css$prop1('font-family');
var _rtfeldman$elm_css$Css$fontFamilies = function (_p8) {
	return A2(
		_rtfeldman$elm_css$Css$prop1,
		'font-family',
		_rtfeldman$elm_css$Css$stringsToValue(_p8));
};
var _rtfeldman$elm_css$Css$fontSize = _rtfeldman$elm_css$Css$prop1('font-size');
var _rtfeldman$elm_css$Css$fontStyle = _rtfeldman$elm_css$Css$prop1('font-style');
var _rtfeldman$elm_css$Css$fontVariant = _rtfeldman$elm_css$Css$prop1('font-variant');
var _rtfeldman$elm_css$Css$fontVariantLigatures = _rtfeldman$elm_css$Css$prop1('font-variant-ligatures');
var _rtfeldman$elm_css$Css$fontVariantCaps = _rtfeldman$elm_css$Css$prop1('font-variant-caps');
var _rtfeldman$elm_css$Css$fontVariantNumeric = _rtfeldman$elm_css$Css$prop1('font-variant-numeric');
var _rtfeldman$elm_css$Css$fontVariantNumerics = function (_p9) {
	return A2(
		_rtfeldman$elm_css$Css$prop1,
		'font-variant-numeric',
		_rtfeldman$elm_css$Css$valuesOrNone(_p9));
};
var _rtfeldman$elm_css$Css$cursor = _rtfeldman$elm_css$Css$prop1('cursor');
var _rtfeldman$elm_css$Css$textDecoration = _rtfeldman$elm_css$Css$prop1('text-decoration');
var _rtfeldman$elm_css$Css$textDecorations = function (_p10) {
	return A2(
		_rtfeldman$elm_css$Css$prop1,
		'text-decoration',
		_rtfeldman$elm_css$Css$valuesOrNone(_p10));
};
var _rtfeldman$elm_css$Css$textDecorationLine = _rtfeldman$elm_css$Css$prop1('text-decoration-line');
var _rtfeldman$elm_css$Css$textDecorationLines = function (_p11) {
	return A2(
		_rtfeldman$elm_css$Css$prop1,
		'text-decoration-line',
		_rtfeldman$elm_css$Css$valuesOrNone(_p11));
};
var _rtfeldman$elm_css$Css$textDecorationStyle = _rtfeldman$elm_css$Css$prop1('text-decoration-style');
var _rtfeldman$elm_css$Css$zIndex = _rtfeldman$elm_css$Css$prop1('z-index');
var _rtfeldman$elm_css$Css$touchAction = _rtfeldman$elm_css$Css$prop1('touch-action');
var _rtfeldman$elm_css$Css$tableLayout = _rtfeldman$elm_css$Css$prop1('table-layout');
var _rtfeldman$elm_css$Css$pointerEvents = _rtfeldman$elm_css$Css$prop1('pointer-events');
var _rtfeldman$elm_css$Css$position = _rtfeldman$elm_css$Css$prop1('position');
var _rtfeldman$elm_css$Css$textBottom = _rtfeldman$elm_css$Css$prop1('text-bottom');
var _rtfeldman$elm_css$Css$textTop = _rtfeldman$elm_css$Css$prop1('text-top');
var _rtfeldman$elm_css$Css$super = _rtfeldman$elm_css$Css$prop1('super');
var _rtfeldman$elm_css$Css$sub = _rtfeldman$elm_css$Css$prop1('sub');
var _rtfeldman$elm_css$Css$baseline = _rtfeldman$elm_css$Css$prop1('baseline');
var _rtfeldman$elm_css$Css$middle = _rtfeldman$elm_css$Css$prop1('middle');
var _rtfeldman$elm_css$Css$noWrap = {value: 'nowrap', whiteSpace: _rtfeldman$elm_css$Css_Structure$Compatible, flexWrap: _rtfeldman$elm_css$Css_Structure$Compatible, flexDirectionOrWrap: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$auto = {value: 'auto', cursor: _rtfeldman$elm_css$Css_Structure$Compatible, flexBasis: _rtfeldman$elm_css$Css_Structure$Compatible, overflow: _rtfeldman$elm_css$Css_Structure$Compatible, textRendering: _rtfeldman$elm_css$Css_Structure$Compatible, lengthOrAuto: _rtfeldman$elm_css$Css_Structure$Compatible, lengthOrNumberOrAutoOrNoneOrContent: _rtfeldman$elm_css$Css_Structure$Compatible, alignItemsOrAuto: _rtfeldman$elm_css$Css_Structure$Compatible, lengthOrAutoOrCoverOrContain: _rtfeldman$elm_css$Css_Structure$Compatible, justifyContentOrAuto: _rtfeldman$elm_css$Css_Structure$Compatible, intOrAuto: _rtfeldman$elm_css$Css_Structure$Compatible, pointerEvents: _rtfeldman$elm_css$Css_Structure$Compatible, touchAction: _rtfeldman$elm_css$Css_Structure$Compatible, tableLayout: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$none = {value: 'none', cursor: _rtfeldman$elm_css$Css_Structure$Compatible, none: _rtfeldman$elm_css$Css_Structure$Compatible, lengthOrNone: _rtfeldman$elm_css$Css_Structure$Compatible, lengthOrNoneOrMinMaxDimension: _rtfeldman$elm_css$Css_Structure$Compatible, lengthOrNumberOrAutoOrNoneOrContent: _rtfeldman$elm_css$Css_Structure$Compatible, textDecorationLine: _rtfeldman$elm_css$Css_Structure$Compatible, listStyleType: _rtfeldman$elm_css$Css_Structure$Compatible, listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible, display: _rtfeldman$elm_css$Css_Structure$Compatible, outline: _rtfeldman$elm_css$Css_Structure$Compatible, pointerEvents: _rtfeldman$elm_css$Css_Structure$Compatible, resize: _rtfeldman$elm_css$Css_Structure$Compatible, transform: _rtfeldman$elm_css$Css_Structure$Compatible, borderStyle: _rtfeldman$elm_css$Css_Structure$Compatible, backgroundImage: _rtfeldman$elm_css$Css_Structure$Compatible, textTransform: _rtfeldman$elm_css$Css_Structure$Compatible, touchAction: _rtfeldman$elm_css$Css_Structure$Compatible, updateFrequency: _rtfeldman$elm_css$Css_Structure$Compatible, blockAxisOverflow: _rtfeldman$elm_css$Css_Structure$Compatible, inlineAxisOverflow: _rtfeldman$elm_css$Css_Structure$Compatible, pointerDevice: _rtfeldman$elm_css$Css_Structure$Compatible, hoverCapability: _rtfeldman$elm_css$Css_Structure$Compatible, scriptingSupport: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$inlineListItem = {value: 'inline-list-item', display: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$listItem = {value: 'list-item', display: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$tableFooterGroup = {value: 'table-footer-group', display: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$tableHeaderGroup = {value: 'table-header-group', display: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$tableColumnGroup = {value: 'table-column-group', display: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$tableRowGroup = {value: 'table-row-group', display: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$tableCaption = {value: 'table-caption', display: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$tableColumn = {value: 'table-column', display: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$tableCell = {value: 'table-cell', display: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$tableRow = {value: 'table-row', display: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$inlineTable = {value: 'inline-table', display: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$table = {value: 'table', display: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$inline = {value: 'inline', display: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$inlineFlex = {value: 'inline-flex', display: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$inlineBlock = {value: 'inline-block', display: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$block = {value: 'block', display: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$toTopLeft = {value: 'to top left', angleOrDirection: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$toLeft = {value: 'to left', angleOrDirection: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$toBottomLeft = {value: 'to bottom left', angleOrDirection: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$toBottom = {value: 'to bottom', angleOrDirection: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$toBottomRight = {value: 'to bottom right', angleOrDirection: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$toRight = {value: 'to right', angleOrDirection: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$toTopRight = {value: 'to top right', angleOrDirection: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$toTop = {value: 'to top', angleOrDirection: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$stop2 = F2(
	function (c, len) {
		return {
			ctor: '_Tuple2',
			_0: c,
			_1: _elm_lang$core$Maybe$Just(len)
		};
	});
var _rtfeldman$elm_css$Css$stop = function (c) {
	return {ctor: '_Tuple2', _0: c, _1: _elm_lang$core$Maybe$Nothing};
};
var _rtfeldman$elm_css$Css$collectStops = _elm_lang$core$List$map(
	function (_p12) {
		var _p13 = _p12;
		return A2(
			_elm_lang$core$String$append,
			_p13._0.value,
			A2(
				_elm_lang$core$Maybe$withDefault,
				'',
				A2(
					_elm_lang$core$Maybe$map,
					function (_p14) {
						return A2(
							_elm_lang$core$String$cons,
							_elm_lang$core$Native_Utils.chr(' '),
							function (_) {
								return _.value;
							}(_p14));
					},
					_p13._1)));
	});
var _rtfeldman$elm_css$Css$local = {value: 'local', backgroundAttachment: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$noRepeat = {value: 'no-repeat', backgroundRepeat: _rtfeldman$elm_css$Css_Structure$Compatible, backgroundRepeatShorthand: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$round = {value: 'round', backgroundRepeat: _rtfeldman$elm_css$Css_Structure$Compatible, backgroundRepeatShorthand: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$space = {value: 'space', backgroundRepeat: _rtfeldman$elm_css$Css_Structure$Compatible, backgroundRepeatShorthand: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$repeat = {value: 'repeat', backgroundRepeat: _rtfeldman$elm_css$Css_Structure$Compatible, backgroundRepeatShorthand: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$repeatY = {value: 'repeat-y', backgroundRepeatShorthand: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$repeatX = {value: 'repeat-x', backgroundRepeatShorthand: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$lineThrough = {value: 'line-through', textDecorationLine: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$overline = {value: 'overline', textDecorationLine: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$underline = {value: 'underline', textDecorationLine: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$row = {value: 'row', flexDirection: _rtfeldman$elm_css$Css_Structure$Compatible, flexDirectionOrWrap: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$rowReverse = _elm_lang$core$Native_Utils.update(
	_rtfeldman$elm_css$Css$row,
	{value: 'row-reverse'});
var _rtfeldman$elm_css$Css$column = _elm_lang$core$Native_Utils.update(
	_rtfeldman$elm_css$Css$row,
	{value: 'column'});
var _rtfeldman$elm_css$Css$columnReverse = _elm_lang$core$Native_Utils.update(
	_rtfeldman$elm_css$Css$row,
	{value: 'column-reverse'});
var _rtfeldman$elm_css$Css$stretch = _rtfeldman$elm_css$Css$prop1('stretch');
var _rtfeldman$elm_css$Css$spaceBetween = _rtfeldman$elm_css$Css$prop1('space-between');
var _rtfeldman$elm_css$Css$spaceAround = _rtfeldman$elm_css$Css$prop1('space-around');
var _rtfeldman$elm_css$Css$flexEnd = _rtfeldman$elm_css$Css$prop1('flex-end');
var _rtfeldman$elm_css$Css$flexStart = _rtfeldman$elm_css$Css$prop1('flex-start');
var _rtfeldman$elm_css$Css$wrap = {value: 'wrap', flexWrap: _rtfeldman$elm_css$Css_Structure$Compatible, flexDirectionOrWrap: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$wrapReverse = _elm_lang$core$Native_Utils.update(
	_rtfeldman$elm_css$Css$wrap,
	{value: 'wrap-reverse'});
var _rtfeldman$elm_css$Css$content = {value: 'content', flexBasis: _rtfeldman$elm_css$Css_Structure$Compatible, lengthOrNumberOrAutoOrNoneOrContent: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$order = _rtfeldman$elm_css$Css$prop1('order');
var _rtfeldman$elm_css$Css$flexFlow2 = _rtfeldman$elm_css$Css$prop2('flex-flow');
var _rtfeldman$elm_css$Css$flexFlow1 = _rtfeldman$elm_css$Css$prop1('flex-flow');
var _rtfeldman$elm_css$Css$flexDirection = _rtfeldman$elm_css$Css$prop1('flex-direction');
var _rtfeldman$elm_css$Css$flexWrap = _rtfeldman$elm_css$Css$prop1('flex-wrap');
var _rtfeldman$elm_css$Css$flexShrink = _rtfeldman$elm_css$Css$prop1('flex-shrink');
var _rtfeldman$elm_css$Css$flexGrow = _rtfeldman$elm_css$Css$prop1('flex-grow');
var _rtfeldman$elm_css$Css$flexBasis = _rtfeldman$elm_css$Css$prop1('flex-basis');
var _rtfeldman$elm_css$Css$flex3 = _rtfeldman$elm_css$Css$prop3('flex');
var _rtfeldman$elm_css$Css$flex2 = _rtfeldman$elm_css$Css$prop2('flex');
var _rtfeldman$elm_css$Css$flex = _rtfeldman$elm_css$Css$prop1('flex');
var _rtfeldman$elm_css$Css$listStyle3 = _rtfeldman$elm_css$Css$prop3('list-style');
var _rtfeldman$elm_css$Css$listStyle2 = _rtfeldman$elm_css$Css$prop2('list-style');
var _rtfeldman$elm_css$Css$listStyle = _rtfeldman$elm_css$Css$prop1('list-style');
var _rtfeldman$elm_css$Css$thai = {value: 'thai', listStyleType: _rtfeldman$elm_css$Css_Structure$Compatible, listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$telugu = {value: 'telugu', listStyleType: _rtfeldman$elm_css$Css_Structure$Compatible, listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$oriya = {value: 'oriya', listStyleType: _rtfeldman$elm_css$Css_Structure$Compatible, listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$myanmar = {value: 'myanmar', listStyleType: _rtfeldman$elm_css$Css_Structure$Compatible, listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$malayalam = {value: 'malayalam', listStyleType: _rtfeldman$elm_css$Css_Structure$Compatible, listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$lao = {value: 'lao', listStyleType: _rtfeldman$elm_css$Css_Structure$Compatible, listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$khmer = {value: 'khmer', listStyleType: _rtfeldman$elm_css$Css_Structure$Compatible, listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$kannada = {value: 'kannada', listStyleType: _rtfeldman$elm_css$Css_Structure$Compatible, listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$gurmukhi = {value: 'gurmukhi', listStyleType: _rtfeldman$elm_css$Css_Structure$Compatible, listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$gujarati = {value: 'gujarati', listStyleType: _rtfeldman$elm_css$Css_Structure$Compatible, listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$georgian = {value: 'georgian', listStyleType: _rtfeldman$elm_css$Css_Structure$Compatible, listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$devanagari = {value: 'devanagari', listStyleType: _rtfeldman$elm_css$Css_Structure$Compatible, listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$cjkHeavenlyStem = {value: 'cjk-heavenly-stem', listStyleType: _rtfeldman$elm_css$Css_Structure$Compatible, listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$cjkEarthlyBranch = {value: 'cjk-earthly-branch', listStyleType: _rtfeldman$elm_css$Css_Structure$Compatible, listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$bengali = {value: 'bengali', listStyleType: _rtfeldman$elm_css$Css_Structure$Compatible, listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$armenian = {value: 'armenian', listStyleType: _rtfeldman$elm_css$Css_Structure$Compatible, listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$arabicIndic = {value: 'arabic-indic', listStyleType: _rtfeldman$elm_css$Css_Structure$Compatible, listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$upperLatin = {value: 'upper-latin', listStyleType: _rtfeldman$elm_css$Css_Structure$Compatible, listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$lowerLatin = {value: 'lower-latin', listStyleType: _rtfeldman$elm_css$Css_Structure$Compatible, listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$upperAlpha = {value: 'upper-alpha', listStyleType: _rtfeldman$elm_css$Css_Structure$Compatible, listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$lowerAlpha = {value: 'lower-alpha', listStyleType: _rtfeldman$elm_css$Css_Structure$Compatible, listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$upperGreek = {value: 'upper-greek', listStyleType: _rtfeldman$elm_css$Css_Structure$Compatible, listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$lowerGreek = {value: 'lower-greek', listStyleType: _rtfeldman$elm_css$Css_Structure$Compatible, listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$upperRoman = {value: 'upper-roman', listStyleType: _rtfeldman$elm_css$Css_Structure$Compatible, listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$lowerRoman = {value: 'lower-roman', listStyleType: _rtfeldman$elm_css$Css_Structure$Compatible, listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$decimalLeadingZero = {value: 'decimal-leading-zero', listStyleType: _rtfeldman$elm_css$Css_Structure$Compatible, listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$decimal = {value: 'decimal', listStyleType: _rtfeldman$elm_css$Css_Structure$Compatible, listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$square = {value: 'square', listStyleType: _rtfeldman$elm_css$Css_Structure$Compatible, listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$circle = {value: 'circle', listStyleType: _rtfeldman$elm_css$Css_Structure$Compatible, listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$disc = {value: 'disc', listStyleType: _rtfeldman$elm_css$Css_Structure$Compatible, listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$listStyleType = _rtfeldman$elm_css$Css$prop1('list-style-type');
var _rtfeldman$elm_css$Css$outside = {value: 'outside', listStylePosition: _rtfeldman$elm_css$Css_Structure$Compatible, listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$inside = {value: 'inside', listStylePosition: _rtfeldman$elm_css$Css_Structure$Compatible, listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$listStylePosition = _rtfeldman$elm_css$Css$prop1('list-style-position');
var _rtfeldman$elm_css$Css$transformStyle = _rtfeldman$elm_css$Css$prop1('transform-style');
var _rtfeldman$elm_css$Css$flat = {value: 'flat', transformStyle: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$preserve3d = {value: 'preserve-3d', transformStyle: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$boxSizing = _rtfeldman$elm_css$Css$prop1('box-sizing');
var _rtfeldman$elm_css$Css$transformBox = _rtfeldman$elm_css$Css$prop1('transform-box');
var _rtfeldman$elm_css$Css$viewBox = {value: 'view-box', transformBox: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$borderBox = {value: 'border-box', boxSizing: _rtfeldman$elm_css$Css_Structure$Compatible, backgroundClip: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$contentBox = {value: 'content-box', boxSizing: _rtfeldman$elm_css$Css_Structure$Compatible, backgroundClip: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$fillBox = {value: 'fill-box', transformBox: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$transforms = function (_p15) {
	return A2(
		_rtfeldman$elm_css$Css$prop1,
		'transform',
		_rtfeldman$elm_css$Css$valuesOrNone(_p15));
};
var _rtfeldman$elm_css$Css$transform = function (only) {
	return _rtfeldman$elm_css$Css$transforms(
		{
			ctor: '::',
			_0: only,
			_1: {ctor: '[]'}
		});
};
var _rtfeldman$elm_css$Css$angleConverter = F2(
	function (suffix, num) {
		return {
			value: A2(
				_elm_lang$core$Basics_ops['++'],
				_rtfeldman$elm_css$Css$numberToString(num),
				suffix),
			angle: _rtfeldman$elm_css$Css_Structure$Compatible,
			angleOrDirection: _rtfeldman$elm_css$Css_Structure$Compatible
		};
	});
var _rtfeldman$elm_css$Css$deg = _rtfeldman$elm_css$Css$angleConverter('deg');
var _rtfeldman$elm_css$Css$grad = _rtfeldman$elm_css$Css$angleConverter('grad');
var _rtfeldman$elm_css$Css$rad = _rtfeldman$elm_css$Css$angleConverter('rad');
var _rtfeldman$elm_css$Css$turn = _rtfeldman$elm_css$Css$angleConverter('turn');
var _rtfeldman$elm_css$Css$lengthConverter = F3(
	function (units, unitLabel, numericValue) {
		return {
			value: A2(
				_elm_lang$core$Basics_ops['++'],
				_rtfeldman$elm_css$Css$numberToString(numericValue),
				unitLabel),
			numericValue: numericValue,
			units: units,
			unitLabel: unitLabel,
			length: _rtfeldman$elm_css$Css_Structure$Compatible,
			lengthOrAuto: _rtfeldman$elm_css$Css_Structure$Compatible,
			lengthOrNumber: _rtfeldman$elm_css$Css_Structure$Compatible,
			lengthOrNone: _rtfeldman$elm_css$Css_Structure$Compatible,
			lengthOrMinMaxDimension: _rtfeldman$elm_css$Css_Structure$Compatible,
			lengthOrNoneOrMinMaxDimension: _rtfeldman$elm_css$Css_Structure$Compatible,
			textIndent: _rtfeldman$elm_css$Css_Structure$Compatible,
			flexBasis: _rtfeldman$elm_css$Css_Structure$Compatible,
			lengthOrNumberOrAutoOrNoneOrContent: _rtfeldman$elm_css$Css_Structure$Compatible,
			fontSize: _rtfeldman$elm_css$Css_Structure$Compatible,
			absoluteLength: _rtfeldman$elm_css$Css_Structure$Compatible,
			lengthOrAutoOrCoverOrContain: _rtfeldman$elm_css$Css_Structure$Compatible,
			calc: _rtfeldman$elm_css$Css_Structure$Compatible
		};
	});
var _rtfeldman$elm_css$Css$true = _rtfeldman$elm_css$Css$prop1('true');
var _rtfeldman$elm_css$Css$matchParent = _rtfeldman$elm_css$Css$prop1('match-parent');
var _rtfeldman$elm_css$Css$end = _rtfeldman$elm_css$Css$prop1('end');
var _rtfeldman$elm_css$Css$start = _rtfeldman$elm_css$Css$prop1('start');
var _rtfeldman$elm_css$Css$justifyAll = _rtfeldman$elm_css$Css$prop1('justify-all');
var _rtfeldman$elm_css$Css$justify = _rtfeldman$elm_css$Css$prop1('justify');
var _rtfeldman$elm_css$Css$center = _rtfeldman$elm_css$Css$prop1('center');
var _rtfeldman$elm_css$Css$collapse = {value: 'collapse', borderCollapse: _rtfeldman$elm_css$Css_Structure$Compatible, visibility: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$separate = {value: 'separate', borderCollapse: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$outset = {value: 'outset', borderStyle: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$inset = {value: 'inset', borderStyle: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$ridge = {value: 'ridge', borderStyle: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$groove = {value: 'groove', borderStyle: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$double = {value: 'double', borderStyle: _rtfeldman$elm_css$Css_Structure$Compatible, textDecorationStyle: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$solid = {value: 'solid', borderStyle: _rtfeldman$elm_css$Css_Structure$Compatible, textDecorationStyle: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$dashed = {value: 'dashed', borderStyle: _rtfeldman$elm_css$Css_Structure$Compatible, textDecorationStyle: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$dotted = {value: 'dotted', borderStyle: _rtfeldman$elm_css$Css_Structure$Compatible, textDecorationStyle: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$wavy = {value: 'wavy', textDecorationStyle: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$clip = {value: 'clip', textOverflow: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$ellipsis = {value: 'ellipsis', textOverflow: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$fullWidth = {value: 'full-width', textTransform: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$lowercase = {value: 'lowercase', textTransform: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$uppercase = {value: 'uppercase', textTransform: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$capitalize = {value: 'capitalize', textTransform: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$sideways = {value: 'sideways', textOrientation: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$upright = {value: 'upright', textOrientation: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$mixed = {value: 'mixed', textOrientation: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$eachLine = {value: 'each-line', textIndent: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$hanging = {value: 'hanging', textIndent: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$geometricPrecision = {value: 'geometricPrecision', textRendering: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$optimizeLegibility = {value: 'optimizeLegibility', textRendering: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$optimizeSpeed = {value: 'optimizeSpeed', textRendering: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$hslaToRgba = F6(
	function (value, warnings, hue, saturation, lightness, hslAlpha) {
		var _p16 = _elm_lang$core$Color$toRgb(
			A4(_elm_lang$core$Color$hsla, hue, saturation, lightness, hslAlpha));
		var red = _p16.red;
		var green = _p16.green;
		var blue = _p16.blue;
		var alpha = _p16.alpha;
		return {value: value, color: _rtfeldman$elm_css$Css_Structure$Compatible, red: red, green: green, blue: blue, alpha: alpha, warnings: warnings};
	});
var _rtfeldman$elm_css$Css$withPrecedingHash = function (str) {
	return A2(_elm_lang$core$String$startsWith, '#', str) ? str : A2(
		_elm_lang$core$String$cons,
		_elm_lang$core$Native_Utils.chr('#'),
		str);
};
var _rtfeldman$elm_css$Css$erroneousHex = function (str) {
	return {
		value: _rtfeldman$elm_css$Css$withPrecedingHash(str),
		color: _rtfeldman$elm_css$Css_Structure$Compatible,
		red: 0,
		green: 0,
		blue: 0,
		alpha: 1,
		warnings: _elm_lang$core$List$singleton(
			A2(
				_elm_lang$core$String$join,
				' ',
				{
					ctor: '::',
					_0: 'Hex color strings must contain exactly 3, 4, 6, or 8 hexadecimal digits, optionally preceded by \"#\".',
					_1: {
						ctor: '::',
						_0: _elm_lang$core$Basics$toString(str),
						_1: {
							ctor: '::',
							_0: 'is an invalid hex color string.',
							_1: {
								ctor: '::',
								_0: 'Please see: https://drafts.csswg.org/css-color/#hex-notation',
								_1: {ctor: '[]'}
							}
						}
					}
				}))
	};
};
var _rtfeldman$elm_css$Css$validHex = F5(
	function (str, _p20, _p19, _p18, _p17) {
		var _p21 = _p20;
		var _p22 = _p19;
		var _p23 = _p18;
		var _p24 = _p17;
		var toResult = function (_p25) {
			return _rtfeldman$hex$Hex$fromString(
				_elm_lang$core$String$toLower(
					_elm_lang$core$String$fromList(_p25)));
		};
		var results = {
			ctor: '_Tuple4',
			_0: toResult(
				{
					ctor: '::',
					_0: _p21._0,
					_1: {
						ctor: '::',
						_0: _p21._1,
						_1: {ctor: '[]'}
					}
				}),
			_1: toResult(
				{
					ctor: '::',
					_0: _p22._0,
					_1: {
						ctor: '::',
						_0: _p22._1,
						_1: {ctor: '[]'}
					}
				}),
			_2: toResult(
				{
					ctor: '::',
					_0: _p23._0,
					_1: {
						ctor: '::',
						_0: _p23._1,
						_1: {ctor: '[]'}
					}
				}),
			_3: toResult(
				{
					ctor: '::',
					_0: _p24._0,
					_1: {
						ctor: '::',
						_0: _p24._1,
						_1: {ctor: '[]'}
					}
				})
		};
		var _p26 = results;
		if (((((_p26.ctor === '_Tuple4') && (_p26._0.ctor === 'Ok')) && (_p26._1.ctor === 'Ok')) && (_p26._2.ctor === 'Ok')) && (_p26._3.ctor === 'Ok')) {
			return {
				value: _rtfeldman$elm_css$Css$withPrecedingHash(str),
				color: _rtfeldman$elm_css$Css_Structure$Compatible,
				red: _p26._0._0,
				green: _p26._1._0,
				blue: _p26._2._0,
				alpha: _elm_lang$core$Basics$toFloat(_p26._3._0) / 255,
				warnings: {ctor: '[]'}
			};
		} else {
			return _rtfeldman$elm_css$Css$erroneousHex(str);
		}
	});
var _rtfeldman$elm_css$Css$hex = function (str) {
	var withoutHash = A2(_elm_lang$core$String$startsWith, '#', str) ? A2(_elm_lang$core$String$dropLeft, 1, str) : str;
	var _p27 = _elm_lang$core$String$toList(withoutHash);
	_v9_4:
	do {
		if (((_p27.ctor === '::') && (_p27._1.ctor === '::')) && (_p27._1._1.ctor === '::')) {
			if (_p27._1._1._1.ctor === '[]') {
				var _p30 = _p27._0;
				var _p29 = _p27._1._0;
				var _p28 = _p27._1._1._0;
				return A5(
					_rtfeldman$elm_css$Css$validHex,
					str,
					{ctor: '_Tuple2', _0: _p30, _1: _p30},
					{ctor: '_Tuple2', _0: _p29, _1: _p29},
					{ctor: '_Tuple2', _0: _p28, _1: _p28},
					{
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.chr('f'),
						_1: _elm_lang$core$Native_Utils.chr('f')
					});
			} else {
				if (_p27._1._1._1._1.ctor === '[]') {
					var _p34 = _p27._0;
					var _p33 = _p27._1._0;
					var _p32 = _p27._1._1._0;
					var _p31 = _p27._1._1._1._0;
					return A5(
						_rtfeldman$elm_css$Css$validHex,
						str,
						{ctor: '_Tuple2', _0: _p34, _1: _p34},
						{ctor: '_Tuple2', _0: _p33, _1: _p33},
						{ctor: '_Tuple2', _0: _p32, _1: _p32},
						{ctor: '_Tuple2', _0: _p31, _1: _p31});
				} else {
					if (_p27._1._1._1._1._1.ctor === '::') {
						if (_p27._1._1._1._1._1._1.ctor === '[]') {
							return A5(
								_rtfeldman$elm_css$Css$validHex,
								str,
								{ctor: '_Tuple2', _0: _p27._0, _1: _p27._1._0},
								{ctor: '_Tuple2', _0: _p27._1._1._0, _1: _p27._1._1._1._0},
								{ctor: '_Tuple2', _0: _p27._1._1._1._1._0, _1: _p27._1._1._1._1._1._0},
								{
									ctor: '_Tuple2',
									_0: _elm_lang$core$Native_Utils.chr('f'),
									_1: _elm_lang$core$Native_Utils.chr('f')
								});
						} else {
							if ((_p27._1._1._1._1._1._1._1.ctor === '::') && (_p27._1._1._1._1._1._1._1._1.ctor === '[]')) {
								return A5(
									_rtfeldman$elm_css$Css$validHex,
									str,
									{ctor: '_Tuple2', _0: _p27._0, _1: _p27._1._0},
									{ctor: '_Tuple2', _0: _p27._1._1._0, _1: _p27._1._1._1._0},
									{ctor: '_Tuple2', _0: _p27._1._1._1._1._0, _1: _p27._1._1._1._1._1._0},
									{ctor: '_Tuple2', _0: _p27._1._1._1._1._1._1._0, _1: _p27._1._1._1._1._1._1._1._0});
							} else {
								break _v9_4;
							}
						}
					} else {
						break _v9_4;
					}
				}
			}
		} else {
			break _v9_4;
		}
	} while(false);
	return _rtfeldman$elm_css$Css$erroneousHex(str);
};
var _rtfeldman$elm_css$Css$hidden = {value: 'hidden', overflow: _rtfeldman$elm_css$Css_Structure$Compatible, borderStyle: _rtfeldman$elm_css$Css_Structure$Compatible, visibility: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$contain = {value: 'contain', lengthOrAutoOrCoverOrContain: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$cover = {value: 'cover', lengthOrAutoOrCoverOrContain: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$url = function (urlValue) {
	return {
		value: A2(
			_elm_lang$core$Basics_ops['++'],
			'url(',
			A2(_elm_lang$core$Basics_ops['++'], urlValue, ')')),
		backgroundImage: _rtfeldman$elm_css$Css_Structure$Compatible
	};
};
var _rtfeldman$elm_css$Css$paddingBox = {value: 'padding-box', backgroundClip: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$luminosity = _rtfeldman$elm_css$Css$prop1('luminosity');
var _rtfeldman$elm_css$Css$saturation = _rtfeldman$elm_css$Css$prop1('saturation');
var _rtfeldman$elm_css$Css$hue = _rtfeldman$elm_css$Css$prop1('hue');
var _rtfeldman$elm_css$Css$exclusion = _rtfeldman$elm_css$Css$prop1('exclusion');
var _rtfeldman$elm_css$Css$difference = _rtfeldman$elm_css$Css$prop1('difference');
var _rtfeldman$elm_css$Css$softLight = _rtfeldman$elm_css$Css$prop1('soft-light');
var _rtfeldman$elm_css$Css$hardLight = _rtfeldman$elm_css$Css$prop1('hard-light');
var _rtfeldman$elm_css$Css$colorBurn = _rtfeldman$elm_css$Css$prop1('color-burn');
var _rtfeldman$elm_css$Css$colorDodge = _rtfeldman$elm_css$Css$prop1('color-dodge');
var _rtfeldman$elm_css$Css$lighten = _rtfeldman$elm_css$Css$prop1('lighten');
var _rtfeldman$elm_css$Css$darken = _rtfeldman$elm_css$Css$prop1('darken');
var _rtfeldman$elm_css$Css$overlay = _rtfeldman$elm_css$Css$prop1('overlay');
var _rtfeldman$elm_css$Css$screenBlendMode = _rtfeldman$elm_css$Css$prop1('screen');
var _rtfeldman$elm_css$Css$multiply = _rtfeldman$elm_css$Css$prop1('multiply');
var _rtfeldman$elm_css$Css$vertical = {value: 'vertical', resize: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$horizontal = {value: 'horizontal', resize: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$both = {value: 'both', resize: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$breakWord = {value: 'break-word', overflowWrap: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$scroll = {value: 'scroll', scroll: _rtfeldman$elm_css$Css_Structure$Compatible, overflow: _rtfeldman$elm_css$Css_Structure$Compatible, backgroundAttachment: _rtfeldman$elm_css$Css_Structure$Compatible, blockAxisOverflow: _rtfeldman$elm_css$Css_Structure$Compatible, inlineAxisOverflow: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$visible = {value: 'visible', overflow: _rtfeldman$elm_css$Css_Structure$Compatible, visibility: _rtfeldman$elm_css$Css_Structure$Compatible, pointerEvents: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$currentColor = {
	value: 'currentColor',
	color: _rtfeldman$elm_css$Css_Structure$Compatible,
	warnings: {ctor: '[]'}
};
var _rtfeldman$elm_css$Css$transparent = {
	value: 'transparent',
	color: _rtfeldman$elm_css$Css_Structure$Compatible,
	warnings: {ctor: '[]'}
};
var _rtfeldman$elm_css$Css$important = _rtfeldman$elm_css$Css_Preprocess$mapLastProperty(
	function (property) {
		return _elm_lang$core$Native_Utils.update(
			property,
			{important: true});
	});
var _rtfeldman$elm_css$Css$all = _rtfeldman$elm_css$Css$prop1('all');
var _rtfeldman$elm_css$Css$combineLengths = F3(
	function (operation, first, second) {
		var numericValue = A2(operation, first.numericValue, second.numericValue);
		var value = A2(
			_elm_lang$core$String$join,
			'',
			A2(
				_elm_lang$core$List$filter,
				function (_p35) {
					return !_elm_lang$core$String$isEmpty(_p35);
				},
				{
					ctor: '::',
					_0: _elm_lang$core$Basics$toString(numericValue),
					_1: {
						ctor: '::',
						_0: first.unitLabel,
						_1: {ctor: '[]'}
					}
				}));
		return _elm_lang$core$Native_Utils.update(
			first,
			{value: value, numericValue: numericValue});
	});
var _rtfeldman$elm_css$Css_ops = _rtfeldman$elm_css$Css_ops || {};
_rtfeldman$elm_css$Css_ops['|*|'] = _rtfeldman$elm_css$Css$combineLengths(
	F2(
		function (x, y) {
			return x * y;
		}));
var _rtfeldman$elm_css$Css_ops = _rtfeldman$elm_css$Css_ops || {};
_rtfeldman$elm_css$Css_ops['|/|'] = _rtfeldman$elm_css$Css$combineLengths(
	F2(
		function (x, y) {
			return x / y;
		}));
var _rtfeldman$elm_css$Css_ops = _rtfeldman$elm_css$Css_ops || {};
_rtfeldman$elm_css$Css_ops['|-|'] = _rtfeldman$elm_css$Css$combineLengths(
	F2(
		function (x, y) {
			return x - y;
		}));
var _rtfeldman$elm_css$Css_ops = _rtfeldman$elm_css$Css_ops || {};
_rtfeldman$elm_css$Css_ops['|+|'] = _rtfeldman$elm_css$Css$combineLengths(
	F2(
		function (x, y) {
			return x + y;
		}));
var _rtfeldman$elm_css$Css$calcExpressionToString = function (expression) {
	var _p36 = expression;
	if (_p36.ctor === 'Addition') {
		return '+';
	} else {
		return '-';
	}
};
var _rtfeldman$elm_css$Css$colorValueForOverloadedProperty = _rtfeldman$elm_css$Css$transparent;
var _rtfeldman$elm_css$Css$getOverloadedProperty = F3(
	function (functionName, desiredKey, style) {
		getOverloadedProperty:
		while (true) {
			var _p37 = style;
			switch (_p37.ctor) {
				case 'AppendProperty':
					return A2(_rtfeldman$elm_css$Css$property, desiredKey, _p37._0.key);
				case 'ExtendSelector':
					return A3(
						_rtfeldman$elm_css$Css$propertyWithWarnings,
						{
							ctor: '::',
							_0: A2(
								_elm_lang$core$Basics_ops['++'],
								'Cannot apply ',
								A2(
									_elm_lang$core$Basics_ops['++'],
									functionName,
									A2(
										_elm_lang$core$Basics_ops['++'],
										' with inapplicable Style for selector ',
										_elm_lang$core$Basics$toString(_p37._0)))),
							_1: {ctor: '[]'}
						},
						desiredKey,
						'');
				case 'NestSnippet':
					return A3(
						_rtfeldman$elm_css$Css$propertyWithWarnings,
						{
							ctor: '::',
							_0: A2(
								_elm_lang$core$Basics_ops['++'],
								'Cannot apply ',
								A2(
									_elm_lang$core$Basics_ops['++'],
									functionName,
									A2(
										_elm_lang$core$Basics_ops['++'],
										' with inapplicable Style for combinator ',
										_elm_lang$core$Basics$toString(_p37._0)))),
							_1: {ctor: '[]'}
						},
						desiredKey,
						'');
				case 'WithPseudoElement':
					return A3(
						_rtfeldman$elm_css$Css$propertyWithWarnings,
						{
							ctor: '::',
							_0: A2(
								_elm_lang$core$Basics_ops['++'],
								'Cannot apply ',
								A2(
									_elm_lang$core$Basics_ops['++'],
									functionName,
									A2(
										_elm_lang$core$Basics_ops['++'],
										' with inapplicable Style for pseudo-element setter ',
										_elm_lang$core$Basics$toString(_p37._0)))),
							_1: {ctor: '[]'}
						},
						desiredKey,
						'');
				case 'WithMedia':
					return A3(
						_rtfeldman$elm_css$Css$propertyWithWarnings,
						{
							ctor: '::',
							_0: A2(
								_elm_lang$core$Basics_ops['++'],
								'Cannot apply ',
								A2(
									_elm_lang$core$Basics_ops['++'],
									functionName,
									A2(
										_elm_lang$core$Basics_ops['++'],
										' with inapplicable Style for media query ',
										_elm_lang$core$Basics$toString(_p37._0)))),
							_1: {ctor: '[]'}
						},
						desiredKey,
						'');
				default:
					if (_p37._0.ctor === '[]') {
						return A3(
							_rtfeldman$elm_css$Css$propertyWithWarnings,
							{
								ctor: '::',
								_0: A2(
									_elm_lang$core$Basics_ops['++'],
									'Cannot apply ',
									A2(_elm_lang$core$Basics_ops['++'], functionName, ' with empty Style. ')),
								_1: {ctor: '[]'}
							},
							desiredKey,
							'');
					} else {
						if (_p37._0._1.ctor === '[]') {
							var _v12 = functionName,
								_v13 = desiredKey,
								_v14 = _p37._0._0;
							functionName = _v12;
							desiredKey = _v13;
							style = _v14;
							continue getOverloadedProperty;
						} else {
							var _v15 = functionName,
								_v16 = desiredKey,
								_v17 = _rtfeldman$elm_css$Css_Preprocess$ApplyStyles(_p37._0._1);
							functionName = _v15;
							desiredKey = _v16;
							style = _v17;
							continue getOverloadedProperty;
						}
					}
			}
		}
	});
var _rtfeldman$elm_css$Css$backgroundBlendMode = function (fn) {
	return A3(
		_rtfeldman$elm_css$Css$getOverloadedProperty,
		'backgroundBlendMode',
		'background-blend-mode',
		fn(_rtfeldman$elm_css$Css$colorValueForOverloadedProperty));
};
var _rtfeldman$elm_css$Css$cssFunction = F2(
	function (funcName, args) {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			funcName,
			A2(
				_elm_lang$core$Basics_ops['++'],
				'(',
				A2(
					_elm_lang$core$Basics_ops['++'],
					A2(_elm_lang$core$String$join, ', ', args),
					')')));
	});
var _rtfeldman$elm_css$Css$calc = F3(
	function (first, expression, second) {
		var grab = function (l) {
			return A2(_elm_lang$core$String$startsWith, 'calc(', l.value) ? A2(_elm_lang$core$String$dropLeft, 4, l.value) : l.value;
		};
		var calcs = A2(
			_elm_lang$core$String$join,
			' ',
			{
				ctor: '::',
				_0: grab(first),
				_1: {
					ctor: '::',
					_0: _rtfeldman$elm_css$Css$calcExpressionToString(expression),
					_1: {
						ctor: '::',
						_0: grab(second),
						_1: {ctor: '[]'}
					}
				}
			});
		var value = A2(
			_rtfeldman$elm_css$Css$cssFunction,
			'calc',
			{
				ctor: '::',
				_0: calcs,
				_1: {ctor: '[]'}
			});
		return {value: value, length: _rtfeldman$elm_css$Css_Structure$Compatible, lengthOrAuto: _rtfeldman$elm_css$Css_Structure$Compatible, lengthOrNumber: _rtfeldman$elm_css$Css_Structure$Compatible, lengthOrNone: _rtfeldman$elm_css$Css_Structure$Compatible, lengthOrMinMaxDimension: _rtfeldman$elm_css$Css_Structure$Compatible, lengthOrNoneOrMinMaxDimension: _rtfeldman$elm_css$Css_Structure$Compatible, textIndent: _rtfeldman$elm_css$Css_Structure$Compatible, flexBasis: _rtfeldman$elm_css$Css_Structure$Compatible, lengthOrNumberOrAutoOrNoneOrContent: _rtfeldman$elm_css$Css_Structure$Compatible, fontSize: _rtfeldman$elm_css$Css_Structure$Compatible, lengthOrAutoOrCoverOrContain: _rtfeldman$elm_css$Css_Structure$Compatible, calc: _rtfeldman$elm_css$Css_Structure$Compatible};
	});
var _rtfeldman$elm_css$Css$rgb = F3(
	function (red, green, blue) {
		var warnings = ((_elm_lang$core$Native_Utils.cmp(red, 0) < 0) || ((_elm_lang$core$Native_Utils.cmp(red, 255) > 0) || ((_elm_lang$core$Native_Utils.cmp(green, 0) < 0) || ((_elm_lang$core$Native_Utils.cmp(green, 255) > 0) || ((_elm_lang$core$Native_Utils.cmp(blue, 0) < 0) || (_elm_lang$core$Native_Utils.cmp(blue, 255) > 0)))))) ? {
			ctor: '::',
			_0: A2(
				_elm_lang$core$Basics_ops['++'],
				'RGB color values must be between 0 and 255. rgb(',
				A2(
					_elm_lang$core$Basics_ops['++'],
					_elm_lang$core$Basics$toString(red),
					A2(
						_elm_lang$core$Basics_ops['++'],
						', ',
						A2(
							_elm_lang$core$Basics_ops['++'],
							_elm_lang$core$Basics$toString(green),
							A2(
								_elm_lang$core$Basics_ops['++'],
								', ',
								A2(
									_elm_lang$core$Basics_ops['++'],
									_elm_lang$core$Basics$toString(blue),
									') is not valid.')))))),
			_1: {ctor: '[]'}
		} : {ctor: '[]'};
		return {
			value: A2(
				_rtfeldman$elm_css$Css$cssFunction,
				'rgb',
				A2(
					_elm_lang$core$List$map,
					_rtfeldman$elm_css$Css$numberToString,
					{
						ctor: '::',
						_0: red,
						_1: {
							ctor: '::',
							_0: green,
							_1: {
								ctor: '::',
								_0: blue,
								_1: {ctor: '[]'}
							}
						}
					})),
			color: _rtfeldman$elm_css$Css_Structure$Compatible,
			warnings: warnings,
			red: red,
			green: green,
			blue: blue,
			alpha: 1
		};
	});
var _rtfeldman$elm_css$Css$rgba = F4(
	function (red, green, blue, alpha) {
		var warnings = ((_elm_lang$core$Native_Utils.cmp(red, 0) < 0) || ((_elm_lang$core$Native_Utils.cmp(red, 255) > 0) || ((_elm_lang$core$Native_Utils.cmp(green, 0) < 0) || ((_elm_lang$core$Native_Utils.cmp(green, 255) > 0) || ((_elm_lang$core$Native_Utils.cmp(blue, 0) < 0) || ((_elm_lang$core$Native_Utils.cmp(blue, 255) > 0) || ((_elm_lang$core$Native_Utils.cmp(alpha, 0) < 0) || (_elm_lang$core$Native_Utils.cmp(alpha, 1) > 0)))))))) ? {
			ctor: '::',
			_0: A2(
				_elm_lang$core$Basics_ops['++'],
				'RGB color values must be between 0 and 255, and the alpha in RGBA must be between 0 and 1. rgba(',
				A2(
					_elm_lang$core$Basics_ops['++'],
					_elm_lang$core$Basics$toString(red),
					A2(
						_elm_lang$core$Basics_ops['++'],
						', ',
						A2(
							_elm_lang$core$Basics_ops['++'],
							_elm_lang$core$Basics$toString(green),
							A2(
								_elm_lang$core$Basics_ops['++'],
								', ',
								A2(
									_elm_lang$core$Basics_ops['++'],
									_elm_lang$core$Basics$toString(blue),
									A2(
										_elm_lang$core$Basics_ops['++'],
										', ',
										A2(
											_elm_lang$core$Basics_ops['++'],
											_elm_lang$core$Basics$toString(alpha),
											') is not valid.')))))))),
			_1: {ctor: '[]'}
		} : {ctor: '[]'};
		return {
			value: A2(
				_rtfeldman$elm_css$Css$cssFunction,
				'rgba',
				A2(
					_elm_lang$core$Basics_ops['++'],
					A2(
						_elm_lang$core$List$map,
						_rtfeldman$elm_css$Css$numberToString,
						{
							ctor: '::',
							_0: red,
							_1: {
								ctor: '::',
								_0: green,
								_1: {
									ctor: '::',
									_0: blue,
									_1: {ctor: '[]'}
								}
							}
						}),
					{
						ctor: '::',
						_0: _rtfeldman$elm_css$Css$numberToString(alpha),
						_1: {ctor: '[]'}
					})),
			color: _rtfeldman$elm_css$Css_Structure$Compatible,
			warnings: warnings,
			red: red,
			green: green,
			blue: blue,
			alpha: alpha
		};
	});
var _rtfeldman$elm_css$Css$hsl = F3(
	function (hue, saturation, lightness) {
		var valuesList = {
			ctor: '::',
			_0: _rtfeldman$elm_css$Css$numberToString(hue),
			_1: {
				ctor: '::',
				_0: _rtfeldman$elm_css$Css$numericalPercentageToString(saturation),
				_1: {
					ctor: '::',
					_0: _rtfeldman$elm_css$Css$numericalPercentageToString(lightness),
					_1: {ctor: '[]'}
				}
			}
		};
		var value = A2(_rtfeldman$elm_css$Css$cssFunction, 'hsl', valuesList);
		var warnings = ((_elm_lang$core$Native_Utils.cmp(hue, 360) > 0) || ((_elm_lang$core$Native_Utils.cmp(hue, 0) < 0) || ((_elm_lang$core$Native_Utils.cmp(saturation, 1) > 0) || ((_elm_lang$core$Native_Utils.cmp(saturation, 0) < 0) || ((_elm_lang$core$Native_Utils.cmp(lightness, 1) > 0) || (_elm_lang$core$Native_Utils.cmp(lightness, 0) < 0)))))) ? {
			ctor: '::',
			_0: A2(
				_elm_lang$core$Basics_ops['++'],
				'HSL color values must have an H value between 0 and 360 (as in degrees) and S and L values between 0 and 1. ',
				A2(_elm_lang$core$Basics_ops['++'], value, ' is not valid.')),
			_1: {ctor: '[]'}
		} : {ctor: '[]'};
		return A6(_rtfeldman$elm_css$Css$hslaToRgba, value, warnings, hue, saturation, lightness, 1);
	});
var _rtfeldman$elm_css$Css$hsla = F4(
	function (hue, saturation, lightness, alpha) {
		var valuesList = {
			ctor: '::',
			_0: _rtfeldman$elm_css$Css$numberToString(hue),
			_1: {
				ctor: '::',
				_0: _rtfeldman$elm_css$Css$numericalPercentageToString(saturation),
				_1: {
					ctor: '::',
					_0: _rtfeldman$elm_css$Css$numericalPercentageToString(lightness),
					_1: {
						ctor: '::',
						_0: _rtfeldman$elm_css$Css$numberToString(alpha),
						_1: {ctor: '[]'}
					}
				}
			}
		};
		var value = A2(_rtfeldman$elm_css$Css$cssFunction, 'hsla', valuesList);
		var warnings = ((_elm_lang$core$Native_Utils.cmp(hue, 360) > 0) || ((_elm_lang$core$Native_Utils.cmp(hue, 0) < 0) || ((_elm_lang$core$Native_Utils.cmp(saturation, 1) > 0) || ((_elm_lang$core$Native_Utils.cmp(saturation, 0) < 0) || ((_elm_lang$core$Native_Utils.cmp(lightness, 1) > 0) || ((_elm_lang$core$Native_Utils.cmp(lightness, 0) < 0) || ((_elm_lang$core$Native_Utils.cmp(alpha, 1) > 0) || (_elm_lang$core$Native_Utils.cmp(alpha, 0) < 0)))))))) ? {
			ctor: '::',
			_0: A2(
				_elm_lang$core$Basics_ops['++'],
				'HSLA color values must have an H value between 0 and 360 (as in degrees) and S, L, and A values between 0 and 1. ',
				A2(_elm_lang$core$Basics_ops['++'], value, ' is not valid.')),
			_1: {ctor: '[]'}
		} : {ctor: '[]'};
		return A6(_rtfeldman$elm_css$Css$hslaToRgba, value, warnings, hue, saturation, lightness, alpha);
	});
var _rtfeldman$elm_css$Css$matrix = F6(
	function (a, b, c, d, tx, ty) {
		return {
			value: A2(
				_rtfeldman$elm_css$Css$cssFunction,
				'matrix',
				A2(
					_elm_lang$core$List$map,
					_rtfeldman$elm_css$Css$numberToString,
					{
						ctor: '::',
						_0: a,
						_1: {
							ctor: '::',
							_0: b,
							_1: {
								ctor: '::',
								_0: c,
								_1: {
									ctor: '::',
									_0: d,
									_1: {
										ctor: '::',
										_0: tx,
										_1: {
											ctor: '::',
											_0: ty,
											_1: {ctor: '[]'}
										}
									}
								}
							}
						}
					})),
			transform: _rtfeldman$elm_css$Css_Structure$Compatible
		};
	});
var _rtfeldman$elm_css$Css$matrix3d = function (a1) {
	return function (a2) {
		return function (a3) {
			return function (a4) {
				return function (b1) {
					return function (b2) {
						return function (b3) {
							return function (b4) {
								return function (c1) {
									return function (c2) {
										return function (c3) {
											return function (c4) {
												return function (d1) {
													return function (d2) {
														return function (d3) {
															return function (d4) {
																return {
																	value: A2(
																		_rtfeldman$elm_css$Css$cssFunction,
																		'matrix3d',
																		A2(
																			_elm_lang$core$List$map,
																			_rtfeldman$elm_css$Css$numberToString,
																			{
																				ctor: '::',
																				_0: a1,
																				_1: {
																					ctor: '::',
																					_0: a2,
																					_1: {
																						ctor: '::',
																						_0: a3,
																						_1: {
																							ctor: '::',
																							_0: a4,
																							_1: {
																								ctor: '::',
																								_0: b1,
																								_1: {
																									ctor: '::',
																									_0: b2,
																									_1: {
																										ctor: '::',
																										_0: b3,
																										_1: {
																											ctor: '::',
																											_0: b4,
																											_1: {
																												ctor: '::',
																												_0: c1,
																												_1: {
																													ctor: '::',
																													_0: c2,
																													_1: {
																														ctor: '::',
																														_0: c3,
																														_1: {
																															ctor: '::',
																															_0: c4,
																															_1: {
																																ctor: '::',
																																_0: d1,
																																_1: {
																																	ctor: '::',
																																	_0: d2,
																																	_1: {
																																		ctor: '::',
																																		_0: d3,
																																		_1: {
																																			ctor: '::',
																																			_0: d4,
																																			_1: {ctor: '[]'}
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			})),
																	transform: _rtfeldman$elm_css$Css_Structure$Compatible
																};
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _rtfeldman$elm_css$Css$perspective = function (l) {
	return {
		value: A2(
			_rtfeldman$elm_css$Css$cssFunction,
			'perspective',
			{
				ctor: '::',
				_0: _rtfeldman$elm_css$Css$numberToString(l),
				_1: {ctor: '[]'}
			}),
		transform: _rtfeldman$elm_css$Css_Structure$Compatible
	};
};
var _rtfeldman$elm_css$Css$rotate = function (_p38) {
	var _p39 = _p38;
	return {
		value: A2(
			_rtfeldman$elm_css$Css$cssFunction,
			'rotate',
			{
				ctor: '::',
				_0: _p39.value,
				_1: {ctor: '[]'}
			}),
		transform: _rtfeldman$elm_css$Css_Structure$Compatible
	};
};
var _rtfeldman$elm_css$Css$rotateX = function (_p40) {
	var _p41 = _p40;
	return {
		value: A2(
			_rtfeldman$elm_css$Css$cssFunction,
			'rotateX',
			{
				ctor: '::',
				_0: _p41.value,
				_1: {ctor: '[]'}
			}),
		transform: _rtfeldman$elm_css$Css_Structure$Compatible
	};
};
var _rtfeldman$elm_css$Css$rotateY = function (_p42) {
	var _p43 = _p42;
	return {
		value: A2(
			_rtfeldman$elm_css$Css$cssFunction,
			'rotateY',
			{
				ctor: '::',
				_0: _p43.value,
				_1: {ctor: '[]'}
			}),
		transform: _rtfeldman$elm_css$Css_Structure$Compatible
	};
};
var _rtfeldman$elm_css$Css$rotateZ = function (_p44) {
	var _p45 = _p44;
	return {
		value: A2(
			_rtfeldman$elm_css$Css$cssFunction,
			'rotateZ',
			{
				ctor: '::',
				_0: _p45.value,
				_1: {ctor: '[]'}
			}),
		transform: _rtfeldman$elm_css$Css_Structure$Compatible
	};
};
var _rtfeldman$elm_css$Css$rotate3d = F4(
	function (x, y, z, _p46) {
		var _p47 = _p46;
		var coordsAsStrings = A2(
			_elm_lang$core$List$map,
			_rtfeldman$elm_css$Css$numberToString,
			{
				ctor: '::',
				_0: x,
				_1: {
					ctor: '::',
					_0: y,
					_1: {
						ctor: '::',
						_0: z,
						_1: {ctor: '[]'}
					}
				}
			});
		return {
			value: A2(
				_rtfeldman$elm_css$Css$cssFunction,
				'rotate3d',
				A2(
					_elm_lang$core$Basics_ops['++'],
					coordsAsStrings,
					{
						ctor: '::',
						_0: _p47.value,
						_1: {ctor: '[]'}
					})),
			transform: _rtfeldman$elm_css$Css_Structure$Compatible
		};
	});
var _rtfeldman$elm_css$Css$scale = function (x) {
	return {
		value: A2(
			_rtfeldman$elm_css$Css$cssFunction,
			'scale',
			{
				ctor: '::',
				_0: _rtfeldman$elm_css$Css$numberToString(x),
				_1: {ctor: '[]'}
			}),
		transform: _rtfeldman$elm_css$Css_Structure$Compatible
	};
};
var _rtfeldman$elm_css$Css$scale2 = F2(
	function (x, y) {
		return {
			value: A2(
				_rtfeldman$elm_css$Css$cssFunction,
				'scale',
				A2(
					_elm_lang$core$List$map,
					_rtfeldman$elm_css$Css$numberToString,
					{
						ctor: '::',
						_0: x,
						_1: {
							ctor: '::',
							_0: y,
							_1: {ctor: '[]'}
						}
					})),
			transform: _rtfeldman$elm_css$Css_Structure$Compatible
		};
	});
var _rtfeldman$elm_css$Css$scaleX = function (x) {
	return {
		value: A2(
			_rtfeldman$elm_css$Css$cssFunction,
			'scaleX',
			{
				ctor: '::',
				_0: _rtfeldman$elm_css$Css$numberToString(x),
				_1: {ctor: '[]'}
			}),
		transform: _rtfeldman$elm_css$Css_Structure$Compatible
	};
};
var _rtfeldman$elm_css$Css$scaleY = function (y) {
	return {
		value: A2(
			_rtfeldman$elm_css$Css$cssFunction,
			'scaleY',
			{
				ctor: '::',
				_0: _rtfeldman$elm_css$Css$numberToString(y),
				_1: {ctor: '[]'}
			}),
		transform: _rtfeldman$elm_css$Css_Structure$Compatible
	};
};
var _rtfeldman$elm_css$Css$scale3d = F3(
	function (x, y, z) {
		return {
			value: A2(
				_rtfeldman$elm_css$Css$cssFunction,
				'scale3d',
				A2(
					_elm_lang$core$List$map,
					_rtfeldman$elm_css$Css$numberToString,
					{
						ctor: '::',
						_0: x,
						_1: {
							ctor: '::',
							_0: y,
							_1: {
								ctor: '::',
								_0: z,
								_1: {ctor: '[]'}
							}
						}
					})),
			transform: _rtfeldman$elm_css$Css_Structure$Compatible
		};
	});
var _rtfeldman$elm_css$Css$skew = function (_p48) {
	var _p49 = _p48;
	return {
		value: A2(
			_rtfeldman$elm_css$Css$cssFunction,
			'skew',
			{
				ctor: '::',
				_0: _p49.value,
				_1: {ctor: '[]'}
			}),
		transform: _rtfeldman$elm_css$Css_Structure$Compatible
	};
};
var _rtfeldman$elm_css$Css$skew2 = F2(
	function (ax, ay) {
		return {
			value: A2(
				_rtfeldman$elm_css$Css$cssFunction,
				'skew',
				{
					ctor: '::',
					_0: ax.value,
					_1: {
						ctor: '::',
						_0: ay.value,
						_1: {ctor: '[]'}
					}
				}),
			transform: _rtfeldman$elm_css$Css_Structure$Compatible
		};
	});
var _rtfeldman$elm_css$Css$skewX = function (_p50) {
	var _p51 = _p50;
	return {
		value: A2(
			_rtfeldman$elm_css$Css$cssFunction,
			'skewX',
			{
				ctor: '::',
				_0: _p51.value,
				_1: {ctor: '[]'}
			}),
		transform: _rtfeldman$elm_css$Css_Structure$Compatible
	};
};
var _rtfeldman$elm_css$Css$skewY = function (_p52) {
	var _p53 = _p52;
	return {
		value: A2(
			_rtfeldman$elm_css$Css$cssFunction,
			'skewY',
			{
				ctor: '::',
				_0: _p53.value,
				_1: {ctor: '[]'}
			}),
		transform: _rtfeldman$elm_css$Css_Structure$Compatible
	};
};
var _rtfeldman$elm_css$Css$translate = function (_p54) {
	var _p55 = _p54;
	return {
		value: A2(
			_rtfeldman$elm_css$Css$cssFunction,
			'translate',
			{
				ctor: '::',
				_0: _p55.value,
				_1: {ctor: '[]'}
			}),
		transform: _rtfeldman$elm_css$Css_Structure$Compatible
	};
};
var _rtfeldman$elm_css$Css$translate2 = F2(
	function (tx, ty) {
		return {
			value: A2(
				_rtfeldman$elm_css$Css$cssFunction,
				'translate',
				{
					ctor: '::',
					_0: tx.value,
					_1: {
						ctor: '::',
						_0: ty.value,
						_1: {ctor: '[]'}
					}
				}),
			transform: _rtfeldman$elm_css$Css_Structure$Compatible
		};
	});
var _rtfeldman$elm_css$Css$translateX = function (_p56) {
	var _p57 = _p56;
	return {
		value: A2(
			_rtfeldman$elm_css$Css$cssFunction,
			'translateX',
			{
				ctor: '::',
				_0: _p57.value,
				_1: {ctor: '[]'}
			}),
		transform: _rtfeldman$elm_css$Css_Structure$Compatible
	};
};
var _rtfeldman$elm_css$Css$translateY = function (_p58) {
	var _p59 = _p58;
	return {
		value: A2(
			_rtfeldman$elm_css$Css$cssFunction,
			'translateY',
			{
				ctor: '::',
				_0: _p59.value,
				_1: {ctor: '[]'}
			}),
		transform: _rtfeldman$elm_css$Css_Structure$Compatible
	};
};
var _rtfeldman$elm_css$Css$translateZ = function (_p60) {
	var _p61 = _p60;
	return {
		value: A2(
			_rtfeldman$elm_css$Css$cssFunction,
			'translateZ',
			{
				ctor: '::',
				_0: _p61.value,
				_1: {ctor: '[]'}
			}),
		transform: _rtfeldman$elm_css$Css_Structure$Compatible
	};
};
var _rtfeldman$elm_css$Css$translate3d = F3(
	function (tx, ty, tz) {
		return {
			value: A2(
				_rtfeldman$elm_css$Css$cssFunction,
				'translate3d',
				{
					ctor: '::',
					_0: tx.value,
					_1: {
						ctor: '::',
						_0: ty.value,
						_1: {
							ctor: '::',
							_0: tz.value,
							_1: {ctor: '[]'}
						}
					}
				}),
			transform: _rtfeldman$elm_css$Css_Structure$Compatible
		};
	});
var _rtfeldman$elm_css$Css$linearGradient = F3(
	function (stop1, stop2, stops) {
		return {
			value: A2(
				_rtfeldman$elm_css$Css$cssFunction,
				'linear-gradient',
				_rtfeldman$elm_css$Css$collectStops(
					A2(
						_elm_lang$core$Basics_ops['++'],
						{
							ctor: '::',
							_0: stop1,
							_1: {
								ctor: '::',
								_0: stop2,
								_1: {ctor: '[]'}
							}
						},
						stops))),
			backgroundImage: _rtfeldman$elm_css$Css_Structure$Compatible,
			listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible
		};
	});
var _rtfeldman$elm_css$Css$linearGradient2 = F4(
	function (dir, stop1, stop2, stops) {
		return {
			value: A2(
				_rtfeldman$elm_css$Css$cssFunction,
				'linear-gradient',
				A2(
					F2(
						function (x, y) {
							return {ctor: '::', _0: x, _1: y};
						}),
					dir.value,
					_rtfeldman$elm_css$Css$collectStops(
						A2(
							_elm_lang$core$Basics_ops['++'],
							{
								ctor: '::',
								_0: stop1,
								_1: {
									ctor: '::',
									_0: stop2,
									_1: {ctor: '[]'}
								}
							},
							stops)))),
			backgroundImage: _rtfeldman$elm_css$Css_Structure$Compatible,
			listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible
		};
	});
var _rtfeldman$elm_css$Css$CalculatedLength = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return function (m) {
													return {value: a, length: b, lengthOrAuto: c, lengthOrNumber: d, lengthOrNone: e, lengthOrMinMaxDimension: f, lengthOrNoneOrMinMaxDimension: g, textIndent: h, flexBasis: i, lengthOrNumberOrAutoOrNoneOrContent: j, fontSize: k, lengthOrAutoOrCoverOrContain: l, calc: m};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _rtfeldman$elm_css$Css$ExplicitLength = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return function (m) {
													return function (n) {
														return function (o) {
															return function (p) {
																return function (q) {
																	return {value: a, numericValue: b, units: c, unitLabel: d, length: e, lengthOrAuto: f, lengthOrNumber: g, lengthOrNone: h, lengthOrMinMaxDimension: i, lengthOrNoneOrMinMaxDimension: j, textIndent: k, flexBasis: l, absoluteLength: m, lengthOrNumberOrAutoOrNoneOrContent: n, fontSize: o, lengthOrAutoOrCoverOrContain: p, calc: q};
																};
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _rtfeldman$elm_css$Css$NonMixable = {};
var _rtfeldman$elm_css$Css$BasicProperty = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return function (m) {
													return function (n) {
														return function (o) {
															return function (p) {
																return function (q) {
																	return function (r) {
																		return function (s) {
																			return function (t) {
																				return function (u) {
																					return function (v) {
																						return function (w) {
																							return function (x) {
																								return function (y) {
																									return function (z) {
																										return function (_1) {
																											return function (_2) {
																												return function (_3) {
																													return function (_4) {
																														return function (_5) {
																															return function (_6) {
																																return function (_7) {
																																	return function (_8) {
																																		return function (_9) {
																																			return function (_10) {
																																				return function (_11) {
																																					return function (_12) {
																																						return function (_13) {
																																							return function (_14) {
																																								return function (_15) {
																																									return function (_16) {
																																										return function (_17) {
																																											return function (_18) {
																																												return function (_19) {
																																													return function (_20) {
																																														return function (_21) {
																																															return function (_22) {
																																																return function (_23) {
																																																	return function (_24) {
																																																		return function (_25) {
																																																			return function (_26) {
																																																				return function (_27) {
																																																					return function (_28) {
																																																						return {value: a, all: b, alignItems: c, borderStyle: d, boxSizing: e, color: f, cursor: g, display: h, flexBasis: i, flexWrap: j, flexDirection: k, flexDirectionOrWrap: l, justifyContent: m, none: n, number: o, outline: p, overflow: q, pointerEvents: r, visibility: s, textDecorationLine: t, textRendering: u, textIndent: v, textDecorationStyle: w, textTransform: x, length: y, lengthOrAuto: z, lengthOrNone: _1, lengthOrNumber: _2, lengthOrMinMaxDimension: _3, lengthOrNoneOrMinMaxDimension: _4, lengthOrNumberOrAutoOrNoneOrContent: _5, listStyleType: _6, listStylePosition: _7, listStyleTypeOrPositionOrImage: _8, fontFamily: _9, fontSize: _10, fontStyle: _11, fontWeight: _12, fontVariant: _13, units: _14, numericValue: _15, unitLabel: _16, warnings: _17, backgroundRepeat: _18, backgroundRepeatShorthand: _19, backgroundAttachment: _20, backgroundBlendMode: _21, backgroundOrigin: _22, backgroundImage: _23, lengthOrAutoOrCoverOrContain: _24, intOrAuto: _25, touchAction: _26, whiteSpace: _27, tableLayout: _28};
																																																					};
																																																				};
																																																			};
																																																		};
																																																	};
																																																};
																																															};
																																														};
																																													};
																																												};
																																											};
																																										};
																																									};
																																								};
																																							};
																																						};
																																					};
																																				};
																																			};
																																		};
																																	};
																																};
																															};
																														};
																													};
																												};
																											};
																										};
																									};
																								};
																							};
																						};
																					};
																				};
																			};
																		};
																	};
																};
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _rtfeldman$elm_css$Css$Normal = F7(
	function (a, b, c, d, e, f, g) {
		return {value: a, warnings: b, fontStyle: c, fontWeight: d, featureTagValue: e, overflowWrap: f, whiteSpace: g};
	});
var _rtfeldman$elm_css$Css$Subtraction = {ctor: 'Subtraction'};
var _rtfeldman$elm_css$Css$minus = _rtfeldman$elm_css$Css$Subtraction;
var _rtfeldman$elm_css$Css$Addition = {ctor: 'Addition'};
var _rtfeldman$elm_css$Css$plus = _rtfeldman$elm_css$Css$Addition;
var _rtfeldman$elm_css$Css$PercentageUnits = {ctor: 'PercentageUnits'};
var _rtfeldman$elm_css$Css$pct = A2(_rtfeldman$elm_css$Css$lengthConverter, _rtfeldman$elm_css$Css$PercentageUnits, '%');
var _rtfeldman$elm_css$Css$EmUnits = {ctor: 'EmUnits'};
var _rtfeldman$elm_css$Css$em = A2(_rtfeldman$elm_css$Css$lengthConverter, _rtfeldman$elm_css$Css$EmUnits, 'em');
var _rtfeldman$elm_css$Css$ExUnits = {ctor: 'ExUnits'};
var _rtfeldman$elm_css$Css$ex = A2(_rtfeldman$elm_css$Css$lengthConverter, _rtfeldman$elm_css$Css$ExUnits, 'ex');
var _rtfeldman$elm_css$Css$ChUnits = {ctor: 'ChUnits'};
var _rtfeldman$elm_css$Css$ch = A2(_rtfeldman$elm_css$Css$lengthConverter, _rtfeldman$elm_css$Css$ChUnits, 'ch');
var _rtfeldman$elm_css$Css$RemUnits = {ctor: 'RemUnits'};
var _rtfeldman$elm_css$Css$rem = A2(_rtfeldman$elm_css$Css$lengthConverter, _rtfeldman$elm_css$Css$RemUnits, 'rem');
var _rtfeldman$elm_css$Css$VhUnits = {ctor: 'VhUnits'};
var _rtfeldman$elm_css$Css$vh = A2(_rtfeldman$elm_css$Css$lengthConverter, _rtfeldman$elm_css$Css$VhUnits, 'vh');
var _rtfeldman$elm_css$Css$VwUnits = {ctor: 'VwUnits'};
var _rtfeldman$elm_css$Css$vw = A2(_rtfeldman$elm_css$Css$lengthConverter, _rtfeldman$elm_css$Css$VwUnits, 'vw');
var _rtfeldman$elm_css$Css$VMinUnits = {ctor: 'VMinUnits'};
var _rtfeldman$elm_css$Css$vmin = A2(_rtfeldman$elm_css$Css$lengthConverter, _rtfeldman$elm_css$Css$VMinUnits, 'vmin');
var _rtfeldman$elm_css$Css$VMaxUnits = {ctor: 'VMaxUnits'};
var _rtfeldman$elm_css$Css$vmax = A2(_rtfeldman$elm_css$Css$lengthConverter, _rtfeldman$elm_css$Css$VMaxUnits, 'vmax');
var _rtfeldman$elm_css$Css$PxUnits = {ctor: 'PxUnits'};
var _rtfeldman$elm_css$Css$px = A2(_rtfeldman$elm_css$Css$lengthConverter, _rtfeldman$elm_css$Css$PxUnits, 'px');
var _rtfeldman$elm_css$Css$MMUnits = {ctor: 'MMUnits'};
var _rtfeldman$elm_css$Css$mm = A2(_rtfeldman$elm_css$Css$lengthConverter, _rtfeldman$elm_css$Css$MMUnits, 'mm');
var _rtfeldman$elm_css$Css$CMUnits = {ctor: 'CMUnits'};
var _rtfeldman$elm_css$Css$cm = A2(_rtfeldman$elm_css$Css$lengthConverter, _rtfeldman$elm_css$Css$CMUnits, 'cm');
var _rtfeldman$elm_css$Css$InchUnits = {ctor: 'InchUnits'};
var _rtfeldman$elm_css$Css$inches = A2(_rtfeldman$elm_css$Css$lengthConverter, _rtfeldman$elm_css$Css$InchUnits, 'in');
var _rtfeldman$elm_css$Css$PtUnits = {ctor: 'PtUnits'};
var _rtfeldman$elm_css$Css$pt = A2(_rtfeldman$elm_css$Css$lengthConverter, _rtfeldman$elm_css$Css$PtUnits, 'pt');
var _rtfeldman$elm_css$Css$PcUnits = {ctor: 'PcUnits'};
var _rtfeldman$elm_css$Css$pc = A2(_rtfeldman$elm_css$Css$lengthConverter, _rtfeldman$elm_css$Css$PcUnits, 'pc');
var _rtfeldman$elm_css$Css$UnitlessInteger = {ctor: 'UnitlessInteger'};
var _rtfeldman$elm_css$Css$zero = {value: '0', length: _rtfeldman$elm_css$Css_Structure$Compatible, lengthOrNumber: _rtfeldman$elm_css$Css_Structure$Compatible, lengthOrNone: _rtfeldman$elm_css$Css_Structure$Compatible, lengthOrAuto: _rtfeldman$elm_css$Css_Structure$Compatible, lengthOrMinMaxDimension: _rtfeldman$elm_css$Css_Structure$Compatible, lengthOrNoneOrMinMaxDimension: _rtfeldman$elm_css$Css_Structure$Compatible, number: _rtfeldman$elm_css$Css_Structure$Compatible, outline: _rtfeldman$elm_css$Css_Structure$Compatible, units: _rtfeldman$elm_css$Css$UnitlessInteger, unitLabel: '', numericValue: 0, lengthOrAutoOrCoverOrContain: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css$int = function (val) {
	return {
		value: _rtfeldman$elm_css$Css$numberToString(val),
		lengthOrNumber: _rtfeldman$elm_css$Css_Structure$Compatible,
		number: _rtfeldman$elm_css$Css_Structure$Compatible,
		fontWeight: _rtfeldman$elm_css$Css_Structure$Compatible,
		lengthOrNumberOrAutoOrNoneOrContent: _rtfeldman$elm_css$Css_Structure$Compatible,
		intOrAuto: _rtfeldman$elm_css$Css_Structure$Compatible,
		numericValue: _elm_lang$core$Basics$toFloat(val),
		unitLabel: '',
		units: _rtfeldman$elm_css$Css$UnitlessInteger
	};
};
var _rtfeldman$elm_css$Css$UnitlessFloat = {ctor: 'UnitlessFloat'};
var _rtfeldman$elm_css$Css$num = function (val) {
	return {
		value: _rtfeldman$elm_css$Css$numberToString(val),
		lengthOrNumber: _rtfeldman$elm_css$Css_Structure$Compatible,
		number: _rtfeldman$elm_css$Css_Structure$Compatible,
		lengthOrNumberOrAutoOrNoneOrContent: _rtfeldman$elm_css$Css_Structure$Compatible,
		numericValue: val,
		unitLabel: '',
		units: _rtfeldman$elm_css$Css$UnitlessFloat
	};
};
var _rtfeldman$elm_css$Css$IncompatibleUnits = {ctor: 'IncompatibleUnits'};
var _rtfeldman$elm_css$Css$initial = {
	value: 'initial',
	overflow: _rtfeldman$elm_css$Css_Structure$Compatible,
	visibility: _rtfeldman$elm_css$Css_Structure$Compatible,
	none: _rtfeldman$elm_css$Css_Structure$Compatible,
	number: _rtfeldman$elm_css$Css_Structure$Compatible,
	textDecorationLine: _rtfeldman$elm_css$Css_Structure$Compatible,
	textRendering: _rtfeldman$elm_css$Css_Structure$Compatible,
	textIndent: _rtfeldman$elm_css$Css_Structure$Compatible,
	textDecorationStyle: _rtfeldman$elm_css$Css_Structure$Compatible,
	textTransform: _rtfeldman$elm_css$Css_Structure$Compatible,
	borderStyle: _rtfeldman$elm_css$Css_Structure$Compatible,
	boxSizing: _rtfeldman$elm_css$Css_Structure$Compatible,
	color: _rtfeldman$elm_css$Css_Structure$Compatible,
	cursor: _rtfeldman$elm_css$Css_Structure$Compatible,
	display: _rtfeldman$elm_css$Css_Structure$Compatible,
	all: _rtfeldman$elm_css$Css_Structure$Compatible,
	alignItems: _rtfeldman$elm_css$Css_Structure$Compatible,
	justifyContent: _rtfeldman$elm_css$Css_Structure$Compatible,
	length: _rtfeldman$elm_css$Css_Structure$Compatible,
	lengthOrAuto: _rtfeldman$elm_css$Css_Structure$Compatible,
	lengthOrNone: _rtfeldman$elm_css$Css_Structure$Compatible,
	lengthOrNumber: _rtfeldman$elm_css$Css_Structure$Compatible,
	lengthOrMinMaxDimension: _rtfeldman$elm_css$Css_Structure$Compatible,
	lengthOrNoneOrMinMaxDimension: _rtfeldman$elm_css$Css_Structure$Compatible,
	listStyleType: _rtfeldman$elm_css$Css_Structure$Compatible,
	listStylePosition: _rtfeldman$elm_css$Css_Structure$Compatible,
	listStyleTypeOrPositionOrImage: _rtfeldman$elm_css$Css_Structure$Compatible,
	flexBasis: _rtfeldman$elm_css$Css_Structure$Compatible,
	flexWrap: _rtfeldman$elm_css$Css_Structure$Compatible,
	flexDirection: _rtfeldman$elm_css$Css_Structure$Compatible,
	flexDirectionOrWrap: _rtfeldman$elm_css$Css_Structure$Compatible,
	lengthOrNumberOrAutoOrNoneOrContent: _rtfeldman$elm_css$Css_Structure$Compatible,
	fontFamily: _rtfeldman$elm_css$Css_Structure$Compatible,
	fontSize: _rtfeldman$elm_css$Css_Structure$Compatible,
	fontStyle: _rtfeldman$elm_css$Css_Structure$Compatible,
	fontWeight: _rtfeldman$elm_css$Css_Structure$Compatible,
	fontVariant: _rtfeldman$elm_css$Css_Structure$Compatible,
	outline: _rtfeldman$elm_css$Css_Structure$Compatible,
	pointerEvents: _rtfeldman$elm_css$Css_Structure$Compatible,
	units: _rtfeldman$elm_css$Css$IncompatibleUnits,
	numericValue: 0,
	unitLabel: '',
	warnings: {ctor: '[]'},
	backgroundRepeat: _rtfeldman$elm_css$Css_Structure$Compatible,
	backgroundRepeatShorthand: _rtfeldman$elm_css$Css_Structure$Compatible,
	backgroundAttachment: _rtfeldman$elm_css$Css_Structure$Compatible,
	backgroundBlendMode: _rtfeldman$elm_css$Css_Structure$Compatible,
	backgroundOrigin: _rtfeldman$elm_css$Css_Structure$Compatible,
	backgroundImage: _rtfeldman$elm_css$Css_Structure$Compatible,
	lengthOrAutoOrCoverOrContain: _rtfeldman$elm_css$Css_Structure$Compatible,
	intOrAuto: _rtfeldman$elm_css$Css_Structure$Compatible,
	touchAction: _rtfeldman$elm_css$Css_Structure$Compatible,
	whiteSpace: _rtfeldman$elm_css$Css_Structure$Compatible,
	tableLayout: _rtfeldman$elm_css$Css_Structure$Compatible
};
var _rtfeldman$elm_css$Css$unset = _elm_lang$core$Native_Utils.update(
	_rtfeldman$elm_css$Css$initial,
	{value: 'unset'});
var _rtfeldman$elm_css$Css$inherit = _elm_lang$core$Native_Utils.update(
	_rtfeldman$elm_css$Css$initial,
	{value: 'inherit'});
var _rtfeldman$elm_css$Css$lengthForOverloadedProperty = A3(_rtfeldman$elm_css$Css$lengthConverter, _rtfeldman$elm_css$Css$IncompatibleUnits, '', 0);
var _rtfeldman$elm_css$Css$alignItems = function (fn) {
	return A3(
		_rtfeldman$elm_css$Css$getOverloadedProperty,
		'alignItems',
		'align-items',
		fn(_rtfeldman$elm_css$Css$lengthForOverloadedProperty));
};
var _rtfeldman$elm_css$Css$alignSelf = function (fn) {
	return A3(
		_rtfeldman$elm_css$Css$getOverloadedProperty,
		'alignSelf',
		'align-self',
		fn(_rtfeldman$elm_css$Css$lengthForOverloadedProperty));
};
var _rtfeldman$elm_css$Css$justifyContent = function (fn) {
	return A3(
		_rtfeldman$elm_css$Css$getOverloadedProperty,
		'justifyContent',
		'justify-content',
		fn(_rtfeldman$elm_css$Css$lengthForOverloadedProperty));
};
var _rtfeldman$elm_css$Css$float = function (fn) {
	return A3(
		_rtfeldman$elm_css$Css$getOverloadedProperty,
		'float',
		'float',
		fn(_rtfeldman$elm_css$Css$lengthForOverloadedProperty));
};
var _rtfeldman$elm_css$Css$textAlignLast = function (fn) {
	return A3(
		_rtfeldman$elm_css$Css$getOverloadedProperty,
		'textAlignLast',
		'text-align-last',
		fn(_rtfeldman$elm_css$Css$lengthForOverloadedProperty));
};
var _rtfeldman$elm_css$Css$textAlign = function (fn) {
	return A3(
		_rtfeldman$elm_css$Css$getOverloadedProperty,
		'textAlign',
		'text-align',
		fn(_rtfeldman$elm_css$Css$lengthForOverloadedProperty));
};
var _rtfeldman$elm_css$Css$verticalAlign = function (fn) {
	return A3(
		_rtfeldman$elm_css$Css$getOverloadedProperty,
		'verticalAlign',
		'vertical-align',
		fn(_rtfeldman$elm_css$Css$lengthForOverloadedProperty));
};
var _rtfeldman$elm_css$Css$backgroundPosition = function (fn) {
	return A3(
		_rtfeldman$elm_css$Css$getOverloadedProperty,
		'backgroundPosition',
		'background-position',
		fn(_rtfeldman$elm_css$Css$lengthForOverloadedProperty));
};
var _rtfeldman$elm_css$Css$Rtl = {ctor: 'Rtl'};
var _rtfeldman$elm_css$Css$Ltr = {ctor: 'Ltr'};
var _rtfeldman$elm_css$Css$IntentionallyUnsupportedPleaseSeeDocs = {ctor: 'IntentionallyUnsupportedPleaseSeeDocs'};
var _rtfeldman$elm_css$Css$thin = _rtfeldman$elm_css$Css$IntentionallyUnsupportedPleaseSeeDocs;
var _rtfeldman$elm_css$Css$thick = _rtfeldman$elm_css$Css$IntentionallyUnsupportedPleaseSeeDocs;
var _rtfeldman$elm_css$Css$blink = _rtfeldman$elm_css$Css$IntentionallyUnsupportedPleaseSeeDocs;

var _elm_lang$virtual_dom$VirtualDom_Debug$wrap;
var _elm_lang$virtual_dom$VirtualDom_Debug$wrapWithFlags;

var _elm_lang$virtual_dom$Native_VirtualDom = function() {

var STYLE_KEY = 'STYLE';
var EVENT_KEY = 'EVENT';
var ATTR_KEY = 'ATTR';
var ATTR_NS_KEY = 'ATTR_NS';

var localDoc = typeof document !== 'undefined' ? document : {};


////////////  VIRTUAL DOM NODES  ////////////


function text(string)
{
	return {
		type: 'text',
		text: string
	};
}


function node(tag)
{
	return F2(function(factList, kidList) {
		return nodeHelp(tag, factList, kidList);
	});
}


function nodeHelp(tag, factList, kidList)
{
	var organized = organizeFacts(factList);
	var namespace = organized.namespace;
	var facts = organized.facts;

	var children = [];
	var descendantsCount = 0;
	while (kidList.ctor !== '[]')
	{
		var kid = kidList._0;
		descendantsCount += (kid.descendantsCount || 0);
		children.push(kid);
		kidList = kidList._1;
	}
	descendantsCount += children.length;

	return {
		type: 'node',
		tag: tag,
		facts: facts,
		children: children,
		namespace: namespace,
		descendantsCount: descendantsCount
	};
}


function keyedNode(tag, factList, kidList)
{
	var organized = organizeFacts(factList);
	var namespace = organized.namespace;
	var facts = organized.facts;

	var children = [];
	var descendantsCount = 0;
	while (kidList.ctor !== '[]')
	{
		var kid = kidList._0;
		descendantsCount += (kid._1.descendantsCount || 0);
		children.push(kid);
		kidList = kidList._1;
	}
	descendantsCount += children.length;

	return {
		type: 'keyed-node',
		tag: tag,
		facts: facts,
		children: children,
		namespace: namespace,
		descendantsCount: descendantsCount
	};
}


function custom(factList, model, impl)
{
	var facts = organizeFacts(factList).facts;

	return {
		type: 'custom',
		facts: facts,
		model: model,
		impl: impl
	};
}


function map(tagger, node)
{
	return {
		type: 'tagger',
		tagger: tagger,
		node: node,
		descendantsCount: 1 + (node.descendantsCount || 0)
	};
}


function thunk(func, args, thunk)
{
	return {
		type: 'thunk',
		func: func,
		args: args,
		thunk: thunk,
		node: undefined
	};
}

function lazy(fn, a)
{
	return thunk(fn, [a], function() {
		return fn(a);
	});
}

function lazy2(fn, a, b)
{
	return thunk(fn, [a,b], function() {
		return A2(fn, a, b);
	});
}

function lazy3(fn, a, b, c)
{
	return thunk(fn, [a,b,c], function() {
		return A3(fn, a, b, c);
	});
}



// FACTS


function organizeFacts(factList)
{
	var namespace, facts = {};

	while (factList.ctor !== '[]')
	{
		var entry = factList._0;
		var key = entry.key;

		if (key === ATTR_KEY || key === ATTR_NS_KEY || key === EVENT_KEY)
		{
			var subFacts = facts[key] || {};
			subFacts[entry.realKey] = entry.value;
			facts[key] = subFacts;
		}
		else if (key === STYLE_KEY)
		{
			var styles = facts[key] || {};
			var styleList = entry.value;
			while (styleList.ctor !== '[]')
			{
				var style = styleList._0;
				styles[style._0] = style._1;
				styleList = styleList._1;
			}
			facts[key] = styles;
		}
		else if (key === 'namespace')
		{
			namespace = entry.value;
		}
		else if (key === 'className')
		{
			var classes = facts[key];
			facts[key] = typeof classes === 'undefined'
				? entry.value
				: classes + ' ' + entry.value;
		}
 		else
		{
			facts[key] = entry.value;
		}
		factList = factList._1;
	}

	return {
		facts: facts,
		namespace: namespace
	};
}



////////////  PROPERTIES AND ATTRIBUTES  ////////////


function style(value)
{
	return {
		key: STYLE_KEY,
		value: value
	};
}


function property(key, value)
{
	return {
		key: key,
		value: value
	};
}


function attribute(key, value)
{
	return {
		key: ATTR_KEY,
		realKey: key,
		value: value
	};
}


function attributeNS(namespace, key, value)
{
	return {
		key: ATTR_NS_KEY,
		realKey: key,
		value: {
			value: value,
			namespace: namespace
		}
	};
}


function on(name, options, decoder)
{
	return {
		key: EVENT_KEY,
		realKey: name,
		value: {
			options: options,
			decoder: decoder
		}
	};
}


function equalEvents(a, b)
{
	if (a.options !== b.options)
	{
		if (a.options.stopPropagation !== b.options.stopPropagation || a.options.preventDefault !== b.options.preventDefault)
		{
			return false;
		}
	}
	return _elm_lang$core$Native_Json.equality(a.decoder, b.decoder);
}


function mapProperty(func, property)
{
	if (property.key !== EVENT_KEY)
	{
		return property;
	}
	return on(
		property.realKey,
		property.value.options,
		A2(_elm_lang$core$Json_Decode$map, func, property.value.decoder)
	);
}


////////////  RENDER  ////////////


function render(vNode, eventNode)
{
	switch (vNode.type)
	{
		case 'thunk':
			if (!vNode.node)
			{
				vNode.node = vNode.thunk();
			}
			return render(vNode.node, eventNode);

		case 'tagger':
			var subNode = vNode.node;
			var tagger = vNode.tagger;

			while (subNode.type === 'tagger')
			{
				typeof tagger !== 'object'
					? tagger = [tagger, subNode.tagger]
					: tagger.push(subNode.tagger);

				subNode = subNode.node;
			}

			var subEventRoot = { tagger: tagger, parent: eventNode };
			var domNode = render(subNode, subEventRoot);
			domNode.elm_event_node_ref = subEventRoot;
			return domNode;

		case 'text':
			return localDoc.createTextNode(vNode.text);

		case 'node':
			var domNode = vNode.namespace
				? localDoc.createElementNS(vNode.namespace, vNode.tag)
				: localDoc.createElement(vNode.tag);

			applyFacts(domNode, eventNode, vNode.facts);

			var children = vNode.children;

			for (var i = 0; i < children.length; i++)
			{
				domNode.appendChild(render(children[i], eventNode));
			}

			return domNode;

		case 'keyed-node':
			var domNode = vNode.namespace
				? localDoc.createElementNS(vNode.namespace, vNode.tag)
				: localDoc.createElement(vNode.tag);

			applyFacts(domNode, eventNode, vNode.facts);

			var children = vNode.children;

			for (var i = 0; i < children.length; i++)
			{
				domNode.appendChild(render(children[i]._1, eventNode));
			}

			return domNode;

		case 'custom':
			var domNode = vNode.impl.render(vNode.model);
			applyFacts(domNode, eventNode, vNode.facts);
			return domNode;
	}
}



////////////  APPLY FACTS  ////////////


function applyFacts(domNode, eventNode, facts)
{
	for (var key in facts)
	{
		var value = facts[key];

		switch (key)
		{
			case STYLE_KEY:
				applyStyles(domNode, value);
				break;

			case EVENT_KEY:
				applyEvents(domNode, eventNode, value);
				break;

			case ATTR_KEY:
				applyAttrs(domNode, value);
				break;

			case ATTR_NS_KEY:
				applyAttrsNS(domNode, value);
				break;

			case 'value':
				if (domNode[key] !== value)
				{
					domNode[key] = value;
				}
				break;

			default:
				domNode[key] = value;
				break;
		}
	}
}

function applyStyles(domNode, styles)
{
	var domNodeStyle = domNode.style;

	for (var key in styles)
	{
		domNodeStyle[key] = styles[key];
	}
}

function applyEvents(domNode, eventNode, events)
{
	var allHandlers = domNode.elm_handlers || {};

	for (var key in events)
	{
		var handler = allHandlers[key];
		var value = events[key];

		if (typeof value === 'undefined')
		{
			domNode.removeEventListener(key, handler);
			allHandlers[key] = undefined;
		}
		else if (typeof handler === 'undefined')
		{
			var handler = makeEventHandler(eventNode, value);
			domNode.addEventListener(key, handler);
			allHandlers[key] = handler;
		}
		else
		{
			handler.info = value;
		}
	}

	domNode.elm_handlers = allHandlers;
}

function makeEventHandler(eventNode, info)
{
	function eventHandler(event)
	{
		var info = eventHandler.info;

		var value = A2(_elm_lang$core$Native_Json.run, info.decoder, event);

		if (value.ctor === 'Ok')
		{
			var options = info.options;
			if (options.stopPropagation)
			{
				event.stopPropagation();
			}
			if (options.preventDefault)
			{
				event.preventDefault();
			}

			var message = value._0;

			var currentEventNode = eventNode;
			while (currentEventNode)
			{
				var tagger = currentEventNode.tagger;
				if (typeof tagger === 'function')
				{
					message = tagger(message);
				}
				else
				{
					for (var i = tagger.length; i--; )
					{
						message = tagger[i](message);
					}
				}
				currentEventNode = currentEventNode.parent;
			}
		}
	};

	eventHandler.info = info;

	return eventHandler;
}

function applyAttrs(domNode, attrs)
{
	for (var key in attrs)
	{
		var value = attrs[key];
		if (typeof value === 'undefined')
		{
			domNode.removeAttribute(key);
		}
		else
		{
			domNode.setAttribute(key, value);
		}
	}
}

function applyAttrsNS(domNode, nsAttrs)
{
	for (var key in nsAttrs)
	{
		var pair = nsAttrs[key];
		var namespace = pair.namespace;
		var value = pair.value;

		if (typeof value === 'undefined')
		{
			domNode.removeAttributeNS(namespace, key);
		}
		else
		{
			domNode.setAttributeNS(namespace, key, value);
		}
	}
}



////////////  DIFF  ////////////


function diff(a, b)
{
	var patches = [];
	diffHelp(a, b, patches, 0);
	return patches;
}


function makePatch(type, index, data)
{
	return {
		index: index,
		type: type,
		data: data,
		domNode: undefined,
		eventNode: undefined
	};
}


function diffHelp(a, b, patches, index)
{
	if (a === b)
	{
		return;
	}

	var aType = a.type;
	var bType = b.type;

	// Bail if you run into different types of nodes. Implies that the
	// structure has changed significantly and it's not worth a diff.
	if (aType !== bType)
	{
		patches.push(makePatch('p-redraw', index, b));
		return;
	}

	// Now we know that both nodes are the same type.
	switch (bType)
	{
		case 'thunk':
			var aArgs = a.args;
			var bArgs = b.args;
			var i = aArgs.length;
			var same = a.func === b.func && i === bArgs.length;
			while (same && i--)
			{
				same = aArgs[i] === bArgs[i];
			}
			if (same)
			{
				b.node = a.node;
				return;
			}
			b.node = b.thunk();
			var subPatches = [];
			diffHelp(a.node, b.node, subPatches, 0);
			if (subPatches.length > 0)
			{
				patches.push(makePatch('p-thunk', index, subPatches));
			}
			return;

		case 'tagger':
			// gather nested taggers
			var aTaggers = a.tagger;
			var bTaggers = b.tagger;
			var nesting = false;

			var aSubNode = a.node;
			while (aSubNode.type === 'tagger')
			{
				nesting = true;

				typeof aTaggers !== 'object'
					? aTaggers = [aTaggers, aSubNode.tagger]
					: aTaggers.push(aSubNode.tagger);

				aSubNode = aSubNode.node;
			}

			var bSubNode = b.node;
			while (bSubNode.type === 'tagger')
			{
				nesting = true;

				typeof bTaggers !== 'object'
					? bTaggers = [bTaggers, bSubNode.tagger]
					: bTaggers.push(bSubNode.tagger);

				bSubNode = bSubNode.node;
			}

			// Just bail if different numbers of taggers. This implies the
			// structure of the virtual DOM has changed.
			if (nesting && aTaggers.length !== bTaggers.length)
			{
				patches.push(makePatch('p-redraw', index, b));
				return;
			}

			// check if taggers are "the same"
			if (nesting ? !pairwiseRefEqual(aTaggers, bTaggers) : aTaggers !== bTaggers)
			{
				patches.push(makePatch('p-tagger', index, bTaggers));
			}

			// diff everything below the taggers
			diffHelp(aSubNode, bSubNode, patches, index + 1);
			return;

		case 'text':
			if (a.text !== b.text)
			{
				patches.push(makePatch('p-text', index, b.text));
				return;
			}

			return;

		case 'node':
			// Bail if obvious indicators have changed. Implies more serious
			// structural changes such that it's not worth it to diff.
			if (a.tag !== b.tag || a.namespace !== b.namespace)
			{
				patches.push(makePatch('p-redraw', index, b));
				return;
			}

			var factsDiff = diffFacts(a.facts, b.facts);

			if (typeof factsDiff !== 'undefined')
			{
				patches.push(makePatch('p-facts', index, factsDiff));
			}

			diffChildren(a, b, patches, index);
			return;

		case 'keyed-node':
			// Bail if obvious indicators have changed. Implies more serious
			// structural changes such that it's not worth it to diff.
			if (a.tag !== b.tag || a.namespace !== b.namespace)
			{
				patches.push(makePatch('p-redraw', index, b));
				return;
			}

			var factsDiff = diffFacts(a.facts, b.facts);

			if (typeof factsDiff !== 'undefined')
			{
				patches.push(makePatch('p-facts', index, factsDiff));
			}

			diffKeyedChildren(a, b, patches, index);
			return;

		case 'custom':
			if (a.impl !== b.impl)
			{
				patches.push(makePatch('p-redraw', index, b));
				return;
			}

			var factsDiff = diffFacts(a.facts, b.facts);
			if (typeof factsDiff !== 'undefined')
			{
				patches.push(makePatch('p-facts', index, factsDiff));
			}

			var patch = b.impl.diff(a,b);
			if (patch)
			{
				patches.push(makePatch('p-custom', index, patch));
				return;
			}

			return;
	}
}


// assumes the incoming arrays are the same length
function pairwiseRefEqual(as, bs)
{
	for (var i = 0; i < as.length; i++)
	{
		if (as[i] !== bs[i])
		{
			return false;
		}
	}

	return true;
}


// TODO Instead of creating a new diff object, it's possible to just test if
// there *is* a diff. During the actual patch, do the diff again and make the
// modifications directly. This way, there's no new allocations. Worth it?
function diffFacts(a, b, category)
{
	var diff;

	// look for changes and removals
	for (var aKey in a)
	{
		if (aKey === STYLE_KEY || aKey === EVENT_KEY || aKey === ATTR_KEY || aKey === ATTR_NS_KEY)
		{
			var subDiff = diffFacts(a[aKey], b[aKey] || {}, aKey);
			if (subDiff)
			{
				diff = diff || {};
				diff[aKey] = subDiff;
			}
			continue;
		}

		// remove if not in the new facts
		if (!(aKey in b))
		{
			diff = diff || {};
			diff[aKey] =
				(typeof category === 'undefined')
					? (typeof a[aKey] === 'string' ? '' : null)
					:
				(category === STYLE_KEY)
					? ''
					:
				(category === EVENT_KEY || category === ATTR_KEY)
					? undefined
					:
				{ namespace: a[aKey].namespace, value: undefined };

			continue;
		}

		var aValue = a[aKey];
		var bValue = b[aKey];

		// reference equal, so don't worry about it
		if (aValue === bValue && aKey !== 'value'
			|| category === EVENT_KEY && equalEvents(aValue, bValue))
		{
			continue;
		}

		diff = diff || {};
		diff[aKey] = bValue;
	}

	// add new stuff
	for (var bKey in b)
	{
		if (!(bKey in a))
		{
			diff = diff || {};
			diff[bKey] = b[bKey];
		}
	}

	return diff;
}


function diffChildren(aParent, bParent, patches, rootIndex)
{
	var aChildren = aParent.children;
	var bChildren = bParent.children;

	var aLen = aChildren.length;
	var bLen = bChildren.length;

	// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS

	if (aLen > bLen)
	{
		patches.push(makePatch('p-remove-last', rootIndex, aLen - bLen));
	}
	else if (aLen < bLen)
	{
		patches.push(makePatch('p-append', rootIndex, bChildren.slice(aLen)));
	}

	// PAIRWISE DIFF EVERYTHING ELSE

	var index = rootIndex;
	var minLen = aLen < bLen ? aLen : bLen;
	for (var i = 0; i < minLen; i++)
	{
		index++;
		var aChild = aChildren[i];
		diffHelp(aChild, bChildren[i], patches, index);
		index += aChild.descendantsCount || 0;
	}
}



////////////  KEYED DIFF  ////////////


function diffKeyedChildren(aParent, bParent, patches, rootIndex)
{
	var localPatches = [];

	var changes = {}; // Dict String Entry
	var inserts = []; // Array { index : Int, entry : Entry }
	// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }

	var aChildren = aParent.children;
	var bChildren = bParent.children;
	var aLen = aChildren.length;
	var bLen = bChildren.length;
	var aIndex = 0;
	var bIndex = 0;

	var index = rootIndex;

	while (aIndex < aLen && bIndex < bLen)
	{
		var a = aChildren[aIndex];
		var b = bChildren[bIndex];

		var aKey = a._0;
		var bKey = b._0;
		var aNode = a._1;
		var bNode = b._1;

		// check if keys match

		if (aKey === bKey)
		{
			index++;
			diffHelp(aNode, bNode, localPatches, index);
			index += aNode.descendantsCount || 0;

			aIndex++;
			bIndex++;
			continue;
		}

		// look ahead 1 to detect insertions and removals.

		var aLookAhead = aIndex + 1 < aLen;
		var bLookAhead = bIndex + 1 < bLen;

		if (aLookAhead)
		{
			var aNext = aChildren[aIndex + 1];
			var aNextKey = aNext._0;
			var aNextNode = aNext._1;
			var oldMatch = bKey === aNextKey;
		}

		if (bLookAhead)
		{
			var bNext = bChildren[bIndex + 1];
			var bNextKey = bNext._0;
			var bNextNode = bNext._1;
			var newMatch = aKey === bNextKey;
		}


		// swap a and b
		if (aLookAhead && bLookAhead && newMatch && oldMatch)
		{
			index++;
			diffHelp(aNode, bNextNode, localPatches, index);
			insertNode(changes, localPatches, aKey, bNode, bIndex, inserts);
			index += aNode.descendantsCount || 0;

			index++;
			removeNode(changes, localPatches, aKey, aNextNode, index);
			index += aNextNode.descendantsCount || 0;

			aIndex += 2;
			bIndex += 2;
			continue;
		}

		// insert b
		if (bLookAhead && newMatch)
		{
			index++;
			insertNode(changes, localPatches, bKey, bNode, bIndex, inserts);
			diffHelp(aNode, bNextNode, localPatches, index);
			index += aNode.descendantsCount || 0;

			aIndex += 1;
			bIndex += 2;
			continue;
		}

		// remove a
		if (aLookAhead && oldMatch)
		{
			index++;
			removeNode(changes, localPatches, aKey, aNode, index);
			index += aNode.descendantsCount || 0;

			index++;
			diffHelp(aNextNode, bNode, localPatches, index);
			index += aNextNode.descendantsCount || 0;

			aIndex += 2;
			bIndex += 1;
			continue;
		}

		// remove a, insert b
		if (aLookAhead && bLookAhead && aNextKey === bNextKey)
		{
			index++;
			removeNode(changes, localPatches, aKey, aNode, index);
			insertNode(changes, localPatches, bKey, bNode, bIndex, inserts);
			index += aNode.descendantsCount || 0;

			index++;
			diffHelp(aNextNode, bNextNode, localPatches, index);
			index += aNextNode.descendantsCount || 0;

			aIndex += 2;
			bIndex += 2;
			continue;
		}

		break;
	}

	// eat up any remaining nodes with removeNode and insertNode

	while (aIndex < aLen)
	{
		index++;
		var a = aChildren[aIndex];
		var aNode = a._1;
		removeNode(changes, localPatches, a._0, aNode, index);
		index += aNode.descendantsCount || 0;
		aIndex++;
	}

	var endInserts;
	while (bIndex < bLen)
	{
		endInserts = endInserts || [];
		var b = bChildren[bIndex];
		insertNode(changes, localPatches, b._0, b._1, undefined, endInserts);
		bIndex++;
	}

	if (localPatches.length > 0 || inserts.length > 0 || typeof endInserts !== 'undefined')
	{
		patches.push(makePatch('p-reorder', rootIndex, {
			patches: localPatches,
			inserts: inserts,
			endInserts: endInserts
		}));
	}
}



////////////  CHANGES FROM KEYED DIFF  ////////////


var POSTFIX = '_elmW6BL';


function insertNode(changes, localPatches, key, vnode, bIndex, inserts)
{
	var entry = changes[key];

	// never seen this key before
	if (typeof entry === 'undefined')
	{
		entry = {
			tag: 'insert',
			vnode: vnode,
			index: bIndex,
			data: undefined
		};

		inserts.push({ index: bIndex, entry: entry });
		changes[key] = entry;

		return;
	}

	// this key was removed earlier, a match!
	if (entry.tag === 'remove')
	{
		inserts.push({ index: bIndex, entry: entry });

		entry.tag = 'move';
		var subPatches = [];
		diffHelp(entry.vnode, vnode, subPatches, entry.index);
		entry.index = bIndex;
		entry.data.data = {
			patches: subPatches,
			entry: entry
		};

		return;
	}

	// this key has already been inserted or moved, a duplicate!
	insertNode(changes, localPatches, key + POSTFIX, vnode, bIndex, inserts);
}


function removeNode(changes, localPatches, key, vnode, index)
{
	var entry = changes[key];

	// never seen this key before
	if (typeof entry === 'undefined')
	{
		var patch = makePatch('p-remove', index, undefined);
		localPatches.push(patch);

		changes[key] = {
			tag: 'remove',
			vnode: vnode,
			index: index,
			data: patch
		};

		return;
	}

	// this key was inserted earlier, a match!
	if (entry.tag === 'insert')
	{
		entry.tag = 'move';
		var subPatches = [];
		diffHelp(vnode, entry.vnode, subPatches, index);

		var patch = makePatch('p-remove', index, {
			patches: subPatches,
			entry: entry
		});
		localPatches.push(patch);

		return;
	}

	// this key has already been removed or moved, a duplicate!
	removeNode(changes, localPatches, key + POSTFIX, vnode, index);
}



////////////  ADD DOM NODES  ////////////
//
// Each DOM node has an "index" assigned in order of traversal. It is important
// to minimize our crawl over the actual DOM, so these indexes (along with the
// descendantsCount of virtual nodes) let us skip touching entire subtrees of
// the DOM if we know there are no patches there.


function addDomNodes(domNode, vNode, patches, eventNode)
{
	addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.descendantsCount, eventNode);
}


// assumes `patches` is non-empty and indexes increase monotonically.
function addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)
{
	var patch = patches[i];
	var index = patch.index;

	while (index === low)
	{
		var patchType = patch.type;

		if (patchType === 'p-thunk')
		{
			addDomNodes(domNode, vNode.node, patch.data, eventNode);
		}
		else if (patchType === 'p-reorder')
		{
			patch.domNode = domNode;
			patch.eventNode = eventNode;

			var subPatches = patch.data.patches;
			if (subPatches.length > 0)
			{
				addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);
			}
		}
		else if (patchType === 'p-remove')
		{
			patch.domNode = domNode;
			patch.eventNode = eventNode;

			var data = patch.data;
			if (typeof data !== 'undefined')
			{
				data.entry.data = domNode;
				var subPatches = data.patches;
				if (subPatches.length > 0)
				{
					addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);
				}
			}
		}
		else
		{
			patch.domNode = domNode;
			patch.eventNode = eventNode;
		}

		i++;

		if (!(patch = patches[i]) || (index = patch.index) > high)
		{
			return i;
		}
	}

	switch (vNode.type)
	{
		case 'tagger':
			var subNode = vNode.node;

			while (subNode.type === "tagger")
			{
				subNode = subNode.node;
			}

			return addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);

		case 'node':
			var vChildren = vNode.children;
			var childNodes = domNode.childNodes;
			for (var j = 0; j < vChildren.length; j++)
			{
				low++;
				var vChild = vChildren[j];
				var nextLow = low + (vChild.descendantsCount || 0);
				if (low <= index && index <= nextLow)
				{
					i = addDomNodesHelp(childNodes[j], vChild, patches, i, low, nextLow, eventNode);
					if (!(patch = patches[i]) || (index = patch.index) > high)
					{
						return i;
					}
				}
				low = nextLow;
			}
			return i;

		case 'keyed-node':
			var vChildren = vNode.children;
			var childNodes = domNode.childNodes;
			for (var j = 0; j < vChildren.length; j++)
			{
				low++;
				var vChild = vChildren[j]._1;
				var nextLow = low + (vChild.descendantsCount || 0);
				if (low <= index && index <= nextLow)
				{
					i = addDomNodesHelp(childNodes[j], vChild, patches, i, low, nextLow, eventNode);
					if (!(patch = patches[i]) || (index = patch.index) > high)
					{
						return i;
					}
				}
				low = nextLow;
			}
			return i;

		case 'text':
		case 'thunk':
			throw new Error('should never traverse `text` or `thunk` nodes like this');
	}
}



////////////  APPLY PATCHES  ////////////


function applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)
{
	if (patches.length === 0)
	{
		return rootDomNode;
	}

	addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);
	return applyPatchesHelp(rootDomNode, patches);
}

function applyPatchesHelp(rootDomNode, patches)
{
	for (var i = 0; i < patches.length; i++)
	{
		var patch = patches[i];
		var localDomNode = patch.domNode
		var newNode = applyPatch(localDomNode, patch);
		if (localDomNode === rootDomNode)
		{
			rootDomNode = newNode;
		}
	}
	return rootDomNode;
}

function applyPatch(domNode, patch)
{
	switch (patch.type)
	{
		case 'p-redraw':
			return applyPatchRedraw(domNode, patch.data, patch.eventNode);

		case 'p-facts':
			applyFacts(domNode, patch.eventNode, patch.data);
			return domNode;

		case 'p-text':
			domNode.replaceData(0, domNode.length, patch.data);
			return domNode;

		case 'p-thunk':
			return applyPatchesHelp(domNode, patch.data);

		case 'p-tagger':
			if (typeof domNode.elm_event_node_ref !== 'undefined')
			{
				domNode.elm_event_node_ref.tagger = patch.data;
			}
			else
			{
				domNode.elm_event_node_ref = { tagger: patch.data, parent: patch.eventNode };
			}
			return domNode;

		case 'p-remove-last':
			var i = patch.data;
			while (i--)
			{
				domNode.removeChild(domNode.lastChild);
			}
			return domNode;

		case 'p-append':
			var newNodes = patch.data;
			for (var i = 0; i < newNodes.length; i++)
			{
				domNode.appendChild(render(newNodes[i], patch.eventNode));
			}
			return domNode;

		case 'p-remove':
			var data = patch.data;
			if (typeof data === 'undefined')
			{
				domNode.parentNode.removeChild(domNode);
				return domNode;
			}
			var entry = data.entry;
			if (typeof entry.index !== 'undefined')
			{
				domNode.parentNode.removeChild(domNode);
			}
			entry.data = applyPatchesHelp(domNode, data.patches);
			return domNode;

		case 'p-reorder':
			return applyPatchReorder(domNode, patch);

		case 'p-custom':
			var impl = patch.data;
			return impl.applyPatch(domNode, impl.data);

		default:
			throw new Error('Ran into an unknown patch!');
	}
}


function applyPatchRedraw(domNode, vNode, eventNode)
{
	var parentNode = domNode.parentNode;
	var newNode = render(vNode, eventNode);

	if (typeof newNode.elm_event_node_ref === 'undefined')
	{
		newNode.elm_event_node_ref = domNode.elm_event_node_ref;
	}

	if (parentNode && newNode !== domNode)
	{
		parentNode.replaceChild(newNode, domNode);
	}
	return newNode;
}


function applyPatchReorder(domNode, patch)
{
	var data = patch.data;

	// remove end inserts
	var frag = applyPatchReorderEndInsertsHelp(data.endInserts, patch);

	// removals
	domNode = applyPatchesHelp(domNode, data.patches);

	// inserts
	var inserts = data.inserts;
	for (var i = 0; i < inserts.length; i++)
	{
		var insert = inserts[i];
		var entry = insert.entry;
		var node = entry.tag === 'move'
			? entry.data
			: render(entry.vnode, patch.eventNode);
		domNode.insertBefore(node, domNode.childNodes[insert.index]);
	}

	// add end inserts
	if (typeof frag !== 'undefined')
	{
		domNode.appendChild(frag);
	}

	return domNode;
}


function applyPatchReorderEndInsertsHelp(endInserts, patch)
{
	if (typeof endInserts === 'undefined')
	{
		return;
	}

	var frag = localDoc.createDocumentFragment();
	for (var i = 0; i < endInserts.length; i++)
	{
		var insert = endInserts[i];
		var entry = insert.entry;
		frag.appendChild(entry.tag === 'move'
			? entry.data
			: render(entry.vnode, patch.eventNode)
		);
	}
	return frag;
}


// PROGRAMS

var program = makeProgram(checkNoFlags);
var programWithFlags = makeProgram(checkYesFlags);

function makeProgram(flagChecker)
{
	return F2(function(debugWrap, impl)
	{
		return function(flagDecoder)
		{
			return function(object, moduleName, debugMetadata)
			{
				var checker = flagChecker(flagDecoder, moduleName);
				if (typeof debugMetadata === 'undefined')
				{
					normalSetup(impl, object, moduleName, checker);
				}
				else
				{
					debugSetup(A2(debugWrap, debugMetadata, impl), object, moduleName, checker);
				}
			};
		};
	});
}

function staticProgram(vNode)
{
	var nothing = _elm_lang$core$Native_Utils.Tuple2(
		_elm_lang$core$Native_Utils.Tuple0,
		_elm_lang$core$Platform_Cmd$none
	);
	return A2(program, _elm_lang$virtual_dom$VirtualDom_Debug$wrap, {
		init: nothing,
		view: function() { return vNode; },
		update: F2(function() { return nothing; }),
		subscriptions: function() { return _elm_lang$core$Platform_Sub$none; }
	})();
}


// FLAG CHECKERS

function checkNoFlags(flagDecoder, moduleName)
{
	return function(init, flags, domNode)
	{
		if (typeof flags === 'undefined')
		{
			return init;
		}

		var errorMessage =
			'The `' + moduleName + '` module does not need flags.\n'
			+ 'Initialize it with no arguments and you should be all set!';

		crash(errorMessage, domNode);
	};
}

function checkYesFlags(flagDecoder, moduleName)
{
	return function(init, flags, domNode)
	{
		if (typeof flagDecoder === 'undefined')
		{
			var errorMessage =
				'Are you trying to sneak a Never value into Elm? Trickster!\n'
				+ 'It looks like ' + moduleName + '.main is defined with `programWithFlags` but has type `Program Never`.\n'
				+ 'Use `program` instead if you do not want flags.'

			crash(errorMessage, domNode);
		}

		var result = A2(_elm_lang$core$Native_Json.run, flagDecoder, flags);
		if (result.ctor === 'Ok')
		{
			return init(result._0);
		}

		var errorMessage =
			'Trying to initialize the `' + moduleName + '` module with an unexpected flag.\n'
			+ 'I tried to convert it to an Elm value, but ran into this problem:\n\n'
			+ result._0;

		crash(errorMessage, domNode);
	};
}

function crash(errorMessage, domNode)
{
	if (domNode)
	{
		domNode.innerHTML =
			'<div style="padding-left:1em;">'
			+ '<h2 style="font-weight:normal;"><b>Oops!</b> Something went wrong when starting your Elm program.</h2>'
			+ '<pre style="padding-left:1em;">' + errorMessage + '</pre>'
			+ '</div>';
	}

	throw new Error(errorMessage);
}


//  NORMAL SETUP

function normalSetup(impl, object, moduleName, flagChecker)
{
	object['embed'] = function embed(node, flags)
	{
		while (node.lastChild)
		{
			node.removeChild(node.lastChild);
		}

		return _elm_lang$core$Native_Platform.initialize(
			flagChecker(impl.init, flags, node),
			impl.update,
			impl.subscriptions,
			normalRenderer(node, impl.view)
		);
	};

	object['fullscreen'] = function fullscreen(flags)
	{
		return _elm_lang$core$Native_Platform.initialize(
			flagChecker(impl.init, flags, document.body),
			impl.update,
			impl.subscriptions,
			normalRenderer(document.body, impl.view)
		);
	};
}

function normalRenderer(parentNode, view)
{
	return function(tagger, initialModel)
	{
		var eventNode = { tagger: tagger, parent: undefined };
		var initialVirtualNode = view(initialModel);
		var domNode = render(initialVirtualNode, eventNode);
		parentNode.appendChild(domNode);
		return makeStepper(domNode, view, initialVirtualNode, eventNode);
	};
}


// STEPPER

var rAF =
	typeof requestAnimationFrame !== 'undefined'
		? requestAnimationFrame
		: function(callback) { setTimeout(callback, 1000 / 60); };

function makeStepper(domNode, view, initialVirtualNode, eventNode)
{
	var state = 'NO_REQUEST';
	var currNode = initialVirtualNode;
	var nextModel;

	function updateIfNeeded()
	{
		switch (state)
		{
			case 'NO_REQUEST':
				throw new Error(
					'Unexpected draw callback.\n' +
					'Please report this to <https://github.com/elm-lang/virtual-dom/issues>.'
				);

			case 'PENDING_REQUEST':
				rAF(updateIfNeeded);
				state = 'EXTRA_REQUEST';

				var nextNode = view(nextModel);
				var patches = diff(currNode, nextNode);
				domNode = applyPatches(domNode, currNode, patches, eventNode);
				currNode = nextNode;

				return;

			case 'EXTRA_REQUEST':
				state = 'NO_REQUEST';
				return;
		}
	}

	return function stepper(model)
	{
		if (state === 'NO_REQUEST')
		{
			rAF(updateIfNeeded);
		}
		state = 'PENDING_REQUEST';
		nextModel = model;
	};
}


// DEBUG SETUP

function debugSetup(impl, object, moduleName, flagChecker)
{
	object['fullscreen'] = function fullscreen(flags)
	{
		var popoutRef = { doc: undefined };
		return _elm_lang$core$Native_Platform.initialize(
			flagChecker(impl.init, flags, document.body),
			impl.update(scrollTask(popoutRef)),
			impl.subscriptions,
			debugRenderer(moduleName, document.body, popoutRef, impl.view, impl.viewIn, impl.viewOut)
		);
	};

	object['embed'] = function fullscreen(node, flags)
	{
		var popoutRef = { doc: undefined };
		return _elm_lang$core$Native_Platform.initialize(
			flagChecker(impl.init, flags, node),
			impl.update(scrollTask(popoutRef)),
			impl.subscriptions,
			debugRenderer(moduleName, node, popoutRef, impl.view, impl.viewIn, impl.viewOut)
		);
	};
}

function scrollTask(popoutRef)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		var doc = popoutRef.doc;
		if (doc)
		{
			var msgs = doc.getElementsByClassName('debugger-sidebar-messages')[0];
			if (msgs)
			{
				msgs.scrollTop = msgs.scrollHeight;
			}
		}
		callback(_elm_lang$core$Native_Scheduler.succeed(_elm_lang$core$Native_Utils.Tuple0));
	});
}


function debugRenderer(moduleName, parentNode, popoutRef, view, viewIn, viewOut)
{
	return function(tagger, initialModel)
	{
		var appEventNode = { tagger: tagger, parent: undefined };
		var eventNode = { tagger: tagger, parent: undefined };

		// make normal stepper
		var appVirtualNode = view(initialModel);
		var appNode = render(appVirtualNode, appEventNode);
		parentNode.appendChild(appNode);
		var appStepper = makeStepper(appNode, view, appVirtualNode, appEventNode);

		// make overlay stepper
		var overVirtualNode = viewIn(initialModel)._1;
		var overNode = render(overVirtualNode, eventNode);
		parentNode.appendChild(overNode);
		var wrappedViewIn = wrapViewIn(appEventNode, overNode, viewIn);
		var overStepper = makeStepper(overNode, wrappedViewIn, overVirtualNode, eventNode);

		// make debugger stepper
		var debugStepper = makeDebugStepper(initialModel, viewOut, eventNode, parentNode, moduleName, popoutRef);

		return function stepper(model)
		{
			appStepper(model);
			overStepper(model);
			debugStepper(model);
		}
	};
}

function makeDebugStepper(initialModel, view, eventNode, parentNode, moduleName, popoutRef)
{
	var curr;
	var domNode;

	return function stepper(model)
	{
		if (!model.isDebuggerOpen)
		{
			return;
		}

		if (!popoutRef.doc)
		{
			curr = view(model);
			domNode = openDebugWindow(moduleName, popoutRef, curr, eventNode);
			return;
		}

		// switch to document of popout
		localDoc = popoutRef.doc;

		var next = view(model);
		var patches = diff(curr, next);
		domNode = applyPatches(domNode, curr, patches, eventNode);
		curr = next;

		// switch back to normal document
		localDoc = document;
	};
}

function openDebugWindow(moduleName, popoutRef, virtualNode, eventNode)
{
	var w = 900;
	var h = 360;
	var x = screen.width - w;
	var y = screen.height - h;
	var debugWindow = window.open('', '', 'width=' + w + ',height=' + h + ',left=' + x + ',top=' + y);

	// switch to window document
	localDoc = debugWindow.document;

	popoutRef.doc = localDoc;
	localDoc.title = 'Debugger - ' + moduleName;
	localDoc.body.style.margin = '0';
	localDoc.body.style.padding = '0';
	var domNode = render(virtualNode, eventNode);
	localDoc.body.appendChild(domNode);

	localDoc.addEventListener('keydown', function(event) {
		if (event.metaKey && event.which === 82)
		{
			window.location.reload();
		}
		if (event.which === 38)
		{
			eventNode.tagger({ ctor: 'Up' });
			event.preventDefault();
		}
		if (event.which === 40)
		{
			eventNode.tagger({ ctor: 'Down' });
			event.preventDefault();
		}
	});

	function close()
	{
		popoutRef.doc = undefined;
		debugWindow.close();
	}
	window.addEventListener('unload', close);
	debugWindow.addEventListener('unload', function() {
		popoutRef.doc = undefined;
		window.removeEventListener('unload', close);
		eventNode.tagger({ ctor: 'Close' });
	});

	// switch back to the normal document
	localDoc = document;

	return domNode;
}


// BLOCK EVENTS

function wrapViewIn(appEventNode, overlayNode, viewIn)
{
	var ignorer = makeIgnorer(overlayNode);
	var blocking = 'Normal';
	var overflow;

	var normalTagger = appEventNode.tagger;
	var blockTagger = function() {};

	return function(model)
	{
		var tuple = viewIn(model);
		var newBlocking = tuple._0.ctor;
		appEventNode.tagger = newBlocking === 'Normal' ? normalTagger : blockTagger;
		if (blocking !== newBlocking)
		{
			traverse('removeEventListener', ignorer, blocking);
			traverse('addEventListener', ignorer, newBlocking);

			if (blocking === 'Normal')
			{
				overflow = document.body.style.overflow;
				document.body.style.overflow = 'hidden';
			}

			if (newBlocking === 'Normal')
			{
				document.body.style.overflow = overflow;
			}

			blocking = newBlocking;
		}
		return tuple._1;
	}
}

function traverse(verbEventListener, ignorer, blocking)
{
	switch(blocking)
	{
		case 'Normal':
			return;

		case 'Pause':
			return traverseHelp(verbEventListener, ignorer, mostEvents);

		case 'Message':
			return traverseHelp(verbEventListener, ignorer, allEvents);
	}
}

function traverseHelp(verbEventListener, handler, eventNames)
{
	for (var i = 0; i < eventNames.length; i++)
	{
		document.body[verbEventListener](eventNames[i], handler, true);
	}
}

function makeIgnorer(overlayNode)
{
	return function(event)
	{
		if (event.type === 'keydown' && event.metaKey && event.which === 82)
		{
			return;
		}

		var isScroll = event.type === 'scroll' || event.type === 'wheel';

		var node = event.target;
		while (node !== null)
		{
			if (node.className === 'elm-overlay-message-details' && isScroll)
			{
				return;
			}

			if (node === overlayNode && !isScroll)
			{
				return;
			}
			node = node.parentNode;
		}

		event.stopPropagation();
		event.preventDefault();
	}
}

var mostEvents = [
	'click', 'dblclick', 'mousemove',
	'mouseup', 'mousedown', 'mouseenter', 'mouseleave',
	'touchstart', 'touchend', 'touchcancel', 'touchmove',
	'pointerdown', 'pointerup', 'pointerover', 'pointerout',
	'pointerenter', 'pointerleave', 'pointermove', 'pointercancel',
	'dragstart', 'drag', 'dragend', 'dragenter', 'dragover', 'dragleave', 'drop',
	'keyup', 'keydown', 'keypress',
	'input', 'change',
	'focus', 'blur'
];

var allEvents = mostEvents.concat('wheel', 'scroll');


return {
	node: node,
	text: text,
	custom: custom,
	map: F2(map),

	on: F3(on),
	style: style,
	property: F2(property),
	attribute: F2(attribute),
	attributeNS: F3(attributeNS),
	mapProperty: F2(mapProperty),

	lazy: F2(lazy),
	lazy2: F3(lazy2),
	lazy3: F4(lazy3),
	keyedNode: F3(keyedNode),

	program: program,
	programWithFlags: programWithFlags,
	staticProgram: staticProgram
};

}();

var _elm_lang$virtual_dom$VirtualDom$programWithFlags = function (impl) {
	return A2(_elm_lang$virtual_dom$Native_VirtualDom.programWithFlags, _elm_lang$virtual_dom$VirtualDom_Debug$wrapWithFlags, impl);
};
var _elm_lang$virtual_dom$VirtualDom$program = function (impl) {
	return A2(_elm_lang$virtual_dom$Native_VirtualDom.program, _elm_lang$virtual_dom$VirtualDom_Debug$wrap, impl);
};
var _elm_lang$virtual_dom$VirtualDom$keyedNode = _elm_lang$virtual_dom$Native_VirtualDom.keyedNode;
var _elm_lang$virtual_dom$VirtualDom$lazy3 = _elm_lang$virtual_dom$Native_VirtualDom.lazy3;
var _elm_lang$virtual_dom$VirtualDom$lazy2 = _elm_lang$virtual_dom$Native_VirtualDom.lazy2;
var _elm_lang$virtual_dom$VirtualDom$lazy = _elm_lang$virtual_dom$Native_VirtualDom.lazy;
var _elm_lang$virtual_dom$VirtualDom$defaultOptions = {stopPropagation: false, preventDefault: false};
var _elm_lang$virtual_dom$VirtualDom$onWithOptions = _elm_lang$virtual_dom$Native_VirtualDom.on;
var _elm_lang$virtual_dom$VirtualDom$on = F2(
	function (eventName, decoder) {
		return A3(_elm_lang$virtual_dom$VirtualDom$onWithOptions, eventName, _elm_lang$virtual_dom$VirtualDom$defaultOptions, decoder);
	});
var _elm_lang$virtual_dom$VirtualDom$style = _elm_lang$virtual_dom$Native_VirtualDom.style;
var _elm_lang$virtual_dom$VirtualDom$mapProperty = _elm_lang$virtual_dom$Native_VirtualDom.mapProperty;
var _elm_lang$virtual_dom$VirtualDom$attributeNS = _elm_lang$virtual_dom$Native_VirtualDom.attributeNS;
var _elm_lang$virtual_dom$VirtualDom$attribute = _elm_lang$virtual_dom$Native_VirtualDom.attribute;
var _elm_lang$virtual_dom$VirtualDom$property = _elm_lang$virtual_dom$Native_VirtualDom.property;
var _elm_lang$virtual_dom$VirtualDom$map = _elm_lang$virtual_dom$Native_VirtualDom.map;
var _elm_lang$virtual_dom$VirtualDom$text = _elm_lang$virtual_dom$Native_VirtualDom.text;
var _elm_lang$virtual_dom$VirtualDom$node = _elm_lang$virtual_dom$Native_VirtualDom.node;
var _elm_lang$virtual_dom$VirtualDom$Options = F2(
	function (a, b) {
		return {stopPropagation: a, preventDefault: b};
	});
var _elm_lang$virtual_dom$VirtualDom$Node = {ctor: 'Node'};
var _elm_lang$virtual_dom$VirtualDom$Property = {ctor: 'Property'};

var _rtfeldman$elm_css$Css_Structure_Output$noIndent = '';
var _rtfeldman$elm_css$Css_Structure_Output$spaceIndent = '    ';
var _rtfeldman$elm_css$Css_Structure_Output$indent = function (str) {
	return A2(_elm_lang$core$Basics_ops['++'], _rtfeldman$elm_css$Css_Structure_Output$spaceIndent, str);
};
var _rtfeldman$elm_css$Css_Structure_Output$prettyPrintProperty = function (_p0) {
	var _p1 = _p0;
	var suffix = _p1.important ? ' !important;' : ';';
	return A2(
		_elm_lang$core$Basics_ops['++'],
		_p1.key,
		A2(
			_elm_lang$core$Basics_ops['++'],
			': ',
			A2(_elm_lang$core$Basics_ops['++'], _p1.value, suffix)));
};
var _rtfeldman$elm_css$Css_Structure_Output$prettyPrintProperties = function (properties) {
	return A2(
		_elm_lang$core$String$join,
		'\n',
		A2(
			_elm_lang$core$List$map,
			function (_p2) {
				return _rtfeldman$elm_css$Css_Structure_Output$indent(
					_rtfeldman$elm_css$Css_Structure_Output$prettyPrintProperty(_p2));
			},
			properties));
};
var _rtfeldman$elm_css$Css_Structure_Output$combinatorToString = function (combinator) {
	var _p3 = combinator;
	switch (_p3.ctor) {
		case 'AdjacentSibling':
			return '+';
		case 'GeneralSibling':
			return '~';
		case 'Child':
			return '>';
		default:
			return '';
	}
};
var _rtfeldman$elm_css$Css_Structure_Output$pseudoElementToString = function (_p4) {
	var _p5 = _p4;
	return A2(_elm_lang$core$Basics_ops['++'], '::', _p5._0);
};
var _rtfeldman$elm_css$Css_Structure_Output$repeatableSimpleSelectorToString = function (repeatableSimpleSelector) {
	var _p6 = repeatableSimpleSelector;
	switch (_p6.ctor) {
		case 'ClassSelector':
			return A2(_elm_lang$core$Basics_ops['++'], '.', _p6._0);
		case 'IdSelector':
			return A2(_elm_lang$core$Basics_ops['++'], '#', _p6._0);
		default:
			return A2(_elm_lang$core$Basics_ops['++'], ':', _p6._0);
	}
};
var _rtfeldman$elm_css$Css_Structure_Output$simpleSelectorSequenceToString = function (simpleSelectorSequence) {
	var _p7 = simpleSelectorSequence;
	switch (_p7.ctor) {
		case 'TypeSelectorSequence':
			return A2(
				_elm_lang$core$String$join,
				'',
				{
					ctor: '::',
					_0: _p7._0._0,
					_1: A2(_elm_lang$core$List$map, _rtfeldman$elm_css$Css_Structure_Output$repeatableSimpleSelectorToString, _p7._1)
				});
		case 'UniversalSelectorSequence':
			var _p8 = _p7._0;
			return _elm_lang$core$List$isEmpty(_p8) ? '*' : A2(
				_elm_lang$core$String$join,
				'',
				A2(_elm_lang$core$List$map, _rtfeldman$elm_css$Css_Structure_Output$repeatableSimpleSelectorToString, _p8));
		default:
			return A2(
				_elm_lang$core$String$join,
				'',
				{
					ctor: '::',
					_0: _p7._0,
					_1: A2(_elm_lang$core$List$map, _rtfeldman$elm_css$Css_Structure_Output$repeatableSimpleSelectorToString, _p7._1)
				});
	}
};
var _rtfeldman$elm_css$Css_Structure_Output$selectorChainToString = function (_p9) {
	var _p10 = _p9;
	return A2(
		_elm_lang$core$String$join,
		' ',
		{
			ctor: '::',
			_0: _rtfeldman$elm_css$Css_Structure_Output$combinatorToString(_p10._0),
			_1: {
				ctor: '::',
				_0: _rtfeldman$elm_css$Css_Structure_Output$simpleSelectorSequenceToString(_p10._1),
				_1: {ctor: '[]'}
			}
		});
};
var _rtfeldman$elm_css$Css_Structure_Output$selectorToString = function (_p11) {
	var _p12 = _p11;
	var pseudoElementsString = A2(
		_elm_lang$core$String$join,
		'',
		{
			ctor: '::',
			_0: A2(
				_elm_lang$core$Maybe$withDefault,
				'',
				A2(_elm_lang$core$Maybe$map, _rtfeldman$elm_css$Css_Structure_Output$pseudoElementToString, _p12._2)),
			_1: {ctor: '[]'}
		});
	var segments = A2(
		_elm_lang$core$Basics_ops['++'],
		{
			ctor: '::',
			_0: _rtfeldman$elm_css$Css_Structure_Output$simpleSelectorSequenceToString(_p12._0),
			_1: {ctor: '[]'}
		},
		A2(_elm_lang$core$List$map, _rtfeldman$elm_css$Css_Structure_Output$selectorChainToString, _p12._1));
	return A3(
		_elm_lang$core$Basics$flip,
		F2(
			function (x, y) {
				return A2(_elm_lang$core$Basics_ops['++'], x, y);
			}),
		pseudoElementsString,
		A2(
			_elm_lang$core$String$join,
			' ',
			A2(
				_elm_lang$core$List$filter,
				function (_p13) {
					return !_elm_lang$core$String$isEmpty(_p13);
				},
				segments)));
};
var _rtfeldman$elm_css$Css_Structure_Output$mediaExpressionToString = function (expression) {
	return A2(
		_elm_lang$core$Basics_ops['++'],
		'(',
		A2(
			_elm_lang$core$Basics_ops['++'],
			expression.feature,
			A2(
				_elm_lang$core$Basics_ops['++'],
				A2(
					_elm_lang$core$Maybe$withDefault,
					'',
					A2(
						_elm_lang$core$Maybe$map,
						F2(
							function (x, y) {
								return A2(_elm_lang$core$Basics_ops['++'], x, y);
							})(': '),
						expression.value)),
				')')));
};
var _rtfeldman$elm_css$Css_Structure_Output$mediaTypeToString = function (mediaType) {
	var _p14 = mediaType;
	switch (_p14.ctor) {
		case 'Print':
			return 'print';
		case 'Screen':
			return 'screen';
		default:
			return 'speech';
	}
};
var _rtfeldman$elm_css$Css_Structure_Output$mediaQueryToString = function (mediaQuery) {
	var prefixWith = F3(
		function (str, mediaType, expressions) {
			return A2(
				_elm_lang$core$Basics_ops['++'],
				str,
				A2(
					_elm_lang$core$Basics_ops['++'],
					' ',
					A2(
						_elm_lang$core$String$join,
						' and ',
						{
							ctor: '::',
							_0: _rtfeldman$elm_css$Css_Structure_Output$mediaTypeToString(mediaType),
							_1: A2(_elm_lang$core$List$map, _rtfeldman$elm_css$Css_Structure_Output$mediaExpressionToString, expressions)
						})));
		});
	var _p15 = mediaQuery;
	switch (_p15.ctor) {
		case 'AllQuery':
			return A2(
				_elm_lang$core$String$join,
				' and ',
				A2(_elm_lang$core$List$map, _rtfeldman$elm_css$Css_Structure_Output$mediaExpressionToString, _p15._0));
		case 'OnlyQuery':
			return A3(prefixWith, 'only', _p15._0, _p15._1);
		case 'NotQuery':
			return A3(prefixWith, 'not', _p15._0, _p15._1);
		default:
			return _p15._0;
	}
};
var _rtfeldman$elm_css$Css_Structure_Output$prettyPrintStyleBlock = F2(
	function (indentLevel, _p16) {
		var _p17 = _p16;
		var selectorStr = A2(
			_elm_lang$core$String$join,
			', ',
			A2(
				_elm_lang$core$List$map,
				_rtfeldman$elm_css$Css_Structure_Output$selectorToString,
				{ctor: '::', _0: _p17._0, _1: _p17._1}));
		return A2(
			_elm_lang$core$String$join,
			'',
			{
				ctor: '::',
				_0: selectorStr,
				_1: {
					ctor: '::',
					_0: ' {\n',
					_1: {
						ctor: '::',
						_0: indentLevel,
						_1: {
							ctor: '::',
							_0: _rtfeldman$elm_css$Css_Structure_Output$prettyPrintProperties(_p17._2),
							_1: {
								ctor: '::',
								_0: '\n',
								_1: {
									ctor: '::',
									_0: indentLevel,
									_1: {
										ctor: '::',
										_0: '}',
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}
				}
			});
	});
var _rtfeldman$elm_css$Css_Structure_Output$prettyPrintDeclaration = function (declaration) {
	var _p18 = declaration;
	switch (_p18.ctor) {
		case 'StyleBlockDeclaration':
			return A2(_rtfeldman$elm_css$Css_Structure_Output$prettyPrintStyleBlock, _rtfeldman$elm_css$Css_Structure_Output$noIndent, _p18._0);
		case 'MediaRule':
			var query = A2(
				_elm_lang$core$String$join,
				',\n',
				A2(_elm_lang$core$List$map, _rtfeldman$elm_css$Css_Structure_Output$mediaQueryToString, _p18._0));
			var blocks = A2(
				_elm_lang$core$String$join,
				'\n\n',
				A2(
					_elm_lang$core$List$map,
					function (_p19) {
						return _rtfeldman$elm_css$Css_Structure_Output$indent(
							A2(_rtfeldman$elm_css$Css_Structure_Output$prettyPrintStyleBlock, _rtfeldman$elm_css$Css_Structure_Output$spaceIndent, _p19));
					},
					_p18._1));
			return A2(
				_elm_lang$core$Basics_ops['++'],
				'@media ',
				A2(
					_elm_lang$core$Basics_ops['++'],
					query,
					A2(
						_elm_lang$core$Basics_ops['++'],
						' {\n',
						A2(_elm_lang$core$Basics_ops['++'], blocks, '\n}'))));
		default:
			return _elm_lang$core$Native_Utils.crashCase(
				'Css.Structure.Output',
				{
					start: {line: 61, column: 5},
					end: {line: 78, column: 49}
				},
				_p18)('not yet implemented :x');
	}
};
var _rtfeldman$elm_css$Css_Structure_Output$namespaceToString = function (_p21) {
	var _p22 = _p21;
	return A2(
		_elm_lang$core$Basics_ops['++'],
		'@namespace ',
		A2(
			_elm_lang$core$Basics_ops['++'],
			_p22._0,
			A2(
				_elm_lang$core$Basics_ops['++'],
				'\"',
				A2(_elm_lang$core$Basics_ops['++'], _p22._1, '\"'))));
};
var _rtfeldman$elm_css$Css_Structure_Output$importToString = function (_p23) {
	var _p24 = _p23;
	return A2(
		_elm_lang$core$Basics_ops['++'],
		'@import \"',
		A2(
			_elm_lang$core$Basics_ops['++'],
			_p24._0,
			A2(
				_elm_lang$core$Basics_ops['++'],
				_elm_lang$core$Basics$toString(_p24._1),
				'\"')));
};
var _rtfeldman$elm_css$Css_Structure_Output$charsetToString = function (charset) {
	return A2(
		_elm_lang$core$Maybe$withDefault,
		'',
		A2(
			_elm_lang$core$Maybe$map,
			function (str) {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					'@charset \"',
					A2(_elm_lang$core$Basics_ops['++'], str, '\"'));
			},
			charset));
};
var _rtfeldman$elm_css$Css_Structure_Output$prettyPrint = function (_p25) {
	var _p26 = _p25;
	return A2(
		_elm_lang$core$String$join,
		'\n\n',
		A2(
			_elm_lang$core$List$filter,
			function (_p27) {
				return !_elm_lang$core$String$isEmpty(_p27);
			},
			{
				ctor: '::',
				_0: _rtfeldman$elm_css$Css_Structure_Output$charsetToString(_p26.charset),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$core$String$join,
						'\n',
						A2(_elm_lang$core$List$map, _rtfeldman$elm_css$Css_Structure_Output$importToString, _p26.imports)),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$core$String$join,
							'\n',
							A2(_elm_lang$core$List$map, _rtfeldman$elm_css$Css_Structure_Output$namespaceToString, _p26.namespaces)),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$core$String$join,
								'\n\n',
								A2(_elm_lang$core$List$map, _rtfeldman$elm_css$Css_Structure_Output$prettyPrintDeclaration, _p26.declarations)),
							_1: {ctor: '[]'}
						}
					}
				}
			}));
};

var _rtfeldman$elm_css$Css_Preprocess_Resolve$oneOf = function (maybes) {
	oneOf:
	while (true) {
		var _p0 = maybes;
		if (_p0.ctor === '[]') {
			return _elm_lang$core$Maybe$Nothing;
		} else {
			var _p2 = _p0._0;
			var _p1 = _p2;
			if (_p1.ctor === 'Nothing') {
				var _v2 = _p0._1;
				maybes = _v2;
				continue oneOf;
			} else {
				return _p2;
			}
		}
	}
};
var _rtfeldman$elm_css$Css_Preprocess_Resolve$collectSelectors = function (declarations) {
	collectSelectors:
	while (true) {
		var _p3 = declarations;
		if (_p3.ctor === '[]') {
			return {ctor: '[]'};
		} else {
			if (_p3._0.ctor === 'StyleBlockDeclaration') {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					{ctor: '::', _0: _p3._0._0._0, _1: _p3._0._0._1},
					_rtfeldman$elm_css$Css_Preprocess_Resolve$collectSelectors(_p3._1));
			} else {
				var _v4 = _p3._1;
				declarations = _v4;
				continue collectSelectors;
			}
		}
	}
};
var _rtfeldman$elm_css$Css_Preprocess_Resolve$extractWarning = function (_p4) {
	var _p5 = _p4;
	return {
		ctor: '_Tuple2',
		_0: _p5.warnings,
		_1: {key: _p5.key, value: _p5.value, important: _p5.important}
	};
};
var _rtfeldman$elm_css$Css_Preprocess_Resolve$extractWarnings = function (properties) {
	return {
		ctor: '_Tuple2',
		_0: A2(
			_elm_lang$core$List$concatMap,
			function (_) {
				return _.warnings;
			},
			properties),
		_1: A2(
			_elm_lang$core$List$map,
			function (prop) {
				return _elm_lang$core$Tuple$second(
					_rtfeldman$elm_css$Css_Preprocess_Resolve$extractWarning(prop));
			},
			properties)
	};
};
var _rtfeldman$elm_css$Css_Preprocess_Resolve$toDocumentRule = F5(
	function (str1, str2, str3, str4, declaration) {
		var _p6 = declaration;
		if (_p6.ctor === 'StyleBlockDeclaration') {
			return A5(_rtfeldman$elm_css$Css_Structure$DocumentRule, str1, str2, str3, str4, _p6._0);
		} else {
			return declaration;
		}
	});
var _rtfeldman$elm_css$Css_Preprocess_Resolve$lastDeclaration = function (declarations) {
	lastDeclaration:
	while (true) {
		var _p7 = declarations;
		if (_p7.ctor === '[]') {
			return _elm_lang$core$Maybe$Nothing;
		} else {
			if (_p7._1.ctor === '[]') {
				return _elm_lang$core$Maybe$Just(
					{
						ctor: '::',
						_0: _p7._0,
						_1: {ctor: '[]'}
					});
			} else {
				var _v8 = _p7._1;
				declarations = _v8;
				continue lastDeclaration;
			}
		}
	}
};
var _rtfeldman$elm_css$Css_Preprocess_Resolve$concatDeclarationsAndWarnings = function (declarationsAndWarnings) {
	var _p8 = declarationsAndWarnings;
	if (_p8.ctor === '[]') {
		return {
			declarations: {ctor: '[]'},
			warnings: {ctor: '[]'}
		};
	} else {
		var result = _rtfeldman$elm_css$Css_Preprocess_Resolve$concatDeclarationsAndWarnings(_p8._1);
		return {
			declarations: A2(_elm_lang$core$Basics_ops['++'], _p8._0.declarations, result.declarations),
			warnings: A2(_elm_lang$core$Basics_ops['++'], _p8._0.warnings, result.warnings)
		};
	}
};
var _rtfeldman$elm_css$Css_Preprocess_Resolve$resolveFontFeatureValues = function (tuples) {
	var expandTuples = function (tuplesToExpand) {
		var _p9 = tuplesToExpand;
		if (_p9.ctor === '[]') {
			return {
				ctor: '_Tuple2',
				_0: {ctor: '[]'},
				_1: {ctor: '[]'}
			};
		} else {
			var _p10 = expandTuples(_p9._1);
			var nextWarnings = _p10._0;
			var nextTuples = _p10._1;
			var _p11 = _rtfeldman$elm_css$Css_Preprocess_Resolve$extractWarnings(_p9._0._1);
			var warnings = _p11._0;
			var properties = _p11._1;
			return {
				ctor: '_Tuple2',
				_0: A2(_elm_lang$core$Basics_ops['++'], warnings, nextWarnings),
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: _p9._0._0, _1: properties},
					_1: nextTuples
				}
			};
		}
	};
	var _p12 = expandTuples(tuples);
	var warnings = _p12._0;
	var newTuples = _p12._1;
	return {
		declarations: {
			ctor: '::',
			_0: _rtfeldman$elm_css$Css_Structure$FontFeatureValues(newTuples),
			_1: {ctor: '[]'}
		},
		warnings: warnings
	};
};
var _rtfeldman$elm_css$Css_Preprocess_Resolve$resolveCounterStyle = function (counterStyleProperties) {
	var _p13 = _rtfeldman$elm_css$Css_Preprocess_Resolve$extractWarnings(counterStyleProperties);
	var warnings = _p13._0;
	var properties = _p13._1;
	return {
		declarations: {
			ctor: '::',
			_0: _rtfeldman$elm_css$Css_Structure$Viewport(properties),
			_1: {ctor: '[]'}
		},
		warnings: warnings
	};
};
var _rtfeldman$elm_css$Css_Preprocess_Resolve$resolveViewport = function (viewportProperties) {
	var _p14 = _rtfeldman$elm_css$Css_Preprocess_Resolve$extractWarnings(viewportProperties);
	var warnings = _p14._0;
	var properties = _p14._1;
	return {
		declarations: {
			ctor: '::',
			_0: _rtfeldman$elm_css$Css_Structure$Viewport(properties),
			_1: {ctor: '[]'}
		},
		warnings: warnings
	};
};
var _rtfeldman$elm_css$Css_Preprocess_Resolve$resolveKeyframes = F2(
	function (str, properties) {
		return {
			declarations: {
				ctor: '::',
				_0: A2(_rtfeldman$elm_css$Css_Structure$Keyframes, str, properties),
				_1: {ctor: '[]'}
			},
			warnings: {ctor: '[]'}
		};
	});
var _rtfeldman$elm_css$Css_Preprocess_Resolve$resolveFontFace = function (fontFaceProperties) {
	var _p15 = _rtfeldman$elm_css$Css_Preprocess_Resolve$extractWarnings(fontFaceProperties);
	var warnings = _p15._0;
	var properties = _p15._1;
	return {
		declarations: {
			ctor: '::',
			_0: _rtfeldman$elm_css$Css_Structure$FontFace(properties),
			_1: {ctor: '[]'}
		},
		warnings: warnings
	};
};
var _rtfeldman$elm_css$Css_Preprocess_Resolve$resolvePageRule = F2(
	function (str, pageRuleProperties) {
		var _p16 = _rtfeldman$elm_css$Css_Preprocess_Resolve$extractWarnings(pageRuleProperties);
		var warnings = _p16._0;
		var properties = _p16._1;
		return {
			declarations: {
				ctor: '::',
				_0: A2(_rtfeldman$elm_css$Css_Structure$PageRule, str, properties),
				_1: {ctor: '[]'}
			},
			warnings: warnings
		};
	});
var _rtfeldman$elm_css$Css_Preprocess_Resolve$toMediaRule = F2(
	function (mediaQueries, declaration) {
		var _p17 = declaration;
		switch (_p17.ctor) {
			case 'StyleBlockDeclaration':
				return A2(
					_rtfeldman$elm_css$Css_Structure$MediaRule,
					mediaQueries,
					{
						ctor: '::',
						_0: _p17._0,
						_1: {ctor: '[]'}
					});
			case 'MediaRule':
				return A2(
					_rtfeldman$elm_css$Css_Structure$MediaRule,
					A2(_elm_lang$core$Basics_ops['++'], mediaQueries, _p17._0),
					_p17._1);
			case 'SupportsRule':
				return A2(
					_rtfeldman$elm_css$Css_Structure$SupportsRule,
					_p17._0,
					A2(
						_elm_lang$core$List$map,
						_rtfeldman$elm_css$Css_Preprocess_Resolve$toMediaRule(mediaQueries),
						_p17._1));
			case 'DocumentRule':
				return A5(_rtfeldman$elm_css$Css_Structure$DocumentRule, _p17._0, _p17._1, _p17._2, _p17._3, _p17._4);
			case 'PageRule':
				return declaration;
			case 'FontFace':
				return declaration;
			case 'Keyframes':
				return declaration;
			case 'Viewport':
				return declaration;
			case 'CounterStyle':
				return declaration;
			default:
				return declaration;
		}
	});
var _rtfeldman$elm_css$Css_Preprocess_Resolve$resolveMediaRule = F2(
	function (mediaQueries, styleBlocks) {
		var handleStyleBlock = function (styleBlock) {
			var _p18 = _rtfeldman$elm_css$Css_Preprocess_Resolve$expandStyleBlock(styleBlock);
			var declarations = _p18.declarations;
			var warnings = _p18.warnings;
			return {
				declarations: A2(
					_elm_lang$core$List$map,
					_rtfeldman$elm_css$Css_Preprocess_Resolve$toMediaRule(mediaQueries),
					declarations),
				warnings: warnings
			};
		};
		var results = A2(_elm_lang$core$List$map, handleStyleBlock, styleBlocks);
		return {
			warnings: A2(
				_elm_lang$core$List$concatMap,
				function (_) {
					return _.warnings;
				},
				results),
			declarations: A2(
				_elm_lang$core$List$concatMap,
				function (_) {
					return _.declarations;
				},
				results)
		};
	});
var _rtfeldman$elm_css$Css_Preprocess_Resolve$expandStyleBlock = function (_p19) {
	var _p20 = _p19;
	return A2(
		_rtfeldman$elm_css$Css_Preprocess_Resolve$applyStyles,
		_p20._2,
		{
			ctor: '::',
			_0: _rtfeldman$elm_css$Css_Structure$StyleBlockDeclaration(
				A3(
					_rtfeldman$elm_css$Css_Structure$StyleBlock,
					_p20._0,
					_p20._1,
					{ctor: '[]'})),
			_1: {ctor: '[]'}
		});
};
var _rtfeldman$elm_css$Css_Preprocess_Resolve$applyStyles = F2(
	function (styles, declarations) {
		applyStyles:
		while (true) {
			var _p21 = styles;
			if (_p21.ctor === '[]') {
				return {
					declarations: declarations,
					warnings: {ctor: '[]'}
				};
			} else {
				switch (_p21._0.ctor) {
					case 'AppendProperty':
						var _p22 = _rtfeldman$elm_css$Css_Preprocess_Resolve$extractWarning(_p21._0._0);
						var warnings = _p22._0;
						var property = _p22._1;
						var result = A2(
							_rtfeldman$elm_css$Css_Preprocess_Resolve$applyStyles,
							_p21._1,
							A2(_rtfeldman$elm_css$Css_Structure$appendProperty, property, declarations));
						return {
							declarations: result.declarations,
							warnings: A2(_elm_lang$core$Basics_ops['++'], warnings, result.warnings)
						};
					case 'ExtendSelector':
						return A4(
							_rtfeldman$elm_css$Css_Preprocess_Resolve$applyNestedStylesToLast,
							_p21._0._1,
							_p21._1,
							_rtfeldman$elm_css$Css_Structure$appendRepeatableToLastSelector(_p21._0._0),
							declarations);
					case 'NestSnippet':
						var chain = F2(
							function (_p24, _p23) {
								var _p25 = _p24;
								var _p26 = _p23;
								return A3(
									_rtfeldman$elm_css$Css_Structure$Selector,
									_p25._0,
									A2(
										_elm_lang$core$Basics_ops['++'],
										_p25._1,
										{
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: _p21._0._0, _1: _p26._0},
											_1: _p26._1
										}),
									_rtfeldman$elm_css$Css_Preprocess_Resolve$oneOf(
										{
											ctor: '::',
											_0: _p26._2,
											_1: {
												ctor: '::',
												_0: _p25._2,
												_1: {ctor: '[]'}
											}
										}));
							});
						var expandDeclaration = function (declaration) {
							var _p27 = declaration;
							switch (_p27.ctor) {
								case 'StyleBlockDeclaration':
									var newSelectors = A2(
										_elm_lang$core$List$concatMap,
										function (originalSelector) {
											return A2(
												_elm_lang$core$List$map,
												chain(originalSelector),
												{ctor: '::', _0: _p27._0._0, _1: _p27._0._1});
										},
										_rtfeldman$elm_css$Css_Preprocess_Resolve$collectSelectors(declarations));
									var newDeclarations = function () {
										var _p28 = newSelectors;
										if (_p28.ctor === '[]') {
											return {ctor: '[]'};
										} else {
											return {
												ctor: '::',
												_0: _rtfeldman$elm_css$Css_Structure$StyleBlockDeclaration(
													A3(
														_rtfeldman$elm_css$Css_Structure$StyleBlock,
														_p28._0,
														_p28._1,
														{ctor: '[]'})),
												_1: {ctor: '[]'}
											};
										}
									}();
									return _rtfeldman$elm_css$Css_Preprocess_Resolve$concatDeclarationsAndWarnings(
										{
											ctor: '::',
											_0: A2(_rtfeldman$elm_css$Css_Preprocess_Resolve$applyStyles, _p27._0._2, newDeclarations),
											_1: {ctor: '[]'}
										});
								case 'MediaRule':
									return A2(_rtfeldman$elm_css$Css_Preprocess_Resolve$resolveMediaRule, _p27._0, _p27._1);
								case 'SupportsRule':
									return A2(_rtfeldman$elm_css$Css_Preprocess_Resolve$resolveSupportsRule, _p27._0, _p27._1);
								case 'DocumentRule':
									return A5(_rtfeldman$elm_css$Css_Preprocess_Resolve$resolveDocumentRule, _p27._0, _p27._1, _p27._2, _p27._3, _p27._4);
								case 'PageRule':
									return A2(_rtfeldman$elm_css$Css_Preprocess_Resolve$resolvePageRule, _p27._0, _p27._1);
								case 'FontFace':
									return _rtfeldman$elm_css$Css_Preprocess_Resolve$resolveFontFace(_p27._0);
								case 'Keyframes':
									return A2(_rtfeldman$elm_css$Css_Preprocess_Resolve$resolveKeyframes, _p27._0, _p27._1);
								case 'Viewport':
									return _rtfeldman$elm_css$Css_Preprocess_Resolve$resolveViewport(_p27._0);
								case 'CounterStyle':
									return _rtfeldman$elm_css$Css_Preprocess_Resolve$resolveCounterStyle(_p27._0);
								default:
									return _rtfeldman$elm_css$Css_Preprocess_Resolve$resolveFontFeatureValues(_p27._0);
							}
						};
						return _rtfeldman$elm_css$Css_Preprocess_Resolve$concatDeclarationsAndWarnings(
							A2(
								F2(
									function (x, y) {
										return A2(_elm_lang$core$Basics_ops['++'], x, y);
									}),
								{
									ctor: '::',
									_0: A2(_rtfeldman$elm_css$Css_Preprocess_Resolve$applyStyles, _p21._1, declarations),
									_1: {ctor: '[]'}
								},
								A2(
									_elm_lang$core$List$map,
									expandDeclaration,
									A2(_elm_lang$core$List$concatMap, _rtfeldman$elm_css$Css_Preprocess$unwrapSnippet, _p21._0._1))));
					case 'WithPseudoElement':
						return A4(
							_rtfeldman$elm_css$Css_Preprocess_Resolve$applyNestedStylesToLast,
							_p21._0._1,
							_p21._1,
							_rtfeldman$elm_css$Css_Structure$appendPseudoElementToLastSelector(_p21._0._0),
							declarations);
					case 'WithMedia':
						var newDeclarations = function () {
							var _p29 = _rtfeldman$elm_css$Css_Preprocess_Resolve$collectSelectors(declarations);
							if (_p29.ctor === '[]') {
								return {ctor: '[]'};
							} else {
								return {
									ctor: '::',
									_0: A2(
										_rtfeldman$elm_css$Css_Structure$MediaRule,
										_p21._0._0,
										{
											ctor: '::',
											_0: A3(
												_rtfeldman$elm_css$Css_Structure$StyleBlock,
												_p29._0,
												_p29._1,
												{ctor: '[]'}),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								};
							}
						}();
						return _rtfeldman$elm_css$Css_Preprocess_Resolve$concatDeclarationsAndWarnings(
							{
								ctor: '::',
								_0: A2(_rtfeldman$elm_css$Css_Preprocess_Resolve$applyStyles, _p21._1, declarations),
								_1: {
									ctor: '::',
									_0: A2(_rtfeldman$elm_css$Css_Preprocess_Resolve$applyStyles, _p21._0._1, newDeclarations),
									_1: {ctor: '[]'}
								}
							});
					default:
						var _v19 = A2(_elm_lang$core$Basics_ops['++'], _p21._0._0, _p21._1),
							_v20 = declarations;
						styles = _v19;
						declarations = _v20;
						continue applyStyles;
				}
			}
		}
	});
var _rtfeldman$elm_css$Css_Preprocess_Resolve$applyNestedStylesToLast = F4(
	function (nestedStyles, rest, f, declarations) {
		var withoutParent = function (decls) {
			return A2(
				_elm_lang$core$Maybe$withDefault,
				{ctor: '[]'},
				_elm_lang$core$List$tail(decls));
		};
		var nextResult = A2(
			_rtfeldman$elm_css$Css_Preprocess_Resolve$applyStyles,
			rest,
			A2(
				_elm_lang$core$Maybe$withDefault,
				{ctor: '[]'},
				_rtfeldman$elm_css$Css_Preprocess_Resolve$lastDeclaration(declarations)));
		var newDeclarations = function () {
			var _p30 = {
				ctor: '_Tuple2',
				_0: _elm_lang$core$List$head(nextResult.declarations),
				_1: _elm_lang$core$List$head(
					_elm_lang$core$List$reverse(declarations))
			};
			if (((_p30.ctor === '_Tuple2') && (_p30._0.ctor === 'Just')) && (_p30._1.ctor === 'Just')) {
				var _p32 = _p30._1._0;
				var _p31 = _p30._0._0;
				return A2(
					_elm_lang$core$Basics_ops['++'],
					A2(
						_elm_lang$core$List$take,
						_elm_lang$core$List$length(declarations) - 1,
						declarations),
					{
						ctor: '::',
						_0: (!_elm_lang$core$Native_Utils.eq(_p32, _p31)) ? _p31 : _p32,
						_1: {ctor: '[]'}
					});
			} else {
				return declarations;
			}
		}();
		var handleInitial = function (declarationsAndWarnings) {
			var result = A2(_rtfeldman$elm_css$Css_Preprocess_Resolve$applyStyles, nestedStyles, declarationsAndWarnings.declarations);
			return {
				warnings: A2(_elm_lang$core$Basics_ops['++'], declarationsAndWarnings.warnings, result.warnings),
				declarations: result.declarations
			};
		};
		var insertStylesToNestedDecl = function (lastDecl) {
			return _rtfeldman$elm_css$Css_Preprocess_Resolve$concatDeclarationsAndWarnings(
				A2(
					_rtfeldman$elm_css$Css_Structure$mapLast,
					handleInitial,
					A2(
						_elm_lang$core$List$map,
						function (declaration) {
							return {
								declarations: {
									ctor: '::',
									_0: declaration,
									_1: {ctor: '[]'}
								},
								warnings: {ctor: '[]'}
							};
						},
						A2(_rtfeldman$elm_css$Css_Structure$concatMapLastStyleBlock, f, lastDecl))));
		};
		var initialResult = A2(
			_elm_lang$core$Maybe$withDefault,
			{
				warnings: {ctor: '[]'},
				declarations: {ctor: '[]'}
			},
			A2(
				_elm_lang$core$Maybe$map,
				insertStylesToNestedDecl,
				_rtfeldman$elm_css$Css_Preprocess_Resolve$lastDeclaration(declarations)));
		return {
			warnings: A2(_elm_lang$core$Basics_ops['++'], initialResult.warnings, nextResult.warnings),
			declarations: A2(
				_elm_lang$core$Basics_ops['++'],
				newDeclarations,
				A2(
					_elm_lang$core$Basics_ops['++'],
					withoutParent(initialResult.declarations),
					withoutParent(nextResult.declarations)))
		};
	});
var _rtfeldman$elm_css$Css_Preprocess_Resolve$resolveDocumentRule = F5(
	function (str1, str2, str3, str4, styleBlock) {
		var _p33 = _rtfeldman$elm_css$Css_Preprocess_Resolve$expandStyleBlock(styleBlock);
		var declarations = _p33.declarations;
		var warnings = _p33.warnings;
		return {
			declarations: A2(
				_elm_lang$core$List$map,
				A4(_rtfeldman$elm_css$Css_Preprocess_Resolve$toDocumentRule, str1, str2, str3, str4),
				declarations),
			warnings: warnings
		};
	});
var _rtfeldman$elm_css$Css_Preprocess_Resolve$resolveSupportsRule = F2(
	function (str, snippets) {
		var _p34 = _rtfeldman$elm_css$Css_Preprocess_Resolve$extract(
			A2(_elm_lang$core$List$concatMap, _rtfeldman$elm_css$Css_Preprocess$unwrapSnippet, snippets));
		var declarations = _p34.declarations;
		var warnings = _p34.warnings;
		return {
			declarations: {
				ctor: '::',
				_0: A2(_rtfeldman$elm_css$Css_Structure$SupportsRule, str, declarations),
				_1: {ctor: '[]'}
			},
			warnings: warnings
		};
	});
var _rtfeldman$elm_css$Css_Preprocess_Resolve$extract = function (snippetDeclarations) {
	var _p35 = snippetDeclarations;
	if (_p35.ctor === '[]') {
		return {
			declarations: {ctor: '[]'},
			warnings: {ctor: '[]'}
		};
	} else {
		var _p36 = _rtfeldman$elm_css$Css_Preprocess_Resolve$toDeclarations(_p35._0);
		var declarations = _p36.declarations;
		var warnings = _p36.warnings;
		var nextResult = _rtfeldman$elm_css$Css_Preprocess_Resolve$extract(_p35._1);
		return {
			declarations: A2(_elm_lang$core$Basics_ops['++'], declarations, nextResult.declarations),
			warnings: A2(_elm_lang$core$Basics_ops['++'], warnings, nextResult.warnings)
		};
	}
};
var _rtfeldman$elm_css$Css_Preprocess_Resolve$toDeclarations = function (snippetDeclaration) {
	var _p37 = snippetDeclaration;
	switch (_p37.ctor) {
		case 'StyleBlockDeclaration':
			return _rtfeldman$elm_css$Css_Preprocess_Resolve$expandStyleBlock(_p37._0);
		case 'MediaRule':
			return A2(_rtfeldman$elm_css$Css_Preprocess_Resolve$resolveMediaRule, _p37._0, _p37._1);
		case 'SupportsRule':
			return A2(_rtfeldman$elm_css$Css_Preprocess_Resolve$resolveSupportsRule, _p37._0, _p37._1);
		case 'DocumentRule':
			return A5(_rtfeldman$elm_css$Css_Preprocess_Resolve$resolveDocumentRule, _p37._0, _p37._1, _p37._2, _p37._3, _p37._4);
		case 'PageRule':
			return A2(_rtfeldman$elm_css$Css_Preprocess_Resolve$resolvePageRule, _p37._0, _p37._1);
		case 'FontFace':
			return _rtfeldman$elm_css$Css_Preprocess_Resolve$resolveFontFace(_p37._0);
		case 'Keyframes':
			return A2(_rtfeldman$elm_css$Css_Preprocess_Resolve$resolveKeyframes, _p37._0, _p37._1);
		case 'Viewport':
			return _rtfeldman$elm_css$Css_Preprocess_Resolve$resolveViewport(_p37._0);
		case 'CounterStyle':
			return _rtfeldman$elm_css$Css_Preprocess_Resolve$resolveCounterStyle(_p37._0);
		default:
			return _rtfeldman$elm_css$Css_Preprocess_Resolve$resolveFontFeatureValues(_p37._0);
	}
};
var _rtfeldman$elm_css$Css_Preprocess_Resolve$toStructure = function (_p38) {
	var _p39 = _p38;
	var _p40 = _rtfeldman$elm_css$Css_Preprocess_Resolve$extract(
		A2(_elm_lang$core$List$concatMap, _rtfeldman$elm_css$Css_Preprocess$unwrapSnippet, _p39.snippets));
	var warnings = _p40.warnings;
	var declarations = _p40.declarations;
	return {
		ctor: '_Tuple2',
		_0: {charset: _p39.charset, imports: _p39.imports, namespaces: _p39.namespaces, declarations: declarations},
		_1: warnings
	};
};
var _rtfeldman$elm_css$Css_Preprocess_Resolve$compile1 = function (sheet) {
	var _p41 = _rtfeldman$elm_css$Css_Preprocess_Resolve$toStructure(sheet);
	var structureStylesheet = _p41._0;
	var warnings = _p41._1;
	return {
		warnings: warnings,
		css: _rtfeldman$elm_css$Css_Structure_Output$prettyPrint(
			_rtfeldman$elm_css$Css_Structure$dropEmpty(structureStylesheet))
	};
};
var _rtfeldman$elm_css$Css_Preprocess_Resolve$compile = function (styles) {
	var results = A2(_elm_lang$core$List$map, _rtfeldman$elm_css$Css_Preprocess_Resolve$compile1, styles);
	return {
		warnings: A2(
			_elm_lang$core$List$concatMap,
			function (_) {
				return _.warnings;
			},
			results),
		css: A2(
			_elm_lang$core$String$join,
			'\n\n',
			A2(
				_elm_lang$core$List$map,
				function (_) {
					return _.css;
				},
				results))
	};
};
var _rtfeldman$elm_css$Css_Preprocess_Resolve$DeclarationsAndWarnings = F2(
	function (a, b) {
		return {declarations: a, warnings: b};
	});

var _rtfeldman$elm_css$VirtualDom_Styled$containsKey = F2(
	function (key, pairs) {
		containsKey:
		while (true) {
			var _p0 = pairs;
			if (_p0.ctor === '[]') {
				return false;
			} else {
				if (_elm_lang$core$Native_Utils.eq(key, _p0._0._0)) {
					return true;
				} else {
					var _v1 = key,
						_v2 = _p0._1;
					key = _v1;
					pairs = _v2;
					continue containsKey;
				}
			}
		}
	});
var _rtfeldman$elm_css$VirtualDom_Styled$getUnusedKey = F2(
	function ($default, pairs) {
		getUnusedKey:
		while (true) {
			var _p1 = pairs;
			if (_p1.ctor === '[]') {
				return $default;
			} else {
				var _p2 = _p1._1;
				var newKey = A2(_elm_lang$core$Basics_ops['++'], '_', _p1._0._0);
				if (A2(_rtfeldman$elm_css$VirtualDom_Styled$containsKey, newKey, _p2)) {
					var _v4 = newKey,
						_v5 = _p2;
					$default = _v4;
					pairs = _v5;
					continue getUnusedKey;
				} else {
					return newKey;
				}
			}
		}
	});
var _rtfeldman$elm_css$VirtualDom_Styled$extractUnstyledProperty = function (_p3) {
	var _p4 = _p3;
	return _p4._0;
};
var _rtfeldman$elm_css$VirtualDom_Styled$stylesFromPropertiesHelp = F2(
	function (candidate, properties) {
		stylesFromPropertiesHelp:
		while (true) {
			var _p5 = properties;
			if (_p5.ctor === '[]') {
				return candidate;
			} else {
				var _p7 = _p5._1;
				var _p6 = _p5._0._2;
				if (_elm_lang$core$String$isEmpty(_p6)) {
					var _v8 = candidate,
						_v9 = _p7;
					candidate = _v8;
					properties = _v9;
					continue stylesFromPropertiesHelp;
				} else {
					var _v10 = _elm_lang$core$Maybe$Just(
						{ctor: '_Tuple2', _0: _p6, _1: _p5._0._1}),
						_v11 = _p7;
					candidate = _v10;
					properties = _v11;
					continue stylesFromPropertiesHelp;
				}
			}
		}
	});
var _rtfeldman$elm_css$VirtualDom_Styled$stylesFromProperties = function (properties) {
	var _p8 = A2(_rtfeldman$elm_css$VirtualDom_Styled$stylesFromPropertiesHelp, _elm_lang$core$Maybe$Nothing, properties);
	if (_p8.ctor === 'Nothing') {
		return _elm_lang$core$Dict$empty;
	} else {
		return A2(_elm_lang$core$Dict$singleton, _p8._0._0, _p8._0._1);
	}
};
var _rtfeldman$elm_css$VirtualDom_Styled$accumulateStyles = F2(
	function (_p9, styles) {
		var _p10 = _p9;
		var _p11 = _p10._1;
		return _elm_lang$core$List$isEmpty(_p11) ? styles : A3(_elm_lang$core$Dict$insert, _p10._2, _p11, styles);
	});
var _rtfeldman$elm_css$VirtualDom_Styled$accumulateKeyedStyledHtml = F2(
	function (_p13, _p12) {
		var _p14 = _p13;
		var _p23 = _p14._0;
		var _p15 = _p12;
		var _p22 = _p15._1;
		var _p21 = _p15._0;
		var _p16 = _p14._1;
		switch (_p16.ctor) {
			case 'Unstyled':
				return {
					ctor: '_Tuple2',
					_0: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: _p23, _1: _p16._0},
						_1: _p21
					},
					_1: _p22
				};
			case 'Element':
				var _p18 = _p16._1;
				var combinedStyles = A3(_elm_lang$core$List$foldl, _rtfeldman$elm_css$VirtualDom_Styled$accumulateStyles, _p22, _p18);
				var _p17 = A3(
					_elm_lang$core$List$foldl,
					_rtfeldman$elm_css$VirtualDom_Styled$accumulateStyledHtml,
					{
						ctor: '_Tuple2',
						_0: {ctor: '[]'},
						_1: combinedStyles
					},
					_p16._2);
				var childNodes = _p17._0;
				var finalStyles = _p17._1;
				var vdom = A3(
					_elm_lang$virtual_dom$VirtualDom$node,
					_p16._0,
					A2(_elm_lang$core$List$map, _rtfeldman$elm_css$VirtualDom_Styled$extractUnstyledProperty, _p18),
					_elm_lang$core$List$reverse(childNodes));
				return {
					ctor: '_Tuple2',
					_0: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: _p23, _1: vdom},
						_1: _p21
					},
					_1: finalStyles
				};
			default:
				var _p20 = _p16._1;
				var combinedStyles = A3(_elm_lang$core$List$foldl, _rtfeldman$elm_css$VirtualDom_Styled$accumulateStyles, _p22, _p20);
				var _p19 = A3(
					_elm_lang$core$List$foldl,
					_rtfeldman$elm_css$VirtualDom_Styled$accumulateKeyedStyledHtml,
					{
						ctor: '_Tuple2',
						_0: {ctor: '[]'},
						_1: combinedStyles
					},
					_p16._2);
				var childNodes = _p19._0;
				var finalStyles = _p19._1;
				var vdom = A3(
					_elm_lang$virtual_dom$VirtualDom$keyedNode,
					_p16._0,
					A2(_elm_lang$core$List$map, _rtfeldman$elm_css$VirtualDom_Styled$extractUnstyledProperty, _p20),
					_elm_lang$core$List$reverse(childNodes));
				return {
					ctor: '_Tuple2',
					_0: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: _p23, _1: vdom},
						_1: _p21
					},
					_1: finalStyles
				};
		}
	});
var _rtfeldman$elm_css$VirtualDom_Styled$accumulateStyledHtml = F2(
	function (html, _p24) {
		var _p25 = _p24;
		var _p32 = _p25._1;
		var _p31 = _p25._0;
		var _p26 = html;
		switch (_p26.ctor) {
			case 'Unstyled':
				return {
					ctor: '_Tuple2',
					_0: {ctor: '::', _0: _p26._0, _1: _p31},
					_1: _p32
				};
			case 'Element':
				var _p28 = _p26._1;
				var combinedStyles = A3(_elm_lang$core$List$foldl, _rtfeldman$elm_css$VirtualDom_Styled$accumulateStyles, _p32, _p28);
				var _p27 = A3(
					_elm_lang$core$List$foldl,
					_rtfeldman$elm_css$VirtualDom_Styled$accumulateStyledHtml,
					{
						ctor: '_Tuple2',
						_0: {ctor: '[]'},
						_1: combinedStyles
					},
					_p26._2);
				var childNodes = _p27._0;
				var finalStyles = _p27._1;
				var node = A3(
					_elm_lang$virtual_dom$VirtualDom$node,
					_p26._0,
					A2(_elm_lang$core$List$map, _rtfeldman$elm_css$VirtualDom_Styled$extractUnstyledProperty, _p28),
					_elm_lang$core$List$reverse(childNodes));
				return {
					ctor: '_Tuple2',
					_0: {ctor: '::', _0: node, _1: _p31},
					_1: finalStyles
				};
			default:
				var _p30 = _p26._1;
				var combinedStyles = A3(_elm_lang$core$List$foldl, _rtfeldman$elm_css$VirtualDom_Styled$accumulateStyles, _p32, _p30);
				var _p29 = A3(
					_elm_lang$core$List$foldl,
					_rtfeldman$elm_css$VirtualDom_Styled$accumulateKeyedStyledHtml,
					{
						ctor: '_Tuple2',
						_0: {ctor: '[]'},
						_1: combinedStyles
					},
					_p26._2);
				var childNodes = _p29._0;
				var finalStyles = _p29._1;
				var node = A3(
					_elm_lang$virtual_dom$VirtualDom$keyedNode,
					_p26._0,
					A2(_elm_lang$core$List$map, _rtfeldman$elm_css$VirtualDom_Styled$extractUnstyledProperty, _p30),
					_elm_lang$core$List$reverse(childNodes));
				return {
					ctor: '_Tuple2',
					_0: {ctor: '::', _0: node, _1: _p31},
					_1: finalStyles
				};
		}
	});
var _rtfeldman$elm_css$VirtualDom_Styled$murmurSeed = 15739;
var _rtfeldman$elm_css$VirtualDom_Styled$makeSnippet = F2(
	function (styles, sequence) {
		var selector = A3(
			_rtfeldman$elm_css$Css_Structure$Selector,
			sequence,
			{ctor: '[]'},
			_elm_lang$core$Maybe$Nothing);
		return _rtfeldman$elm_css$Css_Preprocess$Snippet(
			{
				ctor: '::',
				_0: _rtfeldman$elm_css$Css_Preprocess$StyleBlockDeclaration(
					A3(
						_rtfeldman$elm_css$Css_Preprocess$StyleBlock,
						selector,
						{ctor: '[]'},
						styles)),
				_1: {ctor: '[]'}
			});
	});
var _rtfeldman$elm_css$VirtualDom_Styled$snippetFromPair = function (_p33) {
	var _p34 = _p33;
	return A2(
		_rtfeldman$elm_css$VirtualDom_Styled$makeSnippet,
		_p34._1,
		_rtfeldman$elm_css$Css_Structure$UniversalSelectorSequence(
			{
				ctor: '::',
				_0: _rtfeldman$elm_css$Css_Structure$ClassSelector(_p34._0),
				_1: {ctor: '[]'}
			}));
};
var _rtfeldman$elm_css$VirtualDom_Styled$toDeclaration = function (dict) {
	return function (_) {
		return _.css;
	}(
		_rtfeldman$elm_css$Css_Preprocess_Resolve$compile(
			_elm_lang$core$List$singleton(
				_rtfeldman$elm_css$Css_Preprocess$stylesheet(
					A2(
						_elm_lang$core$List$map,
						_rtfeldman$elm_css$VirtualDom_Styled$snippetFromPair,
						_elm_lang$core$Dict$toList(dict))))));
};
var _rtfeldman$elm_css$VirtualDom_Styled$toStyleNode = function (styles) {
	return A3(
		_elm_lang$virtual_dom$VirtualDom$node,
		'style',
		{ctor: '[]'},
		_elm_lang$core$List$singleton(
			_elm_lang$virtual_dom$VirtualDom$text(
				_rtfeldman$elm_css$VirtualDom_Styled$toDeclaration(styles))));
};
var _rtfeldman$elm_css$VirtualDom_Styled$unstyle = F3(
	function (elemType, properties, children) {
		var unstyledProperties = A2(_elm_lang$core$List$map, _rtfeldman$elm_css$VirtualDom_Styled$extractUnstyledProperty, properties);
		var initialStyles = _rtfeldman$elm_css$VirtualDom_Styled$stylesFromProperties(properties);
		var _p35 = A3(
			_elm_lang$core$List$foldl,
			_rtfeldman$elm_css$VirtualDom_Styled$accumulateStyledHtml,
			{
				ctor: '_Tuple2',
				_0: {ctor: '[]'},
				_1: initialStyles
			},
			children);
		var childNodes = _p35._0;
		var styles = _p35._1;
		var styleNode = _rtfeldman$elm_css$VirtualDom_Styled$toStyleNode(styles);
		return A3(
			_elm_lang$virtual_dom$VirtualDom$node,
			elemType,
			unstyledProperties,
			{
				ctor: '::',
				_0: styleNode,
				_1: _elm_lang$core$List$reverse(childNodes)
			});
	});
var _rtfeldman$elm_css$VirtualDom_Styled$toKeyedStyleNode = F2(
	function (allStyles, keyedChildNodes) {
		var finalNode = _rtfeldman$elm_css$VirtualDom_Styled$toStyleNode(allStyles);
		var styleNodeKey = A2(_rtfeldman$elm_css$VirtualDom_Styled$getUnusedKey, '_', keyedChildNodes);
		return {ctor: '_Tuple2', _0: styleNodeKey, _1: finalNode};
	});
var _rtfeldman$elm_css$VirtualDom_Styled$unstyleKeyed = F3(
	function (elemType, properties, keyedChildren) {
		var unstyledProperties = A2(_elm_lang$core$List$map, _rtfeldman$elm_css$VirtualDom_Styled$extractUnstyledProperty, properties);
		var initialStyles = _rtfeldman$elm_css$VirtualDom_Styled$stylesFromProperties(properties);
		var _p36 = A3(
			_elm_lang$core$List$foldl,
			_rtfeldman$elm_css$VirtualDom_Styled$accumulateKeyedStyledHtml,
			{
				ctor: '_Tuple2',
				_0: {ctor: '[]'},
				_1: initialStyles
			},
			keyedChildren);
		var keyedChildNodes = _p36._0;
		var styles = _p36._1;
		var keyedStyleNode = A2(_rtfeldman$elm_css$VirtualDom_Styled$toKeyedStyleNode, styles, keyedChildNodes);
		return A3(
			_elm_lang$virtual_dom$VirtualDom$keyedNode,
			elemType,
			unstyledProperties,
			{
				ctor: '::',
				_0: keyedStyleNode,
				_1: _elm_lang$core$List$reverse(keyedChildNodes)
			});
	});
var _rtfeldman$elm_css$VirtualDom_Styled$getClassname = function (styles) {
	return _elm_lang$core$List$isEmpty(styles) ? 'unstyled' : A2(
		_elm_lang$core$String$cons,
		_elm_lang$core$Native_Utils.chr('_'),
		_rtfeldman$hex$Hex$toString(
			A2(
				_Skinney$murmur3$Murmur3$hashString,
				_rtfeldman$elm_css$VirtualDom_Styled$murmurSeed,
				function (_) {
					return _.css;
				}(
					_rtfeldman$elm_css$Css_Preprocess_Resolve$compile(
						_elm_lang$core$List$singleton(
							_rtfeldman$elm_css$Css_Preprocess$stylesheet(
								_elm_lang$core$List$singleton(
									A2(
										_rtfeldman$elm_css$VirtualDom_Styled$makeSnippet,
										styles,
										_rtfeldman$elm_css$Css_Structure$UniversalSelectorSequence(
											{ctor: '[]'}))))))))));
};
var _rtfeldman$elm_css$VirtualDom_Styled$toUnstyled = function (node) {
	var _p37 = node;
	switch (_p37.ctor) {
		case 'Unstyled':
			return _p37._0;
		case 'Element':
			return A3(_rtfeldman$elm_css$VirtualDom_Styled$unstyle, _p37._0, _p37._1, _p37._2);
		default:
			return A3(_rtfeldman$elm_css$VirtualDom_Styled$unstyleKeyed, _p37._0, _p37._1, _p37._2);
	}
};
var _rtfeldman$elm_css$VirtualDom_Styled$Unstyled = function (a) {
	return {ctor: 'Unstyled', _0: a};
};
var _rtfeldman$elm_css$VirtualDom_Styled$unstyledNode = _rtfeldman$elm_css$VirtualDom_Styled$Unstyled;
var _rtfeldman$elm_css$VirtualDom_Styled$text = function (_p38) {
	return _rtfeldman$elm_css$VirtualDom_Styled$Unstyled(
		_elm_lang$virtual_dom$VirtualDom$text(_p38));
};
var _rtfeldman$elm_css$VirtualDom_Styled$lazy = F2(
	function (fn, arg) {
		return _rtfeldman$elm_css$VirtualDom_Styled$Unstyled(
			A2(_elm_lang$virtual_dom$VirtualDom$lazy, fn, arg));
	});
var _rtfeldman$elm_css$VirtualDom_Styled$lazy2 = F3(
	function (fn, arg1, arg2) {
		return _rtfeldman$elm_css$VirtualDom_Styled$Unstyled(
			A3(_elm_lang$virtual_dom$VirtualDom$lazy2, fn, arg1, arg2));
	});
var _rtfeldman$elm_css$VirtualDom_Styled$lazy3 = F4(
	function (fn, arg1, arg2, arg3) {
		return _rtfeldman$elm_css$VirtualDom_Styled$Unstyled(
			A4(_elm_lang$virtual_dom$VirtualDom$lazy3, fn, arg1, arg2, arg3));
	});
var _rtfeldman$elm_css$VirtualDom_Styled$KeyedElement = F3(
	function (a, b, c) {
		return {ctor: 'KeyedElement', _0: a, _1: b, _2: c};
	});
var _rtfeldman$elm_css$VirtualDom_Styled$keyedNode = _rtfeldman$elm_css$VirtualDom_Styled$KeyedElement;
var _rtfeldman$elm_css$VirtualDom_Styled$Element = F3(
	function (a, b, c) {
		return {ctor: 'Element', _0: a, _1: b, _2: c};
	});
var _rtfeldman$elm_css$VirtualDom_Styled$node = _rtfeldman$elm_css$VirtualDom_Styled$Element;
var _rtfeldman$elm_css$VirtualDom_Styled$Property = F3(
	function (a, b, c) {
		return {ctor: 'Property', _0: a, _1: b, _2: c};
	});
var _rtfeldman$elm_css$VirtualDom_Styled$property = F2(
	function (key, value) {
		return A3(
			_rtfeldman$elm_css$VirtualDom_Styled$Property,
			A2(_elm_lang$virtual_dom$VirtualDom$property, key, value),
			{ctor: '[]'},
			'');
	});
var _rtfeldman$elm_css$VirtualDom_Styled$attribute = F2(
	function (key, value) {
		return A3(
			_rtfeldman$elm_css$VirtualDom_Styled$Property,
			A2(_elm_lang$virtual_dom$VirtualDom$attribute, key, value),
			{ctor: '[]'},
			'');
	});
var _rtfeldman$elm_css$VirtualDom_Styled$attributeNS = F3(
	function (namespace, key, value) {
		return A3(
			_rtfeldman$elm_css$VirtualDom_Styled$Property,
			A3(_elm_lang$virtual_dom$VirtualDom$attributeNS, namespace, key, value),
			{ctor: '[]'},
			'');
	});
var _rtfeldman$elm_css$VirtualDom_Styled$unstyledProperty = function (prop) {
	return A3(
		_rtfeldman$elm_css$VirtualDom_Styled$Property,
		prop,
		{ctor: '[]'},
		'');
};
var _rtfeldman$elm_css$VirtualDom_Styled$on = F2(
	function (eventName, decoder) {
		return A3(
			_rtfeldman$elm_css$VirtualDom_Styled$Property,
			A2(_elm_lang$virtual_dom$VirtualDom$on, eventName, decoder),
			{ctor: '[]'},
			'');
	});
var _rtfeldman$elm_css$VirtualDom_Styled$onWithOptions = F3(
	function (eventName, options, decoder) {
		return A3(
			_rtfeldman$elm_css$VirtualDom_Styled$Property,
			A3(_elm_lang$virtual_dom$VirtualDom$onWithOptions, eventName, options, decoder),
			{ctor: '[]'},
			'');
	});
var _rtfeldman$elm_css$VirtualDom_Styled$mapProperty = F2(
	function (transform, _p39) {
		var _p40 = _p39;
		return A3(
			_rtfeldman$elm_css$VirtualDom_Styled$Property,
			A2(_elm_lang$virtual_dom$VirtualDom$mapProperty, transform, _p40._0),
			_p40._1,
			_p40._2);
	});
var _rtfeldman$elm_css$VirtualDom_Styled$map = F2(
	function (transform, node) {
		var _p41 = node;
		switch (_p41.ctor) {
			case 'Element':
				return A3(
					_rtfeldman$elm_css$VirtualDom_Styled$Element,
					_p41._0,
					A2(
						_elm_lang$core$List$map,
						_rtfeldman$elm_css$VirtualDom_Styled$mapProperty(transform),
						_p41._1),
					A2(
						_elm_lang$core$List$map,
						_rtfeldman$elm_css$VirtualDom_Styled$map(transform),
						_p41._2));
			case 'KeyedElement':
				return A3(
					_rtfeldman$elm_css$VirtualDom_Styled$KeyedElement,
					_p41._0,
					A2(
						_elm_lang$core$List$map,
						_rtfeldman$elm_css$VirtualDom_Styled$mapProperty(transform),
						_p41._1),
					A2(
						_elm_lang$core$List$map,
						function (_p42) {
							var _p43 = _p42;
							return {
								ctor: '_Tuple2',
								_0: _p43._0,
								_1: A2(_rtfeldman$elm_css$VirtualDom_Styled$map, transform, _p43._1)
							};
						},
						_p41._2));
			default:
				return _rtfeldman$elm_css$VirtualDom_Styled$Unstyled(
					A2(_elm_lang$virtual_dom$VirtualDom$map, transform, _p41._0));
		}
	});

var _rtfeldman$elm_css$Html_Styled_Internal$css = function (styles) {
	var classname = _rtfeldman$elm_css$VirtualDom_Styled$getClassname(styles);
	var classProperty = A2(
		_elm_lang$virtual_dom$VirtualDom$property,
		'className',
		_elm_lang$core$Json_Encode$string(classname));
	return A3(_rtfeldman$elm_css$VirtualDom_Styled$Property, classProperty, styles, classname);
};

var _rtfeldman$elm_css$Html_Styled$fromUnstyled = _rtfeldman$elm_css$VirtualDom_Styled$unstyledNode;
var _rtfeldman$elm_css$Html_Styled$toUnstyled = _rtfeldman$elm_css$VirtualDom_Styled$toUnstyled;
var _rtfeldman$elm_css$Html_Styled$program = function (config) {
	return _elm_lang$virtual_dom$VirtualDom$program(
		_elm_lang$core$Native_Utils.update(
			config,
			{
				view: function (_p0) {
					return _rtfeldman$elm_css$Html_Styled$toUnstyled(
						config.view(_p0));
				}
			}));
};
var _rtfeldman$elm_css$Html_Styled$beginnerProgram = function (_p1) {
	var _p2 = _p1;
	return _rtfeldman$elm_css$Html_Styled$program(
		{
			init: A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				_p2.model,
				{ctor: '[]'}),
			update: F2(
				function (msg, model) {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						A2(_p2.update, msg, model),
						{ctor: '[]'});
				}),
			view: _p2.view,
			subscriptions: function (_p3) {
				return _elm_lang$core$Platform_Sub$none;
			}
		});
};
var _rtfeldman$elm_css$Html_Styled$programWithFlags = function (config) {
	return _elm_lang$virtual_dom$VirtualDom$programWithFlags(
		_elm_lang$core$Native_Utils.update(
			config,
			{
				view: function (_p4) {
					return _rtfeldman$elm_css$Html_Styled$toUnstyled(
						config.view(_p4));
				}
			}));
};
var _rtfeldman$elm_css$Html_Styled$styled = F4(
	function (fn, styles, attrs, children) {
		return A2(
			fn,
			{
				ctor: '::',
				_0: _rtfeldman$elm_css$Html_Styled_Internal$css(styles),
				_1: attrs
			},
			children);
	});
var _rtfeldman$elm_css$Html_Styled$map = _rtfeldman$elm_css$VirtualDom_Styled$map;
var _rtfeldman$elm_css$Html_Styled$text = _rtfeldman$elm_css$VirtualDom_Styled$text;
var _rtfeldman$elm_css$Html_Styled$node = _rtfeldman$elm_css$VirtualDom_Styled$node;
var _rtfeldman$elm_css$Html_Styled$body = _rtfeldman$elm_css$Html_Styled$node('body');
var _rtfeldman$elm_css$Html_Styled$section = _rtfeldman$elm_css$Html_Styled$node('section');
var _rtfeldman$elm_css$Html_Styled$nav = _rtfeldman$elm_css$Html_Styled$node('nav');
var _rtfeldman$elm_css$Html_Styled$article = _rtfeldman$elm_css$Html_Styled$node('article');
var _rtfeldman$elm_css$Html_Styled$aside = _rtfeldman$elm_css$Html_Styled$node('aside');
var _rtfeldman$elm_css$Html_Styled$h1 = _rtfeldman$elm_css$Html_Styled$node('h1');
var _rtfeldman$elm_css$Html_Styled$h2 = _rtfeldman$elm_css$Html_Styled$node('h2');
var _rtfeldman$elm_css$Html_Styled$h3 = _rtfeldman$elm_css$Html_Styled$node('h3');
var _rtfeldman$elm_css$Html_Styled$h4 = _rtfeldman$elm_css$Html_Styled$node('h4');
var _rtfeldman$elm_css$Html_Styled$h5 = _rtfeldman$elm_css$Html_Styled$node('h5');
var _rtfeldman$elm_css$Html_Styled$h6 = _rtfeldman$elm_css$Html_Styled$node('h6');
var _rtfeldman$elm_css$Html_Styled$header = _rtfeldman$elm_css$Html_Styled$node('header');
var _rtfeldman$elm_css$Html_Styled$footer = _rtfeldman$elm_css$Html_Styled$node('footer');
var _rtfeldman$elm_css$Html_Styled$address = _rtfeldman$elm_css$Html_Styled$node('address');
var _rtfeldman$elm_css$Html_Styled$main_ = _rtfeldman$elm_css$Html_Styled$node('main');
var _rtfeldman$elm_css$Html_Styled$p = _rtfeldman$elm_css$Html_Styled$node('p');
var _rtfeldman$elm_css$Html_Styled$hr = _rtfeldman$elm_css$Html_Styled$node('hr');
var _rtfeldman$elm_css$Html_Styled$pre = _rtfeldman$elm_css$Html_Styled$node('pre');
var _rtfeldman$elm_css$Html_Styled$blockquote = _rtfeldman$elm_css$Html_Styled$node('blockquote');
var _rtfeldman$elm_css$Html_Styled$ol = _rtfeldman$elm_css$Html_Styled$node('ol');
var _rtfeldman$elm_css$Html_Styled$ul = _rtfeldman$elm_css$Html_Styled$node('ul');
var _rtfeldman$elm_css$Html_Styled$li = _rtfeldman$elm_css$Html_Styled$node('li');
var _rtfeldman$elm_css$Html_Styled$dl = _rtfeldman$elm_css$Html_Styled$node('dl');
var _rtfeldman$elm_css$Html_Styled$dt = _rtfeldman$elm_css$Html_Styled$node('dt');
var _rtfeldman$elm_css$Html_Styled$dd = _rtfeldman$elm_css$Html_Styled$node('dd');
var _rtfeldman$elm_css$Html_Styled$figure = _rtfeldman$elm_css$Html_Styled$node('figure');
var _rtfeldman$elm_css$Html_Styled$figcaption = _rtfeldman$elm_css$Html_Styled$node('figcaption');
var _rtfeldman$elm_css$Html_Styled$div = _rtfeldman$elm_css$Html_Styled$node('div');
var _rtfeldman$elm_css$Html_Styled$a = _rtfeldman$elm_css$Html_Styled$node('a');
var _rtfeldman$elm_css$Html_Styled$em = _rtfeldman$elm_css$Html_Styled$node('em');
var _rtfeldman$elm_css$Html_Styled$strong = _rtfeldman$elm_css$Html_Styled$node('strong');
var _rtfeldman$elm_css$Html_Styled$small = _rtfeldman$elm_css$Html_Styled$node('small');
var _rtfeldman$elm_css$Html_Styled$s = _rtfeldman$elm_css$Html_Styled$node('s');
var _rtfeldman$elm_css$Html_Styled$cite = _rtfeldman$elm_css$Html_Styled$node('cite');
var _rtfeldman$elm_css$Html_Styled$q = _rtfeldman$elm_css$Html_Styled$node('q');
var _rtfeldman$elm_css$Html_Styled$dfn = _rtfeldman$elm_css$Html_Styled$node('dfn');
var _rtfeldman$elm_css$Html_Styled$abbr = _rtfeldman$elm_css$Html_Styled$node('abbr');
var _rtfeldman$elm_css$Html_Styled$time = _rtfeldman$elm_css$Html_Styled$node('time');
var _rtfeldman$elm_css$Html_Styled$code = _rtfeldman$elm_css$Html_Styled$node('code');
var _rtfeldman$elm_css$Html_Styled$var = _rtfeldman$elm_css$Html_Styled$node('var');
var _rtfeldman$elm_css$Html_Styled$samp = _rtfeldman$elm_css$Html_Styled$node('samp');
var _rtfeldman$elm_css$Html_Styled$kbd = _rtfeldman$elm_css$Html_Styled$node('kbd');
var _rtfeldman$elm_css$Html_Styled$sub = _rtfeldman$elm_css$Html_Styled$node('sub');
var _rtfeldman$elm_css$Html_Styled$sup = _rtfeldman$elm_css$Html_Styled$node('sup');
var _rtfeldman$elm_css$Html_Styled$i = _rtfeldman$elm_css$Html_Styled$node('i');
var _rtfeldman$elm_css$Html_Styled$b = _rtfeldman$elm_css$Html_Styled$node('b');
var _rtfeldman$elm_css$Html_Styled$u = _rtfeldman$elm_css$Html_Styled$node('u');
var _rtfeldman$elm_css$Html_Styled$mark = _rtfeldman$elm_css$Html_Styled$node('mark');
var _rtfeldman$elm_css$Html_Styled$ruby = _rtfeldman$elm_css$Html_Styled$node('ruby');
var _rtfeldman$elm_css$Html_Styled$rt = _rtfeldman$elm_css$Html_Styled$node('rt');
var _rtfeldman$elm_css$Html_Styled$rp = _rtfeldman$elm_css$Html_Styled$node('rp');
var _rtfeldman$elm_css$Html_Styled$bdi = _rtfeldman$elm_css$Html_Styled$node('bdi');
var _rtfeldman$elm_css$Html_Styled$bdo = _rtfeldman$elm_css$Html_Styled$node('bdo');
var _rtfeldman$elm_css$Html_Styled$span = _rtfeldman$elm_css$Html_Styled$node('span');
var _rtfeldman$elm_css$Html_Styled$br = _rtfeldman$elm_css$Html_Styled$node('br');
var _rtfeldman$elm_css$Html_Styled$wbr = _rtfeldman$elm_css$Html_Styled$node('wbr');
var _rtfeldman$elm_css$Html_Styled$ins = _rtfeldman$elm_css$Html_Styled$node('ins');
var _rtfeldman$elm_css$Html_Styled$del = _rtfeldman$elm_css$Html_Styled$node('del');
var _rtfeldman$elm_css$Html_Styled$img = _rtfeldman$elm_css$Html_Styled$node('img');
var _rtfeldman$elm_css$Html_Styled$iframe = _rtfeldman$elm_css$Html_Styled$node('iframe');
var _rtfeldman$elm_css$Html_Styled$embed = _rtfeldman$elm_css$Html_Styled$node('embed');
var _rtfeldman$elm_css$Html_Styled$object = _rtfeldman$elm_css$Html_Styled$node('object');
var _rtfeldman$elm_css$Html_Styled$param = _rtfeldman$elm_css$Html_Styled$node('param');
var _rtfeldman$elm_css$Html_Styled$video = _rtfeldman$elm_css$Html_Styled$node('video');
var _rtfeldman$elm_css$Html_Styled$audio = _rtfeldman$elm_css$Html_Styled$node('audio');
var _rtfeldman$elm_css$Html_Styled$source = _rtfeldman$elm_css$Html_Styled$node('source');
var _rtfeldman$elm_css$Html_Styled$track = _rtfeldman$elm_css$Html_Styled$node('track');
var _rtfeldman$elm_css$Html_Styled$canvas = _rtfeldman$elm_css$Html_Styled$node('canvas');
var _rtfeldman$elm_css$Html_Styled$math = _rtfeldman$elm_css$Html_Styled$node('math');
var _rtfeldman$elm_css$Html_Styled$table = _rtfeldman$elm_css$Html_Styled$node('table');
var _rtfeldman$elm_css$Html_Styled$caption = _rtfeldman$elm_css$Html_Styled$node('caption');
var _rtfeldman$elm_css$Html_Styled$colgroup = _rtfeldman$elm_css$Html_Styled$node('colgroup');
var _rtfeldman$elm_css$Html_Styled$col = _rtfeldman$elm_css$Html_Styled$node('col');
var _rtfeldman$elm_css$Html_Styled$tbody = _rtfeldman$elm_css$Html_Styled$node('tbody');
var _rtfeldman$elm_css$Html_Styled$thead = _rtfeldman$elm_css$Html_Styled$node('thead');
var _rtfeldman$elm_css$Html_Styled$tfoot = _rtfeldman$elm_css$Html_Styled$node('tfoot');
var _rtfeldman$elm_css$Html_Styled$tr = _rtfeldman$elm_css$Html_Styled$node('tr');
var _rtfeldman$elm_css$Html_Styled$td = _rtfeldman$elm_css$Html_Styled$node('td');
var _rtfeldman$elm_css$Html_Styled$th = _rtfeldman$elm_css$Html_Styled$node('th');
var _rtfeldman$elm_css$Html_Styled$form = _rtfeldman$elm_css$Html_Styled$node('form');
var _rtfeldman$elm_css$Html_Styled$fieldset = _rtfeldman$elm_css$Html_Styled$node('fieldset');
var _rtfeldman$elm_css$Html_Styled$legend = _rtfeldman$elm_css$Html_Styled$node('legend');
var _rtfeldman$elm_css$Html_Styled$label = _rtfeldman$elm_css$Html_Styled$node('label');
var _rtfeldman$elm_css$Html_Styled$input = _rtfeldman$elm_css$Html_Styled$node('input');
var _rtfeldman$elm_css$Html_Styled$button = _rtfeldman$elm_css$Html_Styled$node('button');
var _rtfeldman$elm_css$Html_Styled$select = _rtfeldman$elm_css$Html_Styled$node('select');
var _rtfeldman$elm_css$Html_Styled$datalist = _rtfeldman$elm_css$Html_Styled$node('datalist');
var _rtfeldman$elm_css$Html_Styled$optgroup = _rtfeldman$elm_css$Html_Styled$node('optgroup');
var _rtfeldman$elm_css$Html_Styled$option = _rtfeldman$elm_css$Html_Styled$node('option');
var _rtfeldman$elm_css$Html_Styled$textarea = _rtfeldman$elm_css$Html_Styled$node('textarea');
var _rtfeldman$elm_css$Html_Styled$keygen = _rtfeldman$elm_css$Html_Styled$node('keygen');
var _rtfeldman$elm_css$Html_Styled$output = _rtfeldman$elm_css$Html_Styled$node('output');
var _rtfeldman$elm_css$Html_Styled$progress = _rtfeldman$elm_css$Html_Styled$node('progress');
var _rtfeldman$elm_css$Html_Styled$meter = _rtfeldman$elm_css$Html_Styled$node('meter');
var _rtfeldman$elm_css$Html_Styled$details = _rtfeldman$elm_css$Html_Styled$node('details');
var _rtfeldman$elm_css$Html_Styled$summary = _rtfeldman$elm_css$Html_Styled$node('summary');
var _rtfeldman$elm_css$Html_Styled$menuitem = _rtfeldman$elm_css$Html_Styled$node('menuitem');
var _rtfeldman$elm_css$Html_Styled$menu = _rtfeldman$elm_css$Html_Styled$node('menu');

var _rtfeldman$elm_css$Html_Styled_Events$keyCode = A2(_elm_lang$core$Json_Decode$field, 'keyCode', _elm_lang$core$Json_Decode$int);
var _rtfeldman$elm_css$Html_Styled_Events$targetChecked = A2(
	_elm_lang$core$Json_Decode$at,
	{
		ctor: '::',
		_0: 'target',
		_1: {
			ctor: '::',
			_0: 'checked',
			_1: {ctor: '[]'}
		}
	},
	_elm_lang$core$Json_Decode$bool);
var _rtfeldman$elm_css$Html_Styled_Events$targetValue = A2(
	_elm_lang$core$Json_Decode$at,
	{
		ctor: '::',
		_0: 'target',
		_1: {
			ctor: '::',
			_0: 'value',
			_1: {ctor: '[]'}
		}
	},
	_elm_lang$core$Json_Decode$string);
var _rtfeldman$elm_css$Html_Styled_Events$defaultOptions = _elm_lang$virtual_dom$VirtualDom$defaultOptions;
var _rtfeldman$elm_css$Html_Styled_Events$onWithOptions = _rtfeldman$elm_css$VirtualDom_Styled$onWithOptions;
var _rtfeldman$elm_css$Html_Styled_Events$on = _rtfeldman$elm_css$VirtualDom_Styled$on;
var _rtfeldman$elm_css$Html_Styled_Events$onFocus = function (msg) {
	return A2(
		_rtfeldman$elm_css$Html_Styled_Events$on,
		'focus',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _rtfeldman$elm_css$Html_Styled_Events$onBlur = function (msg) {
	return A2(
		_rtfeldman$elm_css$Html_Styled_Events$on,
		'blur',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _rtfeldman$elm_css$Html_Styled_Events$onSubmitOptions = _elm_lang$core$Native_Utils.update(
	_rtfeldman$elm_css$Html_Styled_Events$defaultOptions,
	{preventDefault: true});
var _rtfeldman$elm_css$Html_Styled_Events$onSubmit = function (msg) {
	return A3(
		_rtfeldman$elm_css$Html_Styled_Events$onWithOptions,
		'submit',
		_rtfeldman$elm_css$Html_Styled_Events$onSubmitOptions,
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _rtfeldman$elm_css$Html_Styled_Events$onCheck = function (tagger) {
	return A2(
		_rtfeldman$elm_css$Html_Styled_Events$on,
		'change',
		A2(_elm_lang$core$Json_Decode$map, tagger, _rtfeldman$elm_css$Html_Styled_Events$targetChecked));
};
var _rtfeldman$elm_css$Html_Styled_Events$onInput = function (tagger) {
	return A2(
		_rtfeldman$elm_css$Html_Styled_Events$on,
		'input',
		A2(_elm_lang$core$Json_Decode$map, tagger, _rtfeldman$elm_css$Html_Styled_Events$targetValue));
};
var _rtfeldman$elm_css$Html_Styled_Events$onMouseOut = function (msg) {
	return A2(
		_rtfeldman$elm_css$Html_Styled_Events$on,
		'mouseout',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _rtfeldman$elm_css$Html_Styled_Events$onMouseOver = function (msg) {
	return A2(
		_rtfeldman$elm_css$Html_Styled_Events$on,
		'mouseover',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _rtfeldman$elm_css$Html_Styled_Events$onMouseLeave = function (msg) {
	return A2(
		_rtfeldman$elm_css$Html_Styled_Events$on,
		'mouseleave',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _rtfeldman$elm_css$Html_Styled_Events$onMouseEnter = function (msg) {
	return A2(
		_rtfeldman$elm_css$Html_Styled_Events$on,
		'mouseenter',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _rtfeldman$elm_css$Html_Styled_Events$onMouseUp = function (msg) {
	return A2(
		_rtfeldman$elm_css$Html_Styled_Events$on,
		'mouseup',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _rtfeldman$elm_css$Html_Styled_Events$onMouseDown = function (msg) {
	return A2(
		_rtfeldman$elm_css$Html_Styled_Events$on,
		'mousedown',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _rtfeldman$elm_css$Html_Styled_Events$onDoubleClick = function (msg) {
	return A2(
		_rtfeldman$elm_css$Html_Styled_Events$on,
		'dblclick',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _rtfeldman$elm_css$Html_Styled_Events$onClick = function (msg) {
	return A2(
		_rtfeldman$elm_css$Html_Styled_Events$on,
		'click',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _rtfeldman$elm_css$Html_Styled_Events$Options = F2(
	function (a, b) {
		return {stopPropagation: a, preventDefault: b};
	});

var _rtfeldman$elm_css$Html_Styled_Attributes$css = _rtfeldman$elm_css$Html_Styled_Internal$css;
var _rtfeldman$elm_css$Html_Styled_Attributes$map = _rtfeldman$elm_css$VirtualDom_Styled$mapProperty;
var _rtfeldman$elm_css$Html_Styled_Attributes$attribute = _rtfeldman$elm_css$VirtualDom_Styled$attribute;
var _rtfeldman$elm_css$Html_Styled_Attributes$contextmenu = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$attribute, 'contextmenu', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$draggable = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$attribute, 'draggable', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$itemprop = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$attribute, 'itemprop', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$tabindex = function (n) {
	return A2(
		_rtfeldman$elm_css$Html_Styled_Attributes$attribute,
		'tabIndex',
		_elm_lang$core$Basics$toString(n));
};
var _rtfeldman$elm_css$Html_Styled_Attributes$charset = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$attribute, 'charset', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$height = function (value) {
	return A2(
		_rtfeldman$elm_css$Html_Styled_Attributes$attribute,
		'height',
		_elm_lang$core$Basics$toString(value));
};
var _rtfeldman$elm_css$Html_Styled_Attributes$width = function (value) {
	return A2(
		_rtfeldman$elm_css$Html_Styled_Attributes$attribute,
		'width',
		_elm_lang$core$Basics$toString(value));
};
var _rtfeldman$elm_css$Html_Styled_Attributes$formaction = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$attribute, 'formAction', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$list = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$attribute, 'list', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$minlength = function (n) {
	return A2(
		_rtfeldman$elm_css$Html_Styled_Attributes$attribute,
		'minLength',
		_elm_lang$core$Basics$toString(n));
};
var _rtfeldman$elm_css$Html_Styled_Attributes$maxlength = function (n) {
	return A2(
		_rtfeldman$elm_css$Html_Styled_Attributes$attribute,
		'maxlength',
		_elm_lang$core$Basics$toString(n));
};
var _rtfeldman$elm_css$Html_Styled_Attributes$size = function (n) {
	return A2(
		_rtfeldman$elm_css$Html_Styled_Attributes$attribute,
		'size',
		_elm_lang$core$Basics$toString(n));
};
var _rtfeldman$elm_css$Html_Styled_Attributes$form = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$attribute, 'form', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$cols = function (n) {
	return A2(
		_rtfeldman$elm_css$Html_Styled_Attributes$attribute,
		'cols',
		_elm_lang$core$Basics$toString(n));
};
var _rtfeldman$elm_css$Html_Styled_Attributes$rows = function (n) {
	return A2(
		_rtfeldman$elm_css$Html_Styled_Attributes$attribute,
		'rows',
		_elm_lang$core$Basics$toString(n));
};
var _rtfeldman$elm_css$Html_Styled_Attributes$challenge = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$attribute, 'challenge', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$media = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$attribute, 'media', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$rel = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$attribute, 'rel', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$datetime = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$attribute, 'datetime', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$pubdate = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$attribute, 'pubdate', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$colspan = function (n) {
	return A2(
		_rtfeldman$elm_css$Html_Styled_Attributes$attribute,
		'colspan',
		_elm_lang$core$Basics$toString(n));
};
var _rtfeldman$elm_css$Html_Styled_Attributes$rowspan = function (n) {
	return A2(
		_rtfeldman$elm_css$Html_Styled_Attributes$attribute,
		'rowspan',
		_elm_lang$core$Basics$toString(n));
};
var _rtfeldman$elm_css$Html_Styled_Attributes$manifest = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$attribute, 'manifest', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$property = _rtfeldman$elm_css$VirtualDom_Styled$property;
var _rtfeldman$elm_css$Html_Styled_Attributes$stringProperty = F2(
	function (name, string) {
		return A2(
			_rtfeldman$elm_css$Html_Styled_Attributes$property,
			name,
			_elm_lang$core$Json_Encode$string(string));
	});
var _rtfeldman$elm_css$Html_Styled_Attributes$class = function (name) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'className', name);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$id = function (name) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'id', name);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$title = function (name) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'title', name);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$accesskey = function ($char) {
	return A2(
		_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty,
		'accessKey',
		_elm_lang$core$String$fromChar($char));
};
var _rtfeldman$elm_css$Html_Styled_Attributes$dir = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'dir', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$dropzone = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'dropzone', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$lang = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'lang', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$content = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'content', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$httpEquiv = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'httpEquiv', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$language = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'language', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$src = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'src', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$alt = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'alt', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$preload = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'preload', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$poster = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'poster', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$kind = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'kind', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$srclang = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'srclang', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$sandbox = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'sandbox', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$srcdoc = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'srcdoc', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$type_ = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'type', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$value = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'value', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$defaultValue = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'defaultValue', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$placeholder = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'placeholder', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$accept = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'accept', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$acceptCharset = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'acceptCharset', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$action = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'action', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$autocomplete = function (bool) {
	return A2(
		_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty,
		'autocomplete',
		bool ? 'on' : 'off');
};
var _rtfeldman$elm_css$Html_Styled_Attributes$enctype = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'enctype', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$method = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'method', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$name = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'name', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$pattern = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'pattern', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$for = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'htmlFor', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$max = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'max', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$min = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'min', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$step = function (n) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'step', n);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$wrap = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'wrap', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$usemap = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'useMap', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$shape = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'shape', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$coords = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'coords', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$keytype = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'keytype', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$align = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'align', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$cite = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'cite', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$href = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'href', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$target = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'target', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$downloadAs = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'download', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$hreflang = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'hreflang', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$ping = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'ping', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$start = function (n) {
	return A2(
		_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty,
		'start',
		_elm_lang$core$Basics$toString(n));
};
var _rtfeldman$elm_css$Html_Styled_Attributes$headers = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'headers', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$scope = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$stringProperty, 'scope', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$boolProperty = F2(
	function (name, bool) {
		return A2(
			_rtfeldman$elm_css$Html_Styled_Attributes$property,
			name,
			_elm_lang$core$Json_Encode$bool(bool));
	});
var _rtfeldman$elm_css$Html_Styled_Attributes$hidden = function (bool) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$boolProperty, 'hidden', bool);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$contenteditable = function (bool) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$boolProperty, 'contentEditable', bool);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$spellcheck = function (bool) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$boolProperty, 'spellcheck', bool);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$async = function (bool) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$boolProperty, 'async', bool);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$defer = function (bool) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$boolProperty, 'defer', bool);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$scoped = function (bool) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$boolProperty, 'scoped', bool);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$autoplay = function (bool) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$boolProperty, 'autoplay', bool);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$controls = function (bool) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$boolProperty, 'controls', bool);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$loop = function (bool) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$boolProperty, 'loop', bool);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$default = function (bool) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$boolProperty, 'default', bool);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$seamless = function (bool) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$boolProperty, 'seamless', bool);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$checked = function (bool) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$boolProperty, 'checked', bool);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$selected = function (bool) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$boolProperty, 'selected', bool);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$autofocus = function (bool) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$boolProperty, 'autofocus', bool);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$disabled = function (bool) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$boolProperty, 'disabled', bool);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$multiple = function (bool) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$boolProperty, 'multiple', bool);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$novalidate = function (bool) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$boolProperty, 'noValidate', bool);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$readonly = function (bool) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$boolProperty, 'readOnly', bool);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$required = function (bool) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$boolProperty, 'required', bool);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$ismap = function (value) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$boolProperty, 'isMap', value);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$download = function (bool) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$boolProperty, 'download', bool);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$reversed = function (bool) {
	return A2(_rtfeldman$elm_css$Html_Styled_Attributes$boolProperty, 'reversed', bool);
};
var _rtfeldman$elm_css$Html_Styled_Attributes$classList = function (list) {
	return _rtfeldman$elm_css$Html_Styled_Attributes$class(
		A2(
			_elm_lang$core$String$join,
			' ',
			A2(
				_elm_lang$core$List$map,
				_elm_lang$core$Tuple$first,
				A2(_elm_lang$core$List$filter, _elm_lang$core$Tuple$second, list))));
};
var _rtfeldman$elm_css$Html_Styled_Attributes$fromUnstyled = _rtfeldman$elm_css$VirtualDom_Styled$unstyledProperty;
var _rtfeldman$elm_css$Html_Styled_Attributes$style = function (_p0) {
	return _rtfeldman$elm_css$Html_Styled_Attributes$fromUnstyled(
		_elm_lang$virtual_dom$VirtualDom$style(_p0));
};

var _bluedogtraining$bdt_elm$InfixPrecedence$InfixPrecedence = function (a) {
	return {ctor: 'InfixPrecedence', _0: a};
};

var _bluedogtraining$bdt_elm$Html_Styled_Bdt$maybeView = F2(
	function (maybe, f) {
		var _p0 = maybe;
		if (_p0.ctor === 'Nothing') {
			return _rtfeldman$elm_css$Html_Styled$text('');
		} else {
			return f(_p0._0);
		}
	});
var _bluedogtraining$bdt_elm$Html_Styled_Bdt$divIf = F3(
	function (show, attributes, children) {
		var _p1 = show;
		if (_p1 === true) {
			return A2(_rtfeldman$elm_css$Html_Styled$div, attributes, children);
		} else {
			return _rtfeldman$elm_css$Html_Styled$text('');
		}
	});
var _bluedogtraining$bdt_elm$Html_Styled_Bdt$viewIf = F2(
	function (show, html) {
		var _p2 = show;
		if (_p2 === true) {
			return html;
		} else {
			return _rtfeldman$elm_css$Html_Styled$text('');
		}
	});
var _bluedogtraining$bdt_elm$Html_Styled_Bdt$maybeAttribute = F2(
	function (f, maybe) {
		var _p3 = maybe;
		if (_p3.ctor === 'Nothing') {
			return _rtfeldman$elm_css$Html_Styled_Attributes$class('');
		} else {
			return f(_p3._0);
		}
	});
var _bluedogtraining$bdt_elm$Html_Styled_Bdt_ops = _bluedogtraining$bdt_elm$Html_Styled_Bdt_ops || {};
_bluedogtraining$bdt_elm$Html_Styled_Bdt_ops['?'] = F2(
	function (attribute, bool) {
		return bool ? attribute : _rtfeldman$elm_css$Html_Styled_Attributes$class('');
	});

var _elm_lang$html$Html$programWithFlags = _elm_lang$virtual_dom$VirtualDom$programWithFlags;
var _elm_lang$html$Html$program = _elm_lang$virtual_dom$VirtualDom$program;
var _elm_lang$html$Html$beginnerProgram = function (_p0) {
	var _p1 = _p0;
	return _elm_lang$html$Html$program(
		{
			init: A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				_p1.model,
				{ctor: '[]'}),
			update: F2(
				function (msg, model) {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						A2(_p1.update, msg, model),
						{ctor: '[]'});
				}),
			view: _p1.view,
			subscriptions: function (_p2) {
				return _elm_lang$core$Platform_Sub$none;
			}
		});
};
var _elm_lang$html$Html$map = _elm_lang$virtual_dom$VirtualDom$map;
var _elm_lang$html$Html$text = _elm_lang$virtual_dom$VirtualDom$text;
var _elm_lang$html$Html$node = _elm_lang$virtual_dom$VirtualDom$node;
var _elm_lang$html$Html$body = _elm_lang$html$Html$node('body');
var _elm_lang$html$Html$section = _elm_lang$html$Html$node('section');
var _elm_lang$html$Html$nav = _elm_lang$html$Html$node('nav');
var _elm_lang$html$Html$article = _elm_lang$html$Html$node('article');
var _elm_lang$html$Html$aside = _elm_lang$html$Html$node('aside');
var _elm_lang$html$Html$h1 = _elm_lang$html$Html$node('h1');
var _elm_lang$html$Html$h2 = _elm_lang$html$Html$node('h2');
var _elm_lang$html$Html$h3 = _elm_lang$html$Html$node('h3');
var _elm_lang$html$Html$h4 = _elm_lang$html$Html$node('h4');
var _elm_lang$html$Html$h5 = _elm_lang$html$Html$node('h5');
var _elm_lang$html$Html$h6 = _elm_lang$html$Html$node('h6');
var _elm_lang$html$Html$header = _elm_lang$html$Html$node('header');
var _elm_lang$html$Html$footer = _elm_lang$html$Html$node('footer');
var _elm_lang$html$Html$address = _elm_lang$html$Html$node('address');
var _elm_lang$html$Html$main_ = _elm_lang$html$Html$node('main');
var _elm_lang$html$Html$p = _elm_lang$html$Html$node('p');
var _elm_lang$html$Html$hr = _elm_lang$html$Html$node('hr');
var _elm_lang$html$Html$pre = _elm_lang$html$Html$node('pre');
var _elm_lang$html$Html$blockquote = _elm_lang$html$Html$node('blockquote');
var _elm_lang$html$Html$ol = _elm_lang$html$Html$node('ol');
var _elm_lang$html$Html$ul = _elm_lang$html$Html$node('ul');
var _elm_lang$html$Html$li = _elm_lang$html$Html$node('li');
var _elm_lang$html$Html$dl = _elm_lang$html$Html$node('dl');
var _elm_lang$html$Html$dt = _elm_lang$html$Html$node('dt');
var _elm_lang$html$Html$dd = _elm_lang$html$Html$node('dd');
var _elm_lang$html$Html$figure = _elm_lang$html$Html$node('figure');
var _elm_lang$html$Html$figcaption = _elm_lang$html$Html$node('figcaption');
var _elm_lang$html$Html$div = _elm_lang$html$Html$node('div');
var _elm_lang$html$Html$a = _elm_lang$html$Html$node('a');
var _elm_lang$html$Html$em = _elm_lang$html$Html$node('em');
var _elm_lang$html$Html$strong = _elm_lang$html$Html$node('strong');
var _elm_lang$html$Html$small = _elm_lang$html$Html$node('small');
var _elm_lang$html$Html$s = _elm_lang$html$Html$node('s');
var _elm_lang$html$Html$cite = _elm_lang$html$Html$node('cite');
var _elm_lang$html$Html$q = _elm_lang$html$Html$node('q');
var _elm_lang$html$Html$dfn = _elm_lang$html$Html$node('dfn');
var _elm_lang$html$Html$abbr = _elm_lang$html$Html$node('abbr');
var _elm_lang$html$Html$time = _elm_lang$html$Html$node('time');
var _elm_lang$html$Html$code = _elm_lang$html$Html$node('code');
var _elm_lang$html$Html$var = _elm_lang$html$Html$node('var');
var _elm_lang$html$Html$samp = _elm_lang$html$Html$node('samp');
var _elm_lang$html$Html$kbd = _elm_lang$html$Html$node('kbd');
var _elm_lang$html$Html$sub = _elm_lang$html$Html$node('sub');
var _elm_lang$html$Html$sup = _elm_lang$html$Html$node('sup');
var _elm_lang$html$Html$i = _elm_lang$html$Html$node('i');
var _elm_lang$html$Html$b = _elm_lang$html$Html$node('b');
var _elm_lang$html$Html$u = _elm_lang$html$Html$node('u');
var _elm_lang$html$Html$mark = _elm_lang$html$Html$node('mark');
var _elm_lang$html$Html$ruby = _elm_lang$html$Html$node('ruby');
var _elm_lang$html$Html$rt = _elm_lang$html$Html$node('rt');
var _elm_lang$html$Html$rp = _elm_lang$html$Html$node('rp');
var _elm_lang$html$Html$bdi = _elm_lang$html$Html$node('bdi');
var _elm_lang$html$Html$bdo = _elm_lang$html$Html$node('bdo');
var _elm_lang$html$Html$span = _elm_lang$html$Html$node('span');
var _elm_lang$html$Html$br = _elm_lang$html$Html$node('br');
var _elm_lang$html$Html$wbr = _elm_lang$html$Html$node('wbr');
var _elm_lang$html$Html$ins = _elm_lang$html$Html$node('ins');
var _elm_lang$html$Html$del = _elm_lang$html$Html$node('del');
var _elm_lang$html$Html$img = _elm_lang$html$Html$node('img');
var _elm_lang$html$Html$iframe = _elm_lang$html$Html$node('iframe');
var _elm_lang$html$Html$embed = _elm_lang$html$Html$node('embed');
var _elm_lang$html$Html$object = _elm_lang$html$Html$node('object');
var _elm_lang$html$Html$param = _elm_lang$html$Html$node('param');
var _elm_lang$html$Html$video = _elm_lang$html$Html$node('video');
var _elm_lang$html$Html$audio = _elm_lang$html$Html$node('audio');
var _elm_lang$html$Html$source = _elm_lang$html$Html$node('source');
var _elm_lang$html$Html$track = _elm_lang$html$Html$node('track');
var _elm_lang$html$Html$canvas = _elm_lang$html$Html$node('canvas');
var _elm_lang$html$Html$math = _elm_lang$html$Html$node('math');
var _elm_lang$html$Html$table = _elm_lang$html$Html$node('table');
var _elm_lang$html$Html$caption = _elm_lang$html$Html$node('caption');
var _elm_lang$html$Html$colgroup = _elm_lang$html$Html$node('colgroup');
var _elm_lang$html$Html$col = _elm_lang$html$Html$node('col');
var _elm_lang$html$Html$tbody = _elm_lang$html$Html$node('tbody');
var _elm_lang$html$Html$thead = _elm_lang$html$Html$node('thead');
var _elm_lang$html$Html$tfoot = _elm_lang$html$Html$node('tfoot');
var _elm_lang$html$Html$tr = _elm_lang$html$Html$node('tr');
var _elm_lang$html$Html$td = _elm_lang$html$Html$node('td');
var _elm_lang$html$Html$th = _elm_lang$html$Html$node('th');
var _elm_lang$html$Html$form = _elm_lang$html$Html$node('form');
var _elm_lang$html$Html$fieldset = _elm_lang$html$Html$node('fieldset');
var _elm_lang$html$Html$legend = _elm_lang$html$Html$node('legend');
var _elm_lang$html$Html$label = _elm_lang$html$Html$node('label');
var _elm_lang$html$Html$input = _elm_lang$html$Html$node('input');
var _elm_lang$html$Html$button = _elm_lang$html$Html$node('button');
var _elm_lang$html$Html$select = _elm_lang$html$Html$node('select');
var _elm_lang$html$Html$datalist = _elm_lang$html$Html$node('datalist');
var _elm_lang$html$Html$optgroup = _elm_lang$html$Html$node('optgroup');
var _elm_lang$html$Html$option = _elm_lang$html$Html$node('option');
var _elm_lang$html$Html$textarea = _elm_lang$html$Html$node('textarea');
var _elm_lang$html$Html$keygen = _elm_lang$html$Html$node('keygen');
var _elm_lang$html$Html$output = _elm_lang$html$Html$node('output');
var _elm_lang$html$Html$progress = _elm_lang$html$Html$node('progress');
var _elm_lang$html$Html$meter = _elm_lang$html$Html$node('meter');
var _elm_lang$html$Html$details = _elm_lang$html$Html$node('details');
var _elm_lang$html$Html$summary = _elm_lang$html$Html$node('summary');
var _elm_lang$html$Html$menuitem = _elm_lang$html$Html$node('menuitem');
var _elm_lang$html$Html$menu = _elm_lang$html$Html$node('menu');

var _elm_lang$svg$Svg$map = _elm_lang$virtual_dom$VirtualDom$map;
var _elm_lang$svg$Svg$text = _elm_lang$virtual_dom$VirtualDom$text;
var _elm_lang$svg$Svg$svgNamespace = A2(
	_elm_lang$virtual_dom$VirtualDom$property,
	'namespace',
	_elm_lang$core$Json_Encode$string('http://www.w3.org/2000/svg'));
var _elm_lang$svg$Svg$node = F3(
	function (name, attributes, children) {
		return A3(
			_elm_lang$virtual_dom$VirtualDom$node,
			name,
			{ctor: '::', _0: _elm_lang$svg$Svg$svgNamespace, _1: attributes},
			children);
	});
var _elm_lang$svg$Svg$svg = _elm_lang$svg$Svg$node('svg');
var _elm_lang$svg$Svg$foreignObject = _elm_lang$svg$Svg$node('foreignObject');
var _elm_lang$svg$Svg$animate = _elm_lang$svg$Svg$node('animate');
var _elm_lang$svg$Svg$animateColor = _elm_lang$svg$Svg$node('animateColor');
var _elm_lang$svg$Svg$animateMotion = _elm_lang$svg$Svg$node('animateMotion');
var _elm_lang$svg$Svg$animateTransform = _elm_lang$svg$Svg$node('animateTransform');
var _elm_lang$svg$Svg$mpath = _elm_lang$svg$Svg$node('mpath');
var _elm_lang$svg$Svg$set = _elm_lang$svg$Svg$node('set');
var _elm_lang$svg$Svg$a = _elm_lang$svg$Svg$node('a');
var _elm_lang$svg$Svg$defs = _elm_lang$svg$Svg$node('defs');
var _elm_lang$svg$Svg$g = _elm_lang$svg$Svg$node('g');
var _elm_lang$svg$Svg$marker = _elm_lang$svg$Svg$node('marker');
var _elm_lang$svg$Svg$mask = _elm_lang$svg$Svg$node('mask');
var _elm_lang$svg$Svg$pattern = _elm_lang$svg$Svg$node('pattern');
var _elm_lang$svg$Svg$switch = _elm_lang$svg$Svg$node('switch');
var _elm_lang$svg$Svg$symbol = _elm_lang$svg$Svg$node('symbol');
var _elm_lang$svg$Svg$desc = _elm_lang$svg$Svg$node('desc');
var _elm_lang$svg$Svg$metadata = _elm_lang$svg$Svg$node('metadata');
var _elm_lang$svg$Svg$title = _elm_lang$svg$Svg$node('title');
var _elm_lang$svg$Svg$feBlend = _elm_lang$svg$Svg$node('feBlend');
var _elm_lang$svg$Svg$feColorMatrix = _elm_lang$svg$Svg$node('feColorMatrix');
var _elm_lang$svg$Svg$feComponentTransfer = _elm_lang$svg$Svg$node('feComponentTransfer');
var _elm_lang$svg$Svg$feComposite = _elm_lang$svg$Svg$node('feComposite');
var _elm_lang$svg$Svg$feConvolveMatrix = _elm_lang$svg$Svg$node('feConvolveMatrix');
var _elm_lang$svg$Svg$feDiffuseLighting = _elm_lang$svg$Svg$node('feDiffuseLighting');
var _elm_lang$svg$Svg$feDisplacementMap = _elm_lang$svg$Svg$node('feDisplacementMap');
var _elm_lang$svg$Svg$feFlood = _elm_lang$svg$Svg$node('feFlood');
var _elm_lang$svg$Svg$feFuncA = _elm_lang$svg$Svg$node('feFuncA');
var _elm_lang$svg$Svg$feFuncB = _elm_lang$svg$Svg$node('feFuncB');
var _elm_lang$svg$Svg$feFuncG = _elm_lang$svg$Svg$node('feFuncG');
var _elm_lang$svg$Svg$feFuncR = _elm_lang$svg$Svg$node('feFuncR');
var _elm_lang$svg$Svg$feGaussianBlur = _elm_lang$svg$Svg$node('feGaussianBlur');
var _elm_lang$svg$Svg$feImage = _elm_lang$svg$Svg$node('feImage');
var _elm_lang$svg$Svg$feMerge = _elm_lang$svg$Svg$node('feMerge');
var _elm_lang$svg$Svg$feMergeNode = _elm_lang$svg$Svg$node('feMergeNode');
var _elm_lang$svg$Svg$feMorphology = _elm_lang$svg$Svg$node('feMorphology');
var _elm_lang$svg$Svg$feOffset = _elm_lang$svg$Svg$node('feOffset');
var _elm_lang$svg$Svg$feSpecularLighting = _elm_lang$svg$Svg$node('feSpecularLighting');
var _elm_lang$svg$Svg$feTile = _elm_lang$svg$Svg$node('feTile');
var _elm_lang$svg$Svg$feTurbulence = _elm_lang$svg$Svg$node('feTurbulence');
var _elm_lang$svg$Svg$font = _elm_lang$svg$Svg$node('font');
var _elm_lang$svg$Svg$linearGradient = _elm_lang$svg$Svg$node('linearGradient');
var _elm_lang$svg$Svg$radialGradient = _elm_lang$svg$Svg$node('radialGradient');
var _elm_lang$svg$Svg$stop = _elm_lang$svg$Svg$node('stop');
var _elm_lang$svg$Svg$circle = _elm_lang$svg$Svg$node('circle');
var _elm_lang$svg$Svg$ellipse = _elm_lang$svg$Svg$node('ellipse');
var _elm_lang$svg$Svg$image = _elm_lang$svg$Svg$node('image');
var _elm_lang$svg$Svg$line = _elm_lang$svg$Svg$node('line');
var _elm_lang$svg$Svg$path = _elm_lang$svg$Svg$node('path');
var _elm_lang$svg$Svg$polygon = _elm_lang$svg$Svg$node('polygon');
var _elm_lang$svg$Svg$polyline = _elm_lang$svg$Svg$node('polyline');
var _elm_lang$svg$Svg$rect = _elm_lang$svg$Svg$node('rect');
var _elm_lang$svg$Svg$use = _elm_lang$svg$Svg$node('use');
var _elm_lang$svg$Svg$feDistantLight = _elm_lang$svg$Svg$node('feDistantLight');
var _elm_lang$svg$Svg$fePointLight = _elm_lang$svg$Svg$node('fePointLight');
var _elm_lang$svg$Svg$feSpotLight = _elm_lang$svg$Svg$node('feSpotLight');
var _elm_lang$svg$Svg$altGlyph = _elm_lang$svg$Svg$node('altGlyph');
var _elm_lang$svg$Svg$altGlyphDef = _elm_lang$svg$Svg$node('altGlyphDef');
var _elm_lang$svg$Svg$altGlyphItem = _elm_lang$svg$Svg$node('altGlyphItem');
var _elm_lang$svg$Svg$glyph = _elm_lang$svg$Svg$node('glyph');
var _elm_lang$svg$Svg$glyphRef = _elm_lang$svg$Svg$node('glyphRef');
var _elm_lang$svg$Svg$textPath = _elm_lang$svg$Svg$node('textPath');
var _elm_lang$svg$Svg$text_ = _elm_lang$svg$Svg$node('text');
var _elm_lang$svg$Svg$tref = _elm_lang$svg$Svg$node('tref');
var _elm_lang$svg$Svg$tspan = _elm_lang$svg$Svg$node('tspan');
var _elm_lang$svg$Svg$clipPath = _elm_lang$svg$Svg$node('clipPath');
var _elm_lang$svg$Svg$colorProfile = _elm_lang$svg$Svg$node('colorProfile');
var _elm_lang$svg$Svg$cursor = _elm_lang$svg$Svg$node('cursor');
var _elm_lang$svg$Svg$filter = _elm_lang$svg$Svg$node('filter');
var _elm_lang$svg$Svg$script = _elm_lang$svg$Svg$node('script');
var _elm_lang$svg$Svg$style = _elm_lang$svg$Svg$node('style');
var _elm_lang$svg$Svg$view = _elm_lang$svg$Svg$node('view');

var _elm_lang$svg$Svg_Attributes$writingMode = _elm_lang$virtual_dom$VirtualDom$attribute('writing-mode');
var _elm_lang$svg$Svg_Attributes$wordSpacing = _elm_lang$virtual_dom$VirtualDom$attribute('word-spacing');
var _elm_lang$svg$Svg_Attributes$visibility = _elm_lang$virtual_dom$VirtualDom$attribute('visibility');
var _elm_lang$svg$Svg_Attributes$unicodeBidi = _elm_lang$virtual_dom$VirtualDom$attribute('unicode-bidi');
var _elm_lang$svg$Svg_Attributes$textRendering = _elm_lang$virtual_dom$VirtualDom$attribute('text-rendering');
var _elm_lang$svg$Svg_Attributes$textDecoration = _elm_lang$virtual_dom$VirtualDom$attribute('text-decoration');
var _elm_lang$svg$Svg_Attributes$textAnchor = _elm_lang$virtual_dom$VirtualDom$attribute('text-anchor');
var _elm_lang$svg$Svg_Attributes$stroke = _elm_lang$virtual_dom$VirtualDom$attribute('stroke');
var _elm_lang$svg$Svg_Attributes$strokeWidth = _elm_lang$virtual_dom$VirtualDom$attribute('stroke-width');
var _elm_lang$svg$Svg_Attributes$strokeOpacity = _elm_lang$virtual_dom$VirtualDom$attribute('stroke-opacity');
var _elm_lang$svg$Svg_Attributes$strokeMiterlimit = _elm_lang$virtual_dom$VirtualDom$attribute('stroke-miterlimit');
var _elm_lang$svg$Svg_Attributes$strokeLinejoin = _elm_lang$virtual_dom$VirtualDom$attribute('stroke-linejoin');
var _elm_lang$svg$Svg_Attributes$strokeLinecap = _elm_lang$virtual_dom$VirtualDom$attribute('stroke-linecap');
var _elm_lang$svg$Svg_Attributes$strokeDashoffset = _elm_lang$virtual_dom$VirtualDom$attribute('stroke-dashoffset');
var _elm_lang$svg$Svg_Attributes$strokeDasharray = _elm_lang$virtual_dom$VirtualDom$attribute('stroke-dasharray');
var _elm_lang$svg$Svg_Attributes$stopOpacity = _elm_lang$virtual_dom$VirtualDom$attribute('stop-opacity');
var _elm_lang$svg$Svg_Attributes$stopColor = _elm_lang$virtual_dom$VirtualDom$attribute('stop-color');
var _elm_lang$svg$Svg_Attributes$shapeRendering = _elm_lang$virtual_dom$VirtualDom$attribute('shape-rendering');
var _elm_lang$svg$Svg_Attributes$pointerEvents = _elm_lang$virtual_dom$VirtualDom$attribute('pointer-events');
var _elm_lang$svg$Svg_Attributes$overflow = _elm_lang$virtual_dom$VirtualDom$attribute('overflow');
var _elm_lang$svg$Svg_Attributes$opacity = _elm_lang$virtual_dom$VirtualDom$attribute('opacity');
var _elm_lang$svg$Svg_Attributes$mask = _elm_lang$virtual_dom$VirtualDom$attribute('mask');
var _elm_lang$svg$Svg_Attributes$markerStart = _elm_lang$virtual_dom$VirtualDom$attribute('marker-start');
var _elm_lang$svg$Svg_Attributes$markerMid = _elm_lang$virtual_dom$VirtualDom$attribute('marker-mid');
var _elm_lang$svg$Svg_Attributes$markerEnd = _elm_lang$virtual_dom$VirtualDom$attribute('marker-end');
var _elm_lang$svg$Svg_Attributes$lightingColor = _elm_lang$virtual_dom$VirtualDom$attribute('lighting-color');
var _elm_lang$svg$Svg_Attributes$letterSpacing = _elm_lang$virtual_dom$VirtualDom$attribute('letter-spacing');
var _elm_lang$svg$Svg_Attributes$kerning = _elm_lang$virtual_dom$VirtualDom$attribute('kerning');
var _elm_lang$svg$Svg_Attributes$imageRendering = _elm_lang$virtual_dom$VirtualDom$attribute('image-rendering');
var _elm_lang$svg$Svg_Attributes$glyphOrientationVertical = _elm_lang$virtual_dom$VirtualDom$attribute('glyph-orientation-vertical');
var _elm_lang$svg$Svg_Attributes$glyphOrientationHorizontal = _elm_lang$virtual_dom$VirtualDom$attribute('glyph-orientation-horizontal');
var _elm_lang$svg$Svg_Attributes$fontWeight = _elm_lang$virtual_dom$VirtualDom$attribute('font-weight');
var _elm_lang$svg$Svg_Attributes$fontVariant = _elm_lang$virtual_dom$VirtualDom$attribute('font-variant');
var _elm_lang$svg$Svg_Attributes$fontStyle = _elm_lang$virtual_dom$VirtualDom$attribute('font-style');
var _elm_lang$svg$Svg_Attributes$fontStretch = _elm_lang$virtual_dom$VirtualDom$attribute('font-stretch');
var _elm_lang$svg$Svg_Attributes$fontSize = _elm_lang$virtual_dom$VirtualDom$attribute('font-size');
var _elm_lang$svg$Svg_Attributes$fontSizeAdjust = _elm_lang$virtual_dom$VirtualDom$attribute('font-size-adjust');
var _elm_lang$svg$Svg_Attributes$fontFamily = _elm_lang$virtual_dom$VirtualDom$attribute('font-family');
var _elm_lang$svg$Svg_Attributes$floodOpacity = _elm_lang$virtual_dom$VirtualDom$attribute('flood-opacity');
var _elm_lang$svg$Svg_Attributes$floodColor = _elm_lang$virtual_dom$VirtualDom$attribute('flood-color');
var _elm_lang$svg$Svg_Attributes$filter = _elm_lang$virtual_dom$VirtualDom$attribute('filter');
var _elm_lang$svg$Svg_Attributes$fill = _elm_lang$virtual_dom$VirtualDom$attribute('fill');
var _elm_lang$svg$Svg_Attributes$fillRule = _elm_lang$virtual_dom$VirtualDom$attribute('fill-rule');
var _elm_lang$svg$Svg_Attributes$fillOpacity = _elm_lang$virtual_dom$VirtualDom$attribute('fill-opacity');
var _elm_lang$svg$Svg_Attributes$enableBackground = _elm_lang$virtual_dom$VirtualDom$attribute('enable-background');
var _elm_lang$svg$Svg_Attributes$dominantBaseline = _elm_lang$virtual_dom$VirtualDom$attribute('dominant-baseline');
var _elm_lang$svg$Svg_Attributes$display = _elm_lang$virtual_dom$VirtualDom$attribute('display');
var _elm_lang$svg$Svg_Attributes$direction = _elm_lang$virtual_dom$VirtualDom$attribute('direction');
var _elm_lang$svg$Svg_Attributes$cursor = _elm_lang$virtual_dom$VirtualDom$attribute('cursor');
var _elm_lang$svg$Svg_Attributes$color = _elm_lang$virtual_dom$VirtualDom$attribute('color');
var _elm_lang$svg$Svg_Attributes$colorRendering = _elm_lang$virtual_dom$VirtualDom$attribute('color-rendering');
var _elm_lang$svg$Svg_Attributes$colorProfile = _elm_lang$virtual_dom$VirtualDom$attribute('color-profile');
var _elm_lang$svg$Svg_Attributes$colorInterpolation = _elm_lang$virtual_dom$VirtualDom$attribute('color-interpolation');
var _elm_lang$svg$Svg_Attributes$colorInterpolationFilters = _elm_lang$virtual_dom$VirtualDom$attribute('color-interpolation-filters');
var _elm_lang$svg$Svg_Attributes$clip = _elm_lang$virtual_dom$VirtualDom$attribute('clip');
var _elm_lang$svg$Svg_Attributes$clipRule = _elm_lang$virtual_dom$VirtualDom$attribute('clip-rule');
var _elm_lang$svg$Svg_Attributes$clipPath = _elm_lang$virtual_dom$VirtualDom$attribute('clip-path');
var _elm_lang$svg$Svg_Attributes$baselineShift = _elm_lang$virtual_dom$VirtualDom$attribute('baseline-shift');
var _elm_lang$svg$Svg_Attributes$alignmentBaseline = _elm_lang$virtual_dom$VirtualDom$attribute('alignment-baseline');
var _elm_lang$svg$Svg_Attributes$zoomAndPan = _elm_lang$virtual_dom$VirtualDom$attribute('zoomAndPan');
var _elm_lang$svg$Svg_Attributes$z = _elm_lang$virtual_dom$VirtualDom$attribute('z');
var _elm_lang$svg$Svg_Attributes$yChannelSelector = _elm_lang$virtual_dom$VirtualDom$attribute('yChannelSelector');
var _elm_lang$svg$Svg_Attributes$y2 = _elm_lang$virtual_dom$VirtualDom$attribute('y2');
var _elm_lang$svg$Svg_Attributes$y1 = _elm_lang$virtual_dom$VirtualDom$attribute('y1');
var _elm_lang$svg$Svg_Attributes$y = _elm_lang$virtual_dom$VirtualDom$attribute('y');
var _elm_lang$svg$Svg_Attributes$xmlSpace = A2(_elm_lang$virtual_dom$VirtualDom$attributeNS, 'http://www.w3.org/XML/1998/namespace', 'xml:space');
var _elm_lang$svg$Svg_Attributes$xmlLang = A2(_elm_lang$virtual_dom$VirtualDom$attributeNS, 'http://www.w3.org/XML/1998/namespace', 'xml:lang');
var _elm_lang$svg$Svg_Attributes$xmlBase = A2(_elm_lang$virtual_dom$VirtualDom$attributeNS, 'http://www.w3.org/XML/1998/namespace', 'xml:base');
var _elm_lang$svg$Svg_Attributes$xlinkType = A2(_elm_lang$virtual_dom$VirtualDom$attributeNS, 'http://www.w3.org/1999/xlink', 'xlink:type');
var _elm_lang$svg$Svg_Attributes$xlinkTitle = A2(_elm_lang$virtual_dom$VirtualDom$attributeNS, 'http://www.w3.org/1999/xlink', 'xlink:title');
var _elm_lang$svg$Svg_Attributes$xlinkShow = A2(_elm_lang$virtual_dom$VirtualDom$attributeNS, 'http://www.w3.org/1999/xlink', 'xlink:show');
var _elm_lang$svg$Svg_Attributes$xlinkRole = A2(_elm_lang$virtual_dom$VirtualDom$attributeNS, 'http://www.w3.org/1999/xlink', 'xlink:role');
var _elm_lang$svg$Svg_Attributes$xlinkHref = A2(_elm_lang$virtual_dom$VirtualDom$attributeNS, 'http://www.w3.org/1999/xlink', 'xlink:href');
var _elm_lang$svg$Svg_Attributes$xlinkArcrole = A2(_elm_lang$virtual_dom$VirtualDom$attributeNS, 'http://www.w3.org/1999/xlink', 'xlink:arcrole');
var _elm_lang$svg$Svg_Attributes$xlinkActuate = A2(_elm_lang$virtual_dom$VirtualDom$attributeNS, 'http://www.w3.org/1999/xlink', 'xlink:actuate');
var _elm_lang$svg$Svg_Attributes$xChannelSelector = _elm_lang$virtual_dom$VirtualDom$attribute('xChannelSelector');
var _elm_lang$svg$Svg_Attributes$x2 = _elm_lang$virtual_dom$VirtualDom$attribute('x2');
var _elm_lang$svg$Svg_Attributes$x1 = _elm_lang$virtual_dom$VirtualDom$attribute('x1');
var _elm_lang$svg$Svg_Attributes$xHeight = _elm_lang$virtual_dom$VirtualDom$attribute('x-height');
var _elm_lang$svg$Svg_Attributes$x = _elm_lang$virtual_dom$VirtualDom$attribute('x');
var _elm_lang$svg$Svg_Attributes$widths = _elm_lang$virtual_dom$VirtualDom$attribute('widths');
var _elm_lang$svg$Svg_Attributes$width = _elm_lang$virtual_dom$VirtualDom$attribute('width');
var _elm_lang$svg$Svg_Attributes$viewTarget = _elm_lang$virtual_dom$VirtualDom$attribute('viewTarget');
var _elm_lang$svg$Svg_Attributes$viewBox = _elm_lang$virtual_dom$VirtualDom$attribute('viewBox');
var _elm_lang$svg$Svg_Attributes$vertOriginY = _elm_lang$virtual_dom$VirtualDom$attribute('vert-origin-y');
var _elm_lang$svg$Svg_Attributes$vertOriginX = _elm_lang$virtual_dom$VirtualDom$attribute('vert-origin-x');
var _elm_lang$svg$Svg_Attributes$vertAdvY = _elm_lang$virtual_dom$VirtualDom$attribute('vert-adv-y');
var _elm_lang$svg$Svg_Attributes$version = _elm_lang$virtual_dom$VirtualDom$attribute('version');
var _elm_lang$svg$Svg_Attributes$values = _elm_lang$virtual_dom$VirtualDom$attribute('values');
var _elm_lang$svg$Svg_Attributes$vMathematical = _elm_lang$virtual_dom$VirtualDom$attribute('v-mathematical');
var _elm_lang$svg$Svg_Attributes$vIdeographic = _elm_lang$virtual_dom$VirtualDom$attribute('v-ideographic');
var _elm_lang$svg$Svg_Attributes$vHanging = _elm_lang$virtual_dom$VirtualDom$attribute('v-hanging');
var _elm_lang$svg$Svg_Attributes$vAlphabetic = _elm_lang$virtual_dom$VirtualDom$attribute('v-alphabetic');
var _elm_lang$svg$Svg_Attributes$unitsPerEm = _elm_lang$virtual_dom$VirtualDom$attribute('units-per-em');
var _elm_lang$svg$Svg_Attributes$unicodeRange = _elm_lang$virtual_dom$VirtualDom$attribute('unicode-range');
var _elm_lang$svg$Svg_Attributes$unicode = _elm_lang$virtual_dom$VirtualDom$attribute('unicode');
var _elm_lang$svg$Svg_Attributes$underlineThickness = _elm_lang$virtual_dom$VirtualDom$attribute('underline-thickness');
var _elm_lang$svg$Svg_Attributes$underlinePosition = _elm_lang$virtual_dom$VirtualDom$attribute('underline-position');
var _elm_lang$svg$Svg_Attributes$u2 = _elm_lang$virtual_dom$VirtualDom$attribute('u2');
var _elm_lang$svg$Svg_Attributes$u1 = _elm_lang$virtual_dom$VirtualDom$attribute('u1');
var _elm_lang$svg$Svg_Attributes$type_ = _elm_lang$virtual_dom$VirtualDom$attribute('type');
var _elm_lang$svg$Svg_Attributes$transform = _elm_lang$virtual_dom$VirtualDom$attribute('transform');
var _elm_lang$svg$Svg_Attributes$to = _elm_lang$virtual_dom$VirtualDom$attribute('to');
var _elm_lang$svg$Svg_Attributes$title = _elm_lang$virtual_dom$VirtualDom$attribute('title');
var _elm_lang$svg$Svg_Attributes$textLength = _elm_lang$virtual_dom$VirtualDom$attribute('textLength');
var _elm_lang$svg$Svg_Attributes$targetY = _elm_lang$virtual_dom$VirtualDom$attribute('targetY');
var _elm_lang$svg$Svg_Attributes$targetX = _elm_lang$virtual_dom$VirtualDom$attribute('targetX');
var _elm_lang$svg$Svg_Attributes$target = _elm_lang$virtual_dom$VirtualDom$attribute('target');
var _elm_lang$svg$Svg_Attributes$tableValues = _elm_lang$virtual_dom$VirtualDom$attribute('tableValues');
var _elm_lang$svg$Svg_Attributes$systemLanguage = _elm_lang$virtual_dom$VirtualDom$attribute('systemLanguage');
var _elm_lang$svg$Svg_Attributes$surfaceScale = _elm_lang$virtual_dom$VirtualDom$attribute('surfaceScale');
var _elm_lang$svg$Svg_Attributes$style = _elm_lang$virtual_dom$VirtualDom$attribute('style');
var _elm_lang$svg$Svg_Attributes$string = _elm_lang$virtual_dom$VirtualDom$attribute('string');
var _elm_lang$svg$Svg_Attributes$strikethroughThickness = _elm_lang$virtual_dom$VirtualDom$attribute('strikethrough-thickness');
var _elm_lang$svg$Svg_Attributes$strikethroughPosition = _elm_lang$virtual_dom$VirtualDom$attribute('strikethrough-position');
var _elm_lang$svg$Svg_Attributes$stitchTiles = _elm_lang$virtual_dom$VirtualDom$attribute('stitchTiles');
var _elm_lang$svg$Svg_Attributes$stemv = _elm_lang$virtual_dom$VirtualDom$attribute('stemv');
var _elm_lang$svg$Svg_Attributes$stemh = _elm_lang$virtual_dom$VirtualDom$attribute('stemh');
var _elm_lang$svg$Svg_Attributes$stdDeviation = _elm_lang$virtual_dom$VirtualDom$attribute('stdDeviation');
var _elm_lang$svg$Svg_Attributes$startOffset = _elm_lang$virtual_dom$VirtualDom$attribute('startOffset');
var _elm_lang$svg$Svg_Attributes$spreadMethod = _elm_lang$virtual_dom$VirtualDom$attribute('spreadMethod');
var _elm_lang$svg$Svg_Attributes$speed = _elm_lang$virtual_dom$VirtualDom$attribute('speed');
var _elm_lang$svg$Svg_Attributes$specularExponent = _elm_lang$virtual_dom$VirtualDom$attribute('specularExponent');
var _elm_lang$svg$Svg_Attributes$specularConstant = _elm_lang$virtual_dom$VirtualDom$attribute('specularConstant');
var _elm_lang$svg$Svg_Attributes$spacing = _elm_lang$virtual_dom$VirtualDom$attribute('spacing');
var _elm_lang$svg$Svg_Attributes$slope = _elm_lang$virtual_dom$VirtualDom$attribute('slope');
var _elm_lang$svg$Svg_Attributes$seed = _elm_lang$virtual_dom$VirtualDom$attribute('seed');
var _elm_lang$svg$Svg_Attributes$scale = _elm_lang$virtual_dom$VirtualDom$attribute('scale');
var _elm_lang$svg$Svg_Attributes$ry = _elm_lang$virtual_dom$VirtualDom$attribute('ry');
var _elm_lang$svg$Svg_Attributes$rx = _elm_lang$virtual_dom$VirtualDom$attribute('rx');
var _elm_lang$svg$Svg_Attributes$rotate = _elm_lang$virtual_dom$VirtualDom$attribute('rotate');
var _elm_lang$svg$Svg_Attributes$result = _elm_lang$virtual_dom$VirtualDom$attribute('result');
var _elm_lang$svg$Svg_Attributes$restart = _elm_lang$virtual_dom$VirtualDom$attribute('restart');
var _elm_lang$svg$Svg_Attributes$requiredFeatures = _elm_lang$virtual_dom$VirtualDom$attribute('requiredFeatures');
var _elm_lang$svg$Svg_Attributes$requiredExtensions = _elm_lang$virtual_dom$VirtualDom$attribute('requiredExtensions');
var _elm_lang$svg$Svg_Attributes$repeatDur = _elm_lang$virtual_dom$VirtualDom$attribute('repeatDur');
var _elm_lang$svg$Svg_Attributes$repeatCount = _elm_lang$virtual_dom$VirtualDom$attribute('repeatCount');
var _elm_lang$svg$Svg_Attributes$renderingIntent = _elm_lang$virtual_dom$VirtualDom$attribute('rendering-intent');
var _elm_lang$svg$Svg_Attributes$refY = _elm_lang$virtual_dom$VirtualDom$attribute('refY');
var _elm_lang$svg$Svg_Attributes$refX = _elm_lang$virtual_dom$VirtualDom$attribute('refX');
var _elm_lang$svg$Svg_Attributes$radius = _elm_lang$virtual_dom$VirtualDom$attribute('radius');
var _elm_lang$svg$Svg_Attributes$r = _elm_lang$virtual_dom$VirtualDom$attribute('r');
var _elm_lang$svg$Svg_Attributes$primitiveUnits = _elm_lang$virtual_dom$VirtualDom$attribute('primitiveUnits');
var _elm_lang$svg$Svg_Attributes$preserveAspectRatio = _elm_lang$virtual_dom$VirtualDom$attribute('preserveAspectRatio');
var _elm_lang$svg$Svg_Attributes$preserveAlpha = _elm_lang$virtual_dom$VirtualDom$attribute('preserveAlpha');
var _elm_lang$svg$Svg_Attributes$pointsAtZ = _elm_lang$virtual_dom$VirtualDom$attribute('pointsAtZ');
var _elm_lang$svg$Svg_Attributes$pointsAtY = _elm_lang$virtual_dom$VirtualDom$attribute('pointsAtY');
var _elm_lang$svg$Svg_Attributes$pointsAtX = _elm_lang$virtual_dom$VirtualDom$attribute('pointsAtX');
var _elm_lang$svg$Svg_Attributes$points = _elm_lang$virtual_dom$VirtualDom$attribute('points');
var _elm_lang$svg$Svg_Attributes$pointOrder = _elm_lang$virtual_dom$VirtualDom$attribute('point-order');
var _elm_lang$svg$Svg_Attributes$patternUnits = _elm_lang$virtual_dom$VirtualDom$attribute('patternUnits');
var _elm_lang$svg$Svg_Attributes$patternTransform = _elm_lang$virtual_dom$VirtualDom$attribute('patternTransform');
var _elm_lang$svg$Svg_Attributes$patternContentUnits = _elm_lang$virtual_dom$VirtualDom$attribute('patternContentUnits');
var _elm_lang$svg$Svg_Attributes$pathLength = _elm_lang$virtual_dom$VirtualDom$attribute('pathLength');
var _elm_lang$svg$Svg_Attributes$path = _elm_lang$virtual_dom$VirtualDom$attribute('path');
var _elm_lang$svg$Svg_Attributes$panose1 = _elm_lang$virtual_dom$VirtualDom$attribute('panose-1');
var _elm_lang$svg$Svg_Attributes$overlineThickness = _elm_lang$virtual_dom$VirtualDom$attribute('overline-thickness');
var _elm_lang$svg$Svg_Attributes$overlinePosition = _elm_lang$virtual_dom$VirtualDom$attribute('overline-position');
var _elm_lang$svg$Svg_Attributes$origin = _elm_lang$virtual_dom$VirtualDom$attribute('origin');
var _elm_lang$svg$Svg_Attributes$orientation = _elm_lang$virtual_dom$VirtualDom$attribute('orientation');
var _elm_lang$svg$Svg_Attributes$orient = _elm_lang$virtual_dom$VirtualDom$attribute('orient');
var _elm_lang$svg$Svg_Attributes$order = _elm_lang$virtual_dom$VirtualDom$attribute('order');
var _elm_lang$svg$Svg_Attributes$operator = _elm_lang$virtual_dom$VirtualDom$attribute('operator');
var _elm_lang$svg$Svg_Attributes$offset = _elm_lang$virtual_dom$VirtualDom$attribute('offset');
var _elm_lang$svg$Svg_Attributes$numOctaves = _elm_lang$virtual_dom$VirtualDom$attribute('numOctaves');
var _elm_lang$svg$Svg_Attributes$name = _elm_lang$virtual_dom$VirtualDom$attribute('name');
var _elm_lang$svg$Svg_Attributes$mode = _elm_lang$virtual_dom$VirtualDom$attribute('mode');
var _elm_lang$svg$Svg_Attributes$min = _elm_lang$virtual_dom$VirtualDom$attribute('min');
var _elm_lang$svg$Svg_Attributes$method = _elm_lang$virtual_dom$VirtualDom$attribute('method');
var _elm_lang$svg$Svg_Attributes$media = _elm_lang$virtual_dom$VirtualDom$attribute('media');
var _elm_lang$svg$Svg_Attributes$max = _elm_lang$virtual_dom$VirtualDom$attribute('max');
var _elm_lang$svg$Svg_Attributes$mathematical = _elm_lang$virtual_dom$VirtualDom$attribute('mathematical');
var _elm_lang$svg$Svg_Attributes$maskUnits = _elm_lang$virtual_dom$VirtualDom$attribute('maskUnits');
var _elm_lang$svg$Svg_Attributes$maskContentUnits = _elm_lang$virtual_dom$VirtualDom$attribute('maskContentUnits');
var _elm_lang$svg$Svg_Attributes$markerWidth = _elm_lang$virtual_dom$VirtualDom$attribute('markerWidth');
var _elm_lang$svg$Svg_Attributes$markerUnits = _elm_lang$virtual_dom$VirtualDom$attribute('markerUnits');
var _elm_lang$svg$Svg_Attributes$markerHeight = _elm_lang$virtual_dom$VirtualDom$attribute('markerHeight');
var _elm_lang$svg$Svg_Attributes$local = _elm_lang$virtual_dom$VirtualDom$attribute('local');
var _elm_lang$svg$Svg_Attributes$limitingConeAngle = _elm_lang$virtual_dom$VirtualDom$attribute('limitingConeAngle');
var _elm_lang$svg$Svg_Attributes$lengthAdjust = _elm_lang$virtual_dom$VirtualDom$attribute('lengthAdjust');
var _elm_lang$svg$Svg_Attributes$lang = _elm_lang$virtual_dom$VirtualDom$attribute('lang');
var _elm_lang$svg$Svg_Attributes$keyTimes = _elm_lang$virtual_dom$VirtualDom$attribute('keyTimes');
var _elm_lang$svg$Svg_Attributes$keySplines = _elm_lang$virtual_dom$VirtualDom$attribute('keySplines');
var _elm_lang$svg$Svg_Attributes$keyPoints = _elm_lang$virtual_dom$VirtualDom$attribute('keyPoints');
var _elm_lang$svg$Svg_Attributes$kernelUnitLength = _elm_lang$virtual_dom$VirtualDom$attribute('kernelUnitLength');
var _elm_lang$svg$Svg_Attributes$kernelMatrix = _elm_lang$virtual_dom$VirtualDom$attribute('kernelMatrix');
var _elm_lang$svg$Svg_Attributes$k4 = _elm_lang$virtual_dom$VirtualDom$attribute('k4');
var _elm_lang$svg$Svg_Attributes$k3 = _elm_lang$virtual_dom$VirtualDom$attribute('k3');
var _elm_lang$svg$Svg_Attributes$k2 = _elm_lang$virtual_dom$VirtualDom$attribute('k2');
var _elm_lang$svg$Svg_Attributes$k1 = _elm_lang$virtual_dom$VirtualDom$attribute('k1');
var _elm_lang$svg$Svg_Attributes$k = _elm_lang$virtual_dom$VirtualDom$attribute('k');
var _elm_lang$svg$Svg_Attributes$intercept = _elm_lang$virtual_dom$VirtualDom$attribute('intercept');
var _elm_lang$svg$Svg_Attributes$in2 = _elm_lang$virtual_dom$VirtualDom$attribute('in2');
var _elm_lang$svg$Svg_Attributes$in_ = _elm_lang$virtual_dom$VirtualDom$attribute('in');
var _elm_lang$svg$Svg_Attributes$ideographic = _elm_lang$virtual_dom$VirtualDom$attribute('ideographic');
var _elm_lang$svg$Svg_Attributes$id = _elm_lang$virtual_dom$VirtualDom$attribute('id');
var _elm_lang$svg$Svg_Attributes$horizOriginY = _elm_lang$virtual_dom$VirtualDom$attribute('horiz-origin-y');
var _elm_lang$svg$Svg_Attributes$horizOriginX = _elm_lang$virtual_dom$VirtualDom$attribute('horiz-origin-x');
var _elm_lang$svg$Svg_Attributes$horizAdvX = _elm_lang$virtual_dom$VirtualDom$attribute('horiz-adv-x');
var _elm_lang$svg$Svg_Attributes$height = _elm_lang$virtual_dom$VirtualDom$attribute('height');
var _elm_lang$svg$Svg_Attributes$hanging = _elm_lang$virtual_dom$VirtualDom$attribute('hanging');
var _elm_lang$svg$Svg_Attributes$gradientUnits = _elm_lang$virtual_dom$VirtualDom$attribute('gradientUnits');
var _elm_lang$svg$Svg_Attributes$gradientTransform = _elm_lang$virtual_dom$VirtualDom$attribute('gradientTransform');
var _elm_lang$svg$Svg_Attributes$glyphRef = _elm_lang$virtual_dom$VirtualDom$attribute('glyphRef');
var _elm_lang$svg$Svg_Attributes$glyphName = _elm_lang$virtual_dom$VirtualDom$attribute('glyph-name');
var _elm_lang$svg$Svg_Attributes$g2 = _elm_lang$virtual_dom$VirtualDom$attribute('g2');
var _elm_lang$svg$Svg_Attributes$g1 = _elm_lang$virtual_dom$VirtualDom$attribute('g1');
var _elm_lang$svg$Svg_Attributes$fy = _elm_lang$virtual_dom$VirtualDom$attribute('fy');
var _elm_lang$svg$Svg_Attributes$fx = _elm_lang$virtual_dom$VirtualDom$attribute('fx');
var _elm_lang$svg$Svg_Attributes$from = _elm_lang$virtual_dom$VirtualDom$attribute('from');
var _elm_lang$svg$Svg_Attributes$format = _elm_lang$virtual_dom$VirtualDom$attribute('format');
var _elm_lang$svg$Svg_Attributes$filterUnits = _elm_lang$virtual_dom$VirtualDom$attribute('filterUnits');
var _elm_lang$svg$Svg_Attributes$filterRes = _elm_lang$virtual_dom$VirtualDom$attribute('filterRes');
var _elm_lang$svg$Svg_Attributes$externalResourcesRequired = _elm_lang$virtual_dom$VirtualDom$attribute('externalResourcesRequired');
var _elm_lang$svg$Svg_Attributes$exponent = _elm_lang$virtual_dom$VirtualDom$attribute('exponent');
var _elm_lang$svg$Svg_Attributes$end = _elm_lang$virtual_dom$VirtualDom$attribute('end');
var _elm_lang$svg$Svg_Attributes$elevation = _elm_lang$virtual_dom$VirtualDom$attribute('elevation');
var _elm_lang$svg$Svg_Attributes$edgeMode = _elm_lang$virtual_dom$VirtualDom$attribute('edgeMode');
var _elm_lang$svg$Svg_Attributes$dy = _elm_lang$virtual_dom$VirtualDom$attribute('dy');
var _elm_lang$svg$Svg_Attributes$dx = _elm_lang$virtual_dom$VirtualDom$attribute('dx');
var _elm_lang$svg$Svg_Attributes$dur = _elm_lang$virtual_dom$VirtualDom$attribute('dur');
var _elm_lang$svg$Svg_Attributes$divisor = _elm_lang$virtual_dom$VirtualDom$attribute('divisor');
var _elm_lang$svg$Svg_Attributes$diffuseConstant = _elm_lang$virtual_dom$VirtualDom$attribute('diffuseConstant');
var _elm_lang$svg$Svg_Attributes$descent = _elm_lang$virtual_dom$VirtualDom$attribute('descent');
var _elm_lang$svg$Svg_Attributes$decelerate = _elm_lang$virtual_dom$VirtualDom$attribute('decelerate');
var _elm_lang$svg$Svg_Attributes$d = _elm_lang$virtual_dom$VirtualDom$attribute('d');
var _elm_lang$svg$Svg_Attributes$cy = _elm_lang$virtual_dom$VirtualDom$attribute('cy');
var _elm_lang$svg$Svg_Attributes$cx = _elm_lang$virtual_dom$VirtualDom$attribute('cx');
var _elm_lang$svg$Svg_Attributes$contentStyleType = _elm_lang$virtual_dom$VirtualDom$attribute('contentStyleType');
var _elm_lang$svg$Svg_Attributes$contentScriptType = _elm_lang$virtual_dom$VirtualDom$attribute('contentScriptType');
var _elm_lang$svg$Svg_Attributes$clipPathUnits = _elm_lang$virtual_dom$VirtualDom$attribute('clipPathUnits');
var _elm_lang$svg$Svg_Attributes$class = _elm_lang$virtual_dom$VirtualDom$attribute('class');
var _elm_lang$svg$Svg_Attributes$capHeight = _elm_lang$virtual_dom$VirtualDom$attribute('cap-height');
var _elm_lang$svg$Svg_Attributes$calcMode = _elm_lang$virtual_dom$VirtualDom$attribute('calcMode');
var _elm_lang$svg$Svg_Attributes$by = _elm_lang$virtual_dom$VirtualDom$attribute('by');
var _elm_lang$svg$Svg_Attributes$bias = _elm_lang$virtual_dom$VirtualDom$attribute('bias');
var _elm_lang$svg$Svg_Attributes$begin = _elm_lang$virtual_dom$VirtualDom$attribute('begin');
var _elm_lang$svg$Svg_Attributes$bbox = _elm_lang$virtual_dom$VirtualDom$attribute('bbox');
var _elm_lang$svg$Svg_Attributes$baseProfile = _elm_lang$virtual_dom$VirtualDom$attribute('baseProfile');
var _elm_lang$svg$Svg_Attributes$baseFrequency = _elm_lang$virtual_dom$VirtualDom$attribute('baseFrequency');
var _elm_lang$svg$Svg_Attributes$azimuth = _elm_lang$virtual_dom$VirtualDom$attribute('azimuth');
var _elm_lang$svg$Svg_Attributes$autoReverse = _elm_lang$virtual_dom$VirtualDom$attribute('autoReverse');
var _elm_lang$svg$Svg_Attributes$attributeType = _elm_lang$virtual_dom$VirtualDom$attribute('attributeType');
var _elm_lang$svg$Svg_Attributes$attributeName = _elm_lang$virtual_dom$VirtualDom$attribute('attributeName');
var _elm_lang$svg$Svg_Attributes$ascent = _elm_lang$virtual_dom$VirtualDom$attribute('ascent');
var _elm_lang$svg$Svg_Attributes$arabicForm = _elm_lang$virtual_dom$VirtualDom$attribute('arabic-form');
var _elm_lang$svg$Svg_Attributes$amplitude = _elm_lang$virtual_dom$VirtualDom$attribute('amplitude');
var _elm_lang$svg$Svg_Attributes$allowReorder = _elm_lang$virtual_dom$VirtualDom$attribute('allowReorder');
var _elm_lang$svg$Svg_Attributes$alphabetic = _elm_lang$virtual_dom$VirtualDom$attribute('alphabetic');
var _elm_lang$svg$Svg_Attributes$additive = _elm_lang$virtual_dom$VirtualDom$attribute('additive');
var _elm_lang$svg$Svg_Attributes$accumulate = _elm_lang$virtual_dom$VirtualDom$attribute('accumulate');
var _elm_lang$svg$Svg_Attributes$accelerate = _elm_lang$virtual_dom$VirtualDom$attribute('accelerate');
var _elm_lang$svg$Svg_Attributes$accentHeight = _elm_lang$virtual_dom$VirtualDom$attribute('accent-height');

var _elm_community$elm_material_icons$Material_Icons_Internal$toRgbaString = function (color) {
	var _p0 = _elm_lang$core$Color$toRgb(color);
	var red = _p0.red;
	var green = _p0.green;
	var blue = _p0.blue;
	var alpha = _p0.alpha;
	return A2(
		_elm_lang$core$Basics_ops['++'],
		'rgba(',
		A2(
			_elm_lang$core$Basics_ops['++'],
			_elm_lang$core$Basics$toString(red),
			A2(
				_elm_lang$core$Basics_ops['++'],
				',',
				A2(
					_elm_lang$core$Basics_ops['++'],
					_elm_lang$core$Basics$toString(green),
					A2(
						_elm_lang$core$Basics_ops['++'],
						',',
						A2(
							_elm_lang$core$Basics_ops['++'],
							_elm_lang$core$Basics$toString(blue),
							A2(
								_elm_lang$core$Basics_ops['++'],
								',',
								A2(
									_elm_lang$core$Basics_ops['++'],
									_elm_lang$core$Basics$toString(alpha),
									')'))))))));
};
var _elm_community$elm_material_icons$Material_Icons_Internal$icon = F3(
	function (path, color, size) {
		var stringColor = _elm_community$elm_material_icons$Material_Icons_Internal$toRgbaString(color);
		var stringSize = _elm_lang$core$Basics$toString(size);
		return A2(
			_elm_lang$svg$Svg$svg,
			{
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$width(stringSize),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$height(stringSize),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$viewBox('0 0 24 24'),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$svg$Svg$path,
					{
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$d(path),
						_1: {
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$fill(stringColor),
							_1: {ctor: '[]'}
						}
					},
					{ctor: '[]'}),
				_1: {ctor: '[]'}
			});
	});

var _elm_community$elm_material_icons$Material_Icons_Navigation$unfold_more = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 5.83L15.17 9l1.41-1.41L12 3 7.41 7.59 8.83 9 12 5.83zm0 12.34L8.83 15l-1.41 1.41L12 21l4.59-4.59L15.17 15 12 18.17z');
var _elm_community$elm_material_icons$Material_Icons_Navigation$unfold_less = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M7.41 18.59L8.83 20 12 16.83 15.17 20l1.41-1.41L12 14l-4.59 4.59zm9.18-13.18L15.17 4 12 7.17 8.83 4 7.41 5.41 12 10l4.59-4.59z');
var _elm_community$elm_material_icons$Material_Icons_Navigation$refresh = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z');
var _elm_community$elm_material_icons$Material_Icons_Navigation$more_vert = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z');
var _elm_community$elm_material_icons$Material_Icons_Navigation$more_horiz = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z');
var _elm_community$elm_material_icons$Material_Icons_Navigation$menu = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z');
var _elm_community$elm_material_icons$Material_Icons_Navigation$fullscreen_exit = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M5 16h3v3h2v-5H5v2zm3-8H5v2h5V5H8v3zm6 11h2v-3h3v-2h-5v5zm2-11V5h-2v5h5V8h-3z');
var _elm_community$elm_material_icons$Material_Icons_Navigation$fullscreen = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z');
var _elm_community$elm_material_icons$Material_Icons_Navigation$expand_more = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z');
var _elm_community$elm_material_icons$Material_Icons_Navigation$expand_less = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z');
var _elm_community$elm_material_icons$Material_Icons_Navigation$close = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z');
var _elm_community$elm_material_icons$Material_Icons_Navigation$chevron_right = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z');
var _elm_community$elm_material_icons$Material_Icons_Navigation$chevron_left = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z');
var _elm_community$elm_material_icons$Material_Icons_Navigation$check = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z');
var _elm_community$elm_material_icons$Material_Icons_Navigation$cancel = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z');
var _elm_community$elm_material_icons$Material_Icons_Navigation$arrow_forward = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z');
var _elm_community$elm_material_icons$Material_Icons_Navigation$arrow_drop_up = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M7 14l5-5 5 5z');
var _elm_community$elm_material_icons$Material_Icons_Navigation$arrow_drop_down_circle = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 12l-4-4h8l-4 4z');
var _elm_community$elm_material_icons$Material_Icons_Navigation$arrow_drop_down = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M7 10l5 5 5-5z');
var _elm_community$elm_material_icons$Material_Icons_Navigation$arrow_back = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z');
var _elm_community$elm_material_icons$Material_Icons_Navigation$apps = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M4 8h4V4H4v4zm6 12h4v-4h-4v4zm-6 0h4v-4H4v4zm0-6h4v-4H4v4zm6 0h4v-4h-4v4zm6-10v4h4V4h-4zm-6 4h4V4h-4v4zm6 6h4v-4h-4v4zm0 6h4v-4h-4v4z');

var _elm_community$elm_material_icons$Material_Icons_Content$undo = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12.5 8c-2.65 0-5.05.99-6.9 2.6L2 7v9h9l-3.62-3.62c1.39-1.16 3.16-1.88 5.12-1.88 3.54 0 6.55 2.31 7.6 5.5l2.37-.78C21.08 11.03 17.15 8 12.5 8z');
var _elm_community$elm_material_icons$Material_Icons_Content$text_format = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M5 17v2h14v-2H5zm4.5-4.2h5l.9 2.2h2.1L12.75 4h-1.5L6.5 15h2.1l.9-2.2zM12 5.98L13.87 11h-3.74L12 5.98z');
var _elm_community$elm_material_icons$Material_Icons_Content$sort = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M3 18h6v-2H3v2zM3 6v2h18V6H3zm0 7h12v-2H3v2z');
var _elm_community$elm_material_icons$Material_Icons_Content$send = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M2.01 21L23 12 2.01 3 2 10l15 2-15 2z');
var _elm_community$elm_material_icons$Material_Icons_Content$select_all = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2zM7 17h10V7H7v10zm2-8h6v6H9V9z');
var _elm_community$elm_material_icons$Material_Icons_Content$save = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z');
var _elm_community$elm_material_icons$Material_Icons_Content$report = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M15.73 3H8.27L3 8.27v7.46L8.27 21h7.46L21 15.73V8.27L15.73 3zM12 17.3c-.72 0-1.3-.58-1.3-1.3 0-.72.58-1.3 1.3-1.3.72 0 1.3.58 1.3 1.3 0 .72-.58 1.3-1.3 1.3zm1-4.3h-2V7h2v6z');
var _elm_community$elm_material_icons$Material_Icons_Content$reply_all = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M7 8V5l-7 7 7 7v-3l-4-4 4-4zm6 1V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z');
var _elm_community$elm_material_icons$Material_Icons_Content$reply = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z');
var _elm_community$elm_material_icons$Material_Icons_Content$remove_circle_outline = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z');
var _elm_community$elm_material_icons$Material_Icons_Content$remove_circle = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z');
var _elm_community$elm_material_icons$Material_Icons_Content$remove = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 13H5v-2h14v2z');
var _elm_community$elm_material_icons$Material_Icons_Content$redo = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M18.4 10.6C16.55 8.99 14.15 8 11.5 8c-4.65 0-8.58 3.03-9.96 7.22L3.9 16c1.05-3.19 4.05-5.5 7.6-5.5 1.95 0 3.73.72 5.12 1.88L13 16h9V7l-3.6 3.6z');
var _elm_community$elm_material_icons$Material_Icons_Content$markunread = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z');
var _elm_community$elm_material_icons$Material_Icons_Content$mail = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z');
var _elm_community$elm_material_icons$Material_Icons_Content$link = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z');
var _elm_community$elm_material_icons$Material_Icons_Content$inbox = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 3H4.99c-1.1 0-1.98.9-1.98 2L3 19c0 1.1.89 2 1.99 2H19c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 12h-4c0 1.66-1.34 3-3 3s-3-1.34-3-3H4.99V5H19v10zm-3-5h-2V7h-4v3H8l4 4 4-4z');
var _elm_community$elm_material_icons$Material_Icons_Content$gesture = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M4.59 6.89c.7-.71 1.4-1.35 1.71-1.22.5.2 0 1.03-.3 1.52-.25.42-2.86 3.89-2.86 6.31 0 1.28.48 2.34 1.34 2.98.75.56 1.74.73 2.64.46 1.07-.31 1.95-1.4 3.06-2.77 1.21-1.49 2.83-3.44 4.08-3.44 1.63 0 1.65 1.01 1.76 1.79-3.78.64-5.38 3.67-5.38 5.37 0 1.7 1.44 3.09 3.21 3.09 1.63 0 4.29-1.33 4.69-6.1H21v-2.5h-2.47c-.15-1.65-1.09-4.2-4.03-4.2-2.25 0-4.18 1.91-4.94 2.84-.58.73-2.06 2.48-2.29 2.72-.25.3-.68.84-1.11.84-.45 0-.72-.83-.36-1.92.35-1.09 1.4-2.86 1.85-3.52.78-1.14 1.3-1.92 1.3-3.28C8.95 3.69 7.31 3 6.44 3 5.12 3 3.97 4 3.72 4.25c-.36.36-.66.66-.88.93l1.75 1.71zm9.29 11.66c-.31 0-.74-.26-.74-.72 0-.6.73-2.2 2.87-2.76-.3 2.69-1.43 3.48-2.13 3.48z');
var _elm_community$elm_material_icons$Material_Icons_Content$forward = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 8V4l8 8-8 8v-4H4V8z');
var _elm_community$elm_material_icons$Material_Icons_Content$font_download = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M9.93 13.5h4.14L12 7.98zM20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-4.05 16.5l-1.14-3H9.17l-1.12 3H5.96l5.11-13h1.86l5.11 13h-2.09z');
var _elm_community$elm_material_icons$Material_Icons_Content$flag = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M14.4 6L14 4H5v17h2v-7h5.6l.4 2h7V6z');
var _elm_community$elm_material_icons$Material_Icons_Content$filter_list = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z');
var _elm_community$elm_material_icons$Material_Icons_Content$drafts = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M21.99 8c0-.72-.37-1.35-.94-1.7L12 1 2.95 6.3C2.38 6.65 2 7.28 2 8v10c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2l-.01-10zM12 13L3.74 7.84 12 3l8.26 4.84L12 13z');
var _elm_community$elm_material_icons$Material_Icons_Content$create = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z');
var _elm_community$elm_material_icons$Material_Icons_Content$content_paste = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 2h-4.18C14.4.84 13.3 0 12 0c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm7 18H5V4h2v3h10V4h2v16z');
var _elm_community$elm_material_icons$Material_Icons_Content$content_cut = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M9.64 7.64c.23-.5.36-1.05.36-1.64 0-2.21-1.79-4-4-4S2 3.79 2 6s1.79 4 4 4c.59 0 1.14-.13 1.64-.36L10 12l-2.36 2.36C7.14 14.13 6.59 14 6 14c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4c0-.59-.13-1.14-.36-1.64L12 14l7 7h3v-1L9.64 7.64zM6 8c-1.1 0-2-.89-2-2s.9-2 2-2 2 .89 2 2-.9 2-2 2zm0 12c-1.1 0-2-.89-2-2s.9-2 2-2 2 .89 2 2-.9 2-2 2zm6-7.5c-.28 0-.5-.22-.5-.5s.22-.5.5-.5.5.22.5.5-.22.5-.5.5zM19 3l-6 6 2 2 7-7V3z');
var _elm_community$elm_material_icons$Material_Icons_Content$content_copy = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z');
var _elm_community$elm_material_icons$Material_Icons_Content$clear = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z');
var _elm_community$elm_material_icons$Material_Icons_Content$block = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM4 12c0-4.42 3.58-8 8-8 1.85 0 3.55.63 4.9 1.69L5.69 16.9C4.63 15.55 4 13.85 4 12zm8 8c-1.85 0-3.55-.63-4.9-1.69L18.31 7.1C19.37 8.45 20 10.15 20 12c0 4.42-3.58 8-8 8z');
var _elm_community$elm_material_icons$Material_Icons_Content$backspace = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-3 12.59L17.59 17 14 13.41 10.41 17 9 15.59 12.59 12 9 8.41 10.41 7 14 10.59 17.59 7 19 8.41 15.41 12 19 15.59z');
var _elm_community$elm_material_icons$Material_Icons_Content$archive = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20.54 5.23l-1.39-1.68C18.88 3.21 18.47 3 18 3H6c-.47 0-.88.21-1.16.55L3.46 5.23C3.17 5.57 3 6.02 3 6.5V19c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6.5c0-.48-.17-.93-.46-1.27zM12 17.5L6.5 12H10v-2h4v2h3.5L12 17.5zM5.12 5l.81-1h12l.94 1H5.12z');
var _elm_community$elm_material_icons$Material_Icons_Content$add_circle_outline = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z');
var _elm_community$elm_material_icons$Material_Icons_Content$add_circle = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z');
var _elm_community$elm_material_icons$Material_Icons_Content$add_box = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10h-4v4h-2v-4H7v-2h4V7h2v4h4v2z');
var _elm_community$elm_material_icons$Material_Icons_Content$add = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z');

var _elm_community$elm_material_icons$Material_Icons_Toggle$star_half = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M22 9.74l-7.19-.62L12 2.5 9.19 9.13 2 9.74l5.46 4.73-1.64 7.03L12 17.77l6.18 3.73-1.63-7.03L22 9.74zM12 15.9V6.6l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.9z');
var _elm_community$elm_material_icons$Material_Icons_Toggle$star_border = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z');
var _elm_community$elm_material_icons$Material_Icons_Toggle$star = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z');
var _elm_community$elm_material_icons$Material_Icons_Toggle$radio_button_unchecked = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z');
var _elm_community$elm_material_icons$Material_Icons_Toggle$radio_button_checked = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zm0-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z');
var _elm_community$elm_material_icons$Material_Icons_Toggle$indeterminate_check_box = F2(
	function (color, size) {
		var stringColor = _elm_community$elm_material_icons$Material_Icons_Internal$toRgbaString(color);
		var stringSize = _elm_lang$core$Basics$toString(size);
		return A2(
			_elm_lang$svg$Svg$svg,
			{
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$width(stringSize),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$height(stringSize),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$viewBox('0 0 24 24'),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$svg$Svg$defs,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$svg$Svg$path,
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$id('a'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$d('M0 0h24v24H0z'),
									_1: {ctor: '[]'}
								}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A3(
						_elm_lang$virtual_dom$VirtualDom$node,
						'clipPath',
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$id('b'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$svg$Svg$use,
								{
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$xlinkHref('#a'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$overflow('visible'),
										_1: {ctor: '[]'}
									}
								},
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$svg$Svg$path,
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$d('M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$clipPath('url(#b)'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$fill(stringColor),
										_1: {ctor: '[]'}
									}
								}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}
				}
			});
	});
var _elm_community$elm_material_icons$Material_Icons_Toggle$check_box_outline_blank = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z');
var _elm_community$elm_material_icons$Material_Icons_Toggle$check_box = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z');

var _elm_community$elm_material_icons$Material_Icons_Action$zoom_out = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14zM7 9h5v1H7z');
var _elm_community$elm_material_icons$Material_Icons_Action$zoom_in = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14zM12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z');
var _elm_community$elm_material_icons$Material_Icons_Action$youtube_searched_for = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M17.01 14h-.8l-.27-.27c.98-1.14 1.57-2.61 1.57-4.23 0-3.59-2.91-6.5-6.5-6.5s-6.5 3-6.5 6.5H2l3.84 4 4.16-4H6.51C6.51 7 8.53 5 11.01 5s4.5 2.01 4.5 4.5c0 2.48-2.02 4.5-4.5 4.5-.65 0-1.26-.14-1.82-.38L7.71 15.1c.97.57 2.09.9 3.3.9 1.61 0 3.08-.59 4.22-1.57l.27.27v.79l5.01 4.99L22 19l-4.99-5z');
var _elm_community$elm_material_icons$Material_Icons_Action$work = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 6h-4V4c0-1.11-.89-2-2-2h-4c-1.11 0-2 .89-2 2v2H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-6 0h-4V4h4v2z');
var _elm_community$elm_material_icons$Material_Icons_Action$visibility_off = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z');
var _elm_community$elm_material_icons$Material_Icons_Action$visibility = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z');
var _elm_community$elm_material_icons$Material_Icons_Action$view_week = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z');
var _elm_community$elm_material_icons$Material_Icons_Action$view_stream = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M4 18h17v-6H4v6zM4 5v6h17V5H4z');
var _elm_community$elm_material_icons$Material_Icons_Action$view_quilt = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M10 18h5v-6h-5v6zm-6 0h5V5H4v13zm12 0h5v-6h-5v6zM10 5v6h11V5H10z');
var _elm_community$elm_material_icons$Material_Icons_Action$view_module = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M4 11h5V5H4v6zm0 7h5v-6H4v6zm6 0h5v-6h-5v6zm6 0h5v-6h-5v6zm-6-7h5V5h-5v6zm6-6v6h5V5h-5z');
var _elm_community$elm_material_icons$Material_Icons_Action$view_list = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M4 14h4v-4H4v4zm0 5h4v-4H4v4zM4 9h4V5H4v4zm5 5h12v-4H9v4zm0 5h12v-4H9v4zM9 5v4h12V5H9z');
var _elm_community$elm_material_icons$Material_Icons_Action$view_headline = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z');
var _elm_community$elm_material_icons$Material_Icons_Action$view_day = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M2 21h19v-3H2v3zM20 8H3c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h17c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zM2 3v3h19V3H2z');
var _elm_community$elm_material_icons$Material_Icons_Action$view_column = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M10 18h5V5h-5v13zm-6 0h5V5H4v13zM16 5v13h5V5h-5z');
var _elm_community$elm_material_icons$Material_Icons_Action$view_carousel = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M7 19h10V4H7v15zm-5-2h4V6H2v11zM18 6v11h4V6h-4z');
var _elm_community$elm_material_icons$Material_Icons_Action$view_array = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M4 18h3V5H4v13zM18 5v13h3V5h-3zM8 18h9V5H8v13z');
var _elm_community$elm_material_icons$Material_Icons_Action$view_agenda = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 13H3c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h17c.55 0 1-.45 1-1v-6c0-.55-.45-1-1-1zm0-10H3c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h17c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z');
var _elm_community$elm_material_icons$Material_Icons_Action$verified_user = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 1L3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4zm-2 16l-4-4 1.41-1.41L10 14.17l6.59-6.59L18 9l-8 8z');
var _elm_community$elm_material_icons$Material_Icons_Action$turned_in_not = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2zm0 15l-5-2.18L7 18V5h10v13z');
var _elm_community$elm_material_icons$Material_Icons_Action$turned_in = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2z');
var _elm_community$elm_material_icons$Material_Icons_Action$trending_up = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M16 6l2.29 2.29-4.88 4.88-4-4L2 16.59 3.41 18l6-6 4 4 6.3-6.29L22 12V6z');
var _elm_community$elm_material_icons$Material_Icons_Action$trending_flat = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M22 12l-4-4v3H3v2h15v3z');
var _elm_community$elm_material_icons$Material_Icons_Action$trending_down = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M16 18l2.29-2.29-4.88-4.88-4 4L2 7.41 3.41 6l6 6 4-4 6.3 6.29L22 12v6z');
var _elm_community$elm_material_icons$Material_Icons_Action$translate = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12.87 15.07l-2.54-2.51.03-.03c1.74-1.94 2.98-4.17 3.71-6.53H17V4h-7V2H8v2H1v1.99h11.17C11.5 7.92 10.44 9.75 9 11.35 8.07 10.32 7.3 9.19 6.69 8h-2c.73 1.63 1.73 3.17 2.98 4.56l-5.09 5.02L4 19l5-5 3.11 3.11.76-2.04zM18.5 10h-2L12 22h2l1.12-3h4.75L21 22h2l-4.5-12zm-2.62 7l1.62-4.33L19.12 17h-3.24z');
var _elm_community$elm_material_icons$Material_Icons_Action$track_changes = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19.07 4.93l-1.41 1.41C19.1 7.79 20 9.79 20 12c0 4.42-3.58 8-8 8s-8-3.58-8-8c0-4.08 3.05-7.44 7-7.93v2.02C8.16 6.57 6 9.03 6 12c0 3.31 2.69 6 6 6s6-2.69 6-6c0-1.66-.67-3.16-1.76-4.24l-1.41 1.41C15.55 9.9 16 10.9 16 12c0 2.21-1.79 4-4 4s-4-1.79-4-4c0-1.86 1.28-3.41 3-3.86v2.14c-.6.35-1 .98-1 1.72 0 1.1.9 2 2 2s2-.9 2-2c0-.74-.4-1.38-1-1.72V2h-1C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10c0-2.76-1.12-5.26-2.93-7.07z');
var _elm_community$elm_material_icons$Material_Icons_Action$toll = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M15 4c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zM3 12c0-2.61 1.67-4.83 4-5.65V4.26C3.55 5.15 1 8.27 1 12s2.55 6.85 6 7.74v-2.09c-2.33-.82-4-3.04-4-5.65z');
var _elm_community$elm_material_icons$Material_Icons_Action$today = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z');
var _elm_community$elm_material_icons$Material_Icons_Action$toc = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z');
var _elm_community$elm_material_icons$Material_Icons_Action$thumps_up_down = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 6c0-.55-.45-1-1-1H5.82l.66-3.18.02-.23c0-.31-.13-.59-.33-.8L5.38 0 .44 4.94C.17 5.21 0 5.59 0 6v6.5c0 .83.67 1.5 1.5 1.5h6.75c.62 0 1.15-.38 1.38-.91l2.26-5.29c.07-.17.11-.36.11-.55V6zm10.5 4h-6.75c-.62 0-1.15.38-1.38.91l-2.26 5.29c-.07.17-.11.36-.11.55V18c0 .55.45 1 1 1h5.18l-.66 3.18-.02.24c0 .31.13.59.33.8l.79.78 4.94-4.94c.27-.27.44-.65.44-1.06v-6.5c0-.83-.67-1.5-1.5-1.5z');
var _elm_community$elm_material_icons$Material_Icons_Action$thumb_up = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-1.91l-.01-.01L23 10z');
var _elm_community$elm_material_icons$Material_Icons_Action$thumb_down = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M15 3H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v1.91l.01.01L1 14c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 23l6.59-6.59c.36-.36.58-.86.58-1.41V5c0-1.1-.9-2-2-2zm4 0v12h4V3h-4z');
var _elm_community$elm_material_icons$Material_Icons_Action$theaters = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M18 3v2h-2V3H8v2H6V3H4v18h2v-2h2v2h8v-2h2v2h2V3h-2zM8 17H6v-2h2v2zm0-4H6v-2h2v2zm0-4H6V7h2v2zm10 8h-2v-2h2v2zm0-4h-2v-2h2v2zm0-4h-2V7h2v2z');
var _elm_community$elm_material_icons$Material_Icons_Action$tab_unselected = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M1 9h2V7H1v2zm0 4h2v-2H1v2zm0-8h2V3c-1.1 0-2 .9-2 2zm8 16h2v-2H9v2zm-8-4h2v-2H1v2zm2 4v-2H1c0 1.1.9 2 2 2zM21 3h-8v6h10V5c0-1.1-.9-2-2-2zm0 14h2v-2h-2v2zM9 5h2V3H9v2zM5 21h2v-2H5v2zM5 5h2V3H5v2zm16 16c1.1 0 2-.9 2-2h-2v2zm0-8h2v-2h-2v2zm-8 8h2v-2h-2v2zm4 0h2v-2h-2v2z');
var _elm_community$elm_material_icons$Material_Icons_Action$tab = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H3V5h10v4h8v10z');
var _elm_community$elm_material_icons$Material_Icons_Action$system_update_alt = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 16.5l4-4h-3v-9h-2v9H8l4 4zm9-13h-6v1.99h6v14.03H3V5.49h6V3.5H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2v-14c0-1.1-.9-2-2-2z');
var _elm_community$elm_material_icons$Material_Icons_Action$swap_vertical_circle = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM6.5 9L10 5.5 13.5 9H11v4H9V9H6.5zm11 6L14 18.5 10.5 15H13v-4h2v4h2.5z');
var _elm_community$elm_material_icons$Material_Icons_Action$swap_vert = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M16 17.01V10h-2v7.01h-3L15 21l4-3.99h-3zM9 3L5 6.99h3V14h2V6.99h3L9 3z');
var _elm_community$elm_material_icons$Material_Icons_Action$swap_horiz = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M6.99 11L3 15l3.99 4v-3H14v-2H6.99v-3zM21 9l-3.99-4v3H10v2h7.01v3L21 9z');
var _elm_community$elm_material_icons$Material_Icons_Action$supervisor_account = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M16.5 12c1.38 0 2.49-1.12 2.49-2.5S17.88 7 16.5 7C15.12 7 14 8.12 14 9.5s1.12 2.5 2.5 2.5zM9 11c1.66 0 2.99-1.34 2.99-3S10.66 5 9 5C7.34 5 6 6.34 6 8s1.34 3 3 3zm7.5 3c-1.83 0-5.5.92-5.5 2.75V19h11v-2.25c0-1.83-3.67-2.75-5.5-2.75zM9 13c-2.33 0-7 1.17-7 3.5V19h7v-2.25c0-.85.33-2.34 2.37-3.47C10.5 13.1 9.66 13 9 13z');
var _elm_community$elm_material_icons$Material_Icons_Action$subject = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M14 17H4v2h10v-2zm6-8H4v2h16V9zM4 15h16v-2H4v2zM4 5v2h16V5H4z');
var _elm_community$elm_material_icons$Material_Icons_Action$store = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 4H4v2h16V4zm1 10v-2l-1-5H4l-1 5v2h1v6h10v-6h4v6h2v-6h1zm-9 4H6v-4h6v4z');
var _elm_community$elm_material_icons$Material_Icons_Action$stars = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zm4.24 16L12 15.45 7.77 18l1.12-4.81-3.73-3.23 4.92-.42L12 5l1.92 4.53 4.92.42-3.73 3.23L16.23 18z');
var _elm_community$elm_material_icons$Material_Icons_Action$star_rate = F2(
	function (color, size) {
		var stringSize = _elm_lang$core$Basics$toString(size);
		var stringColor = _elm_community$elm_material_icons$Material_Icons_Internal$toRgbaString(color);
		return A2(
			_elm_lang$svg$Svg$svg,
			{
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$width(stringSize),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$height(stringSize),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$viewBox('0 0 18 18'),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$svg$Svg$path,
					{
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$d('M9 11.3l3.71 2.7-1.42-4.36L15 7h-4.55L9 2.5 7.55 7H3l3.71 2.64L5.29 14z'),
						_1: {
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$fill(stringColor),
							_1: {ctor: '[]'}
						}
					},
					{ctor: '[]'}),
				_1: {ctor: '[]'}
			});
	});
var _elm_community$elm_material_icons$Material_Icons_Action$spellcheck = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12.45 16h2.09L9.43 3H7.57L2.46 16h2.09l1.12-3h5.64l1.14 3zm-6.02-5L8.5 5.48 10.57 11H6.43zm15.16.59l-8.09 8.09L9.83 16l-1.41 1.41 5.09 5.09L23 13l-1.41-1.41z');
var _elm_community$elm_material_icons$Material_Icons_Action$speaker_notes = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM8 14H6v-2h2v2zm0-3H6V9h2v2zm0-3H6V6h2v2zm7 6h-5v-2h5v2zm3-3h-8V9h8v2zm0-3h-8V6h8v2z');
var _elm_community$elm_material_icons$Material_Icons_Action$shopping_cart = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zM1 2v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.14 0-.25-.11-.25-.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.58-6.49c.08-.14.12-.31.12-.48 0-.55-.45-1-1-1H5.21l-.94-2H1zm16 16c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2z');
var _elm_community$elm_material_icons$Material_Icons_Action$shopping_basket = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M17.21 9l-4.38-6.56c-.19-.28-.51-.42-.83-.42-.32 0-.64.14-.83.43L6.79 9H2c-.55 0-1 .45-1 1 0 .09.01.18.04.27l2.54 9.27c.23.84 1 1.46 1.92 1.46h13c.92 0 1.69-.62 1.93-1.46l2.54-9.27L23 10c0-.55-.45-1-1-1h-4.79zM9 9l3-4.4L15 9H9zm3 8c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z');
var _elm_community$elm_material_icons$Material_Icons_Action$shop_two = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M3 9H1v11c0 1.11.89 2 2 2h14c1.11 0 2-.89 2-2H3V9zm15-4V3c0-1.11-.89-2-2-2h-4c-1.11 0-2 .89-2 2v2H5v11c0 1.11.89 2 2 2h14c1.11 0 2-.89 2-2V5h-5zm-6-2h4v2h-4V3zm0 12V8l5.5 3-5.5 4z');
var _elm_community$elm_material_icons$Material_Icons_Action$shop = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M16 6V4c0-1.11-.89-2-2-2h-4c-1.11 0-2 .89-2 2v2H2v13c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6h-6zm-6-2h4v2h-4V4zM9 18V9l7.5 4L9 18z');
var _elm_community$elm_material_icons$Material_Icons_Action$settings_voice = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M7 24h2v-2H7v2zm5-11c1.66 0 2.99-1.34 2.99-3L15 4c0-1.66-1.34-3-3-3S9 2.34 9 4v6c0 1.66 1.34 3 3 3zm-1 11h2v-2h-2v2zm4 0h2v-2h-2v2zm4-14h-1.7c0 3-2.54 5.1-5.3 5.1S6.7 13 6.7 10H5c0 3.41 2.72 6.23 6 6.72V20h2v-3.28c3.28-.49 6-3.31 6-6.72z');
var _elm_community$elm_material_icons$Material_Icons_Action$settings_remote = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M15 9H9c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h6c.55 0 1-.45 1-1V10c0-.55-.45-1-1-1zm-3 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM7.05 6.05l1.41 1.41C9.37 6.56 10.62 6 12 6s2.63.56 3.54 1.46l1.41-1.41C15.68 4.78 13.93 4 12 4s-3.68.78-4.95 2.05zM12 0C8.96 0 6.21 1.23 4.22 3.22l1.41 1.41C7.26 3.01 9.51 2 12 2s4.74 1.01 6.36 2.64l1.41-1.41C17.79 1.23 15.04 0 12 0z');
var _elm_community$elm_material_icons$Material_Icons_Action$settings_power = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M7 24h2v-2H7v2zm4 0h2v-2h-2v2zm2-22h-2v10h2V2zm3.56 2.44l-1.45 1.45C16.84 6.94 18 8.83 18 11c0 3.31-2.69 6-6 6s-6-2.69-6-6c0-2.17 1.16-4.06 2.88-5.12L7.44 4.44C5.36 5.88 4 8.28 4 11c0 4.42 3.58 8 8 8s8-3.58 8-8c0-2.72-1.36-5.12-3.44-6.56zM15 24h2v-2h-2v2z');
var _elm_community$elm_material_icons$Material_Icons_Action$settings_phone = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M13 9h-2v2h2V9zm4 0h-2v2h2V9zm3 6.5c-1.25 0-2.45-.2-3.57-.57-.35-.11-.74-.03-1.02.24l-2.2 2.2c-2.83-1.44-5.15-3.75-6.59-6.58l2.2-2.21c.28-.27.36-.66.25-1.01C8.7 6.45 8.5 5.25 8.5 4c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1 0 9.39 7.61 17 17 17 .55 0 1-.45 1-1v-3.5c0-.55-.45-1-1-1zM19 9v2h2V9h-2z');
var _elm_community$elm_material_icons$Material_Icons_Action$settings_overscan = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12.01 5.5L10 8h4l-1.99-2.5zM18 10v4l2.5-1.99L18 10zM6 10l-2.5 2.01L6 14v-4zm8 6h-4l2.01 2.5L14 16zm7-13H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16.01H3V4.99h18v14.02z');
var _elm_community$elm_material_icons$Material_Icons_Action$settings_input_svideo = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M8 11.5c0-.83-.67-1.5-1.5-1.5S5 10.67 5 11.5 5.67 13 6.5 13 8 12.33 8 11.5zm7-5c0-.83-.67-1.5-1.5-1.5h-3C9.67 5 9 5.67 9 6.5S9.67 8 10.5 8h3c.83 0 1.5-.67 1.5-1.5zM8.5 15c-.83 0-1.5.67-1.5 1.5S7.67 18 8.5 18s1.5-.67 1.5-1.5S9.33 15 8.5 15zM12 1C5.93 1 1 5.93 1 12s4.93 11 11 11 11-4.93 11-11S18.07 1 12 1zm0 20c-4.96 0-9-4.04-9-9s4.04-9 9-9 9 4.04 9 9-4.04 9-9 9zm5.5-11c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-2 5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z');
var _elm_community$elm_material_icons$Material_Icons_Action$settings_input_hdmi = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M18 7V4c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v3H5v6l3 6v3h8v-3l3-6V7h-1zM8 4h8v3h-2V5h-1v2h-2V5h-1v2H8V4z');
var _elm_community$elm_material_icons$Material_Icons_Action$settings_input_composite = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M5 2c0-.55-.45-1-1-1s-1 .45-1 1v4H1v6h6V6H5V2zm4 14c0 1.3.84 2.4 2 2.82V23h2v-4.18c1.16-.41 2-1.51 2-2.82v-2H9v2zm-8 0c0 1.3.84 2.4 2 2.82V23h2v-4.18C6.16 18.4 7 17.3 7 16v-2H1v2zM21 6V2c0-.55-.45-1-1-1s-1 .45-1 1v4h-2v6h6V6h-2zm-8-4c0-.55-.45-1-1-1s-1 .45-1 1v4H9v6h6V6h-2V2zm4 14c0 1.3.84 2.4 2 2.82V23h2v-4.18c1.16-.41 2-1.51 2-2.82v-2h-6v2z');
var _elm_community$elm_material_icons$Material_Icons_Action$settings_input_component = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M5 2c0-.55-.45-1-1-1s-1 .45-1 1v4H1v6h6V6H5V2zm4 14c0 1.3.84 2.4 2 2.82V23h2v-4.18c1.16-.41 2-1.51 2-2.82v-2H9v2zm-8 0c0 1.3.84 2.4 2 2.82V23h2v-4.18C6.16 18.4 7 17.3 7 16v-2H1v2zM21 6V2c0-.55-.45-1-1-1s-1 .45-1 1v4h-2v6h6V6h-2zm-8-4c0-.55-.45-1-1-1s-1 .45-1 1v4H9v6h6V6h-2V2zm4 14c0 1.3.84 2.4 2 2.82V23h2v-4.18c1.16-.41 2-1.51 2-2.82v-2h-6v2z');
var _elm_community$elm_material_icons$Material_Icons_Action$settings_input_antenna = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 5c-3.87 0-7 3.13-7 7h2c0-2.76 2.24-5 5-5s5 2.24 5 5h2c0-3.87-3.13-7-7-7zm1 9.29c.88-.39 1.5-1.26 1.5-2.29 0-1.38-1.12-2.5-2.5-2.5S9.5 10.62 9.5 12c0 1.02.62 1.9 1.5 2.29v3.3L7.59 21 9 22.41l3-3 3 3L16.41 21 13 17.59v-3.3zM12 1C5.93 1 1 5.93 1 12h2c0-4.97 4.03-9 9-9s9 4.03 9 9h2c0-6.07-4.93-11-11-11z');
var _elm_community$elm_material_icons$Material_Icons_Action$settings_ethernet = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M7.77 6.76L6.23 5.48.82 12l5.41 6.52 1.54-1.28L3.42 12l4.35-5.24zM7 13h2v-2H7v2zm10-2h-2v2h2v-2zm-6 2h2v-2h-2v2zm6.77-7.52l-1.54 1.28L20.58 12l-4.35 5.24 1.54 1.28L23.18 12l-5.41-6.52z');
var _elm_community$elm_material_icons$Material_Icons_Action$settings_cell = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M7 24h2v-2H7v2zm4 0h2v-2h-2v2zm4 0h2v-2h-2v2zM16 .01L8 0C6.9 0 6 .9 6 2v16c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V2c0-1.1-.9-1.99-2-1.99zM16 16H8V4h8v12z');
var _elm_community$elm_material_icons$Material_Icons_Action$settings_brightness = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16.01H3V4.99h18v14.02zM8 16h2.5l1.5 1.5 1.5-1.5H16v-2.5l1.5-1.5-1.5-1.5V8h-2.5L12 6.5 10.5 8H8v2.5L6.5 12 8 13.5V16zm4-7c1.66 0 3 1.34 3 3s-1.34 3-3 3V9z');
var _elm_community$elm_material_icons$Material_Icons_Action$settings_bluetooth = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M11 24h2v-2h-2v2zm-4 0h2v-2H7v2zm8 0h2v-2h-2v2zm2.71-18.29L12 0h-1v7.59L6.41 3 5 4.41 10.59 10 5 15.59 6.41 17 11 12.41V20h1l5.71-5.71-4.3-4.29 4.3-4.29zM13 3.83l1.88 1.88L13 7.59V3.83zm1.88 10.46L13 16.17v-3.76l1.88 1.88z');
var _elm_community$elm_material_icons$Material_Icons_Action$settings_backup_restore = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M14 12c0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2 2-.9 2-2zm-2-9c-4.97 0-9 4.03-9 9H0l4 4 4-4H5c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.51 0-2.91-.49-4.06-1.3l-1.42 1.44C8.04 20.3 9.94 21 12 21c4.97 0 9-4.03 9-9s-4.03-9-9-9z');
var _elm_community$elm_material_icons$Material_Icons_Action$settings_application = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm7-7H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-1.75 9c0 .23-.02.46-.05.68l1.48 1.16c.13.11.17.3.08.45l-1.4 2.42c-.09.15-.27.21-.43.15l-1.74-.7c-.36.28-.76.51-1.18.69l-.26 1.85c-.03.17-.18.3-.35.3h-2.8c-.17 0-.32-.13-.35-.29l-.26-1.85c-.43-.18-.82-.41-1.18-.69l-1.74.7c-.16.06-.34 0-.43-.15l-1.4-2.42c-.09-.15-.05-.34.08-.45l1.48-1.16c-.03-.23-.05-.46-.05-.69 0-.23.02-.46.05-.68l-1.48-1.16c-.13-.11-.17-.3-.08-.45l1.4-2.42c.09-.15.27-.21.43-.15l1.74.7c.36-.28.76-.51 1.18-.69l.26-1.85c.03-.17.18-.3.35-.3h2.8c.17 0 .32.13.35.29l.26 1.85c.43.18.82.41 1.18.69l1.74-.7c.16-.06.34 0 .43.15l1.4 2.42c.09.15.05.34-.08.45l-1.48 1.16c.03.23.05.46.05.69z');
var _elm_community$elm_material_icons$Material_Icons_Action$settings = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19.43 12.98c.04-.32.07-.64.07-.98s-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.12-.22-.39-.3-.61-.22l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65C14.46 2.18 14.25 2 14 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.23-.09-.49 0-.61.22l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98s.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.12.22.39.3.61.22l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.23.09.49 0 .61-.22l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65zM12 15.5c-1.93 0-3.5-1.57-3.5-3.5s1.57-3.5 3.5-3.5 3.5 1.57 3.5 3.5-1.57 3.5-3.5 3.5z');
var _elm_community$elm_material_icons$Material_Icons_Action$search = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z');
var _elm_community$elm_material_icons$Material_Icons_Action$schedule = F2(
	function (color, size) {
		var stringSize = _elm_lang$core$Basics$toString(size);
		var stringColor = _elm_community$elm_material_icons$Material_Icons_Internal$toRgbaString(color);
		return A2(
			_elm_lang$svg$Svg$svg,
			{
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$width(stringSize),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$height(stringSize),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$viewBox('0 0 24 24'),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$svg$Svg$path,
					{
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$fillOpacity('.9'),
						_1: {
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$d('M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zM12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z'),
							_1: {
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$fill(stringColor),
								_1: {ctor: '[]'}
							}
						}
					},
					{ctor: '[]'}),
				_1: {ctor: '[]'}
			});
	});
var _elm_community$elm_material_icons$Material_Icons_Action$room = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z');
var _elm_community$elm_material_icons$Material_Icons_Action$restore = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M13 3c-4.97 0-9 4.03-9 9H1l3.89 3.89.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42C8.27 19.99 10.51 21 13 21c4.97 0 9-4.03 9-9s-4.03-9-9-9zm-1 5v5l4.28 2.54.72-1.21-3.5-2.08V8H12z');
var _elm_community$elm_material_icons$Material_Icons_Action$report_problem = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z');
var _elm_community$elm_material_icons$Material_Icons_Action$reorder = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M3 15h18v-2H3v2zm0 4h18v-2H3v2zm0-8h18V9H3v2zm0-6v2h18V5H3z');
var _elm_community$elm_material_icons$Material_Icons_Action$redeem = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 6h-2.18c.11-.31.18-.65.18-1 0-1.66-1.34-3-3-3-1.05 0-1.96.54-2.5 1.35l-.5.67-.5-.68C10.96 2.54 10.05 2 9 2 7.34 2 6 3.34 6 5c0 .35.07.69.18 1H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-5-2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM9 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm11 15H4v-2h16v2zm0-5H4V8h5.08L7 10.83 8.62 12 11 8.76l1-1.36 1 1.36L15.38 12 17 10.83 14.92 8H20v6z');
var _elm_community$elm_material_icons$Material_Icons_Action$receipt = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M18 17H6v-2h12v2zm0-4H6v-2h12v2zm0-4H6V7h12v2zM3 22l1.5-1.5L6 22l1.5-1.5L9 22l1.5-1.5L12 22l1.5-1.5L15 22l1.5-1.5L18 22l1.5-1.5L21 22V2l-1.5 1.5L18 2l-1.5 1.5L15 2l-1.5 1.5L12 2l-1.5 1.5L9 2 7.5 3.5 6 2 4.5 3.5 3 2v20z');
var _elm_community$elm_material_icons$Material_Icons_Action$question_answer = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M21 6h-2v9H6v2c0 .55.45 1 1 1h11l4 4V7c0-.55-.45-1-1-1zm-4 6V3c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v14l4-4h10c.55 0 1-.45 1-1z');
var _elm_community$elm_material_icons$Material_Icons_Action$query_builder = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zM12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z');
var _elm_community$elm_material_icons$Material_Icons_Action$print = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z');
var _elm_community$elm_material_icons$Material_Icons_Action$power_settings_new = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M13 3h-2v10h2V3zm4.83 2.17l-1.42 1.42C17.99 7.86 19 9.81 19 12c0 3.87-3.13 7-7 7s-7-3.13-7-7c0-2.19 1.01-4.14 2.58-5.42L6.17 5.17C4.23 6.82 3 9.26 3 12c0 4.97 4.03 9 9 9s9-4.03 9-9c0-2.74-1.23-5.18-3.17-6.83z');
var _elm_community$elm_material_icons$Material_Icons_Action$polymer = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 4h-4L7.11 16.63 4.5 12 9 4H5L.5 12 5 20h4l7.89-12.63L19.5 12 15 20h4l4.5-8z');
var _elm_community$elm_material_icons$Material_Icons_Action$play_for_work = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M11 5v5.59H7.5l4.5 4.5 4.5-4.5H13V5h-2zm-5 9c0 3.31 2.69 6 6 6s6-2.69 6-6h-2c0 2.21-1.79 4-4 4s-4-1.79-4-4H6z');
var _elm_community$elm_material_icons$Material_Icons_Action$picture_in_picture = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 7h-8v6h8V7zm2-4H3c-1.1 0-2 .9-2 2v14c0 1.1.9 1.98 2 1.98h18c1.1 0 2-.88 2-1.98V5c0-1.1-.9-2-2-2zm0 16.01H3V4.98h18v14.03z');
var _elm_community$elm_material_icons$Material_Icons_Action$perm_scan_wifi = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 3C6.95 3 3.15 4.85 0 7.23L12 22 24 7.25C20.85 4.87 17.05 3 12 3zm1 13h-2v-6h2v6zm-2-8V6h2v2h-2z');
var _elm_community$elm_material_icons$Material_Icons_Action$perm_phone_msg = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 15.5c-1.25 0-2.45-.2-3.57-.57-.35-.11-.74-.03-1.02.24l-2.2 2.2c-2.83-1.44-5.15-3.75-6.59-6.58l2.2-2.21c.28-.27.36-.66.25-1.01C8.7 6.45 8.5 5.25 8.5 4c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1 0 9.39 7.61 17 17 17 .55 0 1-.45 1-1v-3.5c0-.55-.45-1-1-1zM12 3v10l3-3h6V3h-9z');
var _elm_community$elm_material_icons$Material_Icons_Action$perm_media = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M2 6H0v5h.01L0 20c0 1.1.9 2 2 2h18v-2H2V6zm20-2h-8l-2-2H6c-1.1 0-1.99.9-1.99 2L4 16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zM7 15l4.5-6 3.5 4.51 2.5-3.01L21 15H7z');
var _elm_community$elm_material_icons$Material_Icons_Action$perm_identity = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 5.9c1.16 0 2.1.94 2.1 2.1s-.94 2.1-2.1 2.1S9.9 9.16 9.9 8s.94-2.1 2.1-2.1m0 9c2.97 0 6.1 1.46 6.1 2.1v1.1H5.9V17c0-.64 3.13-2.1 6.1-2.1M12 4C9.79 4 8 5.79 8 8s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 9c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4z');
var _elm_community$elm_material_icons$Material_Icons_Action$perm_device_information = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M13 7h-2v2h2V7zm0 4h-2v6h2v-6zm4-9.99L7 1c-1.1 0-2 .9-2 2v18c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-1.99-2-1.99zM17 19H7V5h10v14z');
var _elm_community$elm_material_icons$Material_Icons_Action$perm_data_setting = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M18.99 11.5c.34 0 .67.03 1 .07L20 0 0 20h11.56c-.04-.33-.07-.66-.07-1 0-4.14 3.36-7.5 7.5-7.5zm3.71 7.99c.02-.16.04-.32.04-.49 0-.17-.01-.33-.04-.49l1.06-.83c.09-.08.12-.21.06-.32l-1-1.73c-.06-.11-.19-.15-.31-.11l-1.24.5c-.26-.2-.54-.37-.85-.49l-.19-1.32c-.01-.12-.12-.21-.24-.21h-2c-.12 0-.23.09-.25.21l-.19 1.32c-.3.13-.59.29-.85.49l-1.24-.5c-.11-.04-.24 0-.31.11l-1 1.73c-.06.11-.04.24.06.32l1.06.83c-.02.16-.03.32-.03.49 0 .17.01.33.03.49l-1.06.83c-.09.08-.12.21-.06.32l1 1.73c.06.11.19.15.31.11l1.24-.5c.26.2.54.37.85.49l.19 1.32c.02.12.12.21.25.21h2c.12 0 .23-.09.25-.21l.19-1.32c.3-.13.59-.29.84-.49l1.25.5c.11.04.24 0 .31-.11l1-1.73c.06-.11.03-.24-.06-.32l-1.07-.83zm-3.71 1.01c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z');
var _elm_community$elm_material_icons$Material_Icons_Action$perm_contact_calendar = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm6 12H6v-1c0-2 4-3.1 6-3.1s6 1.1 6 3.1v1z');
var _elm_community$elm_material_icons$Material_Icons_Action$perm_camera_mic = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 5h-3.17L15 3H9L7.17 5H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h7v-2.09c-2.83-.48-5-2.94-5-5.91h2c0 2.21 1.79 4 4 4s4-1.79 4-4h2c0 2.97-2.17 5.43-5 5.91V21h7c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm-6 8c0 1.1-.9 2-2 2s-2-.9-2-2V9c0-1.1.9-2 2-2s2 .9 2 2v4z');
var _elm_community$elm_material_icons$Material_Icons_Action$payment = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 4H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zm0 14H4v-6h16v6zm0-10H4V6h16v2z');
var _elm_community$elm_material_icons$Material_Icons_Action$pageview = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M11.5 9C10.12 9 9 10.12 9 11.5s1.12 2.5 2.5 2.5 2.5-1.12 2.5-2.5S12.88 9 11.5 9zM20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-3.21 14.21l-2.91-2.91c-.69.44-1.51.7-2.39.7C9.01 16 7 13.99 7 11.5S9.01 7 11.5 7 16 9.01 16 11.5c0 .88-.26 1.69-.7 2.39l2.91 2.9-1.42 1.42z');
var _elm_community$elm_material_icons$Material_Icons_Action$open_with = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M10 9h4V6h3l-5-5-5 5h3v3zm-1 1H6V7l-5 5 5 5v-3h3v-4zm14 2l-5-5v3h-3v4h3v3l5-5zm-9 3h-4v3H7l5 5 5-5h-3v-3z');
var _elm_community$elm_material_icons$Material_Icons_Action$open_in_new = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z');
var _elm_community$elm_material_icons$Material_Icons_Action$open_in_browser = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 4H5c-1.11 0-2 .9-2 2v12c0 1.1.89 2 2 2h4v-2H5V8h14v10h-4v2h4c1.1 0 2-.9 2-2V6c0-1.1-.89-2-2-2zm-7 6l-4 4h3v6h2v-6h3l-4-4z');
var _elm_community$elm_material_icons$Material_Icons_Action$offline_pin = F2(
	function (color, size) {
		var stringSize = _elm_lang$core$Basics$toString(size);
		var stringColor = _elm_community$elm_material_icons$Material_Icons_Internal$toRgbaString(color);
		return A2(
			_elm_lang$svg$Svg$svg,
			{
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$width(stringSize),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$height(stringSize),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$viewBox('0 0 24 24'),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$svg$Svg$defs,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$svg$Svg$path,
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$id('a'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$d('M0 0h24v24H0V0z'),
									_1: {ctor: '[]'}
								}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A3(
						_elm_lang$virtual_dom$VirtualDom$node,
						'clipPath',
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$id('b'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$svg$Svg$use,
								{
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$xlinkHref('#a'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$overflow('visible'),
										_1: {ctor: '[]'}
									}
								},
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$svg$Svg$path,
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$d('M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2zm5 16H7v-2h10v2zm-6.7-4L7 10.7l1.4-1.4 1.9 1.9 5.3-5.3L17 7.3 10.3 14z'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$clipPath('url(#b)'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$fill(stringColor),
										_1: {ctor: '[]'}
									}
								}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}
				}
			});
	});
var _elm_community$elm_material_icons$Material_Icons_Action$note_add = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 14h-3v3h-2v-3H8v-2h3v-3h2v3h3v2zm-3-7V3.5L18.5 9H13z');
var _elm_community$elm_material_icons$Material_Icons_Action$markunread_mailbox = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 6H10v6H8V4h6V0H6v6H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2z');
var _elm_community$elm_material_icons$Material_Icons_Action$loyalty = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7zm11.77 8.27L13 19.54l-4.27-4.27C8.28 14.81 8 14.19 8 13.5c0-1.38 1.12-2.5 2.5-2.5.69 0 1.32.28 1.77.74l.73.72.73-.73c.45-.45 1.08-.73 1.77-.73 1.38 0 2.5 1.12 2.5 2.5 0 .69-.28 1.32-.73 1.77z');
var _elm_community$elm_material_icons$Material_Icons_Action$lock_outline = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6-5.1c1.71 0 3.1 1.39 3.1 3.1v2H9V6h-.1c0-1.71 1.39-3.1 3.1-3.1zM18 20H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z');
var _elm_community$elm_material_icons$Material_Icons_Action$lock_open = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 17c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm6-9h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6h1.9c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm0 12H6V10h12v10z');
var _elm_community$elm_material_icons$Material_Icons_Action$lock = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z');
var _elm_community$elm_material_icons$Material_Icons_Action$list = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm4 4h14v-2H7v2zm0 4h14v-2H7v2zM7 7v2h14V7H7z');
var _elm_community$elm_material_icons$Material_Icons_Action$launch = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z');
var _elm_community$elm_material_icons$Material_Icons_Action$language = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zm6.93 6h-2.95c-.32-1.25-.78-2.45-1.38-3.56 1.84.63 3.37 1.91 4.33 3.56zM12 4.04c.83 1.2 1.48 2.53 1.91 3.96h-3.82c.43-1.43 1.08-2.76 1.91-3.96zM4.26 14C4.1 13.36 4 12.69 4 12s.1-1.36.26-2h3.38c-.08.66-.14 1.32-.14 2 0 .68.06 1.34.14 2H4.26zm.82 2h2.95c.32 1.25.78 2.45 1.38 3.56-1.84-.63-3.37-1.9-4.33-3.56zm2.95-8H5.08c.96-1.66 2.49-2.93 4.33-3.56C8.81 5.55 8.35 6.75 8.03 8zM12 19.96c-.83-1.2-1.48-2.53-1.91-3.96h3.82c-.43 1.43-1.08 2.76-1.91 3.96zM14.34 14H9.66c-.09-.66-.16-1.32-.16-2 0-.68.07-1.35.16-2h4.68c.09.65.16 1.32.16 2 0 .68-.07 1.34-.16 2zm.25 5.56c.6-1.11 1.06-2.31 1.38-3.56h2.95c-.96 1.65-2.49 2.93-4.33 3.56zM16.36 14c.08-.66.14-1.32.14-2 0-.68-.06-1.34-.14-2h3.38c.16.64.26 1.31.26 2s-.1 1.36-.26 2h-3.38z');
var _elm_community$elm_material_icons$Material_Icons_Action$label_outline = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M17.63 5.84C17.27 5.33 16.67 5 16 5L5 5.01C3.9 5.01 3 5.9 3 7v10c0 1.1.9 1.99 2 1.99L16 19c.67 0 1.27-.33 1.63-.84L22 12l-4.37-6.16zM16 17H5V7h11l3.55 5L16 17z');
var _elm_community$elm_material_icons$Material_Icons_Action$label = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M17.63 5.84C17.27 5.33 16.67 5 16 5L5 5.01C3.9 5.01 3 5.9 3 7v10c0 1.1.9 1.99 2 1.99L16 19c.67 0 1.27-.33 1.63-.84L22 12l-4.37-6.16z');
var _elm_community$elm_material_icons$Material_Icons_Action$invert_colors = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M17.66 7.93L12 2.27 6.34 7.93c-3.12 3.12-3.12 8.19 0 11.31C7.9 20.8 9.95 21.58 12 21.58c2.05 0 4.1-.78 5.66-2.34 3.12-3.12 3.12-8.19 0-11.31zM12 19.59c-1.6 0-3.11-.62-4.24-1.76C6.62 16.69 6 15.19 6 13.59s.62-3.11 1.76-4.24L12 5.1v14.49z');
var _elm_community$elm_material_icons$Material_Icons_Action$input = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M21 3.01H3c-1.1 0-2 .9-2 2V9h2V4.99h18v14.03H3V15H1v4.01c0 1.1.9 1.98 2 1.98h18c1.1 0 2-.88 2-1.98v-14c0-1.11-.9-2-2-2zM11 16l4-4-4-4v3H1v2h10v3z');
var _elm_community$elm_material_icons$Material_Icons_Action$info_outline = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M11 17h2v-6h-2v6zm1-15C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zM11 9h2V7h-2v2z');
var _elm_community$elm_material_icons$Material_Icons_Action$info = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z');
var _elm_community$elm_material_icons$Material_Icons_Action$https = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z');
var _elm_community$elm_material_icons$Material_Icons_Action$http = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M4.5 11h-2V9H1v6h1.5v-2.5h2V15H6V9H4.5v2zm2.5-.5h1.5V15H10v-4.5h1.5V9H7v1.5zm5.5 0H14V15h1.5v-4.5H17V9h-4.5v1.5zm9-1.5H18v6h1.5v-2h2c.8 0 1.5-.7 1.5-1.5v-1c0-.8-.7-1.5-1.5-1.5zm0 2.5h-2v-1h2v1z');
var _elm_community$elm_material_icons$Material_Icons_Action$hourglass_full = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M6 2v6h.01L6 8.01 10 12l-4 4 .01.01H6V22h12v-5.99h-.01L18 16l-4-4 4-3.99-.01-.01H18V2H6z');
var _elm_community$elm_material_icons$Material_Icons_Action$hourglass_empty = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M6 2v6h.01L6 8.01 10 12l-4 4 .01.01H6V22h12v-5.99h-.01L18 16l-4-4 4-3.99-.01-.01H18V2H6zm10 14.5V20H8v-3.5l4-4 4 4zm-4-5l-4-4V4h8v3.5l-4 4z');
var _elm_community$elm_material_icons$Material_Icons_Action$home = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z');
var _elm_community$elm_material_icons$Material_Icons_Action$history = F2(
	function (color, size) {
		var stringSize = _elm_lang$core$Basics$toString(size);
		var stringColor = _elm_community$elm_material_icons$Material_Icons_Internal$toRgbaString(color);
		return A2(
			_elm_lang$svg$Svg$svg,
			{
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$width(stringSize),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$height(stringSize),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$viewBox('0 0 24 24'),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$svg$Svg$path,
					{
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$opacity('.9'),
						_1: {
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$d('M13 3c-4.97 0-9 4.03-9 9H1l3.89 3.89.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42C8.27 19.99 10.51 21 13 21c4.97 0 9-4.03 9-9s-4.03-9-9-9zm-1 5v5l4.28 2.54.72-1.21-3.5-2.08V8H12z'),
							_1: {
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$fill(stringColor),
								_1: {ctor: '[]'}
							}
						}
					},
					{ctor: '[]'}),
				_1: {ctor: '[]'}
			});
	});
var _elm_community$elm_material_icons$Material_Icons_Action$highlight_off = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z');
var _elm_community$elm_material_icons$Material_Icons_Action$help_outline = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z');
var _elm_community$elm_material_icons$Material_Icons_Action$help = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 17h-2v-2h2v2zm2.07-7.75l-.9.92C13.45 12.9 13 13.5 13 15h-2v-.5c0-1.1.45-2.1 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2s-2 .9-2 2H8c0-2.21 1.79-4 4-4s4 1.79 4 4c0 .88-.36 1.68-.93 2.25z');
var _elm_community$elm_material_icons$Material_Icons_Action$group_work = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM8 17.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5zM9.5 8c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5S9.5 9.38 9.5 8zm6.5 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z');
var _elm_community$elm_material_icons$Material_Icons_Action$grade = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z');
var _elm_community$elm_material_icons$Material_Icons_Action$gif = F2(
	function (color, size) {
		var stringSize = _elm_lang$core$Basics$toString(size);
		var stringColor = _elm_community$elm_material_icons$Material_Icons_Internal$toRgbaString(color);
		return A2(
			_elm_lang$svg$Svg$svg,
			{
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$width(stringSize),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$height(stringSize),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$viewBox('0 0 24 24'),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$svg$Svg$defs,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$svg$Svg$path,
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$id('a'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$d('M24 24H0V0h24v24z'),
									_1: {ctor: '[]'}
								}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A3(
						_elm_lang$virtual_dom$VirtualDom$node,
						'clipPath',
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$id('b'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$svg$Svg$use,
								{
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$xlinkHref('#a'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$overflow('visible'),
										_1: {ctor: '[]'}
									}
								},
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$svg$Svg$path,
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$d('M11.5 9H13v6h-1.5zM9 9H6c-.6 0-1 .5-1 1v4c0 .5.4 1 1 1h3c.6 0 1-.5 1-1v-2H8.5v1.5h-2v-3H10V10c0-.5-.4-1-1-1zm10 1.5V9h-4.5v6H16v-2h2v-1.5h-2v-1z'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$clipPath('url(#b)'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$fill(stringColor),
										_1: {ctor: '[]'}
									}
								}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}
				}
			});
	});
var _elm_community$elm_material_icons$Material_Icons_Action$get_app = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z');
var _elm_community$elm_material_icons$Material_Icons_Action$flip_to_front = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M3 13h2v-2H3v2zm0 4h2v-2H3v2zm2 4v-2H3c0 1.1.89 2 2 2zM3 9h2V7H3v2zm12 12h2v-2h-2v2zm4-18H9c-1.11 0-2 .9-2 2v10c0 1.1.89 2 2 2h10c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 12H9V5h10v10zm-8 6h2v-2h-2v2zm-4 0h2v-2H7v2z');
var _elm_community$elm_material_icons$Material_Icons_Action$flip_to_back = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M9 7H7v2h2V7zm0 4H7v2h2v-2zm0-8c-1.11 0-2 .9-2 2h2V3zm4 12h-2v2h2v-2zm6-12v2h2c0-1.1-.9-2-2-2zm-6 0h-2v2h2V3zM9 17v-2H7c0 1.1.89 2 2 2zm10-4h2v-2h-2v2zm0-4h2V7h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zM5 7H3v12c0 1.1.89 2 2 2h12v-2H5V7zm10-2h2V3h-2v2zm0 12h2v-2h-2v2z');
var _elm_community$elm_material_icons$Material_Icons_Action$flight_takeoff = F2(
	function (color, size) {
		var stringSize = _elm_lang$core$Basics$toString(size);
		var stringColor = _elm_community$elm_material_icons$Material_Icons_Internal$toRgbaString(color);
		return A2(
			_elm_lang$svg$Svg$svg,
			{
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$width(stringSize),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$height(stringSize),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$viewBox('0 0 24 24'),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$svg$Svg$defs,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$svg$Svg$path,
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$id('a'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$d('M0 0h24v24H0V0z'),
									_1: {ctor: '[]'}
								}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A3(
						_elm_lang$virtual_dom$VirtualDom$node,
						'clipPath',
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$id('b'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$svg$Svg$use,
								{
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$xlinkHref('#a'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$overflow('visible'),
										_1: {ctor: '[]'}
									}
								},
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$svg$Svg$path,
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$d('M2.5 19h19v2h-19zm19.57-9.36c-.21-.8-1.04-1.28-1.84-1.06L14.92 10l-6.9-6.43-1.93.51 4.14 7.17-4.97 1.33-1.97-1.54-1.45.39 1.82 3.16.77 1.33 1.6-.43 5.31-1.42 4.35-1.16L21 11.49c.81-.23 1.28-1.05 1.07-1.85z'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$clipPath('url(#b)'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$fill(stringColor),
										_1: {ctor: '[]'}
									}
								}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}
				}
			});
	});
var _elm_community$elm_material_icons$Material_Icons_Action$flight_land = F2(
	function (color, size) {
		var stringSize = _elm_lang$core$Basics$toString(size);
		var stringColor = _elm_community$elm_material_icons$Material_Icons_Internal$toRgbaString(color);
		return A2(
			_elm_lang$svg$Svg$svg,
			{
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$width(stringSize),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$height(stringSize),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$viewBox('0 0 24 24'),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$svg$Svg$defs,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$svg$Svg$path,
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$id('a'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$d('M0 0h24v24H0V0z'),
									_1: {ctor: '[]'}
								}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$svg$Svg$defs,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$svg$Svg$path,
								{
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$id('c'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$d('M0 0h24v24H0V0z'),
										_1: {ctor: '[]'}
									}
								},
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A3(
							_elm_lang$virtual_dom$VirtualDom$node,
							'clipPath',
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$id('b'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$svg$Svg$use,
									{
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$xlinkHref('#a'),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$overflow('visible'),
											_1: {ctor: '[]'}
										}
									},
									{ctor: '[]'}),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A3(
								_elm_lang$virtual_dom$VirtualDom$node,
								'clipPath',
								{
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$id('d'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$clipPath('url(#b)'),
										_1: {ctor: '[]'}
									}
								},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$svg$Svg$use,
										{
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$xlinkHref('#c'),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$overflow('visible'),
												_1: {ctor: '[]'}
											}
										},
										{ctor: '[]'}),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$svg$Svg$path,
									{
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$d('M2.5 19h19v2h-19zm7.18-5.73l4.35 1.16 5.31 1.42c.8.21 1.62-.26 1.84-1.06.21-.8-.26-1.62-1.06-1.84l-5.31-1.42-2.76-9.02L10.12 2v8.28L5.15 8.95l-.93-2.32-1.45-.39v5.17l1.6.43 5.31 1.43z'),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$clipPath('url(#d)'),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$fill(stringColor),
												_1: {ctor: '[]'}
											}
										}
									},
									{ctor: '[]'}),
								_1: {ctor: '[]'}
							}
						}
					}
				}
			});
	});
var _elm_community$elm_material_icons$Material_Icons_Action$find_replace = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M11 6c1.38 0 2.63.56 3.54 1.46L12 10h6V4l-2.05 2.05C14.68 4.78 12.93 4 11 4c-3.53 0-6.43 2.61-6.92 6H6.1c.46-2.28 2.48-4 4.9-4zm5.64 9.14c.66-.9 1.12-1.97 1.28-3.14H15.9c-.46 2.28-2.48 4-4.9 4-1.38 0-2.63-.56-3.54-1.46L10 12H4v6l2.05-2.05C7.32 17.22 9.07 18 11 18c1.55 0 2.98-.51 4.14-1.36L20 21.49 21.49 20l-4.85-4.86z');
var _elm_community$elm_material_icons$Material_Icons_Action$find_in_page = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 19.59V8l-6-6H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c.45 0 .85-.15 1.19-.4l-4.43-4.43c-.8.52-1.74.83-2.76.83-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5c0 1.02-.31 1.96-.83 2.75L20 19.59zM9 13c0 1.66 1.34 3 3 3s3-1.34 3-3-1.34-3-3-3-3 1.34-3 3z');
var _elm_community$elm_material_icons$Material_Icons_Action$feedback = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-7 12h-2v-2h2v2zm0-4h-2V6h2v4z');
var _elm_community$elm_material_icons$Material_Icons_Action$favorite_border = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z');
var _elm_community$elm_material_icons$Material_Icons_Action$favorite = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z');
var _elm_community$elm_material_icons$Material_Icons_Action$face = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M9 11.75c-.69 0-1.25.56-1.25 1.25s.56 1.25 1.25 1.25 1.25-.56 1.25-1.25-.56-1.25-1.25-1.25zm6 0c-.69 0-1.25.56-1.25 1.25s.56 1.25 1.25 1.25 1.25-.56 1.25-1.25-.56-1.25-1.25-1.25zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8 0-.29.02-.58.05-.86 2.36-1.05 4.23-2.98 5.21-5.37C11.07 8.33 14.05 10 17.42 10c.78 0 1.53-.09 2.25-.26.21.71.33 1.47.33 2.26 0 4.41-3.59 8-8 8z');
var _elm_community$elm_material_icons$Material_Icons_Action$extension = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20.5 11H19V7c0-1.1-.9-2-2-2h-4V3.5C13 2.12 11.88 1 10.5 1S8 2.12 8 3.5V5H4c-1.1 0-1.99.9-1.99 2v3.8H3.5c1.49 0 2.7 1.21 2.7 2.7s-1.21 2.7-2.7 2.7H2V20c0 1.1.9 2 2 2h3.8v-1.5c0-1.49 1.21-2.7 2.7-2.7 1.49 0 2.7 1.21 2.7 2.7V22H17c1.1 0 2-.9 2-2v-4h1.5c1.38 0 2.5-1.12 2.5-2.5S21.88 11 20.5 11z');
var _elm_community$elm_material_icons$Material_Icons_Action$explore = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 10.9c-.61 0-1.1.49-1.1 1.1s.49 1.1 1.1 1.1c.61 0 1.1-.49 1.1-1.1s-.49-1.1-1.1-1.1zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm2.19 12.19L6 18l3.81-8.19L18 6l-3.81 8.19z');
var _elm_community$elm_material_icons$Material_Icons_Action$exit_to_app = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M10.09 15.59L11.5 17l5-5-5-5-1.41 1.41L12.67 11H3v2h9.67l-2.58 2.59zM19 3H5c-1.11 0-2 .9-2 2v4h2V5h14v14H5v-4H3v4c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z');
var _elm_community$elm_material_icons$Material_Icons_Action$event_seat = F2(
	function (color, size) {
		var stringColor = _elm_community$elm_material_icons$Material_Icons_Internal$toRgbaString(color);
		var stringSize = _elm_lang$core$Basics$toString(size);
		return A2(
			_elm_lang$svg$Svg$svg,
			{
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$width(stringSize),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$height(stringSize),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$viewBox('0 0 24 24'),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$svg$Svg$defs,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$svg$Svg$path,
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$id('a'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$d('M0 0h24v24H0V0z'),
									_1: {ctor: '[]'}
								}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A3(
						_elm_lang$virtual_dom$VirtualDom$node,
						'clipPath',
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$id('b'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$svg$Svg$use,
								{
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$xlinkHref('#a'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$overflow('visible'),
										_1: {ctor: '[]'}
									}
								},
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$svg$Svg$path,
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$d('M4 18v3h3v-3h10v3h3v-6H4zm15-8h3v3h-3zM2 10h3v3H2zm15 3H7V5c0-1.1.9-2 2-2h6c1.1 0 2 .9 2 2v8z'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$clipPath('url(#b)'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$fill(stringColor),
										_1: {ctor: '[]'}
									}
								}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}
				}
			});
	});
var _elm_community$elm_material_icons$Material_Icons_Action$event = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z');
var _elm_community$elm_material_icons$Material_Icons_Action$eject = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M5 17h14v2H5zm7-12L5.33 15h13.34z');
var _elm_community$elm_material_icons$Material_Icons_Action$done_all = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M18 7l-1.41-1.41-6.34 6.34 1.41 1.41L18 7zm4.24-1.41L11.66 16.17 7.48 12l-1.41 1.41L11.66 19l12-12-1.42-1.41zM.41 13.41L6 19l1.41-1.41L1.83 12 .41 13.41z');
var _elm_community$elm_material_icons$Material_Icons_Action$done = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z');
var _elm_community$elm_material_icons$Material_Icons_Action$dns = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 13H4c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h16c.55 0 1-.45 1-1v-6c0-.55-.45-1-1-1zM7 19c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM20 3H4c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h16c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1zM7 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z');
var _elm_community$elm_material_icons$Material_Icons_Action$description = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z');
var _elm_community$elm_material_icons$Material_Icons_Action$delete = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z');
var _elm_community$elm_material_icons$Material_Icons_Action$dashboard = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M3 13h8V3H3v10zm0 8h8v-6H3v6zm10 0h8V11h-8v10zm0-18v6h8V3h-8z');
var _elm_community$elm_material_icons$Material_Icons_Action$credit_card = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 4H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zm0 14H4v-6h16v6zm0-10H4V6h16v2z');
var _elm_community$elm_material_icons$Material_Icons_Action$code = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z');
var _elm_community$elm_material_icons$Material_Icons_Action$class = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M18 2H6c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 4h5v8l-2.5-1.5L6 12V4z');
var _elm_community$elm_material_icons$Material_Icons_Action$chrome_reader_mode = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M13 12h7v1.5h-7zm0-2.5h7V11h-7zm0 5h7V16h-7zM21 4H3c-1.1 0-2 .9-2 2v13c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 15h-9V6h9v13z');
var _elm_community$elm_material_icons$Material_Icons_Action$check_circle = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z');
var _elm_community$elm_material_icons$Material_Icons_Action$change_history = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 7.77L18.39 18H5.61L12 7.77M12 4L2 20h20L12 4z');
var _elm_community$elm_material_icons$Material_Icons_Action$card_travel = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 6h-3V4c0-1.11-.89-2-2-2H9c-1.11 0-2 .89-2 2v2H4c-1.11 0-2 .89-2 2v11c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zM9 4h6v2H9V4zm11 15H4v-2h16v2zm0-5H4V8h3v2h2V8h6v2h2V8h3v6z');
var _elm_community$elm_material_icons$Material_Icons_Action$card_membership = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 2H4c-1.11 0-2 .89-2 2v11c0 1.11.89 2 2 2h4v5l4-2 4 2v-5h4c1.11 0 2-.89 2-2V4c0-1.11-.89-2-2-2zm0 13H4v-2h16v2zm0-5H4V4h16v6z');
var _elm_community$elm_material_icons$Material_Icons_Action$card_giftcard = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 6h-2.18c.11-.31.18-.65.18-1 0-1.66-1.34-3-3-3-1.05 0-1.96.54-2.5 1.35l-.5.67-.5-.68C10.96 2.54 10.05 2 9 2 7.34 2 6 3.34 6 5c0 .35.07.69.18 1H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-5-2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM9 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm11 15H4v-2h16v2zm0-5H4V8h5.08L7 10.83 8.62 12 11 8.76l1-1.36 1 1.36L15.38 12 17 10.83 14.92 8H20v6z');
var _elm_community$elm_material_icons$Material_Icons_Action$camera_enhance = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M9 3L7.17 5H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2h-3.17L15 3H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zM12 17l1.25-2.75L16 13l-2.75-1.25L12 9l-1.25 2.75L8 13l2.75 1.25z');
var _elm_community$elm_material_icons$Material_Icons_Action$cached = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 8l-4 4h3c0 3.31-2.69 6-6 6-1.01 0-1.97-.25-2.8-.7l-1.46 1.46C8.97 19.54 10.43 20 12 20c4.42 0 8-3.58 8-8h3l-4-4zM6 12c0-3.31 2.69-6 6-6 1.01 0 1.97.25 2.8.7l1.46-1.46C15.03 4.46 13.57 4 12 4c-4.42 0-8 3.58-8 8H1l4 4 4-4H6z');
var _elm_community$elm_material_icons$Material_Icons_Action$build = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M22.7 19l-9.1-9.1c.9-2.3.4-5-1.5-6.9-2-2-5-2.4-7.4-1.3L9 6 6 9 1.6 4.7C.4 7.1.9 10.1 2.9 12.1c1.9 1.9 4.6 2.4 6.9 1.5l9.1 9.1c.4.4 1 .4 1.4 0l2.3-2.3c.5-.4.5-1.1.1-1.4z');
var _elm_community$elm_material_icons$Material_Icons_Action$bug_report = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 8h-2.81c-.45-.78-1.07-1.45-1.82-1.96L17 4.41 15.59 3l-2.17 2.17C12.96 5.06 12.49 5 12 5c-.49 0-.96.06-1.41.17L8.41 3 7 4.41l1.62 1.63C7.88 6.55 7.26 7.22 6.81 8H4v2h2.09c-.05.33-.09.66-.09 1v1H4v2h2v1c0 .34.04.67.09 1H4v2h2.81c1.04 1.79 2.97 3 5.19 3s4.15-1.21 5.19-3H20v-2h-2.09c.05-.33.09-.66.09-1v-1h2v-2h-2v-1c0-.34-.04-.67-.09-1H20V8zm-6 8h-4v-2h4v2zm0-4h-4v-2h4v2z');
var _elm_community$elm_material_icons$Material_Icons_Action$bookmark_border = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2zm0 15l-5-2.18L7 18V5h10v13z');
var _elm_community$elm_material_icons$Material_Icons_Action$bookmark = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2z');
var _elm_community$elm_material_icons$Material_Icons_Action$book = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M18 2H6c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 4h5v8l-2.5-1.5L6 12V4z');
var _elm_community$elm_material_icons$Material_Icons_Action$backup = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z');
var _elm_community$elm_material_icons$Material_Icons_Action$autorenew = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 6v3l4-4-4-4v3c-4.42 0-8 3.58-8 8 0 1.57.46 3.03 1.24 4.26L6.7 14.8c-.45-.83-.7-1.79-.7-2.8 0-3.31 2.69-6 6-6zm6.76 1.74L17.3 9.2c.44.84.7 1.79.7 2.8 0 3.31-2.69 6-6 6v-3l-4 4 4 4v-3c4.42 0 8-3.58 8-8 0-1.57-.46-3.03-1.24-4.26z');
var _elm_community$elm_material_icons$Material_Icons_Action$assignment_turned_in = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm-2 14l-4-4 1.41-1.41L10 14.17l6.59-6.59L18 9l-8 8z');
var _elm_community$elm_material_icons$Material_Icons_Action$assignment_returned = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm0 15l-5-5h3V9h4v4h3l-5 5z');
var _elm_community$elm_material_icons$Material_Icons_Action$assignment_return = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm4 12h-4v3l-5-5 5-5v3h4v4z');
var _elm_community$elm_material_icons$Material_Icons_Action$assignment_late = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-6 15h-2v-2h2v2zm0-4h-2V8h2v6zm-1-9c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z');
var _elm_community$elm_material_icons$Material_Icons_Action$assignment_ind = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm0 4c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm6 12H6v-1.4c0-2 4-3.1 6-3.1s6 1.1 6 3.1V19z');
var _elm_community$elm_material_icons$Material_Icons_Action$assignment = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm2 14H7v-2h7v2zm3-4H7v-2h10v2zm0-4H7V7h10v2z');
var _elm_community$elm_material_icons$Material_Icons_Action$assessment = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z');
var _elm_community$elm_material_icons$Material_Icons_Action$aspect_ratio = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 12h-2v3h-3v2h5v-5zM7 9h3V7H5v5h2V9zm14-6H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16.01H3V4.99h18v14.02z');
var _elm_community$elm_material_icons$Material_Icons_Action$announcement = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-7 9h-2V5h2v6zm0 4h-2v-2h2v2z');
var _elm_community$elm_material_icons$Material_Icons_Action$android = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M6 18c0 .55.45 1 1 1h1v3.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5V19h2v3.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5V19h1c.55 0 1-.45 1-1V8H6v10zM3.5 8C2.67 8 2 8.67 2 9.5v7c0 .83.67 1.5 1.5 1.5S5 17.33 5 16.5v-7C5 8.67 4.33 8 3.5 8zm17 0c-.83 0-1.5.67-1.5 1.5v7c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5v-7c0-.83-.67-1.5-1.5-1.5zm-4.97-5.84l1.3-1.3c.2-.2.2-.51 0-.71-.2-.2-.51-.2-.71 0l-1.48 1.48C13.85 1.23 12.95 1 12 1c-.96 0-1.86.23-2.66.63L7.85.15c-.2-.2-.51-.2-.71 0-.2.2-.2.51 0 .71l1.31 1.31C6.97 3.26 6 5.01 6 7h12c0-1.99-.97-3.75-2.47-4.84zM10 5H9V4h1v1zm5 0h-1V4h1v1z');
var _elm_community$elm_material_icons$Material_Icons_Action$alarm_on = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9c4.97 0 9-4.03 9-9s-4.03-9-9-9zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7zm-1.46-5.47L8.41 12.4l-1.06 1.06 3.18 3.18 6-6-1.06-1.06-4.93 4.95z');
var _elm_community$elm_material_icons$Material_Icons_Action$alarm_off = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 6c3.87 0 7 3.13 7 7 0 .84-.16 1.65-.43 2.4l1.52 1.52c.58-1.19.91-2.51.91-3.92 0-4.97-4.03-9-9-9-1.41 0-2.73.33-3.92.91L9.6 6.43C10.35 6.16 11.16 6 12 6zm10-.28l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM2.92 2.29L1.65 3.57 2.98 4.9l-1.11.93 1.42 1.42 1.11-.94.8.8C3.83 8.69 3 10.75 3 13c0 4.97 4.02 9 9 9 2.25 0 4.31-.83 5.89-2.2l2.2 2.2 1.27-1.27L3.89 3.27l-.97-.98zm13.55 16.1C15.26 19.39 13.7 20 12 20c-3.87 0-7-3.13-7-7 0-1.7.61-3.26 1.61-4.47l9.86 9.86zM8.02 3.28L6.6 1.86l-.86.71 1.42 1.42.86-.71z');
var _elm_community$elm_material_icons$Material_Icons_Action$alarm_add = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9c4.97 0 9-4.03 9-9s-4.03-9-9-9zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7zm1-11h-2v3H8v2h3v3h2v-3h3v-2h-3V9z');
var _elm_community$elm_material_icons$Material_Icons_Action$alarm = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM12.5 8H11v6l4.75 2.85.75-1.23-4-2.37V8zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9c4.97 0 9-4.03 9-9s-4.03-9-9-9zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z');
var _elm_community$elm_material_icons$Material_Icons_Action$add_shopping_cart = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z');
var _elm_community$elm_material_icons$Material_Icons_Action$account_circle = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z');
var _elm_community$elm_material_icons$Material_Icons_Action$account_box = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M3 5v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2H5c-1.11 0-2 .9-2 2zm12 4c0 1.66-1.34 3-3 3s-3-1.34-3-3 1.34-3 3-3 3 1.34 3 3zm-9 8c0-2 4-3.1 6-3.1s6 1.1 6 3.1v1H6v-1z');
var _elm_community$elm_material_icons$Material_Icons_Action$account_balance_with_wallet = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M21 18v1c0 1.1-.9 2-2 2H5c-1.11 0-2-.9-2-2V5c0-1.1.89-2 2-2h14c1.1 0 2 .9 2 2v1h-9c-1.11 0-2 .9-2 2v8c0 1.1.89 2 2 2h9zm-9-2h10V8H12v8zm4-2.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z');
var _elm_community$elm_material_icons$Material_Icons_Action$account_balance = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M4 10v7h3v-7H4zm6 0v7h3v-7h-3zM2 22h19v-3H2v3zm14-12v7h3v-7h-3zm-4.5-9L2 6v2h19V6l-9.5-5z');
var _elm_community$elm_material_icons$Material_Icons_Action$accessibility = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 2c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2zm9 7h-6v13h-2v-6h-2v6H9V9H3V7h18v2z');
var _elm_community$elm_material_icons$Material_Icons_Action$three_d_rotation = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M7.52 21.48C4.25 19.94 1.91 16.76 1.55 13H.05C.56 19.16 5.71 24 12 24l.66-.03-3.81-3.81-1.33 1.32zm.89-6.52c-.19 0-.37-.03-.52-.08-.16-.06-.29-.13-.4-.24-.11-.1-.2-.22-.26-.37-.06-.14-.09-.3-.09-.47h-1.3c0 .36.07.68.21.95.14.27.33.5.56.69.24.18.51.32.82.41.3.1.62.15.96.15.37 0 .72-.05 1.03-.15.32-.1.6-.25.83-.44s.42-.43.55-.72c.13-.29.2-.61.2-.97 0-.19-.02-.38-.07-.56-.05-.18-.12-.35-.23-.51-.1-.16-.24-.3-.4-.43-.17-.13-.37-.23-.61-.31.2-.09.37-.2.52-.33.15-.13.27-.27.37-.42.1-.15.17-.3.22-.46.05-.16.07-.32.07-.48 0-.36-.06-.68-.18-.96-.12-.28-.29-.51-.51-.69-.2-.19-.47-.33-.77-.43C9.1 8.05 8.76 8 8.39 8c-.36 0-.69.05-1 .16-.3.11-.57.26-.79.45-.21.19-.38.41-.51.67-.12.26-.18.54-.18.85h1.3c0-.17.03-.32.09-.45s.14-.25.25-.34c.11-.09.23-.17.38-.22.15-.05.3-.08.48-.08.4 0 .7.1.89.31.19.2.29.49.29.86 0 .18-.03.34-.08.49-.05.15-.14.27-.25.37-.11.1-.25.18-.41.24-.16.06-.36.09-.58.09H7.5v1.03h.77c.22 0 .42.02.6.07s.33.13.45.23c.12.11.22.24.29.4.07.16.1.35.1.57 0 .41-.12.72-.35.93-.23.23-.55.33-.95.33zm8.55-5.92c-.32-.33-.7-.59-1.14-.77-.43-.18-.92-.27-1.46-.27H12v8h2.3c.55 0 1.06-.09 1.51-.27.45-.18.84-.43 1.16-.76.32-.33.57-.73.74-1.19.17-.47.26-.99.26-1.57v-.4c0-.58-.09-1.1-.26-1.57-.18-.47-.43-.87-.75-1.2zm-.39 3.16c0 .42-.05.79-.14 1.13-.1.33-.24.62-.43.85-.19.23-.43.41-.71.53-.29.12-.62.18-.99.18h-.91V9.12h.97c.72 0 1.27.23 1.64.69.38.46.57 1.12.57 1.99v.4zM12 0l-.66.03 3.81 3.81 1.33-1.33c3.27 1.55 5.61 4.72 5.96 8.48h1.5C23.44 4.84 18.29 0 12 0z');

var _elm_community$elm_material_icons$Material_Icons_Image$wb_sunny = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M6.76 4.84l-1.8-1.79-1.41 1.41 1.79 1.79 1.42-1.41zM4 10.5H1v2h3v-2zm9-9.95h-2V3.5h2V.55zm7.45 3.91l-1.41-1.41-1.79 1.79 1.41 1.41 1.79-1.79zm-3.21 13.7l1.79 1.8 1.41-1.41-1.8-1.79-1.4 1.4zM20 10.5v2h3v-2h-3zm-8-5c-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6-2.69-6-6-6zm-1 16.95h2V19.5h-2v2.95zm-7.45-3.91l1.41 1.41 1.79-1.8-1.41-1.41-1.79 1.8z');
var _elm_community$elm_material_icons$Material_Icons_Image$wb_iridescent = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M5 14.5h14v-6H5v6zM11 .55V3.5h2V.55h-2zm8.04 2.5l-1.79 1.79 1.41 1.41 1.8-1.79-1.42-1.41zM13 22.45V19.5h-2v2.95h2zm7.45-3.91l-1.8-1.79-1.41 1.41 1.79 1.8 1.42-1.42zM3.55 4.46l1.79 1.79 1.41-1.41-1.79-1.79-1.41 1.41zm1.41 15.49l1.79-1.8-1.41-1.41-1.79 1.79 1.41 1.42z');
var _elm_community$elm_material_icons$Material_Icons_Image$wb_incandescent = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M3.55 18.54l1.41 1.41 1.79-1.8-1.41-1.41-1.79 1.8zM11 22.45h2V19.5h-2v2.95zM4 10.5H1v2h3v-2zm11-4.19V1.5H9v4.81C7.21 7.35 6 9.28 6 11.5c0 3.31 2.69 6 6 6s6-2.69 6-6c0-2.22-1.21-4.15-3-5.19zm5 4.19v2h3v-2h-3zm-2.76 7.66l1.79 1.8 1.41-1.41-1.8-1.79-1.4 1.4z');
var _elm_community$elm_material_icons$Material_Icons_Image$wb_cloudy = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19.36 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.64-4.96z');
var _elm_community$elm_material_icons$Material_Icons_Image$wb_auto = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M6.85 12.65h2.3L8 9l-1.15 3.65zM22 7l-1.2 6.29L19.3 7h-1.6l-1.49 6.29L15 7h-.76C12.77 5.17 10.53 4 8 4c-4.42 0-8 3.58-8 8s3.58 8 8 8c3.13 0 5.84-1.81 7.15-4.43l.1.43H17l1.5-6.1L20 16h1.75l2.05-9H22zm-11.7 9l-.7-2H6.4l-.7 2H3.8L7 7h2l3.2 9h-1.9z');
var _elm_community$elm_material_icons$Material_Icons_Image$vignette = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-9 15c-4.42 0-8-2.69-8-6s3.58-6 8-6 8 2.69 8 6-3.58 6-8 6z');
var _elm_community$elm_material_icons$Material_Icons_Image$view_compact = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M3 19h6v-7H3v7zm7 0h12v-7H10v7zM3 5v6h19V5H3z');
var _elm_community$elm_material_icons$Material_Icons_Image$view_comfy = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M3 9h4V5H3v4zm0 5h4v-4H3v4zm5 0h4v-4H8v4zm5 0h4v-4h-4v4zM8 9h4V5H8v4zm5-4v4h4V5h-4zm5 9h4v-4h-4v4zM3 19h4v-4H3v4zm5 0h4v-4H8v4zm5 0h4v-4h-4v4zm5 0h4v-4h-4v4zm0-14v4h4V5h-4z');
var _elm_community$elm_material_icons$Material_Icons_Image$tune = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M3 17v2h6v-2H3zM3 5v2h10V5H3zm10 16v-2h8v-2h-8v-2h-2v6h2zM7 9v2H3v2h4v2h2V9H7zm14 4v-2H11v2h10zm-6-4h2V7h4V5h-4V3h-2v6z');
var _elm_community$elm_material_icons$Material_Icons_Image$transform = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M22 18v-2H8V4h2L7 1 4 4h2v2H2v2h4v8c0 1.1.9 2 2 2h8v2h-2l3 3 3-3h-2v-2h4zM10 8h6v6h2V8c0-1.1-.9-2-2-2h-6v2z');
var _elm_community$elm_material_icons$Material_Icons_Image$tonality = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1 17.93c-3.94-.49-7-3.85-7-7.93s3.05-7.44 7-7.93v15.86zm2-15.86c1.03.13 2 .45 2.87.93H13v-.93zM13 7h5.24c.25.31.48.65.68 1H13V7zm0 3h6.74c.08.33.15.66.19 1H13v-1zm0 9.93V19h2.87c-.87.48-1.84.8-2.87.93zM18.24 17H13v-1h5.92c-.2.35-.43.69-.68 1zm1.5-3H13v-1h6.93c-.04.34-.11.67-.19 1z');
var _elm_community$elm_material_icons$Material_Icons_Image$timer_off = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19.04 4.55l-1.42 1.42C16.07 4.74 14.12 4 12 4c-1.83 0-3.53.55-4.95 1.48l1.46 1.46C9.53 6.35 10.73 6 12 6c3.87 0 7 3.13 7 7 0 1.27-.35 2.47-.94 3.49l1.45 1.45C20.45 16.53 21 14.83 21 13c0-2.12-.74-4.07-1.97-5.61l1.42-1.42-1.41-1.42zM15 1H9v2h6V1zm-4 8.44l2 2V8h-2v1.44zM3.02 4L1.75 5.27 4.5 8.03C3.55 9.45 3 11.16 3 13c0 4.97 4.02 9 9 9 1.84 0 3.55-.55 4.98-1.5l2.5 2.5 1.27-1.27-7.71-7.71L3.02 4zM12 20c-3.87 0-7-3.13-7-7 0-1.28.35-2.48.95-3.52l9.56 9.56c-1.03.61-2.23.96-3.51.96z');
var _elm_community$elm_material_icons$Material_Icons_Image$timer_3 = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M11.61 12.97c-.16-.24-.36-.46-.62-.65-.25-.19-.56-.35-.93-.48.3-.14.57-.3.8-.5.23-.2.42-.41.57-.64.15-.23.27-.46.34-.71.08-.24.11-.49.11-.73 0-.55-.09-1.04-.28-1.46-.18-.42-.44-.77-.78-1.06-.33-.28-.73-.5-1.2-.64-.45-.13-.97-.2-1.53-.2-.55 0-1.06.08-1.52.24-.47.17-.87.4-1.2.69-.33.29-.6.63-.78 1.03-.2.39-.29.83-.29 1.29h1.98c0-.26.05-.49.14-.69.09-.2.22-.38.38-.52.17-.14.36-.25.58-.33.22-.08.46-.12.73-.12.61 0 1.06.16 1.36.47.3.31.44.75.44 1.32 0 .27-.04.52-.12.74-.08.22-.21.41-.38.57-.17.16-.38.28-.63.37-.25.09-.55.13-.89.13H6.72v1.57H7.9c.34 0 .64.04.91.11.27.08.5.19.69.35.19.16.34.36.44.61.1.24.16.54.16.87 0 .62-.18 1.09-.53 1.42-.35.33-.84.49-1.45.49-.29 0-.56-.04-.8-.13-.24-.08-.44-.2-.61-.36-.17-.16-.3-.34-.39-.56-.09-.22-.14-.46-.14-.72H4.19c0 .55.11 1.03.32 1.45.21.42.5.77.86 1.05s.77.49 1.24.63.96.21 1.48.21c.57 0 1.09-.08 1.58-.23.49-.15.91-.38 1.26-.68.36-.3.64-.66.84-1.1.2-.43.3-.93.3-1.48 0-.29-.04-.58-.11-.86-.08-.25-.19-.51-.35-.76zm9.26 1.4c-.14-.28-.35-.53-.63-.74-.28-.21-.61-.39-1.01-.53s-.85-.27-1.35-.38c-.35-.07-.64-.15-.87-.23-.23-.08-.41-.16-.55-.25-.14-.09-.23-.19-.28-.3-.05-.11-.08-.24-.08-.39s.03-.28.09-.41c.06-.13.15-.25.27-.34.12-.1.27-.18.45-.24s.4-.09.64-.09c.25 0 .47.04.66.11.19.07.35.17.48.29.13.12.22.26.29.42.06.16.1.32.1.49h1.95c0-.39-.08-.75-.24-1.09-.16-.34-.39-.63-.69-.88-.3-.25-.66-.44-1.09-.59-.43-.15-.92-.22-1.46-.22-.51 0-.98.07-1.39.21-.41.14-.77.33-1.06.57-.29.24-.51.52-.67.84-.16.32-.23.65-.23 1.01s.08.68.23.96c.15.28.37.52.64.73.27.21.6.38.98.53.38.14.81.26 1.27.36.39.08.71.17.95.26s.43.19.57.29c.13.1.22.22.27.34.05.12.07.25.07.39 0 .32-.13.57-.4.77-.27.2-.66.29-1.17.29-.22 0-.43-.02-.64-.08-.21-.05-.4-.13-.56-.24-.17-.11-.3-.26-.41-.44-.11-.18-.17-.41-.18-.67h-1.89c0 .36.08.71.24 1.05.16.34.39.65.7.93.31.27.69.49 1.15.66.46.17.98.25 1.58.25.53 0 1.01-.06 1.44-.19.43-.13.8-.31 1.11-.54.31-.23.54-.51.71-.83.17-.32.25-.67.25-1.06-.02-.4-.09-.74-.24-1.02z');
var _elm_community$elm_material_icons$Material_Icons_Image$timer = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M15 1H9v2h6V1zm-4 13h2V8h-2v6zm8.03-6.61l1.42-1.42c-.43-.51-.9-.99-1.41-1.41l-1.42 1.42C16.07 4.74 14.12 4 12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9 9-4.03 9-9c0-2.12-.74-4.07-1.97-5.61zM12 20c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z');
var _elm_community$elm_material_icons$Material_Icons_Image$timer_10 = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M0 7.72V9.4l3-1V18h2V6h-.25L0 7.72zm23.78 6.65c-.14-.28-.35-.53-.63-.74-.28-.21-.61-.39-1.01-.53s-.85-.27-1.35-.38c-.35-.07-.64-.15-.87-.23-.23-.08-.41-.16-.55-.25-.14-.09-.23-.19-.28-.3-.05-.11-.08-.24-.08-.39 0-.14.03-.28.09-.41.06-.13.15-.25.27-.34.12-.1.27-.18.45-.24s.4-.09.64-.09c.25 0 .47.04.66.11.19.07.35.17.48.29.13.12.22.26.29.42.06.16.1.32.1.49h1.95c0-.39-.08-.75-.24-1.09-.16-.34-.39-.63-.69-.88-.3-.25-.66-.44-1.09-.59C21.49 9.07 21 9 20.46 9c-.51 0-.98.07-1.39.21-.41.14-.77.33-1.06.57-.29.24-.51.52-.67.84-.16.32-.23.65-.23 1.01s.08.69.23.96c.15.28.36.52.64.73.27.21.6.38.98.53.38.14.81.26 1.27.36.39.08.71.17.95.26s.43.19.57.29c.13.1.22.22.27.34.05.12.07.25.07.39 0 .32-.13.57-.4.77-.27.2-.66.29-1.17.29-.22 0-.43-.02-.64-.08-.21-.05-.4-.13-.56-.24-.17-.11-.3-.26-.41-.44-.11-.18-.17-.41-.18-.67h-1.89c0 .36.08.71.24 1.05.16.34.39.65.7.93.31.27.69.49 1.15.66.46.17.98.25 1.58.25.53 0 1.01-.06 1.44-.19.43-.13.8-.31 1.11-.54.31-.23.54-.51.71-.83.17-.32.25-.67.25-1.06-.02-.4-.09-.74-.24-1.02zm-9.96-7.32c-.34-.4-.75-.7-1.23-.88-.47-.18-1.01-.27-1.59-.27-.58 0-1.11.09-1.59.27-.48.18-.89.47-1.23.88-.34.41-.6.93-.79 1.59-.18.65-.28 1.45-.28 2.39v1.92c0 .94.09 1.74.28 2.39.19.66.45 1.19.8 1.6.34.41.75.71 1.23.89.48.18 1.01.28 1.59.28.59 0 1.12-.09 1.59-.28.48-.18.88-.48 1.22-.89.34-.41.6-.94.78-1.6.18-.65.28-1.45.28-2.39v-1.92c0-.94-.09-1.74-.28-2.39-.18-.66-.44-1.19-.78-1.59zm-.92 6.17c0 .6-.04 1.11-.12 1.53-.08.42-.2.76-.36 1.02-.16.26-.36.45-.59.57-.23.12-.51.18-.82.18-.3 0-.58-.06-.82-.18s-.44-.31-.6-.57c-.16-.26-.29-.6-.38-1.02-.09-.42-.13-.93-.13-1.53v-2.5c0-.6.04-1.11.13-1.52.09-.41.21-.74.38-1 .16-.25.36-.43.6-.55.24-.11.51-.17.81-.17.31 0 .58.06.81.17.24.11.44.29.6.55.16.25.29.58.37.99.08.41.13.92.13 1.52v2.51z');
var _elm_community$elm_material_icons$Material_Icons_Image$timelapse = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M16.24 7.76C15.07 6.59 13.54 6 12 6v6l-4.24 4.24c2.34 2.34 6.14 2.34 8.49 0 2.34-2.34 2.34-6.14-.01-8.48zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z');
var _elm_community$elm_material_icons$Material_Icons_Image$texture = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19.51 3.08L3.08 19.51c.09.34.27.65.51.9.25.24.56.42.9.51L20.93 4.49c-.19-.69-.73-1.23-1.42-1.41zM11.88 3L3 11.88v2.83L14.71 3h-2.83zM5 3c-1.1 0-2 .9-2 2v2l4-4H5zm14 18c.55 0 1.05-.22 1.41-.59.37-.36.59-.86.59-1.41v-2l-4 4h2zm-9.71 0h2.83L21 12.12V9.29L9.29 21z');
var _elm_community$elm_material_icons$Material_Icons_Image$tag_faces = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm3.5-9c.83 0 1.5-.67 1.5-1.5S16.33 8 15.5 8 14 8.67 14 9.5s.67 1.5 1.5 1.5zm-7 0c.83 0 1.5-.67 1.5-1.5S9.33 8 8.5 8 7 8.67 7 9.5 7.67 11 8.5 11zm3.5 6.5c2.33 0 4.31-1.46 5.11-3.5H6.89c.8 2.04 2.78 3.5 5.11 3.5z');
var _elm_community$elm_material_icons$Material_Icons_Image$switch_video = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M18 9.5V6c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-3.5l4 4v-13l-4 4zm-5 6V13H7v2.5L3.5 12 7 8.5V11h6V8.5l3.5 3.5-3.5 3.5z');
var _elm_community$elm_material_icons$Material_Icons_Image$switch_camera = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 4h-3.17L15 2H9L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-5 11.5V13H9v2.5L5.5 12 9 8.5V11h6V8.5l3.5 3.5-3.5 3.5z');
var _elm_community$elm_material_icons$Material_Icons_Image$style = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M2.53 19.65l1.34.56v-9.03l-2.43 5.86c-.41 1.02.08 2.19 1.09 2.61zm19.5-3.7L17.07 3.98c-.31-.75-1.04-1.21-1.81-1.23-.26 0-.53.04-.79.15L7.1 5.95c-.75.31-1.21 1.03-1.23 1.8-.01.27.04.54.15.8l4.96 11.97c.31.76 1.05 1.22 1.83 1.23.26 0 .52-.05.77-.15l7.36-3.05c1.02-.42 1.51-1.59 1.09-2.6zM7.88 8.75c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-2 11c0 1.1.9 2 2 2h1.45l-3.45-8.34v6.34z');
var _elm_community$elm_material_icons$Material_Icons_Image$straighten = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M21 6H3c-1.1 0-2 .9-2 2v8c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 10H3V8h2v4h2V8h2v4h2V8h2v4h2V8h2v4h2V8h2v8z');
var _elm_community$elm_material_icons$Material_Icons_Image$slideshow = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M10 8v8l5-4-5-4zm9-5H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V5h14v14z');
var _elm_community$elm_material_icons$Material_Icons_Image$rotate_right = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M15.55 5.55L11 1v3.07C7.06 4.56 4 7.92 4 12s3.05 7.44 7 7.93v-2.02c-2.84-.48-5-2.94-5-5.91s2.16-5.43 5-5.91V10l4.55-4.45zM19.93 11c-.17-1.39-.72-2.73-1.62-3.89l-1.42 1.42c.54.75.88 1.6 1.02 2.47h2.02zM13 17.9v2.02c1.39-.17 2.74-.71 3.9-1.61l-1.44-1.44c-.75.54-1.59.89-2.46 1.03zm3.89-2.42l1.42 1.41c.9-1.16 1.45-2.5 1.62-3.89h-2.02c-.14.87-.48 1.72-1.02 2.48z');
var _elm_community$elm_material_icons$Material_Icons_Image$rotate_left = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M7.11 8.53L5.7 7.11C4.8 8.27 4.24 9.61 4.07 11h2.02c.14-.87.49-1.72 1.02-2.47zM6.09 13H4.07c.17 1.39.72 2.73 1.62 3.89l1.41-1.42c-.52-.75-.87-1.59-1.01-2.47zm1.01 5.32c1.16.9 2.51 1.44 3.9 1.61V17.9c-.87-.15-1.71-.49-2.46-1.03L7.1 18.32zM13 4.07V1L8.45 5.55 13 10V6.09c2.84.48 5 2.94 5 5.91s-2.16 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93s-3.05-7.44-7-7.93z');
var _elm_community$elm_material_icons$Material_Icons_Image$rotate_90_degrees_ccw = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M7.34 6.41L.86 12.9l6.49 6.48 6.49-6.48-6.5-6.49zM3.69 12.9l3.66-3.66L11 12.9l-3.66 3.66-3.65-3.66zm15.67-6.26C17.61 4.88 15.3 4 13 4V.76L8.76 5 13 9.24V6c1.79 0 3.58.68 4.95 2.05 2.73 2.73 2.73 7.17 0 9.9C16.58 19.32 14.79 20 13 20c-.97 0-1.94-.21-2.84-.61l-1.49 1.49C10.02 21.62 11.51 22 13 22c2.3 0 4.61-.88 6.36-2.64 3.52-3.51 3.52-9.21 0-12.72z');
var _elm_community$elm_material_icons$Material_Icons_Image$remove_red_eye = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z');
var _elm_community$elm_material_icons$Material_Icons_Image$portrait = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 12.25c1.24 0 2.25-1.01 2.25-2.25S13.24 7.75 12 7.75 9.75 8.76 9.75 10s1.01 2.25 2.25 2.25zm4.5 4c0-1.5-3-2.25-4.5-2.25s-4.5.75-4.5 2.25V17h9v-.75zM19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V5h14v14z');
var _elm_community$elm_material_icons$Material_Icons_Image$picture_as_pdf = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.5 7.5c0 .83-.67 1.5-1.5 1.5H9v2H7.5V7H10c.83 0 1.5.67 1.5 1.5v1zm5 2c0 .83-.67 1.5-1.5 1.5h-2.5V7H15c.83 0 1.5.67 1.5 1.5v3zm4-3H19v1h1.5V11H19v2h-1.5V7h3v1.5zM9 9.5h1v-1H9v1zM4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm10 5.5h1v-3h-1v3z');
var _elm_community$elm_material_icons$Material_Icons_Image$photo_size_select_small = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M23 15h-2v2h2v-2zm0-4h-2v2h2v-2zm0 8h-2v2c1 0 2-1 2-2zM15 3h-2v2h2V3zm8 4h-2v2h2V7zm-2-4v2h2c0-1-1-2-2-2zM3 21h8v-6H1v4c0 1.1.9 2 2 2zM3 7H1v2h2V7zm12 12h-2v2h2v-2zm4-16h-2v2h2V3zm0 16h-2v2h2v-2zM3 3C2 3 1 4 1 5h2V3zm0 8H1v2h2v-2zm8-8H9v2h2V3zM7 3H5v2h2V3z');
var _elm_community$elm_material_icons$Material_Icons_Image$photo_size_select_large = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M21 15h2v2h-2v-2zm0-4h2v2h-2v-2zm2 8h-2v2c1 0 2-1 2-2zM13 3h2v2h-2V3zm8 4h2v2h-2V7zm0-4v2h2c0-1-1-2-2-2zM1 7h2v2H1V7zm16-4h2v2h-2V3zm0 16h2v2h-2v-2zM3 3C2 3 1 4 1 5h2V3zm6 0h2v2H9V3zM5 3h2v2H5V3zm-4 8v8c0 1.1.9 2 2 2h12V11H1zm2 8l2.5-3.21 1.79 2.15 2.5-3.22L13 19H3z');
var _elm_community$elm_material_icons$Material_Icons_Image$photo_size_select_actual = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M21 3H3C2 3 1 4 1 5v14c0 1.1.9 2 2 2h18c1 0 2-1 2-2V5c0-1-1-2-2-2zM5 17l3.5-4.5 2.5 3.01L14.5 11l4.5 6H5z');
var _elm_community$elm_material_icons$Material_Icons_Image$photo_library = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M22 16V4c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2zm-11-4l2.03 2.71L16 11l4 5H8l3-4zM2 6v14c0 1.1.9 2 2 2h14v-2H4V6H2z');
var _elm_community$elm_material_icons$Material_Icons_Image$photo_camera = F2(
	function (color, size) {
		var stringSize = _elm_lang$core$Basics$toString(size);
		var stringColor = _elm_community$elm_material_icons$Material_Icons_Internal$toRgbaString(color);
		return A2(
			_elm_lang$svg$Svg$svg,
			{
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$width(stringSize),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$height(stringSize),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$viewBox('0 0 24 24'),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$svg$Svg$circle,
					{
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$cx('12'),
						_1: {
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$cy('12'),
							_1: {
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$r('3.2'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$fill(stringColor),
									_1: {ctor: '[]'}
								}
							}
						}
					},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$svg$Svg$path,
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$d('M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z'),
							_1: {
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$fill(stringColor),
								_1: {ctor: '[]'}
							}
						},
						{ctor: '[]'}),
					_1: {ctor: '[]'}
				}
			});
	});
var _elm_community$elm_material_icons$Material_Icons_Image$photo_album = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M18 2H6c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 4h5v8l-2.5-1.5L6 12V4zm0 15l3-3.86 2.14 2.58 3-3.86L18 19H6z');
var _elm_community$elm_material_icons$Material_Icons_Image$photo = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z');
var _elm_community$elm_material_icons$Material_Icons_Image$panorama_wide_angle = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 6c2.45 0 4.71.2 7.29.64.47 1.78.71 3.58.71 5.36 0 1.78-.24 3.58-.71 5.36-2.58.44-4.84.64-7.29.64s-4.71-.2-7.29-.64C4.24 15.58 4 13.78 4 12c0-1.78.24-3.58.71-5.36C7.29 6.2 9.55 6 12 6m0-2c-2.73 0-5.22.24-7.95.72l-.93.16-.25.9C2.29 7.85 2 9.93 2 12s.29 4.15.87 6.22l.25.89.93.16c2.73.49 5.22.73 7.95.73s5.22-.24 7.95-.72l.93-.16.25-.89c.58-2.08.87-4.16.87-6.23s-.29-4.15-.87-6.22l-.25-.89-.93-.16C17.22 4.24 14.73 4 12 4z');
var _elm_community$elm_material_icons$Material_Icons_Image$panorama_vertical = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19.94 21.12c-1.1-2.94-1.64-6.03-1.64-9.12 0-3.09.55-6.18 1.64-9.12.04-.11.06-.22.06-.31 0-.34-.23-.57-.63-.57H4.63c-.4 0-.63.23-.63.57 0 .1.02.2.06.31C5.16 5.82 5.71 8.91 5.71 12c0 3.09-.55 6.18-1.64 9.12-.05.11-.07.22-.07.31 0 .33.23.57.63.57h14.75c.39 0 .63-.24.63-.57-.01-.1-.03-.2-.07-.31zM6.54 20c.77-2.6 1.16-5.28 1.16-8 0-2.72-.39-5.4-1.16-8h10.91c-.77 2.6-1.16 5.28-1.16 8 0 2.72.39 5.4 1.16 8H6.54z');
var _elm_community$elm_material_icons$Material_Icons_Image$panorama_horizontal = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 6.54v10.91c-2.6-.77-5.28-1.16-8-1.16-2.72 0-5.4.39-8 1.16V6.54c2.6.77 5.28 1.16 8 1.16 2.72.01 5.4-.38 8-1.16M21.43 4c-.1 0-.2.02-.31.06C18.18 5.16 15.09 5.7 12 5.7c-3.09 0-6.18-.55-9.12-1.64-.11-.04-.22-.06-.31-.06-.34 0-.57.23-.57.63v14.75c0 .39.23.62.57.62.1 0 .2-.02.31-.06 2.94-1.1 6.03-1.64 9.12-1.64 3.09 0 6.18.55 9.12 1.64.11.04.21.06.31.06.33 0 .57-.23.57-.63V4.63c0-.4-.24-.63-.57-.63z');
var _elm_community$elm_material_icons$Material_Icons_Image$panorama_fish_eye = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z');
var _elm_community$elm_material_icons$Material_Icons_Image$panorama = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M23 18V6c0-1.1-.9-2-2-2H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2zM8.5 12.5l2.5 3.01L14.5 11l4.5 6H5l3.5-4.5z');
var _elm_community$elm_material_icons$Material_Icons_Image$palette = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 3c-4.97 0-9 4.03-9 9s4.03 9 9 9c.83 0 1.5-.67 1.5-1.5 0-.39-.15-.74-.39-1.01-.23-.26-.38-.61-.38-.99 0-.83.67-1.5 1.5-1.5H16c2.76 0 5-2.24 5-5 0-4.42-4.03-8-9-8zm-5.5 9c-.83 0-1.5-.67-1.5-1.5S5.67 9 6.5 9 8 9.67 8 10.5 7.33 12 6.5 12zm3-4C8.67 8 8 7.33 8 6.5S8.67 5 9.5 5s1.5.67 1.5 1.5S10.33 8 9.5 8zm5 0c-.83 0-1.5-.67-1.5-1.5S13.67 5 14.5 5s1.5.67 1.5 1.5S15.33 8 14.5 8zm3 4c-.83 0-1.5-.67-1.5-1.5S16.67 9 17.5 9s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z');
var _elm_community$elm_material_icons$Material_Icons_Image$navigate_next = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z');
var _elm_community$elm_material_icons$Material_Icons_Image$navigate_before = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z');
var _elm_community$elm_material_icons$Material_Icons_Image$nature_people = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M22.17 9.17c0-3.87-3.13-7-7-7s-7 3.13-7 7c0 3.47 2.52 6.34 5.83 6.89V20H6v-3h1v-4c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v4h1v5h16v-2h-3v-3.88c3.47-.41 6.17-3.36 6.17-6.95zM4.5 11c.83 0 1.5-.67 1.5-1.5S5.33 8 4.5 8 3 8.67 3 9.5 3.67 11 4.5 11z');
var _elm_community$elm_material_icons$Material_Icons_Image$nature = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M13 16.12c3.47-.41 6.17-3.36 6.17-6.95 0-3.87-3.13-7-7-7s-7 3.13-7 7c0 3.47 2.52 6.34 5.83 6.89V20H5v2h14v-2h-6v-3.88z');
var _elm_community$elm_material_icons$Material_Icons_Image$music_note = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 3v10.55c-.59-.34-1.27-.55-2-.55-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4V7h4V3h-6z');
var _elm_community$elm_material_icons$Material_Icons_Image$movie_creation = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M18 4l2 4h-3l-2-4h-2l2 4h-3l-2-4H8l2 4H7L5 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4h-4z');
var _elm_community$elm_material_icons$Material_Icons_Image$monochrome_photos = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 5h-3.2L15 3H9L7.2 5H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 14h-8v-1c-2.8 0-5-2.2-5-5s2.2-5 5-5V7h8v12zm-3-6c0-2.8-2.2-5-5-5v1.8c1.8 0 3.2 1.4 3.2 3.2s-1.4 3.2-3.2 3.2V18c2.8 0 5-2.2 5-5zm-8.2 0c0 1.8 1.4 3.2 3.2 3.2V9.8c-1.8 0-3.2 1.4-3.2 3.2z');
var _elm_community$elm_material_icons$Material_Icons_Image$loupe = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.49 2 2 6.49 2 12s4.49 10 10 10h8c1.1 0 2-.9 2-2v-8c0-5.51-4.49-10-10-10zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z');
var _elm_community$elm_material_icons$Material_Icons_Image$looks_two = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4 8c0 1.11-.9 2-2 2h-2v2h4v2H9v-4c0-1.11.9-2 2-2h2V9H9V7h4c1.1 0 2 .89 2 2v2z');
var _elm_community$elm_material_icons$Material_Icons_Image$looks_one = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-5 14h-2V9h-2V7h4v10z');
var _elm_community$elm_material_icons$Material_Icons_Image$looks_6 = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M11 15h2v-2h-2v2zm8-12H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4 6h-4v2h2c1.1 0 2 .89 2 2v2c0 1.11-.9 2-2 2h-2c-1.1 0-2-.89-2-2V9c0-1.11.9-2 2-2h4v2z');
var _elm_community$elm_material_icons$Material_Icons_Image$looks_5 = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4 6h-4v2h2c1.1 0 2 .89 2 2v2c0 1.11-.9 2-2 2H9v-2h4v-2H9V7h6v2z');
var _elm_community$elm_material_icons$Material_Icons_Image$looks_4 = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4 14h-2v-4H9V7h2v4h2V7h2v10z');
var _elm_community$elm_material_icons$Material_Icons_Image$looks_3 = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19.01 3h-14c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4 7.5c0 .83-.67 1.5-1.5 1.5.83 0 1.5.67 1.5 1.5V15c0 1.11-.9 2-2 2h-4v-2h4v-2h-2v-2h2V9h-4V7h4c1.1 0 2 .89 2 2v1.5z');
var _elm_community$elm_material_icons$Material_Icons_Image$looks = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 10c-3.86 0-7 3.14-7 7h2c0-2.76 2.24-5 5-5s5 2.24 5 5h2c0-3.86-3.14-7-7-7zm0-4C5.93 6 1 10.93 1 17h2c0-4.96 4.04-9 9-9s9 4.04 9 9h2c0-6.07-4.93-11-11-11z');
var _elm_community$elm_material_icons$Material_Icons_Image$lens = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2z');
var _elm_community$elm_material_icons$Material_Icons_Image$leak_remove = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M10 3H8c0 .37-.04.72-.12 1.06l1.59 1.59C9.81 4.84 10 3.94 10 3zM3 4.27l2.84 2.84C5.03 7.67 4.06 8 3 8v2c1.61 0 3.09-.55 4.27-1.46L8.7 9.97C7.14 11.24 5.16 12 3 12v2c2.71 0 5.19-.99 7.11-2.62l2.5 2.5C10.99 15.81 10 18.29 10 21h2c0-2.16.76-4.14 2.03-5.69l1.43 1.43C14.55 17.91 14 19.39 14 21h2c0-1.06.33-2.03.89-2.84L19.73 21 21 19.73 4.27 3 3 4.27zM14 3h-2c0 1.5-.37 2.91-1.02 4.16l1.46 1.46C13.42 6.98 14 5.06 14 3zm5.94 13.12c.34-.08.69-.12 1.06-.12v-2c-.94 0-1.84.19-2.66.52l1.6 1.6zm-4.56-4.56l1.46 1.46C18.09 12.37 19.5 12 21 12v-2c-2.06 0-3.98.58-5.62 1.56z');
var _elm_community$elm_material_icons$Material_Icons_Image$leak_add = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M6 3H3v3c1.66 0 3-1.34 3-3zm8 0h-2c0 4.97-4.03 9-9 9v2c6.08 0 11-4.93 11-11zm-4 0H8c0 2.76-2.24 5-5 5v2c3.87 0 7-3.13 7-7zm0 18h2c0-4.97 4.03-9 9-9v-2c-6.07 0-11 4.93-11 11zm8 0h3v-3c-1.66 0-3 1.34-3 3zm-4 0h2c0-2.76 2.24-5 5-5v-2c-3.87 0-7 3.13-7 7z');
var _elm_community$elm_material_icons$Material_Icons_Image$landscape = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M14 6l-3.75 5 2.85 3.8-1.6 1.2C9.81 13.75 7 10 7 10l-6 8h22L14 6z');
var _elm_community$elm_material_icons$Material_Icons_Image$iso = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM5.5 7.5h2v-2H9v2h2V9H9v2H7.5V9h-2V7.5zM19 19H5L19 5v14zm-2-2v-1.5h-5V17h5z');
var _elm_community$elm_material_icons$Material_Icons_Image$image_aspect_ratio = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M16 10h-2v2h2v-2zm0 4h-2v2h2v-2zm-8-4H6v2h2v-2zm4 0h-2v2h2v-2zm8-6H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H4V6h16v12z');
var _elm_community$elm_material_icons$Material_Icons_Image$image = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z');
var _elm_community$elm_material_icons$Material_Icons_Image$healing = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M17.73 12.02l3.98-3.98c.39-.39.39-1.02 0-1.41l-4.34-4.34c-.39-.39-1.02-.39-1.41 0l-3.98 3.98L8 2.29C7.8 2.1 7.55 2 7.29 2c-.25 0-.51.1-.7.29L2.25 6.63c-.39.39-.39 1.02 0 1.41l3.98 3.98L2.25 16c-.39.39-.39 1.02 0 1.41l4.34 4.34c.39.39 1.02.39 1.41 0l3.98-3.98 3.98 3.98c.2.2.45.29.71.29.26 0 .51-.1.71-.29l4.34-4.34c.39-.39.39-1.02 0-1.41l-3.99-3.98zM12 9c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm-4.71 1.96L3.66 7.34l3.63-3.63 3.62 3.62-3.62 3.63zM10 13c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm2 2c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm2-4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm2.66 9.34l-3.63-3.62 3.63-3.63 3.62 3.62-3.62 3.63z');
var _elm_community$elm_material_icons$Material_Icons_Image$hdr_weak = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M5 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm12-2c-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6-2.69-6-6-6zm0 10c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z');
var _elm_community$elm_material_icons$Material_Icons_Image$hdr_strong = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M17 6c-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6-2.69-6-6-6zM5 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z');
var _elm_community$elm_material_icons$Material_Icons_Image$hdr_on = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M21 11.5v-1c0-.8-.7-1.5-1.5-1.5H16v6h1.5v-2h1.1l.9 2H21l-.9-2.1c.5-.3.9-.8.9-1.4zm-1.5 0h-2v-1h2v1zm-13-.5h-2V9H3v6h1.5v-2.5h2V15H8V9H6.5v2zM13 9H9.5v6H13c.8 0 1.5-.7 1.5-1.5v-3c0-.8-.7-1.5-1.5-1.5zm0 4.5h-2v-3h2v3z');
var _elm_community$elm_material_icons$Material_Icons_Image$hdr_off = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M17.5 15v-2h1.1l.9 2H21l-.9-2.1c.5-.2.9-.8.9-1.4v-1c0-.8-.7-1.5-1.5-1.5H16v4.9l1.1 1.1h.4zm0-4.5h2v1h-2v-1zm-4.5 0v.4l1.5 1.5v-1.9c0-.8-.7-1.5-1.5-1.5h-1.9l1.5 1.5h.4zm-3.5-1l-7-7-1.1 1L6.9 9h-.4v2h-2V9H3v6h1.5v-2.5h2V15H8v-4.9l1.5 1.5V15h3.4l7.6 7.6 1.1-1.1-12.1-12z');
var _elm_community$elm_material_icons$Material_Icons_Image$grid_on = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM8 20H4v-4h4v4zm0-6H4v-4h4v4zm0-6H4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4z');
var _elm_community$elm_material_icons$Material_Icons_Image$grid_off = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M8 4v1.45l2 2V4h4v4h-3.45l2 2H14v1.45l2 2V10h4v4h-3.45l2 2H20v1.45l2 2V4c0-1.1-.9-2-2-2H4.55l2 2H8zm8 0h4v4h-4V4zM1.27 1.27L0 2.55l2 2V20c0 1.1.9 2 2 2h15.46l2 2 1.27-1.27L1.27 1.27zM10 12.55L11.45 14H10v-1.45zm-6-6L5.45 8H4V6.55zM8 20H4v-4h4v4zm0-6H4v-4h3.45l.55.55V14zm6 6h-4v-4h3.45l.55.54V20zm2 0v-1.46L17.46 20H16z');
var _elm_community$elm_material_icons$Material_Icons_Image$grain = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M10 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM6 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12-8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm-4 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm4-4c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-4-4c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-4-4c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z');
var _elm_community$elm_material_icons$Material_Icons_Image$gradient = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M11 9h2v2h-2zm-2 2h2v2H9zm4 0h2v2h-2zm2-2h2v2h-2zM7 9h2v2H7zm12-6H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 18H7v-2h2v2zm4 0h-2v-2h2v2zm4 0h-2v-2h2v2zm2-7h-2v2h2v2h-2v-2h-2v2h-2v-2h-2v2H9v-2H7v2H5v-2h2v-2H5V5h14v6z');
var _elm_community$elm_material_icons$Material_Icons_Image$flip = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M15 21h2v-2h-2v2zm4-12h2V7h-2v2zM3 5v14c0 1.1.9 2 2 2h4v-2H5V5h4V3H5c-1.1 0-2 .9-2 2zm16-2v2h2c0-1.1-.9-2-2-2zm-8 20h2V1h-2v22zm8-6h2v-2h-2v2zM15 5h2V3h-2v2zm4 8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2z');
var _elm_community$elm_material_icons$Material_Icons_Image$flash_on = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M7 2v11h3v9l7-12h-4l4-8z');
var _elm_community$elm_material_icons$Material_Icons_Image$flash_off = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M3.27 3L2 4.27l5 5V13h3v9l3.58-6.14L17.73 20 19 18.73 3.27 3zM17 10h-4l4-8H7v2.18l8.46 8.46L17 10z');
var _elm_community$elm_material_icons$Material_Icons_Image$flash_auto = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M3 2v12h3v9l7-12H9l4-9H3zm16 0h-2l-3.2 9h1.9l.7-2h3.2l.7 2h1.9L19 2zm-2.15 5.65L18 4l1.15 3.65h-2.3z');
var _elm_community$elm_material_icons$Material_Icons_Image$flare = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M7 11H1v2h6v-2zm2.17-3.24L7.05 5.64 5.64 7.05l2.12 2.12 1.41-1.41zM13 1h-2v6h2V1zm5.36 6.05l-1.41-1.41-2.12 2.12 1.41 1.41 2.12-2.12zM17 11v2h6v-2h-6zm-5-2c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3zm2.83 7.24l2.12 2.12 1.41-1.41-2.12-2.12-1.41 1.41zm-9.19.71l1.41 1.41 2.12-2.12-1.41-1.41-2.12 2.12zM11 23h2v-6h-2v6z');
var _elm_community$elm_material_icons$Material_Icons_Image$filter_vintage = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M18.7 12.4c-.28-.16-.57-.29-.86-.4.29-.11.58-.24.86-.4 1.92-1.11 2.99-3.12 3-5.19-1.79-1.03-4.07-1.11-6 0-.28.16-.54.35-.78.54.05-.31.08-.63.08-.95 0-2.22-1.21-4.15-3-5.19C10.21 1.85 9 3.78 9 6c0 .32.03.64.08.95-.24-.2-.5-.39-.78-.55-1.92-1.11-4.2-1.03-6 0 0 2.07 1.07 4.08 3 5.19.28.16.57.29.86.4-.29.11-.58.24-.86.4-1.92 1.11-2.99 3.12-3 5.19 1.79 1.03 4.07 1.11 6 0 .28-.16.54-.35.78-.54-.05.32-.08.64-.08.96 0 2.22 1.21 4.15 3 5.19 1.79-1.04 3-2.97 3-5.19 0-.32-.03-.64-.08-.95.24.2.5.38.78.54 1.92 1.11 4.2 1.03 6 0-.01-2.07-1.08-4.08-3-5.19zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z');
var _elm_community$elm_material_icons$Material_Icons_Image$filter_tilt_shift = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M11 4.07V2.05c-2.01.2-3.84 1-5.32 2.21L7.1 5.69c1.11-.86 2.44-1.44 3.9-1.62zm7.32.19C16.84 3.05 15.01 2.25 13 2.05v2.02c1.46.18 2.79.76 3.9 1.62l1.42-1.43zM19.93 11h2.02c-.2-2.01-1-3.84-2.21-5.32L18.31 7.1c.86 1.11 1.44 2.44 1.62 3.9zM5.69 7.1L4.26 5.68C3.05 7.16 2.25 8.99 2.05 11h2.02c.18-1.46.76-2.79 1.62-3.9zM4.07 13H2.05c.2 2.01 1 3.84 2.21 5.32l1.43-1.43c-.86-1.1-1.44-2.43-1.62-3.89zM15 12c0-1.66-1.34-3-3-3s-3 1.34-3 3 1.34 3 3 3 3-1.34 3-3zm3.31 4.9l1.43 1.43c1.21-1.48 2.01-3.32 2.21-5.32h-2.02c-.18 1.45-.76 2.78-1.62 3.89zM13 19.93v2.02c2.01-.2 3.84-1 5.32-2.21l-1.43-1.43c-1.1.86-2.43 1.44-3.89 1.62zm-7.32-.19C7.16 20.95 9 21.75 11 21.95v-2.02c-1.46-.18-2.79-.76-3.9-1.62l-1.42 1.43z');
var _elm_community$elm_material_icons$Material_Icons_Image$filter_none = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z');
var _elm_community$elm_material_icons$Material_Icons_Image$filter_hdr = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M14 6l-3.75 5 2.85 3.8-1.6 1.2C9.81 13.75 7 10 7 10l-6 8h22L14 6z');
var _elm_community$elm_material_icons$Material_Icons_Image$filter_frames = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 4h-4l-4-4-4 4H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H4V6h4.52l3.52-3.5L15.52 6H20v14zM18 8H6v10h12');
var _elm_community$elm_material_icons$Material_Icons_Image$filter_drama = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.61 5.64 5.36 8.04 2.35 8.36 0 10.9 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM19 18H6c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4h2c0-2.76-1.86-5.08-4.4-5.78C8.61 6.88 10.2 6 12 6c3.03 0 5.5 2.47 5.5 5.5v.5H19c1.65 0 3 1.35 3 3s-1.35 3-3 3z');
var _elm_community$elm_material_icons$Material_Icons_Image$filter_center_focus = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M5 15H3v4c0 1.1.9 2 2 2h4v-2H5v-4zM5 5h4V3H5c-1.1 0-2 .9-2 2v4h2V5zm14-2h-4v2h4v4h2V5c0-1.1-.9-2-2-2zm0 16h-4v2h4c1.1 0 2-.9 2-2v-4h-2v4zM12 9c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z');
var _elm_community$elm_material_icons$Material_Icons_Image$filter_b_and_w = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16l-7-8v8H5l7-8V5h7v14z');
var _elm_community$elm_material_icons$Material_Icons_Image$filter_9_plus = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm11 7V8c0-1.11-.9-2-2-2h-1c-1.1 0-2 .89-2 2v1c0 1.11.9 2 2 2h1v1H9v2h3c1.1 0 2-.89 2-2zm-3-3V8h1v1h-1zm10-8H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 8h-2V7h-2v2h-2v2h2v2h2v-2h2v6H7V3h14v6z');
var _elm_community$elm_material_icons$Material_Icons_Image$filter_9 = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14zM15 5h-2c-1.1 0-2 .89-2 2v2c0 1.11.9 2 2 2h2v2h-4v2h4c1.1 0 2-.89 2-2V7c0-1.11-.9-2-2-2zm0 4h-2V7h2v2z');
var _elm_community$elm_material_icons$Material_Icons_Image$filter_8 = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14zm-8-2h2c1.1 0 2-.89 2-2v-1.5c0-.83-.67-1.5-1.5-1.5.83 0 1.5-.67 1.5-1.5V7c0-1.11-.9-2-2-2h-2c-1.1 0-2 .89-2 2v1.5c0 .83.67 1.5 1.5 1.5-.83 0-1.5.67-1.5 1.5V13c0 1.11.9 2 2 2zm0-8h2v2h-2V7zm0 4h2v2h-2v-2z');
var _elm_community$elm_material_icons$Material_Icons_Image$filter_7 = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14zm-8-2l4-8V5h-6v2h4l-4 8h2z');
var _elm_community$elm_material_icons$Material_Icons_Image$filter_6 = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14zm-8-2h2c1.1 0 2-.89 2-2v-2c0-1.11-.9-2-2-2h-2V7h4V5h-4c-1.1 0-2 .89-2 2v6c0 1.11.9 2 2 2zm0-4h2v2h-2v-2z');
var _elm_community$elm_material_icons$Material_Icons_Image$filter_5 = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M21 1H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14zM3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm14 8v-2c0-1.11-.9-2-2-2h-2V7h4V5h-6v6h4v2h-4v2h4c1.1 0 2-.89 2-2z');
var _elm_community$elm_material_icons$Material_Icons_Image$filter_4 = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm12 10h2V5h-2v4h-2V5h-2v6h4v4zm6-14H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z');
var _elm_community$elm_material_icons$Material_Icons_Image$filter_3 = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M21 1H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14zM3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm14 8v-1.5c0-.83-.67-1.5-1.5-1.5.83 0 1.5-.67 1.5-1.5V7c0-1.11-.9-2-2-2h-4v2h4v2h-2v2h2v2h-4v2h4c1.1 0 2-.89 2-2z');
var _elm_community$elm_material_icons$Material_Icons_Image$filter_2 = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14zm-4-4h-4v-2h2c1.1 0 2-.89 2-2V7c0-1.11-.9-2-2-2h-4v2h4v2h-2c-1.1 0-2 .89-2 2v4h6v-2z');
var _elm_community$elm_material_icons$Material_Icons_Image$filter_1 = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm11 10h2V5h-4v2h2v8zm7-14H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z');
var _elm_community$elm_material_icons$Material_Icons_Image$filter = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M15.96 10.29l-2.75 3.54-1.96-2.36L8.5 15h11l-3.54-4.71zM3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z');
var _elm_community$elm_material_icons$Material_Icons_Image$exposure_zero = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M16.14 12.5c0 1-.1 1.85-.3 2.55-.2.7-.48 1.27-.83 1.7-.36.44-.79.75-1.3.95-.51.2-1.07.3-1.7.3-.62 0-1.18-.1-1.69-.3-.51-.2-.95-.51-1.31-.95-.36-.44-.65-1.01-.85-1.7-.2-.7-.3-1.55-.3-2.55v-2.04c0-1 .1-1.85.3-2.55.2-.7.48-1.26.84-1.69.36-.43.8-.74 1.31-.93C10.81 5.1 11.38 5 12 5c.63 0 1.19.1 1.7.29.51.19.95.5 1.31.93.36.43.64.99.84 1.69.2.7.3 1.54.3 2.55v2.04zm-2.11-2.36c0-.64-.05-1.18-.13-1.62-.09-.44-.22-.79-.4-1.06-.17-.27-.39-.46-.64-.58-.25-.13-.54-.19-.86-.19-.32 0-.61.06-.86.18s-.47.31-.64.58c-.17.27-.31.62-.4 1.06s-.13.98-.13 1.62v2.67c0 .64.05 1.18.14 1.62.09.45.23.81.4 1.09s.39.48.64.61.54.19.87.19c.33 0 .62-.06.87-.19s.46-.33.63-.61c.17-.28.3-.64.39-1.09.09-.45.13-.99.13-1.62v-2.66z');
var _elm_community$elm_material_icons$Material_Icons_Image$exposure_plus_2 = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M16.05 16.29l2.86-3.07c.38-.39.72-.79 1.04-1.18.32-.39.59-.78.82-1.17.23-.39.41-.78.54-1.17.13-.39.19-.79.19-1.18 0-.53-.09-1.02-.27-1.46-.18-.44-.44-.81-.78-1.11-.34-.31-.77-.54-1.26-.71-.51-.16-1.08-.24-1.72-.24-.69 0-1.31.11-1.85.32-.54.21-1 .51-1.36.88-.37.37-.65.8-.84 1.3-.18.47-.27.97-.28 1.5h2.14c.01-.31.05-.6.13-.87.09-.29.23-.54.4-.75.18-.21.41-.37.68-.49.27-.12.6-.18.96-.18.31 0 .58.05.81.15.23.1.43.25.59.43.16.18.28.4.37.65.08.25.13.52.13.81 0 .22-.03.43-.08.65-.06.22-.15.45-.29.7-.14.25-.32.53-.56.83-.23.3-.52.65-.88 1.03l-4.17 4.55V18H22v-1.71h-5.95zM8 7H6v4H2v2h4v4h2v-4h4v-2H8V7z');
var _elm_community$elm_material_icons$Material_Icons_Image$exposure_plus_1 = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M10 7H8v4H4v2h4v4h2v-4h4v-2h-4V7zm10 11h-2V7.38L15 8.4V6.7L19.7 5h.3v13z');
var _elm_community$elm_material_icons$Material_Icons_Image$exposure_neg_2 = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M15.05 16.29l2.86-3.07c.38-.39.72-.79 1.04-1.18.32-.39.59-.78.82-1.17.23-.39.41-.78.54-1.17s.19-.79.19-1.18c0-.53-.09-1.02-.27-1.46-.18-.44-.44-.81-.78-1.11-.34-.31-.77-.54-1.26-.71-.51-.16-1.08-.24-1.72-.24-.69 0-1.31.11-1.85.32-.54.21-1 .51-1.36.88-.37.37-.65.8-.84 1.3-.18.47-.27.97-.28 1.5h2.14c.01-.31.05-.6.13-.87.09-.29.23-.54.4-.75.18-.21.41-.37.68-.49.27-.12.6-.18.96-.18.31 0 .58.05.81.15.23.1.43.25.59.43.16.18.28.4.37.65.08.25.13.52.13.81 0 .22-.03.43-.08.65-.06.22-.15.45-.29.7-.14.25-.32.53-.56.83-.23.3-.52.65-.88 1.03l-4.17 4.55V18H21v-1.71h-5.95zM2 11v2h8v-2H2z');
var _elm_community$elm_material_icons$Material_Icons_Image$exposure_neg_1 = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M4 11v2h8v-2H4zm15 7h-2V7.38L14 8.4V6.7L18.7 5h.3v13z');
var _elm_community$elm_material_icons$Material_Icons_Image$exposure = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M15 17v2h2v-2h2v-2h-2v-2h-2v2h-2v2h2zm5-15H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM5 5h6v2H5V5zm15 15H4L20 4v16z');
var _elm_community$elm_material_icons$Material_Icons_Image$edit = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z');
var _elm_community$elm_material_icons$Material_Icons_Image$details = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M3 4l9 16 9-16H3zm3.38 2h11.25L12 16 6.38 6z');
var _elm_community$elm_material_icons$Material_Icons_Image$dehaze = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M2 15.5v2h20v-2H2zm0-5v2h20v-2H2zm0-5v2h20v-2H2z');
var _elm_community$elm_material_icons$Material_Icons_Image$crop_square = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M18 4H6c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H6V6h12v12z');
var _elm_community$elm_material_icons$Material_Icons_Image$crop_portrait = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M17 3H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H7V5h10v14z');
var _elm_community$elm_material_icons$Material_Icons_Image$crop_original = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V5h14v14zm-5.04-6.71l-2.75 3.54-1.96-2.36L6.5 17h11l-3.54-4.71z');
var _elm_community$elm_material_icons$Material_Icons_Image$crop_landscape = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 5H5c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 12H5V7h14v10z');
var _elm_community$elm_material_icons$Material_Icons_Image$crop_free = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M3 5v4h2V5h4V3H5c-1.1 0-2 .9-2 2zm2 10H3v4c0 1.1.9 2 2 2h4v-2H5v-4zm14 4h-4v2h4c1.1 0 2-.9 2-2v-4h-2v4zm0-16h-4v2h4v4h2V5c0-1.1-.9-2-2-2z');
var _elm_community$elm_material_icons$Material_Icons_Image$crop_din = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V5h14v14z');
var _elm_community$elm_material_icons$Material_Icons_Image$crop_7_5 = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 7H5c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2zm0 8H5V9h14v6z');
var _elm_community$elm_material_icons$Material_Icons_Image$crop_5_4 = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 5H5c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 12H5V7h14v10z');
var _elm_community$elm_material_icons$Material_Icons_Image$crop_3_2 = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 4H5c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H5V6h14v12z');
var _elm_community$elm_material_icons$Material_Icons_Image$crop = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M17 15h2V7c0-1.1-.9-2-2-2H9v2h8v8zM7 17V1H5v4H1v2h4v10c0 1.1.9 2 2 2h10v4h2v-4h4v-2H7z');
var _elm_community$elm_material_icons$Material_Icons_Image$crop_16_9 = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 6H5c-1.1 0-2 .9-2 2v8c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 10H5V8h14v8z');
var _elm_community$elm_material_icons$Material_Icons_Image$control_point_duplicate = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M16 8h-2v3h-3v2h3v3h2v-3h3v-2h-3zM2 12c0-2.79 1.64-5.2 4.01-6.32V3.52C2.52 4.76 0 8.09 0 12s2.52 7.24 6.01 8.48v-2.16C3.64 17.2 2 14.79 2 12zm13-9c-4.96 0-9 4.04-9 9s4.04 9 9 9 9-4.04 9-9-4.04-9-9-9zm0 16c-3.86 0-7-3.14-7-7s3.14-7 7-7 7 3.14 7 7-3.14 7-7 7z');
var _elm_community$elm_material_icons$Material_Icons_Image$control_point = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.49 2 2 6.49 2 12s4.49 10 10 10 10-4.49 10-10S17.51 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z');
var _elm_community$elm_material_icons$Material_Icons_Image$compare = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M10 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h5v2h2V1h-2v2zm0 15H5l5-6v6zm9-15h-5v2h5v13l-5-6v9h5c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z');
var _elm_community$elm_material_icons$Material_Icons_Image$colorize = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20.71 5.63l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-3.12 3.12-1.93-1.91-1.41 1.41 1.42 1.42L3 16.25V21h4.75l8.92-8.92 1.42 1.42 1.41-1.41-1.92-1.92 3.12-3.12c.4-.4.4-1.03.01-1.42zM6.92 19L5 17.08l8.06-8.06 1.92 1.92L6.92 19z');
var _elm_community$elm_material_icons$Material_Icons_Image$color_lens = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 3c-4.97 0-9 4.03-9 9s4.03 9 9 9c.83 0 1.5-.67 1.5-1.5 0-.39-.15-.74-.39-1.01-.23-.26-.38-.61-.38-.99 0-.83.67-1.5 1.5-1.5H16c2.76 0 5-2.24 5-5 0-4.42-4.03-8-9-8zm-5.5 9c-.83 0-1.5-.67-1.5-1.5S5.67 9 6.5 9 8 9.67 8 10.5 7.33 12 6.5 12zm3-4C8.67 8 8 7.33 8 6.5S8.67 5 9.5 5s1.5.67 1.5 1.5S10.33 8 9.5 8zm5 0c-.83 0-1.5-.67-1.5-1.5S13.67 5 14.5 5s1.5.67 1.5 1.5S15.33 8 14.5 8zm3 4c-.83 0-1.5-.67-1.5-1.5S16.67 9 17.5 9s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z');
var _elm_community$elm_material_icons$Material_Icons_Image$collections_bookmark = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zM20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 10l-2.5-1.5L15 12V4h5v8z');
var _elm_community$elm_material_icons$Material_Icons_Image$collections = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M22 16V4c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2zm-11-4l2.03 2.71L16 11l4 5H8l3-4zM2 6v14c0 1.1.9 2 2 2h14v-2H4V6H2z');
var _elm_community$elm_material_icons$Material_Icons_Image$center_focus_weak = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M5 15H3v4c0 1.1.9 2 2 2h4v-2H5v-4zM5 5h4V3H5c-1.1 0-2 .9-2 2v4h2V5zm14-2h-4v2h4v4h2V5c0-1.1-.9-2-2-2zm0 16h-4v2h4c1.1 0 2-.9 2-2v-4h-2v4zM12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z');
var _elm_community$elm_material_icons$Material_Icons_Image$center_focus_strong = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm-7 7H3v4c0 1.1.9 2 2 2h4v-2H5v-4zM5 5h4V3H5c-1.1 0-2 .9-2 2v4h2V5zm14-2h-4v2h4v4h2V5c0-1.1-.9-2-2-2zm0 16h-4v2h4c1.1 0 2-.9 2-2v-4h-2v4z');
var _elm_community$elm_material_icons$Material_Icons_Image$camera_roll = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M14 5c0-1.1-.9-2-2-2h-1V2c0-.55-.45-1-1-1H6c-.55 0-1 .45-1 1v1H4c-1.1 0-2 .9-2 2v15c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2h8V5h-8zm-2 13h-2v-2h2v2zm0-9h-2V7h2v2zm4 9h-2v-2h2v2zm0-9h-2V7h2v2zm4 9h-2v-2h2v2zm0-9h-2V7h2v2z');
var _elm_community$elm_material_icons$Material_Icons_Image$camera_rear = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M10 20H5v2h5v2l3-3-3-3v2zm4 0v2h5v-2h-5zm3-20H7C5.9 0 5 .9 5 2v14c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V2c0-1.1-.9-2-2-2zm-5 6c-1.11 0-2-.9-2-2s.89-2 1.99-2 2 .9 2 2C14 5.1 13.1 6 12 6z');
var _elm_community$elm_material_icons$Material_Icons_Image$camera_front = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M10 20H5v2h5v2l3-3-3-3v2zm4 0v2h5v-2h-5zM12 8c1.1 0 2-.9 2-2s-.9-2-2-2-1.99.9-1.99 2S10.9 8 12 8zm5-8H7C5.9 0 5 .9 5 2v14c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V2c0-1.1-.9-2-2-2zM7 2h10v10.5c0-1.67-3.33-2.5-5-2.5s-5 .83-5 2.5V2z');
var _elm_community$elm_material_icons$Material_Icons_Image$camera_alt = F2(
	function (color, size) {
		var stringSize = _elm_lang$core$Basics$toString(size);
		var stringColor = _elm_community$elm_material_icons$Material_Icons_Internal$toRgbaString(color);
		return A2(
			_elm_lang$svg$Svg$svg,
			{
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$width(stringSize),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$height(stringSize),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$viewBox('0 0 24 24'),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$svg$Svg$circle,
					{
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$cx('12'),
						_1: {
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$cy('12'),
							_1: {
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$r('3.5'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$fill(stringColor),
									_1: {ctor: '[]'}
								}
							}
						}
					},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$svg$Svg$path,
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$d('M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z'),
							_1: {
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$fill(stringColor),
								_1: {ctor: '[]'}
							}
						},
						{ctor: '[]'}),
					_1: {ctor: '[]'}
				}
			});
	});
var _elm_community$elm_material_icons$Material_Icons_Image$camera = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M9.4 10.5l4.77-8.26C13.47 2.09 12.75 2 12 2c-2.4 0-4.6.85-6.32 2.25l3.66 6.35.06-.1zM21.54 9c-.92-2.92-3.15-5.26-6-6.34L11.88 9h9.66zm.26 1h-7.49l.29.5 4.76 8.25C21 16.97 22 14.61 22 12c0-.69-.07-1.35-.2-2zM8.54 12l-3.9-6.75C3.01 7.03 2 9.39 2 12c0 .69.07 1.35.2 2h7.49l-1.15-2zm-6.08 3c.92 2.92 3.15 5.26 6 6.34L12.12 15H2.46zm11.27 0l-3.9 6.76c.7.15 1.42.24 2.17.24 2.4 0 4.6-.85 6.32-2.25l-3.66-6.35-.93 1.6z');
var _elm_community$elm_material_icons$Material_Icons_Image$brush = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M7 14c-1.66 0-3 1.34-3 3 0 1.31-1.16 2-2 2 .92 1.22 2.49 2 4 2 2.21 0 4-1.79 4-4 0-1.66-1.34-3-3-3zm13.71-9.37l-1.34-1.34c-.39-.39-1.02-.39-1.41 0L9 12.25 11.75 15l8.96-8.96c.39-.39.39-1.02 0-1.41z');
var _elm_community$elm_material_icons$Material_Icons_Image$broken_image = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M21 5v6.59l-3-3.01-4 4.01-4-4-4 4-3-3.01V5c0-1.1.9-2 2-2h14c1.1 0 2 .9 2 2zm-3 6.42l3 3.01V19c0 1.1-.9 2-2 2H5c-1.1 0-2-.9-2-2v-6.58l3 2.99 4-4 4 4 4-3.99z');
var _elm_community$elm_material_icons$Material_Icons_Image$brightness_7 = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69L23.31 12 20 8.69zM12 18c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zm0-10c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4z');
var _elm_community$elm_material_icons$Material_Icons_Image$brightness_6 = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 15.31L23.31 12 20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69zM12 18V6c3.31 0 6 2.69 6 6s-2.69 6-6 6z');
var _elm_community$elm_material_icons$Material_Icons_Image$brightness_5 = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 15.31L23.31 12 20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69zM12 18c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z');
var _elm_community$elm_material_icons$Material_Icons_Image$brightness_4 = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69L23.31 12 20 8.69zM12 18c-.89 0-1.74-.2-2.5-.55C11.56 16.5 13 14.42 13 12s-1.44-4.5-3.5-5.45C10.26 6.2 11.11 6 12 6c3.31 0 6 2.69 6 6s-2.69 6-6 6z');
var _elm_community$elm_material_icons$Material_Icons_Image$brightness_3 = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M9 2c-1.05 0-2.05.16-3 .46 4.06 1.27 7 5.06 7 9.54 0 4.48-2.94 8.27-7 9.54.95.3 1.95.46 3 .46 5.52 0 10-4.48 10-10S14.52 2 9 2z');
var _elm_community$elm_material_icons$Material_Icons_Image$brightness_2 = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M10 2c-1.82 0-3.53.5-5 1.35C7.99 5.08 10 8.3 10 12s-2.01 6.92-5 8.65C6.47 21.5 8.18 22 10 22c5.52 0 10-4.48 10-10S15.52 2 10 2z');
var _elm_community$elm_material_icons$Material_Icons_Image$brightness_1 = F2(
	function (color, size) {
		var stringSize = _elm_lang$core$Basics$toString(size);
		var stringColor = _elm_community$elm_material_icons$Material_Icons_Internal$toRgbaString(color);
		return A2(
			_elm_lang$svg$Svg$svg,
			{
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$width(stringSize),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$height(stringSize),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$viewBox('0 0 24 24'),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$svg$Svg$circle,
					{
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$cx('12'),
						_1: {
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$cy('12'),
							_1: {
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$r('10'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$fill(stringColor),
									_1: {ctor: '[]'}
								}
							}
						}
					},
					{ctor: '[]'}),
				_1: {ctor: '[]'}
			});
	});
var _elm_community$elm_material_icons$Material_Icons_Image$blur_on = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M6 13c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0 4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-8c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm-3 .5c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zM6 5c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm15 5.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zM14 7c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0-3.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zm-11 10c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zm7 7c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zm0-17c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zM10 7c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0 5.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm8 .5c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0 4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-8c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm3 8.5c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zM14 17c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0 3.5c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zm-4-12c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0 8.5c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm4-4.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-4c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z');
var _elm_community$elm_material_icons$Material_Icons_Image$blur_off = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M14 7c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm-.2 4.48l.2.02c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5-1.5.67-1.5 1.5l.02.2c.09.67.61 1.19 1.28 1.28zM14 3.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zm-4 0c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zm11 7c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zM10 7c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm8 8c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0-4c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0-4c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm-4 13.5c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zM2.5 5.27l3.78 3.78L6 9c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1c0-.1-.03-.19-.06-.28l2.81 2.81c-.71.11-1.25.73-1.25 1.47 0 .83.67 1.5 1.5 1.5.74 0 1.36-.54 1.47-1.25l2.81 2.81c-.09-.03-.18-.06-.28-.06-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1c0-.1-.03-.19-.06-.28l3.78 3.78L20 20.23 3.77 4 2.5 5.27zM10 17c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm11-3.5c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zM6 13c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zM3 9.5c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zm7 11c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zM6 17c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm-3-3.5c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5z');
var _elm_community$elm_material_icons$Material_Icons_Image$blur_linear = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M5 17.5c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5-1.5.67-1.5 1.5.67 1.5 1.5 1.5zM9 13c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0-4c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zM3 21h18v-2H3v2zM5 9.5c.83 0 1.5-.67 1.5-1.5S5.83 6.5 5 6.5 3.5 7.17 3.5 8 4.17 9.5 5 9.5zm0 4c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5-1.5.67-1.5 1.5.67 1.5 1.5 1.5zM9 17c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm8-.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zM3 3v2h18V3H3zm14 5.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zm0 4c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zM13 9c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0 4c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0 4c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1z');
var _elm_community$elm_material_icons$Material_Icons_Image$blur_circular = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M10 9c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0 4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zM7 9.5c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zm3 7c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zm-3-3c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zm3-6c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zM14 9c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-1.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zm3 6c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zm0-4c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm2-3.5c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zm0-3.5c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1z');
var _elm_community$elm_material_icons$Material_Icons_Image$audiotrack = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 3v9.28c-.47-.17-.97-.28-1.5-.28C8.01 12 6 14.01 6 16.5S8.01 21 10.5 21c2.31 0 4.2-1.75 4.45-4H15V6h4V3h-7z');
var _elm_community$elm_material_icons$Material_Icons_Image$assistant_photo = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M14.4 6L14 4H5v17h2v-7h5.6l.4 2h7V6z');
var _elm_community$elm_material_icons$Material_Icons_Image$assistant = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h4l3 3 3-3h4c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-5.12 10.88L12 17l-1.88-4.12L6 11l4.12-1.88L12 5l1.88 4.12L18 11l-4.12 1.88z');
var _elm_community$elm_material_icons$Material_Icons_Image$adjust = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 2C6.49 2 2 6.49 2 12s4.49 10 10 10 10-4.49 10-10S17.51 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm3-8c0 1.66-1.34 3-3 3s-3-1.34-3-3 1.34-3 3-3 3 1.34 3 3z');
var _elm_community$elm_material_icons$Material_Icons_Image$add_to_photos = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-1 9h-4v4h-2v-4H9V9h4V5h2v4h4v2z');

var _elm_community$elm_material_icons$Material_Icons_File$folder_shared = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 6h-8l-2-2H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm-5 3c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2zm4 8h-8v-1c0-1.33 2.67-2 4-2s4 .67 4 2v1z');
var _elm_community$elm_material_icons$Material_Icons_File$folder_open = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 6h-8l-2-2H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 12H4V8h16v10z');
var _elm_community$elm_material_icons$Material_Icons_File$folder = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z');
var _elm_community$elm_material_icons$Material_Icons_File$file_upload = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M9 16h6v-6h4l-7-7-7 7h4zm-4 2h14v2H5z');
var _elm_community$elm_material_icons$Material_Icons_File$file_download = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z');
var _elm_community$elm_material_icons$Material_Icons_File$cloud_upload = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z');
var _elm_community$elm_material_icons$Material_Icons_File$cloud_queue = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM19 18H6c-2.21 0-4-1.79-4-4s1.79-4 4-4h.71C7.37 7.69 9.48 6 12 6c3.04 0 5.5 2.46 5.5 5.5v.5H19c1.66 0 3 1.34 3 3s-1.34 3-3 3z');
var _elm_community$elm_material_icons$Material_Icons_File$cloud_off = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19.35 10.04C18.67 6.59 15.64 4 12 4c-1.48 0-2.85.43-4.01 1.17l1.46 1.46C10.21 6.23 11.08 6 12 6c3.04 0 5.5 2.46 5.5 5.5v.5H19c1.66 0 3 1.34 3 3 0 1.13-.64 2.11-1.56 2.62l1.45 1.45C23.16 18.16 24 16.68 24 15c0-2.64-2.05-4.78-4.65-4.96zM3 5.27l2.75 2.74C2.56 8.15 0 10.77 0 14c0 3.31 2.69 6 6 6h11.73l2 2L21 20.73 4.27 4 3 5.27zM7.73 10l8 8H6c-2.21 0-4-1.79-4-4s1.79-4 4-4h1.73z');
var _elm_community$elm_material_icons$Material_Icons_File$cloud_download = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM17 13l-5 5-5-5h3V9h4v4h3z');
var _elm_community$elm_material_icons$Material_Icons_File$cloud_done = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM10 17l-3.5-3.5 1.41-1.41L10 14.17 15.18 9l1.41 1.41L10 17z');
var _elm_community$elm_material_icons$Material_Icons_File$cloud_circle = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4.5 14H8c-1.66 0-3-1.34-3-3s1.34-3 3-3l.14.01C8.58 8.28 10.13 7 12 7c2.21 0 4 1.79 4 4h.5c1.38 0 2.5 1.12 2.5 2.5S17.88 16 16.5 16z');
var _elm_community$elm_material_icons$Material_Icons_File$cloud = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z');
var _elm_community$elm_material_icons$Material_Icons_File$attachment = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M7.5 18C4.46 18 2 15.54 2 12.5S4.46 7 7.5 7H18c2.21 0 4 1.79 4 4s-1.79 4-4 4H9.5C8.12 15 7 13.88 7 12.5S8.12 10 9.5 10H17v1.5H9.5c-.55 0-1 .45-1 1s.45 1 1 1H18c1.38 0 2.5-1.12 2.5-2.5S19.38 8.5 18 8.5H7.5c-2.21 0-4 1.79-4 4s1.79 4 4 4H17V18H7.5z');

var _elm_community$elm_material_icons$Material_Icons_Av$web = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-5 14H4v-4h11v4zm0-5H4V9h11v4zm5 5h-4V9h4v9z');
var _elm_community$elm_material_icons$Material_Icons_Av$volume_up = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z');
var _elm_community$elm_material_icons$Material_Icons_Av$volume_off = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M16.5 12c0-1.77-1.02-3.29-2.5-4.03v2.21l2.45 2.45c.03-.2.05-.41.05-.63zm2.5 0c0 .94-.2 1.82-.54 2.64l1.51 1.51C20.63 14.91 21 13.5 21 12c0-4.28-2.99-7.86-7-8.77v2.06c2.89.86 5 3.54 5 6.71zM4.27 3L3 4.27 7.73 9H3v6h4l5 5v-6.73l4.25 4.25c-.67.52-1.42.93-2.25 1.18v2.06c1.38-.31 2.63-.95 3.69-1.81L19.73 21 21 19.73l-9-9L4.27 3zM12 4L9.91 6.09 12 8.18V4z');
var _elm_community$elm_material_icons$Material_Icons_Av$volume_mute = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M7 9v6h4l5 5V4l-5 5H7z');
var _elm_community$elm_material_icons$Material_Icons_Av$volume_down = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M18.5 12c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM5 9v6h4l5 5V4L9 9H5z');
var _elm_community$elm_material_icons$Material_Icons_Av$videocam_off = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M21 6.5l-4 4V7c0-.55-.45-1-1-1H9.82L21 17.18V6.5zM3.27 2L2 3.27 4.73 6H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.21 0 .39-.08.54-.18L19.73 21 21 19.73 3.27 2z');
var _elm_community$elm_material_icons$Material_Icons_Av$videocam = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l4 4v-11l-4 4z');
var _elm_community$elm_material_icons$Material_Icons_Av$video_library = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8 12.5v-9l6 4.5-6 4.5z');
var _elm_community$elm_material_icons$Material_Icons_Av$surround_sound = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zM7.76 16.24l-1.41 1.41C4.78 16.1 4 14.05 4 12c0-2.05.78-4.1 2.34-5.66l1.41 1.41C6.59 8.93 6 10.46 6 12s.59 3.07 1.76 4.24zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm5.66 1.66l-1.41-1.41C17.41 15.07 18 13.54 18 12s-.59-3.07-1.76-4.24l1.41-1.41C19.22 7.9 20 9.95 20 12c0 2.05-.78 4.1-2.34 5.66zM12 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z');
var _elm_community$elm_material_icons$Material_Icons_Av$subtitles = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zM4 12h4v2H4v-2zm10 6H4v-2h10v2zm6 0h-4v-2h4v2zm0-4H10v-2h10v2z');
var _elm_community$elm_material_icons$Material_Icons_Av$stop = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M6 6h12v12H6z');
var _elm_community$elm_material_icons$Material_Icons_Av$sort_by_alpha = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M14.94 4.66h-4.72l2.36-2.36zm-4.69 14.71h4.66l-2.33 2.33zM6.1 6.27L1.6 17.73h1.84l.92-2.45h5.11l.92 2.45h1.84L7.74 6.27H6.1zm-1.13 7.37l1.94-5.18 1.94 5.18H4.97zm10.76 2.5h6.12v1.59h-8.53v-1.29l5.92-8.56h-5.88v-1.6h8.3v1.26l-5.93 8.6z');
var _elm_community$elm_material_icons$Material_Icons_Av$snooze = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9c4.97 0 9-4.03 9-9s-4.03-9-9-9zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7zm-3-9h3.63L9 15.2V17h6v-2h-3.63L15 10.8V9H9v2z');
var _elm_community$elm_material_icons$Material_Icons_Av$skip_previous = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M6 6h2v12H6zm3.5 6l8.5 6V6z');
var _elm_community$elm_material_icons$Material_Icons_Av$skip_next = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M6 18l8.5-6L6 6v12zM16 6v12h2V6h-2z');
var _elm_community$elm_material_icons$Material_Icons_Av$shuffle = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M10.59 9.17L5.41 4 4 5.41l5.17 5.17 1.42-1.41zM14.5 4l2.04 2.04L4 18.59 5.41 20 17.96 7.46 20 9.5V4h-5.5zm.33 9.41l-1.41 1.41 3.13 3.13L14.5 20H20v-5.5l-2.04 2.04-3.13-3.13z');
var _elm_community$elm_material_icons$Material_Icons_Av$replay_5 = F2(
	function (color, size) {
		var stringColor = _elm_community$elm_material_icons$Material_Icons_Internal$toRgbaString(color);
		var stringSize = _elm_lang$core$Basics$toString(size);
		return A2(
			_elm_lang$svg$Svg$svg,
			{
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$width(stringSize),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$height(stringSize),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$viewBox('0 0 24 24'),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$svg$Svg$defs,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$svg$Svg$path,
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$id('a'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$d('M0 0h24v24H0V0z'),
									_1: {ctor: '[]'}
								}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A3(
						_elm_lang$virtual_dom$VirtualDom$node,
						'clipPath',
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$id('b'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$svg$Svg$use,
								{
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$xlinkHref('#a'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$overflow('visible'),
										_1: {ctor: '[]'}
									}
								},
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$svg$Svg$path,
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$d('M12 5V1L7 6l5 5V7c3.3 0 6 2.7 6 6s-2.7 6-6 6-6-2.7-6-6H4c0 4.4 3.6 8 8 8s8-3.6 8-8-3.6-8-8-8zm-1.3 8.9l.2-2.2h2.4v.7h-1.7l-.1.9s.1 0 .1-.1.1 0 .1-.1.1 0 .2 0h.2c.2 0 .4 0 .5.1s.3.2.4.3.2.3.3.5.1.4.1.6c0 .2 0 .4-.1.5s-.1.3-.3.5-.3.2-.4.3-.4.1-.6.1c-.2 0-.4 0-.5-.1s-.3-.1-.5-.2-.2-.2-.3-.4-.1-.3-.1-.5h.8c0 .2.1.3.2.4s.2.1.4.1c.1 0 .2 0 .3-.1l.2-.2s.1-.2.1-.3v-.6l-.1-.2-.2-.2s-.2-.1-.3-.1h-.2s-.1 0-.2.1-.1 0-.1.1-.1.1-.1.1h-.7z'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$clipPath('url(#b)'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$fill(stringColor),
										_1: {ctor: '[]'}
									}
								}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}
				}
			});
	});
var _elm_community$elm_material_icons$Material_Icons_Av$replay_30 = F2(
	function (color, size) {
		var stringColor = _elm_community$elm_material_icons$Material_Icons_Internal$toRgbaString(color);
		var stringSize = _elm_lang$core$Basics$toString(size);
		return A2(
			_elm_lang$svg$Svg$svg,
			{
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$width(stringSize),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$height(stringSize),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$viewBox('0 0 24 24'),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$svg$Svg$defs,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$svg$Svg$path,
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$id('a'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$d('M0 0h24v24H0V0z'),
									_1: {ctor: '[]'}
								}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A3(
						_elm_lang$virtual_dom$VirtualDom$node,
						'clipPath',
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$id('b'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$svg$Svg$use,
								{
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$xlinkHref('#a'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$overflow('visible'),
										_1: {ctor: '[]'}
									}
								},
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$svg$Svg$path,
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$d('M12 5V1L7 6l5 5V7c3.3 0 6 2.7 6 6s-2.7 6-6 6-6-2.7-6-6H4c0 4.4 3.6 8 8 8s8-3.6 8-8-3.6-8-8-8zm-2.4 8.5h.4c.2 0 .4-.1.5-.2s.2-.2.2-.4v-.2s-.1-.1-.1-.2-.1-.1-.2-.1h-.5s-.1.1-.2.1-.1.1-.1.2v.2h-1c0-.2 0-.3.1-.5s.2-.3.3-.4.3-.2.4-.2.4-.1.5-.1c.2 0 .4 0 .6.1s.3.1.5.2.2.2.3.4.1.3.1.5v.3s-.1.2-.1.3-.1.2-.2.2-.2.1-.3.2c.2.1.4.2.5.4s.2.4.2.6c0 .2 0 .4-.1.5s-.2.3-.3.4-.3.2-.5.2-.4.1-.6.1c-.2 0-.4 0-.5-.1s-.3-.1-.5-.2-.2-.2-.3-.4-.1-.4-.1-.6h.8v.2s.1.1.1.2.1.1.2.1h.5s.1-.1.2-.1.1-.1.1-.2v-.5s-.1-.1-.1-.2-.1-.1-.2-.1h-.6v-.7zm5.7.7c0 .3 0 .6-.1.8l-.3.6s-.3.3-.5.3-.4.1-.6.1-.4 0-.6-.1-.3-.2-.5-.3-.2-.3-.3-.6-.1-.5-.1-.8v-.7c0-.3 0-.6.1-.8l.3-.6s.3-.3.5-.3.4-.1.6-.1.4 0 .6.1.3.2.5.3.2.3.3.6.1.5.1.8v.7zm-.8-.8v-.5c0-.1-.1-.2-.1-.3s-.1-.1-.2-.2-.2-.1-.3-.1-.2 0-.3.1l-.2.2s-.1.2-.1.3v2s.1.2.1.3.1.1.2.2.2.1.3.1.2 0 .3-.1l.2-.2s.1-.2.1-.3v-1.5z'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$clipPath('url(#b)'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$fill(stringColor),
										_1: {ctor: '[]'}
									}
								}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}
				}
			});
	});
var _elm_community$elm_material_icons$Material_Icons_Av$replay = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 5V1L7 6l5 5V7c3.31 0 6 2.69 6 6s-2.69 6-6 6-6-2.69-6-6H4c0 4.42 3.58 8 8 8s8-3.58 8-8-3.58-8-8-8z');
var _elm_community$elm_material_icons$Material_Icons_Av$replay_10 = F2(
	function (color, size) {
		var stringColor = _elm_community$elm_material_icons$Material_Icons_Internal$toRgbaString(color);
		var stringSize = _elm_lang$core$Basics$toString(size);
		return A2(
			_elm_lang$svg$Svg$svg,
			{
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$width(stringSize),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$height(stringSize),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$viewBox('0 0 24 24'),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$svg$Svg$defs,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$svg$Svg$path,
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$id('a'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$d('M0 0h24v24H0V0z'),
									_1: {ctor: '[]'}
								}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A3(
						_elm_lang$virtual_dom$VirtualDom$node,
						'clipPath',
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$id('b'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$svg$Svg$use,
								{
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$xlinkHref('#a'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$overflow('visible'),
										_1: {ctor: '[]'}
									}
								},
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$svg$Svg$path,
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$d('M12 5V1L7 6l5 5V7c3.3 0 6 2.7 6 6s-2.7 6-6 6-6-2.7-6-6H4c0 4.4 3.6 8 8 8s8-3.6 8-8-3.6-8-8-8zm-1.1 11H10v-3.3L9 13v-.7l1.8-.6h.1V16zm4.3-1.8c0 .3 0 .6-.1.8l-.3.6s-.3.3-.5.3-.4.1-.6.1-.4 0-.6-.1-.3-.2-.5-.3-.2-.3-.3-.6-.1-.5-.1-.8v-.7c0-.3 0-.6.1-.8l.3-.6s.3-.3.5-.3.4-.1.6-.1.4 0 .6.1c.2.1.3.2.5.3s.2.3.3.6.1.5.1.8v.7zm-.9-.8v-.5s-.1-.2-.1-.3-.1-.1-.2-.2-.2-.1-.3-.1-.2 0-.3.1l-.2.2s-.1.2-.1.3v2s.1.2.1.3.1.1.2.2.2.1.3.1.2 0 .3-.1l.2-.2s.1-.2.1-.3v-1.5z'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$clipPath('url(#b)'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$fill(stringColor),
										_1: {ctor: '[]'}
									}
								}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}
				}
			});
	});
var _elm_community$elm_material_icons$Material_Icons_Av$repeat_one = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M7 7h10v3l4-4-4-4v3H5v6h2V7zm10 10H7v-3l-4 4 4 4v-3h12v-6h-2v4zm-4-2V9h-1l-2 1v1h1.5v4H13z');
var _elm_community$elm_material_icons$Material_Icons_Av$repeat = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M7 7h10v3l4-4-4-4v3H5v6h2V7zm10 10H7v-3l-4 4 4 4v-3h12v-6h-2v4z');
var _elm_community$elm_material_icons$Material_Icons_Av$recent_actors = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M21 5v14h2V5h-2zm-4 14h2V5h-2v14zM14 5H2c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zM8 7.75c1.24 0 2.25 1.01 2.25 2.25S9.24 12.25 8 12.25 5.75 11.24 5.75 10 6.76 7.75 8 7.75zM12.5 17h-9v-.75c0-1.5 3-2.25 4.5-2.25s4.5.75 4.5 2.25V17z');
var _elm_community$elm_material_icons$Material_Icons_Av$radio = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M3.24 6.15C2.51 6.43 2 7.17 2 8v12c0 1.1.89 2 2 2h16c1.11 0 2-.9 2-2V8c0-1.11-.89-2-2-2H8.3l8.26-3.34L15.88 1 3.24 6.15zM7 20c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm13-8h-2v-2h-2v2H4V8h16v4z');
var _elm_community$elm_material_icons$Material_Icons_Av$queue_music = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M15 6H3v2h12V6zm0 4H3v2h12v-2zM3 16h8v-2H3v2zM17 6v8.18c-.31-.11-.65-.18-1-.18-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3V8h3V6h-5z');
var _elm_community$elm_material_icons$Material_Icons_Av$queue = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-1 9h-4v4h-2v-4H9V9h4V5h2v4h4v2z');
var _elm_community$elm_material_icons$Material_Icons_Av$playlist_add = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M14 10H2v2h12v-2zm0-4H2v2h12V6zm4 8v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zM2 16h8v-2H2v2z');
var _elm_community$elm_material_icons$Material_Icons_Av$play_circle_outline = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z');
var _elm_community$elm_material_icons$Material_Icons_Av$play_circle_filled = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 14.5v-9l6 4.5-6 4.5z');
var _elm_community$elm_material_icons$Material_Icons_Av$play_arrow = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M8 5v14l11-7z');
var _elm_community$elm_material_icons$Material_Icons_Av$pause_circle_outline = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M9 16h2V8H9v8zm3-14C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm1-4h2V8h-2v8z');
var _elm_community$elm_material_icons$Material_Icons_Av$pause_circle_filled = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1 14H9V8h2v8zm4 0h-2V8h2v8z');
var _elm_community$elm_material_icons$Material_Icons_Av$pause = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M6 19h4V5H6v14zm8-14v14h4V5h-4z');
var _elm_community$elm_material_icons$Material_Icons_Av$not_interested = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8 0-1.85.63-3.55 1.69-4.9L16.9 18.31C15.55 19.37 13.85 20 12 20zm6.31-3.1L7.1 5.69C8.45 4.63 10.15 4 12 4c4.42 0 8 3.58 8 8 0 1.85-.63 3.55-1.69 4.9z');
var _elm_community$elm_material_icons$Material_Icons_Av$new_releases = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M23 12l-2.44-2.78.34-3.68-3.61-.82-1.89-3.18L12 3 8.6 1.54 6.71 4.72l-3.61.81.34 3.68L1 12l2.44 2.78-.34 3.69 3.61.82 1.89 3.18L12 21l3.4 1.46 1.89-3.18 3.61-.82-.34-3.68L23 12zm-10 5h-2v-2h2v2zm0-4h-2V7h2v6z');
var _elm_community$elm_material_icons$Material_Icons_Av$movie = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M18 4l2 4h-3l-2-4h-2l2 4h-3l-2-4H8l2 4H7L5 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4h-4z');
var _elm_community$elm_material_icons$Material_Icons_Av$mic_off = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 11h-1.7c0 .74-.16 1.43-.43 2.05l1.23 1.23c.56-.98.9-2.09.9-3.28zm-4.02.17c0-.06.02-.11.02-.17V5c0-1.66-1.34-3-3-3S9 3.34 9 5v.18l5.98 5.99zM4.27 3L3 4.27l6.01 6.01V11c0 1.66 1.33 3 2.99 3 .22 0 .44-.03.65-.08l1.66 1.66c-.71.33-1.5.52-2.31.52-2.76 0-5.3-2.1-5.3-5.1H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c.91-.13 1.77-.45 2.54-.9L19.73 21 21 19.73 4.27 3z');
var _elm_community$elm_material_icons$Material_Icons_Av$mic_none = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 14c1.66 0 2.99-1.34 2.99-3L15 5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm-1.2-9.1c0-.66.54-1.2 1.2-1.2.66 0 1.2.54 1.2 1.2l-.01 6.2c0 .66-.53 1.2-1.19 1.2-.66 0-1.2-.54-1.2-1.2V4.9zm6.5 6.1c0 3-2.54 5.1-5.3 5.1S6.7 14 6.7 11H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7z');
var _elm_community$elm_material_icons$Material_Icons_Av$mic = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 14c1.66 0 2.99-1.34 2.99-3L15 5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm5.3-3c0 3-2.54 5.1-5.3 5.1S6.7 14 6.7 11H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7z');
var _elm_community$elm_material_icons$Material_Icons_Av$loop = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z');
var _elm_community$elm_material_icons$Material_Icons_Av$library_music = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 5h-3v5.5c0 1.38-1.12 2.5-2.5 2.5S10 13.88 10 12.5s1.12-2.5 2.5-2.5c.57 0 1.08.19 1.5.51V5h4v2zM4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6z');
var _elm_community$elm_material_icons$Material_Icons_Av$library_books = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-1 9H9V9h10v2zm-4 4H9v-2h6v2zm4-8H9V5h10v2z');
var _elm_community$elm_material_icons$Material_Icons_Av$library_add = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-1 9h-4v4h-2v-4H9V9h4V5h2v4h4v2z');
var _elm_community$elm_material_icons$Material_Icons_Av$high_quality = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 4H5c-1.11 0-2 .9-2 2v12c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-8 11H9.5v-2h-2v2H6V9h1.5v2.5h2V9H11v6zm7-1c0 .55-.45 1-1 1h-.75v1.5h-1.5V15H14c-.55 0-1-.45-1-1v-4c0-.55.45-1 1-1h3c.55 0 1 .45 1 1v4zm-3.5-.5h2v-3h-2v3z');
var _elm_community$elm_material_icons$Material_Icons_Av$hearing = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M17 20c-.29 0-.56-.06-.76-.15-.71-.37-1.21-.88-1.71-2.38-.51-1.56-1.47-2.29-2.39-3-.79-.61-1.61-1.24-2.32-2.53C9.29 10.98 9 9.93 9 9c0-2.8 2.2-5 5-5s5 2.2 5 5h2c0-3.93-3.07-7-7-7S7 5.07 7 9c0 1.26.38 2.65 1.07 3.9.91 1.65 1.98 2.48 2.85 3.15.81.62 1.39 1.07 1.71 2.05.6 1.82 1.37 2.84 2.73 3.55.51.23 1.07.35 1.64.35 2.21 0 4-1.79 4-4h-2c0 1.1-.9 2-2 2zM7.64 2.64L6.22 1.22C4.23 3.21 3 5.96 3 9s1.23 5.79 3.22 7.78l1.41-1.41C6.01 13.74 5 11.49 5 9s1.01-4.74 2.64-6.36zM11.5 9c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5-1.12-2.5-2.5-2.5-2.5 1.12-2.5 2.5z');
var _elm_community$elm_material_icons$Material_Icons_Av$hd = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-8 12H9.5v-2h-2v2H6V9h1.5v2.5h2V9H11v6zm2-6h4c.55 0 1 .45 1 1v4c0 .55-.45 1-1 1h-4V9zm1.5 4.5h2v-3h-2v3z');
var _elm_community$elm_material_icons$Material_Icons_Av$games = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M15 7.5V2H9v5.5l3 3 3-3zM7.5 9H2v6h5.5l3-3-3-3zM9 16.5V22h6v-5.5l-3-3-3 3zM16.5 9l-3 3 3 3H22V9h-5.5z');
var _elm_community$elm_material_icons$Material_Icons_Av$forward_5 = F2(
	function (color, size) {
		var stringColor = _elm_community$elm_material_icons$Material_Icons_Internal$toRgbaString(color);
		var stringSize = _elm_lang$core$Basics$toString(size);
		return A2(
			_elm_lang$svg$Svg$svg,
			{
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$width(stringSize),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$height(stringSize),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$viewBox('0 0 24 24'),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$svg$Svg$defs,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$svg$Svg$path,
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$id('a'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$d('M24 24H0V0h24v24z'),
									_1: {ctor: '[]'}
								}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A3(
						_elm_lang$virtual_dom$VirtualDom$node,
						'clipPath',
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$id('b'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$svg$Svg$use,
								{
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$xlinkHref('#a'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$overflow('visible'),
										_1: {ctor: '[]'}
									}
								},
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$svg$Svg$path,
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$d('M4 13c0 4.4 3.6 8 8 8s8-3.6 8-8h-2c0 3.3-2.7 6-6 6s-6-2.7-6-6 2.7-6 6-6v4l5-5-5-5v4c-4.4 0-8 3.6-8 8zm6.7.9l.2-2.2h2.4v.7h-1.7l-.1.9s.1 0 .1-.1.1 0 .1-.1.1 0 .2 0h.2c.2 0 .4 0 .5.1s.3.2.4.3.2.3.3.5.1.4.1.6c0 .2 0 .4-.1.5s-.1.3-.3.5-.3.2-.5.3-.4.1-.6.1c-.2 0-.4 0-.5-.1s-.3-.1-.5-.2-.2-.2-.3-.4-.1-.3-.1-.5h.8c0 .2.1.3.2.4s.2.1.4.1c.1 0 .2 0 .3-.1l.2-.2s.1-.2.1-.3v-.6l-.1-.2-.2-.2s-.2-.1-.3-.1h-.2s-.1 0-.2.1-.1 0-.1.1-.1.1-.1.1h-.6z'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$clipPath('url(#b)'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$fill(stringColor),
										_1: {ctor: '[]'}
									}
								}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}
				}
			});
	});
var _elm_community$elm_material_icons$Material_Icons_Av$forward_30 = F2(
	function (color, size) {
		var stringColor = _elm_community$elm_material_icons$Material_Icons_Internal$toRgbaString(color);
		var stringSize = _elm_lang$core$Basics$toString(size);
		return A2(
			_elm_lang$svg$Svg$svg,
			{
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$width(stringSize),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$height(stringSize),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$viewBox('0 0 24 24'),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$svg$Svg$defs,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$svg$Svg$path,
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$id('a'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$d('M24 24H0V0h24v24z'),
									_1: {ctor: '[]'}
								}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A3(
						_elm_lang$virtual_dom$VirtualDom$node,
						'clipPath',
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$id('b'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$svg$Svg$use,
								{
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$xlinkHref('#a'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$overflow('visible'),
										_1: {ctor: '[]'}
									}
								},
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$svg$Svg$path,
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$d('M9.6 13.5h.4c.2 0 .4-.1.5-.2s.2-.2.2-.4v-.2s-.1-.1-.1-.2-.1-.1-.2-.1h-.5s-.1.1-.2.1-.1.1-.1.2v.2h-1c0-.2 0-.3.1-.5s.2-.3.3-.4.3-.2.4-.2.4-.1.5-.1c.2 0 .4 0 .6.1s.3.1.5.2.2.2.3.4.1.3.1.5v.3s-.1.2-.1.3-.1.2-.2.2-.2.1-.3.2c.2.1.4.2.5.4s.2.4.2.6c0 .2 0 .4-.1.5s-.2.3-.3.4-.3.2-.5.2-.4.1-.6.1c-.2 0-.4 0-.5-.1s-.3-.1-.5-.2-.2-.2-.3-.4-.1-.4-.1-.6h.8v.2s.1.1.1.2.1.1.2.1h.5s.1-.1.2-.1.1-.1.1-.2v-.5s-.1-.1-.1-.2-.1-.1-.2-.1h-.6v-.7zm5.7.7c0 .3 0 .6-.1.8l-.3.6s-.3.3-.5.3-.4.1-.6.1-.4 0-.6-.1-.3-.2-.5-.3-.2-.3-.3-.6-.1-.5-.1-.8v-.7c0-.3 0-.6.1-.8l.3-.6s.3-.3.5-.3.4-.1.6-.1.4 0 .6.1.3.2.5.3.2.3.3.6.1.5.1.8v.7zm-.9-.8v-.5s-.1-.2-.1-.3-.1-.1-.2-.2-.2-.1-.3-.1-.2 0-.3.1l-.2.2s-.1.2-.1.3v2s.1.2.1.3.1.1.2.2.2.1.3.1.2 0 .3-.1l.2-.2s.1-.2.1-.3v-1.5zM4 13c0 4.4 3.6 8 8 8s8-3.6 8-8h-2c0 3.3-2.7 6-6 6s-6-2.7-6-6 2.7-6 6-6v4l5-5-5-5v4c-4.4 0-8 3.6-8 8z'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$clipPath('url(#b)'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$fill(stringColor),
										_1: {ctor: '[]'}
									}
								}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}
				}
			});
	});
var _elm_community$elm_material_icons$Material_Icons_Av$forward_10 = F2(
	function (color, size) {
		var stringColor = _elm_community$elm_material_icons$Material_Icons_Internal$toRgbaString(color);
		var stringSize = _elm_lang$core$Basics$toString(size);
		return A2(
			_elm_lang$svg$Svg$svg,
			{
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$width(stringSize),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$height(stringSize),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$viewBox('0 0 24 24'),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$svg$Svg$defs,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$svg$Svg$path,
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$id('a'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$d('M24 24H0V0h24v24z'),
									_1: {ctor: '[]'}
								}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A3(
						_elm_lang$virtual_dom$VirtualDom$node,
						'clipPath',
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$id('b'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$svg$Svg$use,
								{
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$xlinkHref('#a'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$overflow('visible'),
										_1: {ctor: '[]'}
									}
								},
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$svg$Svg$path,
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$d('M4 13c0 4.4 3.6 8 8 8s8-3.6 8-8h-2c0 3.3-2.7 6-6 6s-6-2.7-6-6 2.7-6 6-6v4l5-5-5-5v4c-4.4 0-8 3.6-8 8zm6.8 3H10v-3.3L9 13v-.7l1.8-.6h.1V16zm4.3-1.8c0 .3 0 .6-.1.8l-.3.6s-.3.3-.5.3-.4.1-.6.1-.4 0-.6-.1-.3-.2-.5-.3-.2-.3-.3-.6-.1-.5-.1-.8v-.7c0-.3 0-.6.1-.8l.3-.6s.3-.3.5-.3.4-.1.6-.1.4 0 .6.1.3.2.5.3.2.3.3.6.1.5.1.8v.7zm-.8-.8v-.5s-.1-.2-.1-.3-.1-.1-.2-.2-.2-.1-.3-.1-.2 0-.3.1l-.2.2s-.1.2-.1.3v2s.1.2.1.3.1.1.2.2.2.1.3.1.2 0 .3-.1l.2-.2s.1-.2.1-.3v-1.5z'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$clipPath('url(#b)'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$fill(stringColor),
										_1: {ctor: '[]'}
									}
								}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}
				}
			});
	});
var _elm_community$elm_material_icons$Material_Icons_Av$fast_rewind = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M11 18V6l-8.5 6 8.5 6zm.5-6l8.5 6V6l-8.5 6z');
var _elm_community$elm_material_icons$Material_Icons_Av$fast_forward = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M4 18l8.5-6L4 6v12zm9-12v12l8.5-6L13 6z');
var _elm_community$elm_material_icons$Material_Icons_Av$explicit = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4 6h-4v2h4v2h-4v2h4v2H9V7h6v2z');
var _elm_community$elm_material_icons$Material_Icons_Av$equalizer = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M10 20h4V4h-4v16zm-6 0h4v-8H4v8zM16 9v11h4V9h-4z');
var _elm_community$elm_material_icons$Material_Icons_Av$closed_caption = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M19 4H5c-1.11 0-2 .9-2 2v12c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-8 7H9.5v-.5h-2v3h2V13H11v1c0 .55-.45 1-1 1H7c-.55 0-1-.45-1-1v-4c0-.55.45-1 1-1h3c.55 0 1 .45 1 1v1zm7 0h-1.5v-.5h-2v3h2V13H18v1c0 .55-.45 1-1 1h-3c-.55 0-1-.45-1-1v-4c0-.55.45-1 1-1h3c.55 0 1 .45 1 1v1z');
var _elm_community$elm_material_icons$Material_Icons_Av$av_timer = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M11 17c0 .55.45 1 1 1s1-.45 1-1-.45-1-1-1-1 .45-1 1zm0-14v4h2V5.08c3.39.49 6 3.39 6 6.92 0 3.87-3.13 7-7 7s-7-3.13-7-7c0-1.68.59-3.22 1.58-4.42L12 13l1.41-1.41-6.8-6.8v.02C4.42 6.45 3 9.05 3 12c0 4.97 4.02 9 9 9 4.97 0 9-4.03 9-9s-4.03-9-9-9h-1zm7 9c0-.55-.45-1-1-1s-1 .45-1 1 .45 1 1 1 1-.45 1-1zM6 12c0 .55.45 1 1 1s1-.45 1-1-.45-1-1-1-1 .45-1 1z');
var _elm_community$elm_material_icons$Material_Icons_Av$album = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 14.5c-2.49 0-4.5-2.01-4.5-4.5S9.51 7.5 12 7.5s4.5 2.01 4.5 4.5-2.01 4.5-4.5 4.5zm0-5.5c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1z');
var _elm_community$elm_material_icons$Material_Icons_Av$airplay = F2(
	function (color, size) {
		var stringSize = _elm_lang$core$Basics$toString(size);
		var stringColor = _elm_community$elm_material_icons$Material_Icons_Internal$toRgbaString(color);
		return A2(
			_elm_lang$svg$Svg$svg,
			{
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$width(stringSize),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$height(stringSize),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$viewBox('0 0 24 24'),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$svg$Svg$defs,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$svg$Svg$path,
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$id('a'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$d('M0 0h24v24H0V0z'),
									_1: {ctor: '[]'}
								}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$svg$Svg$defs,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$svg$Svg$path,
								{
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$id('c'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$d('M0 0h24v24H0V0z'),
										_1: {ctor: '[]'}
									}
								},
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A3(
							_elm_lang$virtual_dom$VirtualDom$node,
							'clipPath',
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$id('b'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$svg$Svg$use,
									{
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$xlinkHref('#a'),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$overflow('visible'),
											_1: {ctor: '[]'}
										}
									},
									{ctor: '[]'}),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A3(
								_elm_lang$virtual_dom$VirtualDom$node,
								'clipPath',
								{
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$id('d'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$clipPath('url(#b)'),
										_1: {ctor: '[]'}
									}
								},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$svg$Svg$use,
										{
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$xlinkHref('#c'),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$overflow('visible'),
												_1: {ctor: '[]'}
											}
										},
										{ctor: '[]'}),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$svg$Svg$path,
									{
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$d('M6 22h12l-6-6zM21 3H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h4v-2H3V5h18v12h-4v2h4c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z'),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$clipPath('url(#d)'),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$fill(stringColor),
												_1: {ctor: '[]'}
											}
										}
									},
									{ctor: '[]'}),
								_1: {ctor: '[]'}
							}
						}
					}
				}
			});
	});

var _elm_community$elm_material_icons$Material_Icons_Alert$warning = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z');
var _elm_community$elm_material_icons$Material_Icons_Alert$error_outline = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z');
var _elm_community$elm_material_icons$Material_Icons_Alert$error = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z');
var _elm_community$elm_material_icons$Material_Icons_Alert$add_alert = _elm_community$elm_material_icons$Material_Icons_Internal$icon('M10.01 21.01c0 1.1.89 1.99 1.99 1.99s1.99-.89 1.99-1.99h-3.98zm8.87-4.19V11c0-3.25-2.25-5.97-5.29-6.69v-.72C13.59 2.71 12.88 2 12 2s-1.59.71-1.59 1.59v.72C7.37 5.03 5.12 7.75 5.12 11v5.82L3 18.94V20h18v-1.06l-2.12-2.12zM16 13.01h-3v3h-2v-3H8V11h3V8h2v3h3v2.01z');

var _bluedogtraining$bdt_elm$Icon$renderIcon = F3(
	function (size, color, materialIcon) {
		return A2(
			_rtfeldman$elm_css$Html_Styled$div,
			{
				ctor: '::',
				_0: _rtfeldman$elm_css$Html_Styled_Attributes$css(
					{
						ctor: '::',
						_0: _rtfeldman$elm_css$Css$displayFlex,
						_1: {
							ctor: '::',
							_0: _rtfeldman$elm_css$Css$justifyContent(_rtfeldman$elm_css$Css$center),
							_1: {
								ctor: '::',
								_0: _rtfeldman$elm_css$Css$alignItems(_rtfeldman$elm_css$Css$center),
								_1: {
									ctor: '::',
									_0: _rtfeldman$elm_css$Css$minHeight(
										_rtfeldman$elm_css$Css$pct(100)),
									_1: {ctor: '[]'}
								}
							}
						}
					}),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: _rtfeldman$elm_css$Html_Styled$fromUnstyled(
					A2(
						_elm_lang$svg$Svg$svg,
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$width(
								_elm_lang$core$Basics$toString(size)),
							_1: {
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$height(
									_elm_lang$core$Basics$toString(size)),
								_1: {ctor: '[]'}
							}
						},
						{
							ctor: '::',
							_0: A2(materialIcon, color, size),
							_1: {ctor: '[]'}
						})),
				_1: {ctor: '[]'}
			});
	});
var _bluedogtraining$bdt_elm$Icon$render = F3(
	function (icon, size, color) {
		var _p0 = icon;
		switch (_p0.ctor) {
			case 'ExpandMore':
				return A3(_bluedogtraining$bdt_elm$Icon$renderIcon, size, color, _elm_community$elm_material_icons$Material_Icons_Navigation$expand_more);
			case 'Clear':
				return A3(_bluedogtraining$bdt_elm$Icon$renderIcon, size, color, _elm_community$elm_material_icons$Material_Icons_Content$clear);
			case 'CheckBoxChecked':
				return A3(_bluedogtraining$bdt_elm$Icon$renderIcon, size, color, _elm_community$elm_material_icons$Material_Icons_Toggle$check_box);
			case 'CheckBoxUnchecked':
				return A3(_bluedogtraining$bdt_elm$Icon$renderIcon, size, color, _elm_community$elm_material_icons$Material_Icons_Toggle$check_box_outline_blank);
			case 'Calendar':
				return A3(_bluedogtraining$bdt_elm$Icon$renderIcon, size, color, _elm_community$elm_material_icons$Material_Icons_Action$perm_contact_calendar);
			case 'ChevronLeft':
				return A3(_bluedogtraining$bdt_elm$Icon$renderIcon, size, color, _elm_community$elm_material_icons$Material_Icons_Navigation$chevron_left);
			case 'ChevronRight':
				return A3(_bluedogtraining$bdt_elm$Icon$renderIcon, size, color, _elm_community$elm_material_icons$Material_Icons_Navigation$chevron_right);
			case 'Spinner':
				return A3(_bluedogtraining$bdt_elm$Icon$renderIcon, size, color, _elm_community$elm_material_icons$Material_Icons_Action$autorenew);
			case 'Edit':
				return A3(_bluedogtraining$bdt_elm$Icon$renderIcon, size, color, _elm_community$elm_material_icons$Material_Icons_Image$edit);
			case 'Download':
				return A3(_bluedogtraining$bdt_elm$Icon$renderIcon, size, color, _elm_community$elm_material_icons$Material_Icons_File$cloud_download);
			case 'Delete':
				return A3(_bluedogtraining$bdt_elm$Icon$renderIcon, size, color, _elm_community$elm_material_icons$Material_Icons_Action$delete);
			case 'FastForward':
				return A3(_bluedogtraining$bdt_elm$Icon$renderIcon, size, color, _elm_community$elm_material_icons$Material_Icons_Av$fast_forward);
			case 'FastRewind':
				return A3(_bluedogtraining$bdt_elm$Icon$renderIcon, size, color, _elm_community$elm_material_icons$Material_Icons_Av$fast_rewind);
			case 'SkipNext':
				return A3(_bluedogtraining$bdt_elm$Icon$renderIcon, size, color, _elm_community$elm_material_icons$Material_Icons_Av$skip_next);
			case 'SkipPrevious':
				return A3(_bluedogtraining$bdt_elm$Icon$renderIcon, size, color, _elm_community$elm_material_icons$Material_Icons_Av$skip_previous);
			case 'Lock':
				return A3(_bluedogtraining$bdt_elm$Icon$renderIcon, size, color, _elm_community$elm_material_icons$Material_Icons_Action$lock);
			case 'LockOpen':
				return A3(_bluedogtraining$bdt_elm$Icon$renderIcon, size, color, _elm_community$elm_material_icons$Material_Icons_Action$lock_open);
			case 'Add':
				return A3(_bluedogtraining$bdt_elm$Icon$renderIcon, size, color, _elm_community$elm_material_icons$Material_Icons_Content$add);
			default:
				return A3(_bluedogtraining$bdt_elm$Icon$renderIcon, size, color, _elm_community$elm_material_icons$Material_Icons_Alert$warning);
		}
	});
var _bluedogtraining$bdt_elm$Icon$Warning = {ctor: 'Warning'};
var _bluedogtraining$bdt_elm$Icon$Add = {ctor: 'Add'};
var _bluedogtraining$bdt_elm$Icon$LockOpen = {ctor: 'LockOpen'};
var _bluedogtraining$bdt_elm$Icon$Lock = {ctor: 'Lock'};
var _bluedogtraining$bdt_elm$Icon$SkipNext = {ctor: 'SkipNext'};
var _bluedogtraining$bdt_elm$Icon$SkipPrevious = {ctor: 'SkipPrevious'};
var _bluedogtraining$bdt_elm$Icon$FastRewind = {ctor: 'FastRewind'};
var _bluedogtraining$bdt_elm$Icon$FastForward = {ctor: 'FastForward'};
var _bluedogtraining$bdt_elm$Icon$Delete = {ctor: 'Delete'};
var _bluedogtraining$bdt_elm$Icon$Download = {ctor: 'Download'};
var _bluedogtraining$bdt_elm$Icon$Edit = {ctor: 'Edit'};
var _bluedogtraining$bdt_elm$Icon$Spinner = {ctor: 'Spinner'};
var _bluedogtraining$bdt_elm$Icon$ChevronRight = {ctor: 'ChevronRight'};
var _bluedogtraining$bdt_elm$Icon$ChevronLeft = {ctor: 'ChevronLeft'};
var _bluedogtraining$bdt_elm$Icon$Calendar = {ctor: 'Calendar'};
var _bluedogtraining$bdt_elm$Icon$CheckBoxUnchecked = {ctor: 'CheckBoxUnchecked'};
var _bluedogtraining$bdt_elm$Icon$CheckBoxChecked = {ctor: 'CheckBoxChecked'};
var _bluedogtraining$bdt_elm$Icon$Clear = {ctor: 'Clear'};
var _bluedogtraining$bdt_elm$Icon$ExpandMore = {ctor: 'ExpandMore'};

//import Native.Scheduler //

var _elm_lang$core$Native_Time = function() {

var now = _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
{
	callback(_elm_lang$core$Native_Scheduler.succeed(Date.now()));
});

function setInterval_(interval, task)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		var id = setInterval(function() {
			_elm_lang$core$Native_Scheduler.rawSpawn(task);
		}, interval);

		return function() { clearInterval(id); };
	});
}

return {
	now: now,
	setInterval_: F2(setInterval_)
};

}();
var _elm_lang$core$Task$onError = _elm_lang$core$Native_Scheduler.onError;
var _elm_lang$core$Task$andThen = _elm_lang$core$Native_Scheduler.andThen;
var _elm_lang$core$Task$spawnCmd = F2(
	function (router, _p0) {
		var _p1 = _p0;
		return _elm_lang$core$Native_Scheduler.spawn(
			A2(
				_elm_lang$core$Task$andThen,
				_elm_lang$core$Platform$sendToApp(router),
				_p1._0));
	});
var _elm_lang$core$Task$fail = _elm_lang$core$Native_Scheduler.fail;
var _elm_lang$core$Task$mapError = F2(
	function (convert, task) {
		return A2(
			_elm_lang$core$Task$onError,
			function (_p2) {
				return _elm_lang$core$Task$fail(
					convert(_p2));
			},
			task);
	});
var _elm_lang$core$Task$succeed = _elm_lang$core$Native_Scheduler.succeed;
var _elm_lang$core$Task$map = F2(
	function (func, taskA) {
		return A2(
			_elm_lang$core$Task$andThen,
			function (a) {
				return _elm_lang$core$Task$succeed(
					func(a));
			},
			taskA);
	});
var _elm_lang$core$Task$map2 = F3(
	function (func, taskA, taskB) {
		return A2(
			_elm_lang$core$Task$andThen,
			function (a) {
				return A2(
					_elm_lang$core$Task$andThen,
					function (b) {
						return _elm_lang$core$Task$succeed(
							A2(func, a, b));
					},
					taskB);
			},
			taskA);
	});
var _elm_lang$core$Task$map3 = F4(
	function (func, taskA, taskB, taskC) {
		return A2(
			_elm_lang$core$Task$andThen,
			function (a) {
				return A2(
					_elm_lang$core$Task$andThen,
					function (b) {
						return A2(
							_elm_lang$core$Task$andThen,
							function (c) {
								return _elm_lang$core$Task$succeed(
									A3(func, a, b, c));
							},
							taskC);
					},
					taskB);
			},
			taskA);
	});
var _elm_lang$core$Task$map4 = F5(
	function (func, taskA, taskB, taskC, taskD) {
		return A2(
			_elm_lang$core$Task$andThen,
			function (a) {
				return A2(
					_elm_lang$core$Task$andThen,
					function (b) {
						return A2(
							_elm_lang$core$Task$andThen,
							function (c) {
								return A2(
									_elm_lang$core$Task$andThen,
									function (d) {
										return _elm_lang$core$Task$succeed(
											A4(func, a, b, c, d));
									},
									taskD);
							},
							taskC);
					},
					taskB);
			},
			taskA);
	});
var _elm_lang$core$Task$map5 = F6(
	function (func, taskA, taskB, taskC, taskD, taskE) {
		return A2(
			_elm_lang$core$Task$andThen,
			function (a) {
				return A2(
					_elm_lang$core$Task$andThen,
					function (b) {
						return A2(
							_elm_lang$core$Task$andThen,
							function (c) {
								return A2(
									_elm_lang$core$Task$andThen,
									function (d) {
										return A2(
											_elm_lang$core$Task$andThen,
											function (e) {
												return _elm_lang$core$Task$succeed(
													A5(func, a, b, c, d, e));
											},
											taskE);
									},
									taskD);
							},
							taskC);
					},
					taskB);
			},
			taskA);
	});
var _elm_lang$core$Task$sequence = function (tasks) {
	var _p3 = tasks;
	if (_p3.ctor === '[]') {
		return _elm_lang$core$Task$succeed(
			{ctor: '[]'});
	} else {
		return A3(
			_elm_lang$core$Task$map2,
			F2(
				function (x, y) {
					return {ctor: '::', _0: x, _1: y};
				}),
			_p3._0,
			_elm_lang$core$Task$sequence(_p3._1));
	}
};
var _elm_lang$core$Task$onEffects = F3(
	function (router, commands, state) {
		return A2(
			_elm_lang$core$Task$map,
			function (_p4) {
				return {ctor: '_Tuple0'};
			},
			_elm_lang$core$Task$sequence(
				A2(
					_elm_lang$core$List$map,
					_elm_lang$core$Task$spawnCmd(router),
					commands)));
	});
var _elm_lang$core$Task$init = _elm_lang$core$Task$succeed(
	{ctor: '_Tuple0'});
var _elm_lang$core$Task$onSelfMsg = F3(
	function (_p7, _p6, _p5) {
		return _elm_lang$core$Task$succeed(
			{ctor: '_Tuple0'});
	});
var _elm_lang$core$Task$command = _elm_lang$core$Native_Platform.leaf('Task');
var _elm_lang$core$Task$Perform = function (a) {
	return {ctor: 'Perform', _0: a};
};
var _elm_lang$core$Task$perform = F2(
	function (toMessage, task) {
		return _elm_lang$core$Task$command(
			_elm_lang$core$Task$Perform(
				A2(_elm_lang$core$Task$map, toMessage, task)));
	});
var _elm_lang$core$Task$attempt = F2(
	function (resultToMessage, task) {
		return _elm_lang$core$Task$command(
			_elm_lang$core$Task$Perform(
				A2(
					_elm_lang$core$Task$onError,
					function (_p8) {
						return _elm_lang$core$Task$succeed(
							resultToMessage(
								_elm_lang$core$Result$Err(_p8)));
					},
					A2(
						_elm_lang$core$Task$andThen,
						function (_p9) {
							return _elm_lang$core$Task$succeed(
								resultToMessage(
									_elm_lang$core$Result$Ok(_p9)));
						},
						task))));
	});
var _elm_lang$core$Task$cmdMap = F2(
	function (tagger, _p10) {
		var _p11 = _p10;
		return _elm_lang$core$Task$Perform(
			A2(_elm_lang$core$Task$map, tagger, _p11._0));
	});
_elm_lang$core$Native_Platform.effectManagers['Task'] = {pkg: 'elm-lang/core', init: _elm_lang$core$Task$init, onEffects: _elm_lang$core$Task$onEffects, onSelfMsg: _elm_lang$core$Task$onSelfMsg, tag: 'cmd', cmdMap: _elm_lang$core$Task$cmdMap};

var _elm_lang$core$Time$setInterval = _elm_lang$core$Native_Time.setInterval_;
var _elm_lang$core$Time$spawnHelp = F3(
	function (router, intervals, processes) {
		var _p0 = intervals;
		if (_p0.ctor === '[]') {
			return _elm_lang$core$Task$succeed(processes);
		} else {
			var _p1 = _p0._0;
			var spawnRest = function (id) {
				return A3(
					_elm_lang$core$Time$spawnHelp,
					router,
					_p0._1,
					A3(_elm_lang$core$Dict$insert, _p1, id, processes));
			};
			var spawnTimer = _elm_lang$core$Native_Scheduler.spawn(
				A2(
					_elm_lang$core$Time$setInterval,
					_p1,
					A2(_elm_lang$core$Platform$sendToSelf, router, _p1)));
			return A2(_elm_lang$core$Task$andThen, spawnRest, spawnTimer);
		}
	});
var _elm_lang$core$Time$addMySub = F2(
	function (_p2, state) {
		var _p3 = _p2;
		var _p6 = _p3._1;
		var _p5 = _p3._0;
		var _p4 = A2(_elm_lang$core$Dict$get, _p5, state);
		if (_p4.ctor === 'Nothing') {
			return A3(
				_elm_lang$core$Dict$insert,
				_p5,
				{
					ctor: '::',
					_0: _p6,
					_1: {ctor: '[]'}
				},
				state);
		} else {
			return A3(
				_elm_lang$core$Dict$insert,
				_p5,
				{ctor: '::', _0: _p6, _1: _p4._0},
				state);
		}
	});
var _elm_lang$core$Time$inMilliseconds = function (t) {
	return t;
};
var _elm_lang$core$Time$millisecond = 1;
var _elm_lang$core$Time$second = 1000 * _elm_lang$core$Time$millisecond;
var _elm_lang$core$Time$minute = 60 * _elm_lang$core$Time$second;
var _elm_lang$core$Time$hour = 60 * _elm_lang$core$Time$minute;
var _elm_lang$core$Time$inHours = function (t) {
	return t / _elm_lang$core$Time$hour;
};
var _elm_lang$core$Time$inMinutes = function (t) {
	return t / _elm_lang$core$Time$minute;
};
var _elm_lang$core$Time$inSeconds = function (t) {
	return t / _elm_lang$core$Time$second;
};
var _elm_lang$core$Time$now = _elm_lang$core$Native_Time.now;
var _elm_lang$core$Time$onSelfMsg = F3(
	function (router, interval, state) {
		var _p7 = A2(_elm_lang$core$Dict$get, interval, state.taggers);
		if (_p7.ctor === 'Nothing') {
			return _elm_lang$core$Task$succeed(state);
		} else {
			var tellTaggers = function (time) {
				return _elm_lang$core$Task$sequence(
					A2(
						_elm_lang$core$List$map,
						function (tagger) {
							return A2(
								_elm_lang$core$Platform$sendToApp,
								router,
								tagger(time));
						},
						_p7._0));
			};
			return A2(
				_elm_lang$core$Task$andThen,
				function (_p8) {
					return _elm_lang$core$Task$succeed(state);
				},
				A2(_elm_lang$core$Task$andThen, tellTaggers, _elm_lang$core$Time$now));
		}
	});
var _elm_lang$core$Time$subscription = _elm_lang$core$Native_Platform.leaf('Time');
var _elm_lang$core$Time$State = F2(
	function (a, b) {
		return {taggers: a, processes: b};
	});
var _elm_lang$core$Time$init = _elm_lang$core$Task$succeed(
	A2(_elm_lang$core$Time$State, _elm_lang$core$Dict$empty, _elm_lang$core$Dict$empty));
var _elm_lang$core$Time$onEffects = F3(
	function (router, subs, _p9) {
		var _p10 = _p9;
		var rightStep = F3(
			function (_p12, id, _p11) {
				var _p13 = _p11;
				return {
					ctor: '_Tuple3',
					_0: _p13._0,
					_1: _p13._1,
					_2: A2(
						_elm_lang$core$Task$andThen,
						function (_p14) {
							return _p13._2;
						},
						_elm_lang$core$Native_Scheduler.kill(id))
				};
			});
		var bothStep = F4(
			function (interval, taggers, id, _p15) {
				var _p16 = _p15;
				return {
					ctor: '_Tuple3',
					_0: _p16._0,
					_1: A3(_elm_lang$core$Dict$insert, interval, id, _p16._1),
					_2: _p16._2
				};
			});
		var leftStep = F3(
			function (interval, taggers, _p17) {
				var _p18 = _p17;
				return {
					ctor: '_Tuple3',
					_0: {ctor: '::', _0: interval, _1: _p18._0},
					_1: _p18._1,
					_2: _p18._2
				};
			});
		var newTaggers = A3(_elm_lang$core$List$foldl, _elm_lang$core$Time$addMySub, _elm_lang$core$Dict$empty, subs);
		var _p19 = A6(
			_elm_lang$core$Dict$merge,
			leftStep,
			bothStep,
			rightStep,
			newTaggers,
			_p10.processes,
			{
				ctor: '_Tuple3',
				_0: {ctor: '[]'},
				_1: _elm_lang$core$Dict$empty,
				_2: _elm_lang$core$Task$succeed(
					{ctor: '_Tuple0'})
			});
		var spawnList = _p19._0;
		var existingDict = _p19._1;
		var killTask = _p19._2;
		return A2(
			_elm_lang$core$Task$andThen,
			function (newProcesses) {
				return _elm_lang$core$Task$succeed(
					A2(_elm_lang$core$Time$State, newTaggers, newProcesses));
			},
			A2(
				_elm_lang$core$Task$andThen,
				function (_p20) {
					return A3(_elm_lang$core$Time$spawnHelp, router, spawnList, existingDict);
				},
				killTask));
	});
var _elm_lang$core$Time$Every = F2(
	function (a, b) {
		return {ctor: 'Every', _0: a, _1: b};
	});
var _elm_lang$core$Time$every = F2(
	function (interval, tagger) {
		return _elm_lang$core$Time$subscription(
			A2(_elm_lang$core$Time$Every, interval, tagger));
	});
var _elm_lang$core$Time$subMap = F2(
	function (f, _p21) {
		var _p22 = _p21;
		return A2(
			_elm_lang$core$Time$Every,
			_p22._0,
			function (_p23) {
				return f(
					_p22._1(_p23));
			});
	});
_elm_lang$core$Native_Platform.effectManagers['Time'] = {pkg: 'elm-lang/core', init: _elm_lang$core$Time$init, onEffects: _elm_lang$core$Time$onEffects, onSelfMsg: _elm_lang$core$Time$onSelfMsg, tag: 'sub', subMap: _elm_lang$core$Time$subMap};

var _bluedogtraining$bdt_elm$Css_Bdt_ops = _bluedogtraining$bdt_elm$Css_Bdt_ops || {};
_bluedogtraining$bdt_elm$Css_Bdt_ops['?'] = F2(
	function (style, bool) {
		return bool ? style : _rtfeldman$elm_css$Css$indeterminate(
			{ctor: '[]'});
	});

//import Result //

var _elm_lang$core$Native_Date = function() {

function fromString(str)
{
	var date = new Date(str);
	return isNaN(date.getTime())
		? _elm_lang$core$Result$Err('Unable to parse \'' + str + '\' as a date. Dates must be in the ISO 8601 format.')
		: _elm_lang$core$Result$Ok(date);
}

var dayTable = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
var monthTable =
	['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',
	 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];


return {
	fromString: fromString,
	year: function(d) { return d.getFullYear(); },
	month: function(d) { return { ctor: monthTable[d.getMonth()] }; },
	day: function(d) { return d.getDate(); },
	hour: function(d) { return d.getHours(); },
	minute: function(d) { return d.getMinutes(); },
	second: function(d) { return d.getSeconds(); },
	millisecond: function(d) { return d.getMilliseconds(); },
	toTime: function(d) { return d.getTime(); },
	fromTime: function(t) { return new Date(t); },
	dayOfWeek: function(d) { return { ctor: dayTable[d.getDay()] }; }
};

}();
var _elm_lang$core$Date$millisecond = _elm_lang$core$Native_Date.millisecond;
var _elm_lang$core$Date$second = _elm_lang$core$Native_Date.second;
var _elm_lang$core$Date$minute = _elm_lang$core$Native_Date.minute;
var _elm_lang$core$Date$hour = _elm_lang$core$Native_Date.hour;
var _elm_lang$core$Date$dayOfWeek = _elm_lang$core$Native_Date.dayOfWeek;
var _elm_lang$core$Date$day = _elm_lang$core$Native_Date.day;
var _elm_lang$core$Date$month = _elm_lang$core$Native_Date.month;
var _elm_lang$core$Date$year = _elm_lang$core$Native_Date.year;
var _elm_lang$core$Date$fromTime = _elm_lang$core$Native_Date.fromTime;
var _elm_lang$core$Date$toTime = _elm_lang$core$Native_Date.toTime;
var _elm_lang$core$Date$fromString = _elm_lang$core$Native_Date.fromString;
var _elm_lang$core$Date$now = A2(_elm_lang$core$Task$map, _elm_lang$core$Date$fromTime, _elm_lang$core$Time$now);
var _elm_lang$core$Date$Date = {ctor: 'Date'};
var _elm_lang$core$Date$Sun = {ctor: 'Sun'};
var _elm_lang$core$Date$Sat = {ctor: 'Sat'};
var _elm_lang$core$Date$Fri = {ctor: 'Fri'};
var _elm_lang$core$Date$Thu = {ctor: 'Thu'};
var _elm_lang$core$Date$Wed = {ctor: 'Wed'};
var _elm_lang$core$Date$Tue = {ctor: 'Tue'};
var _elm_lang$core$Date$Mon = {ctor: 'Mon'};
var _elm_lang$core$Date$Dec = {ctor: 'Dec'};
var _elm_lang$core$Date$Nov = {ctor: 'Nov'};
var _elm_lang$core$Date$Oct = {ctor: 'Oct'};
var _elm_lang$core$Date$Sep = {ctor: 'Sep'};
var _elm_lang$core$Date$Aug = {ctor: 'Aug'};
var _elm_lang$core$Date$Jul = {ctor: 'Jul'};
var _elm_lang$core$Date$Jun = {ctor: 'Jun'};
var _elm_lang$core$Date$May = {ctor: 'May'};
var _elm_lang$core$Date$Apr = {ctor: 'Apr'};
var _elm_lang$core$Date$Mar = {ctor: 'Mar'};
var _elm_lang$core$Date$Feb = {ctor: 'Feb'};
var _elm_lang$core$Date$Jan = {ctor: 'Jan'};

var _bluedogtraining$bdt_elm$Form_Css$selectOptionItem = F2(
	function (isDisabled, isFocused) {
		return {
			ctor: '::',
			_0: A2(
				_rtfeldman$elm_css$Css$padding2,
				_rtfeldman$elm_css$Css$rem(0),
				_rtfeldman$elm_css$Css$rem(0.4)),
			_1: {
				ctor: '::',
				_0: _rtfeldman$elm_css$Css$margin(
					_rtfeldman$elm_css$Css$px(0)),
				_1: {
					ctor: '::',
					_0: _rtfeldman$elm_css$Css$boxSizing(_rtfeldman$elm_css$Css$borderBox),
					_1: {
						ctor: '::',
						_0: _rtfeldman$elm_css$Css$height(
							_rtfeldman$elm_css$Css$rem(2)),
						_1: {
							ctor: '::',
							_0: _rtfeldman$elm_css$Css$displayFlex,
							_1: {
								ctor: '::',
								_0: _rtfeldman$elm_css$Css$alignItems(_rtfeldman$elm_css$Css$center),
								_1: {
									ctor: '::',
									_0: A2(
										_bluedogtraining$bdt_elm$Css_Bdt_ops['?'],
										_rtfeldman$elm_css$Css$backgroundColor(
											_rtfeldman$elm_css$Css$hex('f2f9fc')),
										isDisabled || isFocused),
									_1: {
										ctor: '::',
										_0: _rtfeldman$elm_css$Css$cursor(_rtfeldman$elm_css$Css$pointer),
										_1: {
											ctor: '::',
											_0: _rtfeldman$elm_css$Css$outlineWidth(
												_rtfeldman$elm_css$Css$px(0)),
											_1: {
												ctor: '::',
												_0: _rtfeldman$elm_css$Css$hover(
													{
														ctor: '::',
														_0: A2(
															_bluedogtraining$bdt_elm$Css_Bdt_ops['?'],
															_rtfeldman$elm_css$Css$backgroundColor(
																_rtfeldman$elm_css$Css$hex('f2f9fc')),
															!isDisabled),
														_1: {ctor: '[]'}
													}),
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		};
	});
var _bluedogtraining$bdt_elm$Form_Css$selectOptionList = {
	ctor: '::',
	_0: _rtfeldman$elm_css$Css$position(_rtfeldman$elm_css$Css$absolute),
	_1: {
		ctor: '::',
		_0: _rtfeldman$elm_css$Css$top(
			_rtfeldman$elm_css$Css$px(31)),
		_1: {
			ctor: '::',
			_0: _rtfeldman$elm_css$Css$left(
				_rtfeldman$elm_css$Css$px(0)),
			_1: {
				ctor: '::',
				_0: _rtfeldman$elm_css$Css$right(
					_rtfeldman$elm_css$Css$px(0)),
				_1: {
					ctor: '::',
					_0: _rtfeldman$elm_css$Css$zIndex(
						_rtfeldman$elm_css$Css$int(10)),
					_1: {
						ctor: '::',
						_0: _rtfeldman$elm_css$Css$maxHeight(
							_rtfeldman$elm_css$Css$px(200)),
						_1: {
							ctor: '::',
							_0: _rtfeldman$elm_css$Css$overflowY(_rtfeldman$elm_css$Css$auto),
							_1: {
								ctor: '::',
								_0: A3(
									_rtfeldman$elm_css$Css$border3,
									_rtfeldman$elm_css$Css$px(1),
									_rtfeldman$elm_css$Css$solid,
									_rtfeldman$elm_css$Css$hex('cccccc')),
								_1: {
									ctor: '::',
									_0: _rtfeldman$elm_css$Css$borderTopColor(
										_rtfeldman$elm_css$Css$hex('eeeeee')),
									_1: {
										ctor: '::',
										_0: _rtfeldman$elm_css$Css$padding(
											_rtfeldman$elm_css$Css$px(0)),
										_1: {
											ctor: '::',
											_0: _rtfeldman$elm_css$Css$backgroundColor(
												_rtfeldman$elm_css$Css$hex('ffffff')),
											_1: {ctor: '[]'}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
};
var _bluedogtraining$bdt_elm$Form_Css$title = function (isFaded) {
	return {
		ctor: '::',
		_0: _rtfeldman$elm_css$Css$flexGrow(
			_rtfeldman$elm_css$Css$int(1)),
		_1: {
			ctor: '::',
			_0: A2(
				_bluedogtraining$bdt_elm$Css_Bdt_ops['?'],
				_rtfeldman$elm_css$Css$color(
					A3(_rtfeldman$elm_css$Css$rgb, 111, 111, 111)),
				isFaded),
			_1: {
				ctor: '::',
				_0: A2(
					_bluedogtraining$bdt_elm$Css_Bdt_ops['?'],
					_rtfeldman$elm_css$Css$fontWeight(
						_rtfeldman$elm_css$Css$int(200)),
					isFaded),
				_1: {
					ctor: '::',
					_0: _rtfeldman$elm_css$Css$fontFamilies(
						{
							ctor: '::',
							_0: '-apple-system',
							_1: {
								ctor: '::',
								_0: 'system-ui',
								_1: {
									ctor: '::',
									_0: 'BlinkMacSystemFont',
									_1: {
										ctor: '::',
										_0: 'Segoe UI',
										_1: {
											ctor: '::',
											_0: 'Roboto',
											_1: {
												ctor: '::',
												_0: 'Helvetica Neue',
												_1: {
													ctor: '::',
													_0: 'Arial',
													_1: {
														ctor: '::',
														_0: 'sans-serif',
														_1: {ctor: '[]'}
													}
												}
											}
										}
									}
								}
							}
						}),
					_1: {
						ctor: '::',
						_0: _rtfeldman$elm_css$Css$whiteSpace(_rtfeldman$elm_css$Css$noWrap),
						_1: {
							ctor: '::',
							_0: _rtfeldman$elm_css$Css$textOverflow(_rtfeldman$elm_css$Css$ellipsis),
							_1: {
								ctor: '::',
								_0: _rtfeldman$elm_css$Css$overflowX(_rtfeldman$elm_css$Css$hidden),
								_1: {
									ctor: '::',
									_0: _rtfeldman$elm_css$Css$maxWidth(
										_rtfeldman$elm_css$Css$pct(100)),
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			}
		}
	};
};
var _bluedogtraining$bdt_elm$Form_Css$input = F2(
	function (isError, isLocked) {
		return {
			ctor: '::',
			_0: _rtfeldman$elm_css$Css$boxSizing(_rtfeldman$elm_css$Css$borderBox),
			_1: {
				ctor: '::',
				_0: A3(
					_rtfeldman$elm_css$Css$border3,
					_rtfeldman$elm_css$Css$px(1),
					_rtfeldman$elm_css$Css$solid,
					_rtfeldman$elm_css$Css$hex(
						(isError && (!isLocked)) ? 'd9534f' : 'cccccc')),
				_1: {
					ctor: '::',
					_0: _rtfeldman$elm_css$Css$width(
						_rtfeldman$elm_css$Css$pct(100)),
					_1: {
						ctor: '::',
						_0: _rtfeldman$elm_css$Css$maxWidth(
							_rtfeldman$elm_css$Css$pct(100)),
						_1: {
							ctor: '::',
							_0: _rtfeldman$elm_css$Css$height(
								_rtfeldman$elm_css$Css$rem(2)),
							_1: {
								ctor: '::',
								_0: A2(
									_rtfeldman$elm_css$Css$padding2,
									_rtfeldman$elm_css$Css$rem(0),
									_rtfeldman$elm_css$Css$rem(0.4)),
								_1: {
									ctor: '::',
									_0: A2(
										_rtfeldman$elm_css$Css$margin2,
										_rtfeldman$elm_css$Css$rem(0.5),
										_rtfeldman$elm_css$Css$rem(0)),
									_1: {
										ctor: '::',
										_0: _rtfeldman$elm_css$Css$color(
											_rtfeldman$elm_css$Css$hex('555555')),
										_1: {
											ctor: '::',
											_0: _rtfeldman$elm_css$Css$backgroundColor(
												_rtfeldman$elm_css$Css$hex(
													isLocked ? 'eeeeee' : 'ffffff')),
											_1: {
												ctor: '::',
												_0: _rtfeldman$elm_css$Css$fontSize(
													_rtfeldman$elm_css$Css$rem(0.8)),
												_1: {
													ctor: '::',
													_0: _rtfeldman$elm_css$Css$whiteSpace(_rtfeldman$elm_css$Css$noWrap),
													_1: {
														ctor: '::',
														_0: _rtfeldman$elm_css$Css$textOverflow(_rtfeldman$elm_css$Css$ellipsis),
														_1: {
															ctor: '::',
															_0: _rtfeldman$elm_css$Css$overflowX(_rtfeldman$elm_css$Css$hidden),
															_1: {
																ctor: '::',
																_0: _rtfeldman$elm_css$Css$focus(
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Css$outlineWidth(
																			_rtfeldman$elm_css$Css$rem(0)),
																		_1: {ctor: '[]'}
																	}),
																_1: {ctor: '[]'}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		};
	});
var _bluedogtraining$bdt_elm$Form_Css$select = F2(
	function (isError, isLocked) {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			A2(_bluedogtraining$bdt_elm$Form_Css$input, isError, isLocked),
			{
				ctor: '::',
				_0: _rtfeldman$elm_css$Css$displayFlex,
				_1: {
					ctor: '::',
					_0: _rtfeldman$elm_css$Css$cursor(_rtfeldman$elm_css$Css$pointer),
					_1: {
						ctor: '::',
						_0: _rtfeldman$elm_css$Css$alignItems(_rtfeldman$elm_css$Css$center),
						_1: {ctor: '[]'}
					}
				}
			});
	});

var _rtfeldman$elm_css$Html_Styled_Lazy$lazy3 = _rtfeldman$elm_css$VirtualDom_Styled$lazy3;
var _rtfeldman$elm_css$Html_Styled_Lazy$lazy2 = _rtfeldman$elm_css$VirtualDom_Styled$lazy2;
var _rtfeldman$elm_css$Html_Styled_Lazy$lazy = _rtfeldman$elm_css$VirtualDom_Styled$lazy;

var _elm_lang$dom$Native_Dom = function() {

var fakeNode = {
	addEventListener: function() {},
	removeEventListener: function() {}
};

var onDocument = on(typeof document !== 'undefined' ? document : fakeNode);
var onWindow = on(typeof window !== 'undefined' ? window : fakeNode);

function on(node)
{
	return function(eventName, decoder, toTask)
	{
		return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback) {

			function performTask(event)
			{
				var result = A2(_elm_lang$core$Json_Decode$decodeValue, decoder, event);
				if (result.ctor === 'Ok')
				{
					_elm_lang$core$Native_Scheduler.rawSpawn(toTask(result._0));
				}
			}

			node.addEventListener(eventName, performTask);

			return function()
			{
				node.removeEventListener(eventName, performTask);
			};
		});
	};
}

var rAF = typeof requestAnimationFrame !== 'undefined'
	? requestAnimationFrame
	: function(callback) { callback(); };

function withNode(id, doStuff)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		rAF(function()
		{
			var node = document.getElementById(id);
			if (node === null)
			{
				callback(_elm_lang$core$Native_Scheduler.fail({ ctor: 'NotFound', _0: id }));
				return;
			}
			callback(_elm_lang$core$Native_Scheduler.succeed(doStuff(node)));
		});
	});
}


// FOCUS

function focus(id)
{
	return withNode(id, function(node) {
		node.focus();
		return _elm_lang$core$Native_Utils.Tuple0;
	});
}

function blur(id)
{
	return withNode(id, function(node) {
		node.blur();
		return _elm_lang$core$Native_Utils.Tuple0;
	});
}


// SCROLLING

function getScrollTop(id)
{
	return withNode(id, function(node) {
		return node.scrollTop;
	});
}

function setScrollTop(id, desiredScrollTop)
{
	return withNode(id, function(node) {
		node.scrollTop = desiredScrollTop;
		return _elm_lang$core$Native_Utils.Tuple0;
	});
}

function toBottom(id)
{
	return withNode(id, function(node) {
		node.scrollTop = node.scrollHeight;
		return _elm_lang$core$Native_Utils.Tuple0;
	});
}

function getScrollLeft(id)
{
	return withNode(id, function(node) {
		return node.scrollLeft;
	});
}

function setScrollLeft(id, desiredScrollLeft)
{
	return withNode(id, function(node) {
		node.scrollLeft = desiredScrollLeft;
		return _elm_lang$core$Native_Utils.Tuple0;
	});
}

function toRight(id)
{
	return withNode(id, function(node) {
		node.scrollLeft = node.scrollWidth;
		return _elm_lang$core$Native_Utils.Tuple0;
	});
}


// SIZE

function width(options, id)
{
	return withNode(id, function(node) {
		switch (options.ctor)
		{
			case 'Content':
				return node.scrollWidth;
			case 'VisibleContent':
				return node.clientWidth;
			case 'VisibleContentWithBorders':
				return node.offsetWidth;
			case 'VisibleContentWithBordersAndMargins':
				var rect = node.getBoundingClientRect();
				return rect.right - rect.left;
		}
	});
}

function height(options, id)
{
	return withNode(id, function(node) {
		switch (options.ctor)
		{
			case 'Content':
				return node.scrollHeight;
			case 'VisibleContent':
				return node.clientHeight;
			case 'VisibleContentWithBorders':
				return node.offsetHeight;
			case 'VisibleContentWithBordersAndMargins':
				var rect = node.getBoundingClientRect();
				return rect.bottom - rect.top;
		}
	});
}

return {
	onDocument: F3(onDocument),
	onWindow: F3(onWindow),

	focus: focus,
	blur: blur,

	getScrollTop: getScrollTop,
	setScrollTop: F2(setScrollTop),
	getScrollLeft: getScrollLeft,
	setScrollLeft: F2(setScrollLeft),
	toBottom: toBottom,
	toRight: toRight,

	height: F2(height),
	width: F2(width)
};

}();

var _elm_lang$dom$Dom$blur = _elm_lang$dom$Native_Dom.blur;
var _elm_lang$dom$Dom$focus = _elm_lang$dom$Native_Dom.focus;
var _elm_lang$dom$Dom$NotFound = function (a) {
	return {ctor: 'NotFound', _0: a};
};

var _elm_lang$core$Set$foldr = F3(
	function (f, b, _p0) {
		var _p1 = _p0;
		return A3(
			_elm_lang$core$Dict$foldr,
			F3(
				function (k, _p2, b) {
					return A2(f, k, b);
				}),
			b,
			_p1._0);
	});
var _elm_lang$core$Set$foldl = F3(
	function (f, b, _p3) {
		var _p4 = _p3;
		return A3(
			_elm_lang$core$Dict$foldl,
			F3(
				function (k, _p5, b) {
					return A2(f, k, b);
				}),
			b,
			_p4._0);
	});
var _elm_lang$core$Set$toList = function (_p6) {
	var _p7 = _p6;
	return _elm_lang$core$Dict$keys(_p7._0);
};
var _elm_lang$core$Set$size = function (_p8) {
	var _p9 = _p8;
	return _elm_lang$core$Dict$size(_p9._0);
};
var _elm_lang$core$Set$member = F2(
	function (k, _p10) {
		var _p11 = _p10;
		return A2(_elm_lang$core$Dict$member, k, _p11._0);
	});
var _elm_lang$core$Set$isEmpty = function (_p12) {
	var _p13 = _p12;
	return _elm_lang$core$Dict$isEmpty(_p13._0);
};
var _elm_lang$core$Set$Set_elm_builtin = function (a) {
	return {ctor: 'Set_elm_builtin', _0: a};
};
var _elm_lang$core$Set$empty = _elm_lang$core$Set$Set_elm_builtin(_elm_lang$core$Dict$empty);
var _elm_lang$core$Set$singleton = function (k) {
	return _elm_lang$core$Set$Set_elm_builtin(
		A2(
			_elm_lang$core$Dict$singleton,
			k,
			{ctor: '_Tuple0'}));
};
var _elm_lang$core$Set$insert = F2(
	function (k, _p14) {
		var _p15 = _p14;
		return _elm_lang$core$Set$Set_elm_builtin(
			A3(
				_elm_lang$core$Dict$insert,
				k,
				{ctor: '_Tuple0'},
				_p15._0));
	});
var _elm_lang$core$Set$fromList = function (xs) {
	return A3(_elm_lang$core$List$foldl, _elm_lang$core$Set$insert, _elm_lang$core$Set$empty, xs);
};
var _elm_lang$core$Set$map = F2(
	function (f, s) {
		return _elm_lang$core$Set$fromList(
			A2(
				_elm_lang$core$List$map,
				f,
				_elm_lang$core$Set$toList(s)));
	});
var _elm_lang$core$Set$remove = F2(
	function (k, _p16) {
		var _p17 = _p16;
		return _elm_lang$core$Set$Set_elm_builtin(
			A2(_elm_lang$core$Dict$remove, k, _p17._0));
	});
var _elm_lang$core$Set$union = F2(
	function (_p19, _p18) {
		var _p20 = _p19;
		var _p21 = _p18;
		return _elm_lang$core$Set$Set_elm_builtin(
			A2(_elm_lang$core$Dict$union, _p20._0, _p21._0));
	});
var _elm_lang$core$Set$intersect = F2(
	function (_p23, _p22) {
		var _p24 = _p23;
		var _p25 = _p22;
		return _elm_lang$core$Set$Set_elm_builtin(
			A2(_elm_lang$core$Dict$intersect, _p24._0, _p25._0));
	});
var _elm_lang$core$Set$diff = F2(
	function (_p27, _p26) {
		var _p28 = _p27;
		var _p29 = _p26;
		return _elm_lang$core$Set$Set_elm_builtin(
			A2(_elm_lang$core$Dict$diff, _p28._0, _p29._0));
	});
var _elm_lang$core$Set$filter = F2(
	function (p, _p30) {
		var _p31 = _p30;
		return _elm_lang$core$Set$Set_elm_builtin(
			A2(
				_elm_lang$core$Dict$filter,
				F2(
					function (k, _p32) {
						return p(k);
					}),
				_p31._0));
	});
var _elm_lang$core$Set$partition = F2(
	function (p, _p33) {
		var _p34 = _p33;
		var _p35 = A2(
			_elm_lang$core$Dict$partition,
			F2(
				function (k, _p36) {
					return p(k);
				}),
			_p34._0);
		var p1 = _p35._0;
		var p2 = _p35._1;
		return {
			ctor: '_Tuple2',
			_0: _elm_lang$core$Set$Set_elm_builtin(p1),
			_1: _elm_lang$core$Set$Set_elm_builtin(p2)
		};
	});

var _elm_community$list_extra$List_Extra$greedyGroupsOfWithStep = F3(
	function (size, step, xs) {
		var okayXs = _elm_lang$core$Native_Utils.cmp(
			_elm_lang$core$List$length(xs),
			0) > 0;
		var okayArgs = (_elm_lang$core$Native_Utils.cmp(size, 0) > 0) && (_elm_lang$core$Native_Utils.cmp(step, 0) > 0);
		var xs_ = A2(_elm_lang$core$List$drop, step, xs);
		var group = A2(_elm_lang$core$List$take, size, xs);
		return (okayArgs && okayXs) ? {
			ctor: '::',
			_0: group,
			_1: A3(_elm_community$list_extra$List_Extra$greedyGroupsOfWithStep, size, step, xs_)
		} : {ctor: '[]'};
	});
var _elm_community$list_extra$List_Extra$greedyGroupsOf = F2(
	function (size, xs) {
		return A3(_elm_community$list_extra$List_Extra$greedyGroupsOfWithStep, size, size, xs);
	});
var _elm_community$list_extra$List_Extra$groupsOfWithStep = F3(
	function (size, step, xs) {
		var okayArgs = (_elm_lang$core$Native_Utils.cmp(size, 0) > 0) && (_elm_lang$core$Native_Utils.cmp(step, 0) > 0);
		var xs_ = A2(_elm_lang$core$List$drop, step, xs);
		var group = A2(_elm_lang$core$List$take, size, xs);
		var okayLength = _elm_lang$core$Native_Utils.eq(
			size,
			_elm_lang$core$List$length(group));
		return (okayArgs && okayLength) ? {
			ctor: '::',
			_0: group,
			_1: A3(_elm_community$list_extra$List_Extra$groupsOfWithStep, size, step, xs_)
		} : {ctor: '[]'};
	});
var _elm_community$list_extra$List_Extra$groupsOf = F2(
	function (size, xs) {
		return A3(_elm_community$list_extra$List_Extra$groupsOfWithStep, size, size, xs);
	});
var _elm_community$list_extra$List_Extra$zip5 = _elm_lang$core$List$map5(
	F5(
		function (v0, v1, v2, v3, v4) {
			return {ctor: '_Tuple5', _0: v0, _1: v1, _2: v2, _3: v3, _4: v4};
		}));
var _elm_community$list_extra$List_Extra$zip4 = _elm_lang$core$List$map4(
	F4(
		function (v0, v1, v2, v3) {
			return {ctor: '_Tuple4', _0: v0, _1: v1, _2: v2, _3: v3};
		}));
var _elm_community$list_extra$List_Extra$zip3 = _elm_lang$core$List$map3(
	F3(
		function (v0, v1, v2) {
			return {ctor: '_Tuple3', _0: v0, _1: v1, _2: v2};
		}));
var _elm_community$list_extra$List_Extra$zip = _elm_lang$core$List$map2(
	F2(
		function (v0, v1) {
			return {ctor: '_Tuple2', _0: v0, _1: v1};
		}));
var _elm_community$list_extra$List_Extra$isSubsequenceOf = F2(
	function (subseq, list) {
		isSubsequenceOf:
		while (true) {
			var _p0 = {ctor: '_Tuple2', _0: subseq, _1: list};
			if (_p0._0.ctor === '[]') {
				return true;
			} else {
				if (_p0._1.ctor === '[]') {
					return false;
				} else {
					var _p1 = _p0._1._1;
					if (_elm_lang$core$Native_Utils.eq(_p0._0._0, _p0._1._0)) {
						var _v1 = _p0._0._1,
							_v2 = _p1;
						subseq = _v1;
						list = _v2;
						continue isSubsequenceOf;
					} else {
						var _v3 = subseq,
							_v4 = _p1;
						subseq = _v3;
						list = _v4;
						continue isSubsequenceOf;
					}
				}
			}
		}
	});
var _elm_community$list_extra$List_Extra$isPrefixOf = F2(
	function (prefix, xs) {
		var _p2 = {ctor: '_Tuple2', _0: prefix, _1: xs};
		if (_p2._0.ctor === '[]') {
			return true;
		} else {
			if (_p2._1.ctor === '[]') {
				return false;
			} else {
				return _elm_lang$core$Native_Utils.eq(_p2._0._0, _p2._1._0) && A2(_elm_community$list_extra$List_Extra$isPrefixOf, _p2._0._1, _p2._1._1);
			}
		}
	});
var _elm_community$list_extra$List_Extra$isSuffixOf = F2(
	function (suffix, xs) {
		return A2(
			_elm_community$list_extra$List_Extra$isPrefixOf,
			_elm_lang$core$List$reverse(suffix),
			_elm_lang$core$List$reverse(xs));
	});
var _elm_community$list_extra$List_Extra$isInfixOfHelp = F3(
	function (infixHead, infixTail, list) {
		isInfixOfHelp:
		while (true) {
			var _p3 = list;
			if (_p3.ctor === '[]') {
				return false;
			} else {
				var _p4 = _p3._1;
				if (_elm_lang$core$Native_Utils.eq(_p3._0, infixHead)) {
					return A2(_elm_community$list_extra$List_Extra$isPrefixOf, infixTail, _p4);
				} else {
					var _v7 = infixHead,
						_v8 = infixTail,
						_v9 = _p4;
					infixHead = _v7;
					infixTail = _v8;
					list = _v9;
					continue isInfixOfHelp;
				}
			}
		}
	});
var _elm_community$list_extra$List_Extra$isInfixOf = F2(
	function (infixList, list) {
		var _p5 = infixList;
		if (_p5.ctor === '[]') {
			return true;
		} else {
			return A3(_elm_community$list_extra$List_Extra$isInfixOfHelp, _p5._0, _p5._1, list);
		}
	});
var _elm_community$list_extra$List_Extra$selectSplit = function (xs) {
	var _p6 = xs;
	if (_p6.ctor === '[]') {
		return {ctor: '[]'};
	} else {
		var _p10 = _p6._1;
		var _p9 = _p6._0;
		return {
			ctor: '::',
			_0: {
				ctor: '_Tuple3',
				_0: {ctor: '[]'},
				_1: _p9,
				_2: _p10
			},
			_1: A2(
				_elm_lang$core$List$map,
				function (_p7) {
					var _p8 = _p7;
					return {
						ctor: '_Tuple3',
						_0: {ctor: '::', _0: _p9, _1: _p8._0},
						_1: _p8._1,
						_2: _p8._2
					};
				},
				_elm_community$list_extra$List_Extra$selectSplit(_p10))
		};
	}
};
var _elm_community$list_extra$List_Extra$select = function (xs) {
	var _p11 = xs;
	if (_p11.ctor === '[]') {
		return {ctor: '[]'};
	} else {
		var _p15 = _p11._1;
		var _p14 = _p11._0;
		return {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: _p14, _1: _p15},
			_1: A2(
				_elm_lang$core$List$map,
				function (_p12) {
					var _p13 = _p12;
					return {
						ctor: '_Tuple2',
						_0: _p13._0,
						_1: {ctor: '::', _0: _p14, _1: _p13._1}
					};
				},
				_elm_community$list_extra$List_Extra$select(_p15))
		};
	}
};
var _elm_community$list_extra$List_Extra$tailsHelp = F2(
	function (e, list) {
		var _p16 = list;
		if (_p16.ctor === '::') {
			var _p17 = _p16._0;
			return {
				ctor: '::',
				_0: {ctor: '::', _0: e, _1: _p17},
				_1: {ctor: '::', _0: _p17, _1: _p16._1}
			};
		} else {
			return {ctor: '[]'};
		}
	});
var _elm_community$list_extra$List_Extra$tails = A2(
	_elm_lang$core$List$foldr,
	_elm_community$list_extra$List_Extra$tailsHelp,
	{
		ctor: '::',
		_0: {ctor: '[]'},
		_1: {ctor: '[]'}
	});
var _elm_community$list_extra$List_Extra$inits = A2(
	_elm_lang$core$List$foldr,
	F2(
		function (e, acc) {
			return {
				ctor: '::',
				_0: {ctor: '[]'},
				_1: A2(
					_elm_lang$core$List$map,
					F2(
						function (x, y) {
							return {ctor: '::', _0: x, _1: y};
						})(e),
					acc)
			};
		}),
	{
		ctor: '::',
		_0: {ctor: '[]'},
		_1: {ctor: '[]'}
	});
var _elm_community$list_extra$List_Extra$groupWhileTransitivelyHelp = F4(
	function (result, currentGroup, compare, list) {
		groupWhileTransitivelyHelp:
		while (true) {
			var _p18 = list;
			if (_p18.ctor === '[]') {
				return _elm_lang$core$List$reverse(
					_elm_lang$core$List$isEmpty(currentGroup) ? result : _elm_lang$core$List$reverse(
						{ctor: '::', _0: currentGroup, _1: result}));
			} else {
				if (_p18._1.ctor === '[]') {
					return _elm_lang$core$List$reverse(
						{
							ctor: '::',
							_0: _elm_lang$core$List$reverse(
								{ctor: '::', _0: _p18._0, _1: currentGroup}),
							_1: result
						});
				} else {
					var _p20 = _p18._1;
					var _p19 = _p18._0;
					if (A2(compare, _p19, _p18._1._0)) {
						var _v17 = result,
							_v18 = {ctor: '::', _0: _p19, _1: currentGroup},
							_v19 = compare,
							_v20 = _p20;
						result = _v17;
						currentGroup = _v18;
						compare = _v19;
						list = _v20;
						continue groupWhileTransitivelyHelp;
					} else {
						var _v21 = {
							ctor: '::',
							_0: _elm_lang$core$List$reverse(
								{ctor: '::', _0: _p19, _1: currentGroup}),
							_1: result
						},
							_v22 = {ctor: '[]'},
							_v23 = compare,
							_v24 = _p20;
						result = _v21;
						currentGroup = _v22;
						compare = _v23;
						list = _v24;
						continue groupWhileTransitivelyHelp;
					}
				}
			}
		}
	});
var _elm_community$list_extra$List_Extra$groupWhileTransitively = F2(
	function (compare, list) {
		return A4(
			_elm_community$list_extra$List_Extra$groupWhileTransitivelyHelp,
			{ctor: '[]'},
			{ctor: '[]'},
			compare,
			list);
	});
var _elm_community$list_extra$List_Extra$stripPrefix = F2(
	function (prefix, xs) {
		var step = F2(
			function (e, m) {
				var _p21 = m;
				if (_p21.ctor === 'Nothing') {
					return _elm_lang$core$Maybe$Nothing;
				} else {
					if (_p21._0.ctor === '[]') {
						return _elm_lang$core$Maybe$Nothing;
					} else {
						return _elm_lang$core$Native_Utils.eq(e, _p21._0._0) ? _elm_lang$core$Maybe$Just(_p21._0._1) : _elm_lang$core$Maybe$Nothing;
					}
				}
			});
		return A3(
			_elm_lang$core$List$foldl,
			step,
			_elm_lang$core$Maybe$Just(xs),
			prefix);
	});
var _elm_community$list_extra$List_Extra$dropWhileRight = function (p) {
	return A2(
		_elm_lang$core$List$foldr,
		F2(
			function (x, xs) {
				return (p(x) && _elm_lang$core$List$isEmpty(xs)) ? {ctor: '[]'} : {ctor: '::', _0: x, _1: xs};
			}),
		{ctor: '[]'});
};
var _elm_community$list_extra$List_Extra$takeWhileRight = function (p) {
	var step = F2(
		function (x, _p22) {
			var _p23 = _p22;
			var _p24 = _p23._0;
			return (p(x) && _p23._1) ? {
				ctor: '_Tuple2',
				_0: {ctor: '::', _0: x, _1: _p24},
				_1: true
			} : {ctor: '_Tuple2', _0: _p24, _1: false};
		});
	return function (_p25) {
		return _elm_lang$core$Tuple$first(
			A3(
				_elm_lang$core$List$foldr,
				step,
				{
					ctor: '_Tuple2',
					_0: {ctor: '[]'},
					_1: true
				},
				_p25));
	};
};
var _elm_community$list_extra$List_Extra$splitAt = F2(
	function (n, xs) {
		return {
			ctor: '_Tuple2',
			_0: A2(_elm_lang$core$List$take, n, xs),
			_1: A2(_elm_lang$core$List$drop, n, xs)
		};
	});
var _elm_community$list_extra$List_Extra$groupsOfVarying_ = F3(
	function (listOflengths, list, accu) {
		groupsOfVarying_:
		while (true) {
			var _p26 = {ctor: '_Tuple2', _0: listOflengths, _1: list};
			if (((_p26.ctor === '_Tuple2') && (_p26._0.ctor === '::')) && (_p26._1.ctor === '::')) {
				var _p27 = A2(_elm_community$list_extra$List_Extra$splitAt, _p26._0._0, list);
				var head = _p27._0;
				var tail = _p27._1;
				var _v28 = _p26._0._1,
					_v29 = tail,
					_v30 = {ctor: '::', _0: head, _1: accu};
				listOflengths = _v28;
				list = _v29;
				accu = _v30;
				continue groupsOfVarying_;
			} else {
				return _elm_lang$core$List$reverse(accu);
			}
		}
	});
var _elm_community$list_extra$List_Extra$groupsOfVarying = F2(
	function (listOflengths, list) {
		return A3(
			_elm_community$list_extra$List_Extra$groupsOfVarying_,
			listOflengths,
			list,
			{ctor: '[]'});
	});
var _elm_community$list_extra$List_Extra$unfoldr = F2(
	function (f, seed) {
		var _p28 = f(seed);
		if (_p28.ctor === 'Nothing') {
			return {ctor: '[]'};
		} else {
			return {
				ctor: '::',
				_0: _p28._0._0,
				_1: A2(_elm_community$list_extra$List_Extra$unfoldr, f, _p28._0._1)
			};
		}
	});
var _elm_community$list_extra$List_Extra$mapAccumr = F3(
	function (f, acc0, list) {
		return A3(
			_elm_lang$core$List$foldr,
			F2(
				function (x, _p29) {
					var _p30 = _p29;
					var _p31 = A2(f, _p30._0, x);
					var acc2 = _p31._0;
					var y = _p31._1;
					return {
						ctor: '_Tuple2',
						_0: acc2,
						_1: {ctor: '::', _0: y, _1: _p30._1}
					};
				}),
			{
				ctor: '_Tuple2',
				_0: acc0,
				_1: {ctor: '[]'}
			},
			list);
	});
var _elm_community$list_extra$List_Extra$mapAccuml = F3(
	function (f, acc0, list) {
		var _p32 = A3(
			_elm_lang$core$List$foldl,
			F2(
				function (x, _p33) {
					var _p34 = _p33;
					var _p35 = A2(f, _p34._0, x);
					var acc2 = _p35._0;
					var y = _p35._1;
					return {
						ctor: '_Tuple2',
						_0: acc2,
						_1: {ctor: '::', _0: y, _1: _p34._1}
					};
				}),
			{
				ctor: '_Tuple2',
				_0: acc0,
				_1: {ctor: '[]'}
			},
			list);
		var accFinal = _p32._0;
		var generatedList = _p32._1;
		return {
			ctor: '_Tuple2',
			_0: accFinal,
			_1: _elm_lang$core$List$reverse(generatedList)
		};
	});
var _elm_community$list_extra$List_Extra$scanr1 = F2(
	function (f, xs_) {
		var _p36 = xs_;
		if (_p36.ctor === '[]') {
			return {ctor: '[]'};
		} else {
			if (_p36._1.ctor === '[]') {
				return {
					ctor: '::',
					_0: _p36._0,
					_1: {ctor: '[]'}
				};
			} else {
				var _p37 = A2(_elm_community$list_extra$List_Extra$scanr1, f, _p36._1);
				if (_p37.ctor === '::') {
					return {
						ctor: '::',
						_0: A2(f, _p36._0, _p37._0),
						_1: _p37
					};
				} else {
					return {ctor: '[]'};
				}
			}
		}
	});
var _elm_community$list_extra$List_Extra$scanr = F3(
	function (f, acc, xs_) {
		var _p38 = xs_;
		if (_p38.ctor === '[]') {
			return {
				ctor: '::',
				_0: acc,
				_1: {ctor: '[]'}
			};
		} else {
			var _p39 = A3(_elm_community$list_extra$List_Extra$scanr, f, acc, _p38._1);
			if (_p39.ctor === '::') {
				return {
					ctor: '::',
					_0: A2(f, _p38._0, _p39._0),
					_1: _p39
				};
			} else {
				return {ctor: '[]'};
			}
		}
	});
var _elm_community$list_extra$List_Extra$scanl1 = F2(
	function (f, xs_) {
		var _p40 = xs_;
		if (_p40.ctor === '[]') {
			return {ctor: '[]'};
		} else {
			return A3(_elm_lang$core$List$scanl, f, _p40._0, _p40._1);
		}
	});
var _elm_community$list_extra$List_Extra$indexedFoldr = F3(
	function (func, acc, list) {
		var step = F2(
			function (x, _p41) {
				var _p42 = _p41;
				var _p43 = _p42._0;
				return {
					ctor: '_Tuple2',
					_0: _p43 - 1,
					_1: A3(func, _p43, x, _p42._1)
				};
			});
		return _elm_lang$core$Tuple$second(
			A3(
				_elm_lang$core$List$foldr,
				step,
				{
					ctor: '_Tuple2',
					_0: _elm_lang$core$List$length(list) - 1,
					_1: acc
				},
				list));
	});
var _elm_community$list_extra$List_Extra$indexedFoldl = F3(
	function (func, acc, list) {
		var step = F2(
			function (x, _p44) {
				var _p45 = _p44;
				var _p46 = _p45._0;
				return {
					ctor: '_Tuple2',
					_0: _p46 + 1,
					_1: A3(func, _p46, x, _p45._1)
				};
			});
		return _elm_lang$core$Tuple$second(
			A3(
				_elm_lang$core$List$foldl,
				step,
				{ctor: '_Tuple2', _0: 0, _1: acc},
				list));
	});
var _elm_community$list_extra$List_Extra$foldr1 = F2(
	function (f, xs) {
		var mf = F2(
			function (x, m) {
				return _elm_lang$core$Maybe$Just(
					function () {
						var _p47 = m;
						if (_p47.ctor === 'Nothing') {
							return x;
						} else {
							return A2(f, x, _p47._0);
						}
					}());
			});
		return A3(_elm_lang$core$List$foldr, mf, _elm_lang$core$Maybe$Nothing, xs);
	});
var _elm_community$list_extra$List_Extra$foldl1 = F2(
	function (f, xs) {
		var mf = F2(
			function (x, m) {
				return _elm_lang$core$Maybe$Just(
					function () {
						var _p48 = m;
						if (_p48.ctor === 'Nothing') {
							return x;
						} else {
							return A2(f, _p48._0, x);
						}
					}());
			});
		return A3(_elm_lang$core$List$foldl, mf, _elm_lang$core$Maybe$Nothing, xs);
	});
var _elm_community$list_extra$List_Extra$reverseAppend = F2(
	function (list1, list2) {
		return A3(
			_elm_lang$core$List$foldl,
			F2(
				function (x, y) {
					return {ctor: '::', _0: x, _1: y};
				}),
			list2,
			list1);
	});
var _elm_community$list_extra$List_Extra$interweaveHelp = F3(
	function (acc, list1, list2) {
		interweaveHelp:
		while (true) {
			var _p49 = {ctor: '_Tuple2', _0: list1, _1: list2};
			if (_p49._0.ctor === '::') {
				if (_p49._1.ctor === '::') {
					var _v44 = {
						ctor: '::',
						_0: _p49._1._0,
						_1: {ctor: '::', _0: _p49._0._0, _1: acc}
					},
						_v45 = _p49._0._1,
						_v46 = _p49._1._1;
					acc = _v44;
					list1 = _v45;
					list2 = _v46;
					continue interweaveHelp;
				} else {
					return A2(_elm_community$list_extra$List_Extra$reverseAppend, acc, list1);
				}
			} else {
				return A2(_elm_community$list_extra$List_Extra$reverseAppend, acc, list2);
			}
		}
	});
var _elm_community$list_extra$List_Extra$interweave = _elm_community$list_extra$List_Extra$interweaveHelp(
	{ctor: '[]'});
var _elm_community$list_extra$List_Extra$permutations = function (xs_) {
	var _p50 = xs_;
	if (_p50.ctor === '[]') {
		return {
			ctor: '::',
			_0: {ctor: '[]'},
			_1: {ctor: '[]'}
		};
	} else {
		var f = function (_p51) {
			var _p52 = _p51;
			return A2(
				_elm_lang$core$List$map,
				F2(
					function (x, y) {
						return {ctor: '::', _0: x, _1: y};
					})(_p52._0),
				_elm_community$list_extra$List_Extra$permutations(_p52._1));
		};
		return A2(
			_elm_lang$core$List$concatMap,
			f,
			_elm_community$list_extra$List_Extra$select(_p50));
	}
};
var _elm_community$list_extra$List_Extra$isPermutationOf = F2(
	function (permut, xs) {
		return A2(
			_elm_lang$core$List$member,
			permut,
			_elm_community$list_extra$List_Extra$permutations(xs));
	});
var _elm_community$list_extra$List_Extra$subsequencesNonEmpty = function (xs) {
	var _p53 = xs;
	if (_p53.ctor === '[]') {
		return {ctor: '[]'};
	} else {
		var _p54 = _p53._0;
		var f = F2(
			function (ys, r) {
				return {
					ctor: '::',
					_0: ys,
					_1: {
						ctor: '::',
						_0: {ctor: '::', _0: _p54, _1: ys},
						_1: r
					}
				};
			});
		return {
			ctor: '::',
			_0: {
				ctor: '::',
				_0: _p54,
				_1: {ctor: '[]'}
			},
			_1: A3(
				_elm_lang$core$List$foldr,
				f,
				{ctor: '[]'},
				_elm_community$list_extra$List_Extra$subsequencesNonEmpty(_p53._1))
		};
	}
};
var _elm_community$list_extra$List_Extra$subsequences = function (xs) {
	return {
		ctor: '::',
		_0: {ctor: '[]'},
		_1: _elm_community$list_extra$List_Extra$subsequencesNonEmpty(xs)
	};
};
var _elm_community$list_extra$List_Extra$rowsLength = function (listOfLists) {
	var _p55 = listOfLists;
	if (_p55.ctor === '[]') {
		return 0;
	} else {
		return _elm_lang$core$List$length(_p55._0);
	}
};
var _elm_community$list_extra$List_Extra$transpose = function (listOfLists) {
	return A3(
		_elm_lang$core$List$foldr,
		_elm_lang$core$List$map2(
			F2(
				function (x, y) {
					return {ctor: '::', _0: x, _1: y};
				})),
		A2(
			_elm_lang$core$List$repeat,
			_elm_community$list_extra$List_Extra$rowsLength(listOfLists),
			{ctor: '[]'}),
		listOfLists);
};
var _elm_community$list_extra$List_Extra$intercalate = function (xs) {
	return function (_p56) {
		return _elm_lang$core$List$concat(
			A2(_elm_lang$core$List$intersperse, xs, _p56));
	};
};
var _elm_community$list_extra$List_Extra$filterNot = F2(
	function (pred, list) {
		return A2(
			_elm_lang$core$List$filter,
			function (_p57) {
				return !pred(_p57);
			},
			list);
	});
var _elm_community$list_extra$List_Extra$removeIfIndex = function (predicate) {
	return A2(
		_elm_community$list_extra$List_Extra$indexedFoldr,
		F3(
			function (index, item, acc) {
				return predicate(index) ? acc : {ctor: '::', _0: item, _1: acc};
			}),
		{ctor: '[]'});
};
var _elm_community$list_extra$List_Extra$removeAt = F2(
	function (index, l) {
		if (_elm_lang$core$Native_Utils.cmp(index, 0) < 0) {
			return l;
		} else {
			var tail = _elm_lang$core$List$tail(
				A2(_elm_lang$core$List$drop, index, l));
			var head = A2(_elm_lang$core$List$take, index, l);
			var _p58 = tail;
			if (_p58.ctor === 'Nothing') {
				return l;
			} else {
				return A2(_elm_lang$core$List$append, head, _p58._0);
			}
		}
	});
var _elm_community$list_extra$List_Extra$stableSortWith = F2(
	function (pred, list) {
		var predWithIndex = F2(
			function (_p60, _p59) {
				var _p61 = _p60;
				var _p62 = _p59;
				var result = A2(pred, _p61._0, _p62._0);
				var _p63 = result;
				if (_p63.ctor === 'EQ') {
					return A2(_elm_lang$core$Basics$compare, _p61._1, _p62._1);
				} else {
					return result;
				}
			});
		var listWithIndex = A2(
			_elm_lang$core$List$indexedMap,
			F2(
				function (i, a) {
					return {ctor: '_Tuple2', _0: a, _1: i};
				}),
			list);
		return A2(
			_elm_lang$core$List$map,
			_elm_lang$core$Tuple$first,
			A2(_elm_lang$core$List$sortWith, predWithIndex, listWithIndex));
	});
var _elm_community$list_extra$List_Extra$remove = F2(
	function (x, xs) {
		var _p64 = xs;
		if (_p64.ctor === '[]') {
			return {ctor: '[]'};
		} else {
			var _p66 = _p64._1;
			var _p65 = _p64._0;
			return _elm_lang$core$Native_Utils.eq(x, _p65) ? _p66 : {
				ctor: '::',
				_0: _p65,
				_1: A2(_elm_community$list_extra$List_Extra$remove, x, _p66)
			};
		}
	});
var _elm_community$list_extra$List_Extra$updateIfIndex = F3(
	function (predicate, update, list) {
		return A2(
			_elm_lang$core$List$indexedMap,
			F2(
				function (i, x) {
					return predicate(i) ? update(x) : x;
				}),
			list);
	});
var _elm_community$list_extra$List_Extra$updateAt = F3(
	function (index, fn, list) {
		if (_elm_lang$core$Native_Utils.cmp(index, 0) < 0) {
			return list;
		} else {
			var tail = A2(_elm_lang$core$List$drop, index, list);
			var head = A2(_elm_lang$core$List$take, index, list);
			var _p67 = tail;
			if (_p67.ctor === '::') {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					head,
					{
						ctor: '::',
						_0: fn(_p67._0),
						_1: _p67._1
					});
			} else {
				return list;
			}
		}
	});
var _elm_community$list_extra$List_Extra$setAt = F2(
	function (index, value) {
		return A2(
			_elm_community$list_extra$List_Extra$updateAt,
			index,
			_elm_lang$core$Basics$always(value));
	});
var _elm_community$list_extra$List_Extra$updateIf = F3(
	function (predicate, update, list) {
		return A2(
			_elm_lang$core$List$map,
			function (item) {
				return predicate(item) ? update(item) : item;
			},
			list);
	});
var _elm_community$list_extra$List_Extra$replaceIf = F3(
	function (predicate, replacement, list) {
		return A3(
			_elm_community$list_extra$List_Extra$updateIf,
			predicate,
			_elm_lang$core$Basics$always(replacement),
			list);
	});
var _elm_community$list_extra$List_Extra$count = function (predicate) {
	return A2(
		_elm_lang$core$List$foldl,
		F2(
			function (x, acc) {
				return predicate(x) ? (acc + 1) : acc;
			}),
		0);
};
var _elm_community$list_extra$List_Extra$findIndices = function (predicate) {
	var consIndexIf = F3(
		function (index, x, acc) {
			return predicate(x) ? {ctor: '::', _0: index, _1: acc} : acc;
		});
	return A2(
		_elm_community$list_extra$List_Extra$indexedFoldr,
		consIndexIf,
		{ctor: '[]'});
};
var _elm_community$list_extra$List_Extra$findIndexHelp = F3(
	function (index, predicate, list) {
		findIndexHelp:
		while (true) {
			var _p68 = list;
			if (_p68.ctor === '[]') {
				return _elm_lang$core$Maybe$Nothing;
			} else {
				if (predicate(_p68._0)) {
					return _elm_lang$core$Maybe$Just(index);
				} else {
					var _v58 = index + 1,
						_v59 = predicate,
						_v60 = _p68._1;
					index = _v58;
					predicate = _v59;
					list = _v60;
					continue findIndexHelp;
				}
			}
		}
	});
var _elm_community$list_extra$List_Extra$findIndex = _elm_community$list_extra$List_Extra$findIndexHelp(0);
var _elm_community$list_extra$List_Extra$splitWhen = F2(
	function (predicate, list) {
		return A2(
			_elm_lang$core$Maybe$map,
			function (i) {
				return A2(_elm_community$list_extra$List_Extra$splitAt, i, list);
			},
			A2(_elm_community$list_extra$List_Extra$findIndex, predicate, list));
	});
var _elm_community$list_extra$List_Extra$elemIndices = function (x) {
	return _elm_community$list_extra$List_Extra$findIndices(
		F2(
			function (x, y) {
				return _elm_lang$core$Native_Utils.eq(x, y);
			})(x));
};
var _elm_community$list_extra$List_Extra$elemIndex = function (x) {
	return _elm_community$list_extra$List_Extra$findIndex(
		F2(
			function (x, y) {
				return _elm_lang$core$Native_Utils.eq(x, y);
			})(x));
};
var _elm_community$list_extra$List_Extra$find = F2(
	function (predicate, list) {
		find:
		while (true) {
			var _p69 = list;
			if (_p69.ctor === '[]') {
				return _elm_lang$core$Maybe$Nothing;
			} else {
				var _p70 = _p69._0;
				if (predicate(_p70)) {
					return _elm_lang$core$Maybe$Just(_p70);
				} else {
					var _v62 = predicate,
						_v63 = _p69._1;
					predicate = _v62;
					list = _v63;
					continue find;
				}
			}
		}
	});
var _elm_community$list_extra$List_Extra$notMember = function (x) {
	return function (_p71) {
		return !A2(_elm_lang$core$List$member, x, _p71);
	};
};
var _elm_community$list_extra$List_Extra$reverseMap = F2(
	function (f, xs) {
		return A3(
			_elm_lang$core$List$foldl,
			F2(
				function (x, acc) {
					return {
						ctor: '::',
						_0: f(x),
						_1: acc
					};
				}),
			{ctor: '[]'},
			xs);
	});
var _elm_community$list_extra$List_Extra$andThen = _elm_lang$core$List$concatMap;
var _elm_community$list_extra$List_Extra$lift2 = F3(
	function (f, la, lb) {
		return A2(
			_elm_community$list_extra$List_Extra$andThen,
			function (a) {
				return A2(
					_elm_community$list_extra$List_Extra$andThen,
					function (b) {
						return {
							ctor: '::',
							_0: A2(f, a, b),
							_1: {ctor: '[]'}
						};
					},
					lb);
			},
			la);
	});
var _elm_community$list_extra$List_Extra$cartesianProduct = function (ll) {
	var _p72 = ll;
	if (_p72.ctor === '[]') {
		return {
			ctor: '::',
			_0: {ctor: '[]'},
			_1: {ctor: '[]'}
		};
	} else {
		return A3(
			_elm_community$list_extra$List_Extra$lift2,
			F2(
				function (x, y) {
					return {ctor: '::', _0: x, _1: y};
				}),
			_p72._0,
			_elm_community$list_extra$List_Extra$cartesianProduct(_p72._1));
	}
};
var _elm_community$list_extra$List_Extra$lift3 = F4(
	function (f, la, lb, lc) {
		return A2(
			_elm_community$list_extra$List_Extra$andThen,
			function (a) {
				return A2(
					_elm_community$list_extra$List_Extra$andThen,
					function (b) {
						return A2(
							_elm_community$list_extra$List_Extra$andThen,
							function (c) {
								return {
									ctor: '::',
									_0: A3(f, a, b, c),
									_1: {ctor: '[]'}
								};
							},
							lc);
					},
					lb);
			},
			la);
	});
var _elm_community$list_extra$List_Extra$lift4 = F5(
	function (f, la, lb, lc, ld) {
		return A2(
			_elm_community$list_extra$List_Extra$andThen,
			function (a) {
				return A2(
					_elm_community$list_extra$List_Extra$andThen,
					function (b) {
						return A2(
							_elm_community$list_extra$List_Extra$andThen,
							function (c) {
								return A2(
									_elm_community$list_extra$List_Extra$andThen,
									function (d) {
										return {
											ctor: '::',
											_0: A4(f, a, b, c, d),
											_1: {ctor: '[]'}
										};
									},
									ld);
							},
							lc);
					},
					lb);
			},
			la);
	});
var _elm_community$list_extra$List_Extra$andMap = F2(
	function (l, fl) {
		return A3(
			_elm_lang$core$List$map2,
			F2(
				function (x, y) {
					return x(y);
				}),
			fl,
			l);
	});
var _elm_community$list_extra$List_Extra$uniqueHelp = F4(
	function (f, existing, remaining, accumulator) {
		uniqueHelp:
		while (true) {
			var _p73 = remaining;
			if (_p73.ctor === '[]') {
				return _elm_lang$core$List$reverse(accumulator);
			} else {
				var _p75 = _p73._1;
				var _p74 = _p73._0;
				var computedFirst = f(_p74);
				if (A2(_elm_lang$core$Set$member, computedFirst, existing)) {
					var _v66 = f,
						_v67 = existing,
						_v68 = _p75,
						_v69 = accumulator;
					f = _v66;
					existing = _v67;
					remaining = _v68;
					accumulator = _v69;
					continue uniqueHelp;
				} else {
					var _v70 = f,
						_v71 = A2(_elm_lang$core$Set$insert, computedFirst, existing),
						_v72 = _p75,
						_v73 = {ctor: '::', _0: _p74, _1: accumulator};
					f = _v70;
					existing = _v71;
					remaining = _v72;
					accumulator = _v73;
					continue uniqueHelp;
				}
			}
		}
	});
var _elm_community$list_extra$List_Extra$uniqueBy = F2(
	function (f, list) {
		return A4(
			_elm_community$list_extra$List_Extra$uniqueHelp,
			f,
			_elm_lang$core$Set$empty,
			list,
			{ctor: '[]'});
	});
var _elm_community$list_extra$List_Extra$allDifferentBy = F2(
	function (f, list) {
		return _elm_lang$core$Native_Utils.eq(
			_elm_lang$core$List$length(list),
			_elm_lang$core$List$length(
				A2(_elm_community$list_extra$List_Extra$uniqueBy, f, list)));
	});
var _elm_community$list_extra$List_Extra$allDifferent = function (list) {
	return A2(_elm_community$list_extra$List_Extra$allDifferentBy, _elm_lang$core$Basics$identity, list);
};
var _elm_community$list_extra$List_Extra$unique = function (list) {
	return A4(
		_elm_community$list_extra$List_Extra$uniqueHelp,
		_elm_lang$core$Basics$identity,
		_elm_lang$core$Set$empty,
		list,
		{ctor: '[]'});
};
var _elm_community$list_extra$List_Extra$dropWhile = F2(
	function (predicate, list) {
		dropWhile:
		while (true) {
			var _p76 = list;
			if (_p76.ctor === '[]') {
				return {ctor: '[]'};
			} else {
				if (predicate(_p76._0)) {
					var _v75 = predicate,
						_v76 = _p76._1;
					predicate = _v75;
					list = _v76;
					continue dropWhile;
				} else {
					return list;
				}
			}
		}
	});
var _elm_community$list_extra$List_Extra$takeWhile = function (predicate) {
	var takeWhileMemo = F2(
		function (memo, list) {
			takeWhileMemo:
			while (true) {
				var _p77 = list;
				if (_p77.ctor === '[]') {
					return _elm_lang$core$List$reverse(memo);
				} else {
					var _p78 = _p77._0;
					if (predicate(_p78)) {
						var _v78 = {ctor: '::', _0: _p78, _1: memo},
							_v79 = _p77._1;
						memo = _v78;
						list = _v79;
						continue takeWhileMemo;
					} else {
						return _elm_lang$core$List$reverse(memo);
					}
				}
			}
		});
	return takeWhileMemo(
		{ctor: '[]'});
};
var _elm_community$list_extra$List_Extra$span = F2(
	function (p, xs) {
		return {
			ctor: '_Tuple2',
			_0: A2(_elm_community$list_extra$List_Extra$takeWhile, p, xs),
			_1: A2(_elm_community$list_extra$List_Extra$dropWhile, p, xs)
		};
	});
var _elm_community$list_extra$List_Extra$break = function (p) {
	return _elm_community$list_extra$List_Extra$span(
		function (_p79) {
			return !p(_p79);
		});
};
var _elm_community$list_extra$List_Extra$groupWhile = F2(
	function (eq, xs_) {
		var _p80 = xs_;
		if (_p80.ctor === '[]') {
			return {ctor: '[]'};
		} else {
			var _p82 = _p80._0;
			var _p81 = A2(
				_elm_community$list_extra$List_Extra$span,
				eq(_p82),
				_p80._1);
			var ys = _p81._0;
			var zs = _p81._1;
			return {
				ctor: '::',
				_0: {ctor: '::', _0: _p82, _1: ys},
				_1: A2(_elm_community$list_extra$List_Extra$groupWhile, eq, zs)
			};
		}
	});
var _elm_community$list_extra$List_Extra$group = _elm_community$list_extra$List_Extra$groupWhile(
	F2(
		function (x, y) {
			return _elm_lang$core$Native_Utils.eq(x, y);
		}));
var _elm_community$list_extra$List_Extra$minimumBy = F2(
	function (f, ls) {
		var minBy = F2(
			function (x, _p83) {
				var _p84 = _p83;
				var _p85 = _p84._1;
				var fx = f(x);
				return (_elm_lang$core$Native_Utils.cmp(fx, _p85) < 0) ? {ctor: '_Tuple2', _0: x, _1: fx} : {ctor: '_Tuple2', _0: _p84._0, _1: _p85};
			});
		var _p86 = ls;
		if (_p86.ctor === '::') {
			if (_p86._1.ctor === '[]') {
				return _elm_lang$core$Maybe$Just(_p86._0);
			} else {
				var _p87 = _p86._0;
				return _elm_lang$core$Maybe$Just(
					_elm_lang$core$Tuple$first(
						A3(
							_elm_lang$core$List$foldl,
							minBy,
							{
								ctor: '_Tuple2',
								_0: _p87,
								_1: f(_p87)
							},
							_p86._1)));
			}
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	});
var _elm_community$list_extra$List_Extra$maximumBy = F2(
	function (f, ls) {
		var maxBy = F2(
			function (x, _p88) {
				var _p89 = _p88;
				var _p90 = _p89._1;
				var fx = f(x);
				return (_elm_lang$core$Native_Utils.cmp(fx, _p90) > 0) ? {ctor: '_Tuple2', _0: x, _1: fx} : {ctor: '_Tuple2', _0: _p89._0, _1: _p90};
			});
		var _p91 = ls;
		if (_p91.ctor === '::') {
			if (_p91._1.ctor === '[]') {
				return _elm_lang$core$Maybe$Just(_p91._0);
			} else {
				var _p92 = _p91._0;
				return _elm_lang$core$Maybe$Just(
					_elm_lang$core$Tuple$first(
						A3(
							_elm_lang$core$List$foldl,
							maxBy,
							{
								ctor: '_Tuple2',
								_0: _p92,
								_1: f(_p92)
							},
							_p91._1)));
			}
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	});
var _elm_community$list_extra$List_Extra$uncons = function (xs) {
	var _p93 = xs;
	if (_p93.ctor === '[]') {
		return _elm_lang$core$Maybe$Nothing;
	} else {
		return _elm_lang$core$Maybe$Just(
			{ctor: '_Tuple2', _0: _p93._0, _1: _p93._1});
	}
};
var _elm_community$list_extra$List_Extra$swapAt = F3(
	function (index1, index2, l) {
		swapAt:
		while (true) {
			if (_elm_lang$core$Native_Utils.eq(index1, index2) || (_elm_lang$core$Native_Utils.cmp(index1, 0) < 0)) {
				return l;
			} else {
				if (_elm_lang$core$Native_Utils.cmp(index1, index2) > 0) {
					var _v86 = index2,
						_v87 = index1,
						_v88 = l;
					index1 = _v86;
					index2 = _v87;
					l = _v88;
					continue swapAt;
				} else {
					var _p94 = A2(_elm_community$list_extra$List_Extra$splitAt, index1, l);
					var part1 = _p94._0;
					var tail1 = _p94._1;
					var _p95 = A2(_elm_community$list_extra$List_Extra$splitAt, index2 - index1, tail1);
					var head2 = _p95._0;
					var tail2 = _p95._1;
					var _p96 = {
						ctor: '_Tuple2',
						_0: _elm_community$list_extra$List_Extra$uncons(head2),
						_1: _elm_community$list_extra$List_Extra$uncons(tail2)
					};
					if (((((_p96.ctor === '_Tuple2') && (_p96._0.ctor === 'Just')) && (_p96._0._0.ctor === '_Tuple2')) && (_p96._1.ctor === 'Just')) && (_p96._1._0.ctor === '_Tuple2')) {
						return _elm_lang$core$List$concat(
							{
								ctor: '::',
								_0: part1,
								_1: {
									ctor: '::',
									_0: {ctor: '::', _0: _p96._1._0._0, _1: _p96._0._0._1},
									_1: {
										ctor: '::',
										_0: {ctor: '::', _0: _p96._0._0._0, _1: _p96._1._0._1},
										_1: {ctor: '[]'}
									}
								}
							});
					} else {
						return l;
					}
				}
			}
		}
	});
var _elm_community$list_extra$List_Extra$cycleHelp = F3(
	function (acc, n, list) {
		cycleHelp:
		while (true) {
			if (_elm_lang$core$Native_Utils.cmp(n, 0) > 0) {
				var _v90 = A2(_elm_community$list_extra$List_Extra$reverseAppend, list, acc),
					_v91 = n - 1,
					_v92 = list;
				acc = _v90;
				n = _v91;
				list = _v92;
				continue cycleHelp;
			} else {
				return acc;
			}
		}
	});
var _elm_community$list_extra$List_Extra$cycle = F2(
	function (len, list) {
		var cycleLength = _elm_lang$core$List$length(list);
		return (_elm_lang$core$Native_Utils.eq(cycleLength, 0) || _elm_lang$core$Native_Utils.eq(cycleLength, len)) ? list : ((_elm_lang$core$Native_Utils.cmp(cycleLength, len) < 0) ? _elm_lang$core$List$reverse(
			A2(
				_elm_community$list_extra$List_Extra$reverseAppend,
				A2(
					_elm_lang$core$List$take,
					A2(_elm_lang$core$Basics$rem, len, cycleLength),
					list),
				A3(
					_elm_community$list_extra$List_Extra$cycleHelp,
					{ctor: '[]'},
					(len / cycleLength) | 0,
					list))) : A2(_elm_lang$core$List$take, len, list));
	});
var _elm_community$list_extra$List_Extra$initialize = F2(
	function (n, f) {
		var step = F2(
			function (i, acc) {
				step:
				while (true) {
					if (_elm_lang$core$Native_Utils.cmp(i, 0) < 0) {
						return acc;
					} else {
						var _v93 = i - 1,
							_v94 = {
							ctor: '::',
							_0: f(i),
							_1: acc
						};
						i = _v93;
						acc = _v94;
						continue step;
					}
				}
			});
		return A2(
			step,
			n - 1,
			{ctor: '[]'});
	});
var _elm_community$list_extra$List_Extra$iterate = F2(
	function (f, x) {
		var _p97 = f(x);
		if (_p97.ctor === 'Just') {
			return {
				ctor: '::',
				_0: x,
				_1: A2(_elm_community$list_extra$List_Extra$iterate, f, _p97._0)
			};
		} else {
			return {
				ctor: '::',
				_0: x,
				_1: {ctor: '[]'}
			};
		}
	});
var _elm_community$list_extra$List_Extra$getAt = F2(
	function (idx, xs) {
		return (_elm_lang$core$Native_Utils.cmp(idx, 0) < 0) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$List$head(
			A2(_elm_lang$core$List$drop, idx, xs));
	});
var _elm_community$list_extra$List_Extra_ops = _elm_community$list_extra$List_Extra_ops || {};
_elm_community$list_extra$List_Extra_ops['!!'] = _elm_lang$core$Basics$flip(_elm_community$list_extra$List_Extra$getAt);
var _elm_community$list_extra$List_Extra$init = function (items) {
	var _p98 = items;
	if (_p98.ctor === '[]') {
		return _elm_lang$core$Maybe$Nothing;
	} else {
		return A2(
			_elm_lang$core$Maybe$map,
			_elm_lang$core$List$reverse,
			_elm_lang$core$List$tail(
				_elm_lang$core$List$reverse(_p98)));
	}
};
var _elm_community$list_extra$List_Extra$last = function (items) {
	last:
	while (true) {
		var _p99 = items;
		if (_p99.ctor === '[]') {
			return _elm_lang$core$Maybe$Nothing;
		} else {
			if (_p99._1.ctor === '[]') {
				return _elm_lang$core$Maybe$Just(_p99._0);
			} else {
				var _v98 = _p99._1;
				items = _v98;
				continue last;
			}
		}
	}
};

var _elm_lang$http$Native_Http = function() {


// ENCODING AND DECODING

function encodeUri(string)
{
	return encodeURIComponent(string);
}

function decodeUri(string)
{
	try
	{
		return _elm_lang$core$Maybe$Just(decodeURIComponent(string));
	}
	catch(e)
	{
		return _elm_lang$core$Maybe$Nothing;
	}
}


// SEND REQUEST

function toTask(request, maybeProgress)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		var xhr = new XMLHttpRequest();

		configureProgress(xhr, maybeProgress);

		xhr.addEventListener('error', function() {
			callback(_elm_lang$core$Native_Scheduler.fail({ ctor: 'NetworkError' }));
		});
		xhr.addEventListener('timeout', function() {
			callback(_elm_lang$core$Native_Scheduler.fail({ ctor: 'Timeout' }));
		});
		xhr.addEventListener('load', function() {
			callback(handleResponse(xhr, request.expect.responseToResult));
		});

		try
		{
			xhr.open(request.method, request.url, true);
		}
		catch (e)
		{
			return callback(_elm_lang$core$Native_Scheduler.fail({ ctor: 'BadUrl', _0: request.url }));
		}

		configureRequest(xhr, request);
		send(xhr, request.body);

		return function() { xhr.abort(); };
	});
}

function configureProgress(xhr, maybeProgress)
{
	if (maybeProgress.ctor === 'Nothing')
	{
		return;
	}

	xhr.addEventListener('progress', function(event) {
		if (!event.lengthComputable)
		{
			return;
		}
		_elm_lang$core$Native_Scheduler.rawSpawn(maybeProgress._0({
			bytes: event.loaded,
			bytesExpected: event.total
		}));
	});
}

function configureRequest(xhr, request)
{
	function setHeader(pair)
	{
		xhr.setRequestHeader(pair._0, pair._1);
	}

	A2(_elm_lang$core$List$map, setHeader, request.headers);
	xhr.responseType = request.expect.responseType;
	xhr.withCredentials = request.withCredentials;

	if (request.timeout.ctor === 'Just')
	{
		xhr.timeout = request.timeout._0;
	}
}

function send(xhr, body)
{
	switch (body.ctor)
	{
		case 'EmptyBody':
			xhr.send();
			return;

		case 'StringBody':
			xhr.setRequestHeader('Content-Type', body._0);
			xhr.send(body._1);
			return;

		case 'FormDataBody':
			xhr.send(body._0);
			return;
	}
}


// RESPONSES

function handleResponse(xhr, responseToResult)
{
	var response = toResponse(xhr);

	if (xhr.status < 200 || 300 <= xhr.status)
	{
		response.body = xhr.responseText;
		return _elm_lang$core$Native_Scheduler.fail({
			ctor: 'BadStatus',
			_0: response
		});
	}

	var result = responseToResult(response);

	if (result.ctor === 'Ok')
	{
		return _elm_lang$core$Native_Scheduler.succeed(result._0);
	}
	else
	{
		response.body = xhr.responseText;
		return _elm_lang$core$Native_Scheduler.fail({
			ctor: 'BadPayload',
			_0: result._0,
			_1: response
		});
	}
}

function toResponse(xhr)
{
	return {
		status: { code: xhr.status, message: xhr.statusText },
		headers: parseHeaders(xhr.getAllResponseHeaders()),
		url: xhr.responseURL,
		body: xhr.response
	};
}

function parseHeaders(rawHeaders)
{
	var headers = _elm_lang$core$Dict$empty;

	if (!rawHeaders)
	{
		return headers;
	}

	var headerPairs = rawHeaders.split('\u000d\u000a');
	for (var i = headerPairs.length; i--; )
	{
		var headerPair = headerPairs[i];
		var index = headerPair.indexOf('\u003a\u0020');
		if (index > 0)
		{
			var key = headerPair.substring(0, index);
			var value = headerPair.substring(index + 2);

			headers = A3(_elm_lang$core$Dict$update, key, function(oldValue) {
				if (oldValue.ctor === 'Just')
				{
					return _elm_lang$core$Maybe$Just(value + ', ' + oldValue._0);
				}
				return _elm_lang$core$Maybe$Just(value);
			}, headers);
		}
	}

	return headers;
}


// EXPECTORS

function expectStringResponse(responseToResult)
{
	return {
		responseType: 'text',
		responseToResult: responseToResult
	};
}

function mapExpect(func, expect)
{
	return {
		responseType: expect.responseType,
		responseToResult: function(response) {
			var convertedResponse = expect.responseToResult(response);
			return A2(_elm_lang$core$Result$map, func, convertedResponse);
		}
	};
}


// BODY

function multipart(parts)
{
	var formData = new FormData();

	while (parts.ctor !== '[]')
	{
		var part = parts._0;
		formData.append(part._0, part._1);
		parts = parts._1;
	}

	return { ctor: 'FormDataBody', _0: formData };
}

return {
	toTask: F2(toTask),
	expectStringResponse: expectStringResponse,
	mapExpect: F2(mapExpect),
	multipart: multipart,
	encodeUri: encodeUri,
	decodeUri: decodeUri
};

}();

var _elm_lang$http$Http_Internal$map = F2(
	function (func, request) {
		return _elm_lang$core$Native_Utils.update(
			request,
			{
				expect: A2(_elm_lang$http$Native_Http.mapExpect, func, request.expect)
			});
	});
var _elm_lang$http$Http_Internal$RawRequest = F7(
	function (a, b, c, d, e, f, g) {
		return {method: a, headers: b, url: c, body: d, expect: e, timeout: f, withCredentials: g};
	});
var _elm_lang$http$Http_Internal$Request = function (a) {
	return {ctor: 'Request', _0: a};
};
var _elm_lang$http$Http_Internal$Expect = {ctor: 'Expect'};
var _elm_lang$http$Http_Internal$FormDataBody = {ctor: 'FormDataBody'};
var _elm_lang$http$Http_Internal$StringBody = F2(
	function (a, b) {
		return {ctor: 'StringBody', _0: a, _1: b};
	});
var _elm_lang$http$Http_Internal$EmptyBody = {ctor: 'EmptyBody'};
var _elm_lang$http$Http_Internal$Header = F2(
	function (a, b) {
		return {ctor: 'Header', _0: a, _1: b};
	});

var _elm_lang$http$Http$decodeUri = _elm_lang$http$Native_Http.decodeUri;
var _elm_lang$http$Http$encodeUri = _elm_lang$http$Native_Http.encodeUri;
var _elm_lang$http$Http$expectStringResponse = _elm_lang$http$Native_Http.expectStringResponse;
var _elm_lang$http$Http$expectJson = function (decoder) {
	return _elm_lang$http$Http$expectStringResponse(
		function (response) {
			return A2(_elm_lang$core$Json_Decode$decodeString, decoder, response.body);
		});
};
var _elm_lang$http$Http$expectString = _elm_lang$http$Http$expectStringResponse(
	function (response) {
		return _elm_lang$core$Result$Ok(response.body);
	});
var _elm_lang$http$Http$multipartBody = _elm_lang$http$Native_Http.multipart;
var _elm_lang$http$Http$stringBody = _elm_lang$http$Http_Internal$StringBody;
var _elm_lang$http$Http$jsonBody = function (value) {
	return A2(
		_elm_lang$http$Http_Internal$StringBody,
		'application/json',
		A2(_elm_lang$core$Json_Encode$encode, 0, value));
};
var _elm_lang$http$Http$emptyBody = _elm_lang$http$Http_Internal$EmptyBody;
var _elm_lang$http$Http$header = _elm_lang$http$Http_Internal$Header;
var _elm_lang$http$Http$request = _elm_lang$http$Http_Internal$Request;
var _elm_lang$http$Http$post = F3(
	function (url, body, decoder) {
		return _elm_lang$http$Http$request(
			{
				method: 'POST',
				headers: {ctor: '[]'},
				url: url,
				body: body,
				expect: _elm_lang$http$Http$expectJson(decoder),
				timeout: _elm_lang$core$Maybe$Nothing,
				withCredentials: false
			});
	});
var _elm_lang$http$Http$get = F2(
	function (url, decoder) {
		return _elm_lang$http$Http$request(
			{
				method: 'GET',
				headers: {ctor: '[]'},
				url: url,
				body: _elm_lang$http$Http$emptyBody,
				expect: _elm_lang$http$Http$expectJson(decoder),
				timeout: _elm_lang$core$Maybe$Nothing,
				withCredentials: false
			});
	});
var _elm_lang$http$Http$getString = function (url) {
	return _elm_lang$http$Http$request(
		{
			method: 'GET',
			headers: {ctor: '[]'},
			url: url,
			body: _elm_lang$http$Http$emptyBody,
			expect: _elm_lang$http$Http$expectString,
			timeout: _elm_lang$core$Maybe$Nothing,
			withCredentials: false
		});
};
var _elm_lang$http$Http$toTask = function (_p0) {
	var _p1 = _p0;
	return A2(_elm_lang$http$Native_Http.toTask, _p1._0, _elm_lang$core$Maybe$Nothing);
};
var _elm_lang$http$Http$send = F2(
	function (resultToMessage, request) {
		return A2(
			_elm_lang$core$Task$attempt,
			resultToMessage,
			_elm_lang$http$Http$toTask(request));
	});
var _elm_lang$http$Http$Response = F4(
	function (a, b, c, d) {
		return {url: a, status: b, headers: c, body: d};
	});
var _elm_lang$http$Http$BadPayload = F2(
	function (a, b) {
		return {ctor: 'BadPayload', _0: a, _1: b};
	});
var _elm_lang$http$Http$BadStatus = function (a) {
	return {ctor: 'BadStatus', _0: a};
};
var _elm_lang$http$Http$NetworkError = {ctor: 'NetworkError'};
var _elm_lang$http$Http$Timeout = {ctor: 'Timeout'};
var _elm_lang$http$Http$BadUrl = function (a) {
	return {ctor: 'BadUrl', _0: a};
};
var _elm_lang$http$Http$StringPart = F2(
	function (a, b) {
		return {ctor: 'StringPart', _0: a, _1: b};
	});
var _elm_lang$http$Http$stringPart = _elm_lang$http$Http$StringPart;

var _elm_community$string_extra$String_Extra$accentRegex = function () {
	var matches = {
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: '[à-æ]', _1: 'a'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: '[À-Æ]', _1: 'A'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'ç', _1: 'c'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'Ç', _1: 'C'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: '[è-ë]', _1: 'e'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: '[È-Ë]', _1: 'E'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: '[ì-ï]', _1: 'i'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: '[Ì-Ï]', _1: 'I'},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'ñ', _1: 'n'},
										_1: {
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: 'Ñ', _1: 'N'},
											_1: {
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: '[ò-ö]', _1: 'o'},
												_1: {
													ctor: '::',
													_0: {ctor: '_Tuple2', _0: '[Ò-Ö]', _1: 'O'},
													_1: {
														ctor: '::',
														_0: {ctor: '_Tuple2', _0: '[ù-ü]', _1: 'u'},
														_1: {
															ctor: '::',
															_0: {ctor: '_Tuple2', _0: '[Ù-Ü]', _1: 'U'},
															_1: {
																ctor: '::',
																_0: {ctor: '_Tuple2', _0: 'ý', _1: 'y'},
																_1: {
																	ctor: '::',
																	_0: {ctor: '_Tuple2', _0: 'ÿ', _1: 'y'},
																	_1: {
																		ctor: '::',
																		_0: {ctor: '_Tuple2', _0: 'Ý', _1: 'Y'},
																		_1: {ctor: '[]'}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	};
	return A2(
		_elm_lang$core$List$map,
		function (_p0) {
			var _p1 = _p0;
			return {
				ctor: '_Tuple2',
				_0: _elm_lang$core$Regex$regex(_p1._0),
				_1: _p1._1
			};
		},
		matches);
}();
var _elm_community$string_extra$String_Extra$removeAccents = function (string) {
	if (_elm_lang$core$String$isEmpty(string)) {
		return string;
	} else {
		var do_regex_to_remove_acents = function (_p2) {
			var _p3 = _p2;
			return A3(
				_elm_lang$core$Regex$replace,
				_elm_lang$core$Regex$All,
				_p3._0,
				function (_p4) {
					return _p3._1;
				});
		};
		return A3(_elm_lang$core$List$foldl, do_regex_to_remove_acents, string, _elm_community$string_extra$String_Extra$accentRegex);
	}
};
var _elm_community$string_extra$String_Extra$nonEmpty = function (string) {
	return _elm_lang$core$String$isEmpty(string) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(string);
};
var _elm_community$string_extra$String_Extra$replacementCodePoint = 65533;
var _elm_community$string_extra$String_Extra$toCodePoints = function (string) {
	var allCodeUnits = A2(
		_elm_lang$core$List$map,
		_elm_lang$core$Char$toCode,
		_elm_lang$core$String$toList(string));
	var combineAndReverse = F2(
		function (codeUnits, accumulated) {
			combineAndReverse:
			while (true) {
				var _p5 = codeUnits;
				if (_p5.ctor === '[]') {
					return accumulated;
				} else {
					var _p9 = _p5._0;
					var _p8 = _p5._1;
					if ((_elm_lang$core$Native_Utils.cmp(_p9, 0) > -1) && (_elm_lang$core$Native_Utils.cmp(_p9, 55295) < 1)) {
						var _v3 = _p8,
							_v4 = {ctor: '::', _0: _p9, _1: accumulated};
						codeUnits = _v3;
						accumulated = _v4;
						continue combineAndReverse;
					} else {
						if ((_elm_lang$core$Native_Utils.cmp(_p9, 55296) > -1) && (_elm_lang$core$Native_Utils.cmp(_p9, 56319) < 1)) {
							var _p6 = _p8;
							if (_p6.ctor === '[]') {
								return {ctor: '::', _0: _elm_community$string_extra$String_Extra$replacementCodePoint, _1: accumulated};
							} else {
								var _p7 = _p6._0;
								if ((_elm_lang$core$Native_Utils.cmp(_p7, 56320) > -1) && (_elm_lang$core$Native_Utils.cmp(_p7, 57343) < 1)) {
									var codePoint = (65536 + ((_p9 - 55296) * 1024)) + (_p7 - 56320);
									var _v6 = _p6._1,
										_v7 = {ctor: '::', _0: codePoint, _1: accumulated};
									codeUnits = _v6;
									accumulated = _v7;
									continue combineAndReverse;
								} else {
									var _v8 = _p8,
										_v9 = {ctor: '::', _0: _elm_community$string_extra$String_Extra$replacementCodePoint, _1: accumulated};
									codeUnits = _v8;
									accumulated = _v9;
									continue combineAndReverse;
								}
							}
						} else {
							if ((_elm_lang$core$Native_Utils.cmp(_p9, 57344) > -1) && (_elm_lang$core$Native_Utils.cmp(_p9, 65535) < 1)) {
								var _v10 = _p8,
									_v11 = {ctor: '::', _0: _p9, _1: accumulated};
								codeUnits = _v10;
								accumulated = _v11;
								continue combineAndReverse;
							} else {
								var _v12 = _p8,
									_v13 = {ctor: '::', _0: _elm_community$string_extra$String_Extra$replacementCodePoint, _1: accumulated};
								codeUnits = _v12;
								accumulated = _v13;
								continue combineAndReverse;
							}
						}
					}
				}
			}
		});
	return _elm_lang$core$List$reverse(
		A2(
			combineAndReverse,
			allCodeUnits,
			{ctor: '[]'}));
};
var _elm_community$string_extra$String_Extra$fromCodePoints = function (allCodePoints) {
	var splitAndReverse = F2(
		function (codePoints, accumulated) {
			splitAndReverse:
			while (true) {
				var _p10 = codePoints;
				if (_p10.ctor === '[]') {
					return accumulated;
				} else {
					var _p12 = _p10._1;
					var _p11 = _p10._0;
					if ((_elm_lang$core$Native_Utils.cmp(_p11, 0) > -1) && (_elm_lang$core$Native_Utils.cmp(_p11, 55295) < 1)) {
						var _v15 = _p12,
							_v16 = {ctor: '::', _0: _p11, _1: accumulated};
						codePoints = _v15;
						accumulated = _v16;
						continue splitAndReverse;
					} else {
						if ((_elm_lang$core$Native_Utils.cmp(_p11, 65536) > -1) && (_elm_lang$core$Native_Utils.cmp(_p11, 1114111) < 1)) {
							var subtracted = _p11 - 65536;
							var leading = (subtracted >> 10) + 55296;
							var trailing = (subtracted & 1023) + 56320;
							var _v17 = _p12,
								_v18 = {
								ctor: '::',
								_0: trailing,
								_1: {ctor: '::', _0: leading, _1: accumulated}
							};
							codePoints = _v17;
							accumulated = _v18;
							continue splitAndReverse;
						} else {
							if ((_elm_lang$core$Native_Utils.cmp(_p11, 57344) > -1) && (_elm_lang$core$Native_Utils.cmp(_p11, 65535) < 1)) {
								var _v19 = _p12,
									_v20 = {ctor: '::', _0: _p11, _1: accumulated};
								codePoints = _v19;
								accumulated = _v20;
								continue splitAndReverse;
							} else {
								var _v21 = _p12,
									_v22 = {ctor: '::', _0: _elm_community$string_extra$String_Extra$replacementCodePoint, _1: accumulated};
								codePoints = _v21;
								accumulated = _v22;
								continue splitAndReverse;
							}
						}
					}
				}
			}
		});
	var allCodeUnits = _elm_lang$core$List$reverse(
		A2(
			splitAndReverse,
			allCodePoints,
			{ctor: '[]'}));
	return _elm_lang$core$String$fromList(
		A2(_elm_lang$core$List$map, _elm_lang$core$Char$fromCode, allCodeUnits));
};
var _elm_community$string_extra$String_Extra$fromFloat = _elm_lang$core$Basics$toString;
var _elm_community$string_extra$String_Extra$fromInt = _elm_lang$core$Basics$toString;
var _elm_community$string_extra$String_Extra$leftOfBack = F2(
	function (pattern, string) {
		return A2(
			_elm_lang$core$Maybe$withDefault,
			'',
			A2(
				_elm_lang$core$Maybe$map,
				A2(_elm_lang$core$Basics$flip, _elm_lang$core$String$left, string),
				_elm_lang$core$List$head(
					_elm_lang$core$List$reverse(
						A2(_elm_lang$core$String$indexes, pattern, string)))));
	});
var _elm_community$string_extra$String_Extra$rightOfBack = F2(
	function (pattern, string) {
		return A2(
			_elm_lang$core$Maybe$withDefault,
			'',
			A2(
				_elm_lang$core$Maybe$map,
				function (_p13) {
					return A3(
						_elm_lang$core$Basics$flip,
						_elm_lang$core$String$dropLeft,
						string,
						A2(
							F2(
								function (x, y) {
									return x + y;
								}),
							_elm_lang$core$String$length(pattern),
							_p13));
				},
				_elm_lang$core$List$head(
					_elm_lang$core$List$reverse(
						A2(_elm_lang$core$String$indexes, pattern, string)))));
	});
var _elm_community$string_extra$String_Extra$firstResultHelp = F2(
	function ($default, list) {
		firstResultHelp:
		while (true) {
			var _p14 = list;
			if (_p14.ctor === '[]') {
				return $default;
			} else {
				if (_p14._0.ctor === 'Just') {
					return _p14._0._0;
				} else {
					var _v24 = $default,
						_v25 = _p14._1;
					$default = _v24;
					list = _v25;
					continue firstResultHelp;
				}
			}
		}
	});
var _elm_community$string_extra$String_Extra$firstResult = function (list) {
	return A2(_elm_community$string_extra$String_Extra$firstResultHelp, '', list);
};
var _elm_community$string_extra$String_Extra$leftOf = F2(
	function (pattern, string) {
		return A2(
			_elm_lang$core$String$join,
			'',
			A2(
				_elm_lang$core$List$map,
				function (_p15) {
					return _elm_community$string_extra$String_Extra$firstResult(
						function (_) {
							return _.submatches;
						}(_p15));
				},
				A3(
					_elm_lang$core$Regex$find,
					_elm_lang$core$Regex$AtMost(1),
					_elm_lang$core$Regex$regex(
						A2(
							_elm_lang$core$Basics_ops['++'],
							'^(.*?)',
							_elm_lang$core$Regex$escape(pattern))),
					string)));
	});
var _elm_community$string_extra$String_Extra$rightOf = F2(
	function (pattern, string) {
		return A2(
			_elm_lang$core$String$join,
			'',
			A2(
				_elm_lang$core$List$map,
				function (_p16) {
					return _elm_community$string_extra$String_Extra$firstResult(
						function (_) {
							return _.submatches;
						}(_p16));
				},
				A3(
					_elm_lang$core$Regex$find,
					_elm_lang$core$Regex$AtMost(1),
					_elm_lang$core$Regex$regex(
						A2(
							_elm_lang$core$Basics_ops['++'],
							_elm_lang$core$Regex$escape(pattern),
							'(.*)$')),
					string)));
	});
var _elm_community$string_extra$String_Extra$pluralize = F3(
	function (singular, plural, count) {
		return _elm_lang$core$Native_Utils.eq(count, 1) ? A2(_elm_lang$core$Basics_ops['++'], '1 ', singular) : A2(
			_elm_lang$core$Basics_ops['++'],
			_elm_lang$core$Basics$toString(count),
			A2(_elm_lang$core$Basics_ops['++'], ' ', plural));
	});
var _elm_community$string_extra$String_Extra$stripTags = function (string) {
	return A4(
		_elm_lang$core$Regex$replace,
		_elm_lang$core$Regex$All,
		_elm_lang$core$Regex$regex('<\\/?[^>]+>'),
		_elm_lang$core$Basics$always(''),
		string);
};
var _elm_community$string_extra$String_Extra$toSentenceHelper = F3(
	function (lastPart, sentence, list) {
		toSentenceHelper:
		while (true) {
			var _p17 = list;
			if (_p17.ctor === '[]') {
				return sentence;
			} else {
				if (_p17._1.ctor === '[]') {
					return A2(
						_elm_lang$core$Basics_ops['++'],
						sentence,
						A2(_elm_lang$core$Basics_ops['++'], lastPart, _p17._0));
				} else {
					var _v27 = lastPart,
						_v28 = A2(
						_elm_lang$core$Basics_ops['++'],
						sentence,
						A2(_elm_lang$core$Basics_ops['++'], ', ', _p17._0)),
						_v29 = _p17._1;
					lastPart = _v27;
					sentence = _v28;
					list = _v29;
					continue toSentenceHelper;
				}
			}
		}
	});
var _elm_community$string_extra$String_Extra$toSentenceBaseCase = function (list) {
	var _p18 = list;
	_v30_2:
	do {
		if (_p18.ctor === '::') {
			if (_p18._1.ctor === '[]') {
				return _p18._0;
			} else {
				if (_p18._1._1.ctor === '[]') {
					return A2(
						_elm_lang$core$Basics_ops['++'],
						_p18._0,
						A2(_elm_lang$core$Basics_ops['++'], ' and ', _p18._1._0));
				} else {
					break _v30_2;
				}
			}
		} else {
			break _v30_2;
		}
	} while(false);
	return '';
};
var _elm_community$string_extra$String_Extra$toSentenceOxford = function (list) {
	var _p19 = list;
	if (((_p19.ctor === '::') && (_p19._1.ctor === '::')) && (_p19._1._1.ctor === '::')) {
		return A3(
			_elm_community$string_extra$String_Extra$toSentenceHelper,
			', and ',
			A2(
				_elm_lang$core$Basics_ops['++'],
				_p19._0,
				A2(_elm_lang$core$Basics_ops['++'], ', ', _p19._1._0)),
			{ctor: '::', _0: _p19._1._1._0, _1: _p19._1._1._1});
	} else {
		return _elm_community$string_extra$String_Extra$toSentenceBaseCase(list);
	}
};
var _elm_community$string_extra$String_Extra$toSentence = function (list) {
	var _p20 = list;
	if (((_p20.ctor === '::') && (_p20._1.ctor === '::')) && (_p20._1._1.ctor === '::')) {
		return A3(
			_elm_community$string_extra$String_Extra$toSentenceHelper,
			' and ',
			A2(
				_elm_lang$core$Basics_ops['++'],
				_p20._0,
				A2(_elm_lang$core$Basics_ops['++'], ', ', _p20._1._0)),
			{ctor: '::', _0: _p20._1._1._0, _1: _p20._1._1._1});
	} else {
		return _elm_community$string_extra$String_Extra$toSentenceBaseCase(list);
	}
};
var _elm_community$string_extra$String_Extra$ellipsisWith = F3(
	function (howLong, append, string) {
		return (_elm_lang$core$Native_Utils.cmp(
			_elm_lang$core$String$length(string),
			howLong) < 1) ? string : A2(
			_elm_lang$core$Basics_ops['++'],
			A2(
				_elm_lang$core$String$left,
				howLong - _elm_lang$core$String$length(append),
				string),
			append);
	});
var _elm_community$string_extra$String_Extra$ellipsis = F2(
	function (howLong, string) {
		return A3(_elm_community$string_extra$String_Extra$ellipsisWith, howLong, '...', string);
	});
var _elm_community$string_extra$String_Extra$countOccurrences = F2(
	function (needle, haystack) {
		return (_elm_lang$core$Native_Utils.eq(
			_elm_lang$core$String$length(needle),
			0) || _elm_lang$core$Native_Utils.eq(
			_elm_lang$core$String$length(haystack),
			0)) ? 0 : _elm_lang$core$List$length(
			A2(_elm_lang$core$String$indexes, needle, haystack));
	});
var _elm_community$string_extra$String_Extra$unindent = function (multilineSting) {
	var isNotWhitespace = function ($char) {
		return (!_elm_lang$core$Native_Utils.eq(
			$char,
			_elm_lang$core$Native_Utils.chr(' '))) && (!_elm_lang$core$Native_Utils.eq(
			$char,
			_elm_lang$core$Native_Utils.chr('\t')));
	};
	var countLeadingWhitespace = F2(
		function (count, line) {
			countLeadingWhitespace:
			while (true) {
				var _p21 = _elm_lang$core$String$uncons(line);
				if (_p21.ctor === 'Nothing') {
					return count;
				} else {
					var _p23 = _p21._0._1;
					var _p22 = _p21._0._0;
					switch (_p22.valueOf()) {
						case ' ':
							var _v35 = count + 1,
								_v36 = _p23;
							count = _v35;
							line = _v36;
							continue countLeadingWhitespace;
						case '\t':
							var _v37 = count + 1,
								_v38 = _p23;
							count = _v37;
							line = _v38;
							continue countLeadingWhitespace;
						default:
							return count;
					}
				}
			}
		});
	var lines = _elm_lang$core$String$lines(multilineSting);
	var minLead = A2(
		_elm_lang$core$Maybe$withDefault,
		0,
		_elm_lang$core$List$minimum(
			A2(
				_elm_lang$core$List$map,
				countLeadingWhitespace(0),
				A2(
					_elm_lang$core$List$filter,
					_elm_lang$core$String$any(isNotWhitespace),
					lines))));
	return A2(
		_elm_lang$core$String$join,
		'\n',
		A2(
			_elm_lang$core$List$map,
			_elm_lang$core$String$dropLeft(minLead),
			lines));
};
var _elm_community$string_extra$String_Extra$dasherize = function (string) {
	return _elm_lang$core$String$toLower(
		A4(
			_elm_lang$core$Regex$replace,
			_elm_lang$core$Regex$All,
			_elm_lang$core$Regex$regex('[_-\\s]+'),
			_elm_lang$core$Basics$always('-'),
			A4(
				_elm_lang$core$Regex$replace,
				_elm_lang$core$Regex$All,
				_elm_lang$core$Regex$regex('([A-Z])'),
				function (_p24) {
					return A2(
						_elm_lang$core$String$append,
						'-',
						function (_) {
							return _.match;
						}(_p24));
				},
				_elm_lang$core$String$trim(string))));
};
var _elm_community$string_extra$String_Extra$underscored = function (string) {
	return _elm_lang$core$String$toLower(
		A4(
			_elm_lang$core$Regex$replace,
			_elm_lang$core$Regex$All,
			_elm_lang$core$Regex$regex('[_-\\s]+'),
			_elm_lang$core$Basics$always('_'),
			A4(
				_elm_lang$core$Regex$replace,
				_elm_lang$core$Regex$All,
				_elm_lang$core$Regex$regex('([a-z\\d])([A-Z]+)'),
				function (_p25) {
					return A2(
						_elm_lang$core$String$join,
						'_',
						A2(
							_elm_lang$core$List$filterMap,
							_elm_lang$core$Basics$identity,
							function (_) {
								return _.submatches;
							}(_p25)));
				},
				_elm_lang$core$String$trim(string))));
};
var _elm_community$string_extra$String_Extra$unsurround = F2(
	function (wrap, string) {
		if (A2(_elm_lang$core$String$startsWith, wrap, string) && A2(_elm_lang$core$String$endsWith, wrap, string)) {
			var length = _elm_lang$core$String$length(wrap);
			return A2(
				_elm_lang$core$String$dropRight,
				length,
				A2(_elm_lang$core$String$dropLeft, length, string));
		} else {
			return string;
		}
	});
var _elm_community$string_extra$String_Extra$unquote = function (string) {
	return A2(_elm_community$string_extra$String_Extra$unsurround, '\"', string);
};
var _elm_community$string_extra$String_Extra$surround = F2(
	function (wrap, string) {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			wrap,
			A2(_elm_lang$core$Basics_ops['++'], string, wrap));
	});
var _elm_community$string_extra$String_Extra$quote = function (string) {
	return A2(_elm_community$string_extra$String_Extra$surround, '\"', string);
};
var _elm_community$string_extra$String_Extra$camelize = function (string) {
	return A4(
		_elm_lang$core$Regex$replace,
		_elm_lang$core$Regex$All,
		_elm_lang$core$Regex$regex('[-_\\s]+(.)?'),
		function (_p26) {
			var _p27 = _p26;
			var _p28 = _p27.submatches;
			if ((_p28.ctor === '::') && (_p28._0.ctor === 'Just')) {
				return _elm_lang$core$String$toUpper(_p28._0._0);
			} else {
				return '';
			}
		},
		_elm_lang$core$String$trim(string));
};
var _elm_community$string_extra$String_Extra$isBlank = function (string) {
	return A2(
		_elm_lang$core$Regex$contains,
		_elm_lang$core$Regex$regex('^\\s*$'),
		string);
};
var _elm_community$string_extra$String_Extra$nonBlank = function (string) {
	return _elm_community$string_extra$String_Extra$isBlank(string) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(string);
};
var _elm_community$string_extra$String_Extra$clean = function (string) {
	return _elm_lang$core$String$trim(
		A4(
			_elm_lang$core$Regex$replace,
			_elm_lang$core$Regex$All,
			_elm_lang$core$Regex$regex('\\s\\s+'),
			_elm_lang$core$Basics$always(' '),
			string));
};
var _elm_community$string_extra$String_Extra$softBreakRegexp = function (width) {
	return _elm_lang$core$Regex$regex(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'.{1,',
			A2(
				_elm_lang$core$Basics_ops['++'],
				_elm_lang$core$Basics$toString(width),
				'}(\\s+|$)|\\S+?(\\s+|$)')));
};
var _elm_community$string_extra$String_Extra$softEllipsis = F2(
	function (howLong, string) {
		return (_elm_lang$core$Native_Utils.cmp(
			_elm_lang$core$String$length(string),
			howLong) < 1) ? string : A3(
			_elm_lang$core$Basics$flip,
			_elm_lang$core$String$append,
			'...',
			A4(
				_elm_lang$core$Regex$replace,
				_elm_lang$core$Regex$All,
				_elm_lang$core$Regex$regex('([\\.,;:\\s])+$'),
				_elm_lang$core$Basics$always(''),
				A2(
					_elm_lang$core$String$join,
					'',
					A2(
						_elm_lang$core$List$map,
						function (_) {
							return _.match;
						},
						A3(
							_elm_lang$core$Regex$find,
							_elm_lang$core$Regex$AtMost(1),
							_elm_community$string_extra$String_Extra$softBreakRegexp(howLong),
							string)))));
	});
var _elm_community$string_extra$String_Extra$softBreak = F2(
	function (width, string) {
		return (_elm_lang$core$Native_Utils.cmp(width, 0) < 1) ? {ctor: '[]'} : A2(
			_elm_lang$core$List$map,
			function (_) {
				return _.match;
			},
			A3(
				_elm_lang$core$Regex$find,
				_elm_lang$core$Regex$All,
				_elm_community$string_extra$String_Extra$softBreakRegexp(width),
				string));
	});
var _elm_community$string_extra$String_Extra$softWrapWith = F3(
	function (width, separator, string) {
		return A2(
			_elm_lang$core$String$join,
			separator,
			A2(_elm_community$string_extra$String_Extra$softBreak, width, string));
	});
var _elm_community$string_extra$String_Extra$softWrap = F2(
	function (width, string) {
		return A3(_elm_community$string_extra$String_Extra$softWrapWith, width, '\n', string);
	});
var _elm_community$string_extra$String_Extra$breaker = F3(
	function (width, string, acc) {
		breaker:
		while (true) {
			var _p29 = string;
			if (_p29 === '') {
				return _elm_lang$core$List$reverse(acc);
			} else {
				var _v42 = width,
					_v43 = A2(_elm_lang$core$String$dropLeft, width, string),
					_v44 = {
					ctor: '::',
					_0: A3(_elm_lang$core$String$slice, 0, width, string),
					_1: acc
				};
				width = _v42;
				string = _v43;
				acc = _v44;
				continue breaker;
			}
		}
	});
var _elm_community$string_extra$String_Extra$break = F2(
	function (width, string) {
		return (_elm_lang$core$Native_Utils.eq(width, 0) || _elm_lang$core$Native_Utils.eq(string, '')) ? {
			ctor: '::',
			_0: string,
			_1: {ctor: '[]'}
		} : A3(
			_elm_community$string_extra$String_Extra$breaker,
			width,
			string,
			{ctor: '[]'});
	});
var _elm_community$string_extra$String_Extra$wrapWith = F3(
	function (width, separator, string) {
		return A2(
			_elm_lang$core$String$join,
			separator,
			A2(_elm_community$string_extra$String_Extra$break, width, string));
	});
var _elm_community$string_extra$String_Extra$wrap = F2(
	function (width, string) {
		return A3(_elm_community$string_extra$String_Extra$wrapWith, width, '\n', string);
	});
var _elm_community$string_extra$String_Extra$replaceSlice = F4(
	function (substitution, start, end, string) {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			A3(_elm_lang$core$String$slice, 0, start, string),
			A2(
				_elm_lang$core$Basics_ops['++'],
				substitution,
				A3(
					_elm_lang$core$String$slice,
					end,
					_elm_lang$core$String$length(string),
					string)));
	});
var _elm_community$string_extra$String_Extra$insertAt = F3(
	function (insert, pos, string) {
		return A4(_elm_community$string_extra$String_Extra$replaceSlice, insert, pos, pos, string);
	});
var _elm_community$string_extra$String_Extra$replace = F3(
	function (search, substitution, string) {
		return A4(
			_elm_lang$core$Regex$replace,
			_elm_lang$core$Regex$All,
			_elm_lang$core$Regex$regex(
				_elm_lang$core$Regex$escape(search)),
			function (_p30) {
				return substitution;
			},
			string);
	});
var _elm_community$string_extra$String_Extra$changeCase = F2(
	function (mutator, word) {
		return A2(
			_elm_lang$core$Maybe$withDefault,
			'',
			A2(
				_elm_lang$core$Maybe$map,
				function (_p31) {
					var _p32 = _p31;
					return A2(
						_elm_lang$core$String$cons,
						mutator(_p32._0),
						_p32._1);
				},
				_elm_lang$core$String$uncons(word)));
	});
var _elm_community$string_extra$String_Extra$toSentenceCase = function (word) {
	return A2(_elm_community$string_extra$String_Extra$changeCase, _elm_lang$core$Char$toUpper, word);
};
var _elm_community$string_extra$String_Extra$toTitleCase = function (ws) {
	var uppercaseMatch = A3(
		_elm_lang$core$Regex$replace,
		_elm_lang$core$Regex$All,
		_elm_lang$core$Regex$regex('\\w+'),
		function (_p33) {
			return _elm_community$string_extra$String_Extra$toSentenceCase(
				function (_) {
					return _.match;
				}(_p33));
		});
	return A4(
		_elm_lang$core$Regex$replace,
		_elm_lang$core$Regex$All,
		_elm_lang$core$Regex$regex('^([a-z])|\\s+([a-z])'),
		function (_p34) {
			return uppercaseMatch(
				function (_) {
					return _.match;
				}(_p34));
		},
		ws);
};
var _elm_community$string_extra$String_Extra$classify = function (string) {
	return _elm_community$string_extra$String_Extra$toSentenceCase(
		A3(
			_elm_community$string_extra$String_Extra$replace,
			' ',
			'',
			_elm_community$string_extra$String_Extra$camelize(
				A4(
					_elm_lang$core$Regex$replace,
					_elm_lang$core$Regex$All,
					_elm_lang$core$Regex$regex('[\\W_]'),
					_elm_lang$core$Basics$always(' '),
					string))));
};
var _elm_community$string_extra$String_Extra$humanize = function (string) {
	return _elm_community$string_extra$String_Extra$toSentenceCase(
		_elm_lang$core$String$toLower(
			_elm_lang$core$String$trim(
				A4(
					_elm_lang$core$Regex$replace,
					_elm_lang$core$Regex$All,
					_elm_lang$core$Regex$regex('_id$|[-_\\s]+'),
					_elm_lang$core$Basics$always(' '),
					A4(
						_elm_lang$core$Regex$replace,
						_elm_lang$core$Regex$All,
						_elm_lang$core$Regex$regex('[A-Z]'),
						function (_p35) {
							return A2(
								_elm_lang$core$String$append,
								'-',
								function (_) {
									return _.match;
								}(_p35));
						},
						string)))));
};
var _elm_community$string_extra$String_Extra$decapitalize = function (word) {
	return A2(_elm_community$string_extra$String_Extra$changeCase, _elm_lang$core$Char$toLower, word);
};

var _bluedogtraining$bdt_elm$Form_Helpers$toHtmlId = function (option) {
	return A3(
		_elm_community$string_extra$String_Extra$replace,
		'%',
		'',
		_elm_lang$http$Http$encodeUri(
			_elm_lang$core$Basics$toString(option)));
};

var _bluedogtraining$bdt_elm$Resettable$getInitialValue = function (resettable) {
	var _p0 = resettable;
	if (_p0.ctor === 'Initial') {
		return _p0._0;
	} else {
		return _p0._0;
	}
};
var _bluedogtraining$bdt_elm$Resettable$getValue = function (resettable) {
	var _p1 = resettable;
	if (_p1.ctor === 'Initial') {
		return _p1._0;
	} else {
		return _p1._1;
	}
};
var _bluedogtraining$bdt_elm$Resettable$getIsChanged = function (resettable) {
	var _p2 = resettable;
	if (_p2.ctor === 'Initial') {
		return false;
	} else {
		return true;
	}
};
var _bluedogtraining$bdt_elm$Resettable$Updated = F2(
	function (a, b) {
		return {ctor: 'Updated', _0: a, _1: b};
	});
var _bluedogtraining$bdt_elm$Resettable$Initial = function (a) {
	return {ctor: 'Initial', _0: a};
};
var _bluedogtraining$bdt_elm$Resettable$init = _bluedogtraining$bdt_elm$Resettable$Initial;
var _bluedogtraining$bdt_elm$Resettable$reset = function (_p3) {
	return _bluedogtraining$bdt_elm$Resettable$init(
		_bluedogtraining$bdt_elm$Resettable$getInitialValue(_p3));
};
var _bluedogtraining$bdt_elm$Resettable$update = F2(
	function (newValue, resettable) {
		var _p4 = resettable;
		if (_p4.ctor === 'Initial') {
			var _p6 = _p4._0;
			var _p5 = _elm_lang$core$Native_Utils.eq(newValue, _p6);
			if (_p5 === true) {
				return resettable;
			} else {
				return A2(_bluedogtraining$bdt_elm$Resettable$Updated, _p6, newValue);
			}
		} else {
			var _p8 = _p4._0;
			var _p7 = {
				ctor: '_Tuple2',
				_0: _elm_lang$core$Native_Utils.eq(_p4._1, newValue),
				_1: _elm_lang$core$Native_Utils.eq(_p8, newValue)
			};
			if (_p7._0 === true) {
				return resettable;
			} else {
				if (_p7._1 === true) {
					return _bluedogtraining$bdt_elm$Resettable$Initial(_p8);
				} else {
					return A2(_bluedogtraining$bdt_elm$Resettable$Updated, _p8, newValue);
				}
			}
		}
	});

var _bluedogtraining$bdt_elm$Form_Select_Css$optionItem = F2(
	function (isDisabled, isFocused) {
		return _rtfeldman$elm_css$Html_Styled_Attributes$css(
			A2(_bluedogtraining$bdt_elm$Form_Css$selectOptionItem, isDisabled, isFocused));
	});
var _bluedogtraining$bdt_elm$Form_Select_Css$optionList = _rtfeldman$elm_css$Html_Styled_Attributes$css(_bluedogtraining$bdt_elm$Form_Css$selectOptionList);
var _bluedogtraining$bdt_elm$Form_Select_Css$title = function (isFaded) {
	return _rtfeldman$elm_css$Html_Styled_Attributes$css(
		_bluedogtraining$bdt_elm$Form_Css$title(isFaded));
};
var _bluedogtraining$bdt_elm$Form_Select_Css$input = F2(
	function (isError, isLocked) {
		return _rtfeldman$elm_css$Html_Styled_Attributes$css(
			A2(_bluedogtraining$bdt_elm$Form_Css$select, isError, isLocked));
	});
var _bluedogtraining$bdt_elm$Form_Select_Css$container = _rtfeldman$elm_css$Html_Styled_Attributes$css(
	{
		ctor: '::',
		_0: _rtfeldman$elm_css$Css$position(_rtfeldman$elm_css$Css$relative),
		_1: {ctor: '[]'}
	});

var _bluedogtraining$bdt_elm$Form_Select_Internal$getId = function (_) {
	return _.id;
};
var _bluedogtraining$bdt_elm$Form_Select_Internal$getIsOpen = function (_) {
	return _.isOpen;
};
var _bluedogtraining$bdt_elm$Form_Select_Internal$getSelectedOption = function (state) {
	return _bluedogtraining$bdt_elm$Resettable$getValue(state.selectedOption);
};
var _bluedogtraining$bdt_elm$Form_Select_Internal$getInitialOption = function (state) {
	return _bluedogtraining$bdt_elm$Resettable$getInitialValue(state.selectedOption);
};
var _bluedogtraining$bdt_elm$Form_Select_Internal$getIsChanged = function (state) {
	return _bluedogtraining$bdt_elm$Resettable$getIsChanged(state.selectedOption);
};
var _bluedogtraining$bdt_elm$Form_Select_Internal$setId = F2(
	function (id, viewState) {
		return _elm_lang$core$Native_Utils.update(
			viewState,
			{
				id: _elm_lang$core$Maybe$Just(id)
			});
	});
var _bluedogtraining$bdt_elm$Form_Select_Internal$setIsClearable = F2(
	function (isClearable, viewState) {
		return _elm_lang$core$Native_Utils.update(
			viewState,
			{isClearable: isClearable});
	});
var _bluedogtraining$bdt_elm$Form_Select_Internal$setIsError = F2(
	function (isError, viewState) {
		return _elm_lang$core$Native_Utils.update(
			viewState,
			{isError: isError});
	});
var _bluedogtraining$bdt_elm$Form_Select_Internal$setIsLocked = F2(
	function (isLocked, viewState) {
		return _elm_lang$core$Native_Utils.update(
			viewState,
			{isLocked: isLocked});
	});
var _bluedogtraining$bdt_elm$Form_Select_Internal$setIsOptionDisabled = F2(
	function (isOptionDisabled, viewState) {
		return _elm_lang$core$Native_Utils.update(
			viewState,
			{isOptionDisabled: isOptionDisabled});
	});
var _bluedogtraining$bdt_elm$Form_Select_Internal$setDefaultLabel = F2(
	function (defaultLabel, viewState) {
		return _elm_lang$core$Native_Utils.update(
			viewState,
			{defaultLabel: defaultLabel});
	});
var _bluedogtraining$bdt_elm$Form_Select_Internal$setToLabel = F2(
	function (toLabel, viewState) {
		return _elm_lang$core$Native_Utils.update(
			viewState,
			{toLabel: toLabel});
	});
var _bluedogtraining$bdt_elm$Form_Select_Internal$setSelectedOption = F2(
	function (selectedOption, state) {
		return _elm_lang$core$Native_Utils.update(
			state,
			{
				selectedOption: A2(_bluedogtraining$bdt_elm$Resettable$update, selectedOption, state.selectedOption)
			});
	});
var _bluedogtraining$bdt_elm$Form_Select_Internal$setInitialOption = F2(
	function (selectedOption, state) {
		return _elm_lang$core$Native_Utils.update(
			state,
			{
				selectedOption: _bluedogtraining$bdt_elm$Resettable$init(selectedOption)
			});
	});
var _bluedogtraining$bdt_elm$Form_Select_Internal$reset = function (state) {
	return _elm_lang$core$Native_Utils.update(
		state,
		{
			selectedOption: _bluedogtraining$bdt_elm$Resettable$reset(state.selectedOption)
		});
};
var _bluedogtraining$bdt_elm$Form_Select_Internal$reInitialise = function (state) {
	return _elm_lang$core$Native_Utils.update(
		state,
		{
			selectedOption: _bluedogtraining$bdt_elm$Resettable$init(
				_bluedogtraining$bdt_elm$Resettable$getValue(state.selectedOption))
		});
};
var _bluedogtraining$bdt_elm$Form_Select_Internal$focusNextOption = F2(
	function (options, option) {
		return A2(
			_elm_lang$core$Maybe$withDefault,
			option,
			_elm_lang$core$List$head(
				A2(
					_elm_lang$core$List$drop,
					1,
					A2(
						_elm_community$list_extra$List_Extra$dropWhile,
						F2(
							function (x, y) {
								return !_elm_lang$core$Native_Utils.eq(x, y);
							})(option),
						options))));
	});
var _bluedogtraining$bdt_elm$Form_Select_Internal$focusPreviousOption = F2(
	function (options, option) {
		return A2(
			_bluedogtraining$bdt_elm$Form_Select_Internal$focusNextOption,
			_elm_lang$core$List$reverse(options),
			option);
	});
var _bluedogtraining$bdt_elm$Form_Select_Internal$focusOption = F2(
	function (options, option) {
		var _p0 = A2(_elm_lang$core$List$member, option, options);
		if (_p0 === true) {
			return option;
		} else {
			return _elm_lang$core$Native_Utils.crashCase(
				'Form.Select.Internal',
				{
					start: {line: 227, column: 5},
					end: {line: 232, column: 127}
				},
				_p0)(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'SELECT ERROR - can\'t focus',
					A2(
						_elm_lang$core$Basics_ops['++'],
						_bluedogtraining$bdt_elm$Form_Helpers$toHtmlId(option),
						' it is not a valid option for this select.')));
		}
	});
var _bluedogtraining$bdt_elm$Form_Select_Internal$initialViewState = {
	isLocked: false,
	isClearable: false,
	isError: false,
	isOptionDisabled: _elm_lang$core$Basics$always(false),
	toLabel: _elm_lang$core$Basics$toString,
	defaultLabel: '-- Nothing Selected --',
	id: _elm_lang$core$Maybe$Nothing
};
var _bluedogtraining$bdt_elm$Form_Select_Internal$init = function (options) {
	return {
		isOpen: false,
		options: options,
		selectedOption: _bluedogtraining$bdt_elm$Resettable$init(_elm_lang$core$Maybe$Nothing),
		focusedOption: _elm_lang$core$Maybe$Nothing
	};
};
var _bluedogtraining$bdt_elm$Form_Select_Internal$State = F4(
	function (a, b, c, d) {
		return {isOpen: a, options: b, selectedOption: c, focusedOption: d};
	});
var _bluedogtraining$bdt_elm$Form_Select_Internal$ViewState = F7(
	function (a, b, c, d, e, f, g) {
		return {isLocked: a, isClearable: b, isError: c, isOptionDisabled: d, toLabel: e, defaultLabel: f, id: g};
	});
var _bluedogtraining$bdt_elm$Form_Select_Internal$DomFocus = function (a) {
	return {ctor: 'DomFocus', _0: a};
};
var _bluedogtraining$bdt_elm$Form_Select_Internal$handleKeyboardInput = F3(
	function (state, isOptionDisabled, keyboardInput) {
		var _p2 = state.focusedOption;
		if (_p2.ctor === 'Nothing') {
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				_elm_lang$core$Native_Utils.update(
					state,
					{
						focusedOption: _elm_lang$core$List$head(state.options)
					}),
				{ctor: '[]'});
		} else {
			var _p6 = _p2._0;
			var _p3 = keyboardInput;
			switch (_p3.ctor) {
				case 'Enter':
					var _p4 = isOptionDisabled;
					if (_p4 === true) {
						return A2(
							_elm_lang$core$Platform_Cmd_ops['!'],
							state,
							{ctor: '[]'});
					} else {
						return A2(
							_elm_lang$core$Platform_Cmd_ops['!'],
							_elm_lang$core$Native_Utils.update(
								state,
								{
									selectedOption: A2(
										_bluedogtraining$bdt_elm$Resettable$update,
										_elm_lang$core$Maybe$Just(_p6),
										state.selectedOption),
									isOpen: false
								}),
							{ctor: '[]'});
					}
				case 'Space':
					var _p5 = isOptionDisabled;
					if (_p5 === true) {
						return A2(
							_elm_lang$core$Platform_Cmd_ops['!'],
							state,
							{ctor: '[]'});
					} else {
						return A2(
							_elm_lang$core$Platform_Cmd_ops['!'],
							_elm_lang$core$Native_Utils.update(
								state,
								{
									selectedOption: A2(
										_bluedogtraining$bdt_elm$Resettable$update,
										_elm_lang$core$Maybe$Just(_p6),
										state.selectedOption),
									isOpen: false
								}),
							{ctor: '[]'});
					}
				case 'Up':
					var newFocusedOption = A2(_bluedogtraining$bdt_elm$Form_Select_Internal$focusPreviousOption, state.options, _p6);
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							state,
							{
								focusedOption: _elm_lang$core$Maybe$Just(newFocusedOption)
							}),
						{
							ctor: '::',
							_0: A2(
								_elm_lang$core$Task$attempt,
								_bluedogtraining$bdt_elm$Form_Select_Internal$DomFocus,
								_elm_lang$dom$Dom$focus(
									_bluedogtraining$bdt_elm$Form_Helpers$toHtmlId(newFocusedOption))),
							_1: {ctor: '[]'}
						});
				default:
					var newFocusedOption = A2(_bluedogtraining$bdt_elm$Form_Select_Internal$focusNextOption, state.options, _p6);
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							state,
							{
								focusedOption: _elm_lang$core$Maybe$Just(newFocusedOption)
							}),
						{
							ctor: '::',
							_0: A2(
								_elm_lang$core$Task$attempt,
								_bluedogtraining$bdt_elm$Form_Select_Internal$DomFocus,
								_elm_lang$dom$Dom$focus(
									_bluedogtraining$bdt_elm$Form_Helpers$toHtmlId(newFocusedOption))),
							_1: {ctor: '[]'}
						});
			}
		}
	});
var _bluedogtraining$bdt_elm$Form_Select_Internal$update = F2(
	function (msg, state) {
		var _p7 = msg;
		switch (_p7.ctor) {
			case 'Open':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						state,
						{isOpen: true}),
					{ctor: '[]'});
			case 'Blur':
				var _p8 = state.focusedOption;
				if (_p8.ctor === 'Nothing') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							state,
							{isOpen: false, focusedOption: _elm_lang$core$Maybe$Nothing}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						state,
						{ctor: '[]'});
				}
			case 'Select':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						state,
						{
							selectedOption: A2(
								_bluedogtraining$bdt_elm$Resettable$update,
								_elm_lang$core$Maybe$Just(_p7._0),
								state.selectedOption),
							isOpen: false,
							focusedOption: _elm_lang$core$Maybe$Nothing
						}),
					{ctor: '[]'});
			case 'Clear':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						state,
						{
							selectedOption: A2(_bluedogtraining$bdt_elm$Resettable$update, _elm_lang$core$Maybe$Nothing, state.selectedOption)
						}),
					{ctor: '[]'});
			case 'KeyboardInput':
				return A3(_bluedogtraining$bdt_elm$Form_Select_Internal$handleKeyboardInput, state, _p7._0, _p7._1);
			case 'Focus':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						state,
						{
							focusedOption: _elm_lang$core$Maybe$Just(
								A2(_bluedogtraining$bdt_elm$Form_Select_Internal$focusOption, state.options, _p7._0))
						}),
					{ctor: '[]'});
			case 'BlurOption':
				var _p9 = _elm_lang$core$Native_Utils.eq(
					state.focusedOption,
					_elm_lang$core$Maybe$Just(_p7._0));
				if (_p9 === true) {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							state,
							{focusedOption: _elm_lang$core$Maybe$Nothing, isOpen: false}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						state,
						{ctor: '[]'});
				}
			default:
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					state,
					{ctor: '[]'});
		}
	});
var _bluedogtraining$bdt_elm$Form_Select_Internal$BlurOption = function (a) {
	return {ctor: 'BlurOption', _0: a};
};
var _bluedogtraining$bdt_elm$Form_Select_Internal$Focus = function (a) {
	return {ctor: 'Focus', _0: a};
};
var _bluedogtraining$bdt_elm$Form_Select_Internal$KeyboardInput = F2(
	function (a, b) {
		return {ctor: 'KeyboardInput', _0: a, _1: b};
	});
var _bluedogtraining$bdt_elm$Form_Select_Internal$Clear = {ctor: 'Clear'};
var _bluedogtraining$bdt_elm$Form_Select_Internal$clearButton = F2(
	function (state, viewState) {
		return A3(
			_bluedogtraining$bdt_elm$Html_Styled_Bdt$divIf,
			viewState.isClearable && (!_elm_lang$core$Native_Utils.eq(
				_bluedogtraining$bdt_elm$Resettable$getValue(state.selectedOption),
				_elm_lang$core$Maybe$Nothing)),
			{
				ctor: '::',
				_0: A3(
					_rtfeldman$elm_css$Html_Styled_Events$onWithOptions,
					'mousedown',
					{preventDefault: true, stopPropagation: true},
					_elm_lang$core$Json_Decode$succeed(_bluedogtraining$bdt_elm$Form_Select_Internal$Clear)),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A3(_bluedogtraining$bdt_elm$Icon$render, _bluedogtraining$bdt_elm$Icon$Clear, 12, _elm_lang$core$Color$black),
				_1: {ctor: '[]'}
			});
	});
var _bluedogtraining$bdt_elm$Form_Select_Internal$Select = function (a) {
	return {ctor: 'Select', _0: a};
};
var _bluedogtraining$bdt_elm$Form_Select_Internal$Blur = {ctor: 'Blur'};
var _bluedogtraining$bdt_elm$Form_Select_Internal$Open = {ctor: 'Open'};
var _bluedogtraining$bdt_elm$Form_Select_Internal$closed = F2(
	function (state, viewState) {
		return _rtfeldman$elm_css$Html_Styled$toUnstyled(
			A2(
				_rtfeldman$elm_css$Html_Styled$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_rtfeldman$elm_css$Html_Styled$div,
						{
							ctor: '::',
							_0: A2(_bluedogtraining$bdt_elm$Form_Select_Css$input, viewState.isError, viewState.isLocked),
							_1: {
								ctor: '::',
								_0: A2(_bluedogtraining$bdt_elm$Html_Styled_Bdt$maybeAttribute, _rtfeldman$elm_css$Html_Styled_Attributes$id, viewState.id),
								_1: {
									ctor: '::',
									_0: _rtfeldman$elm_css$Html_Styled_Attributes$disabled(viewState.isLocked),
									_1: {
										ctor: '::',
										_0: A2(
											_bluedogtraining$bdt_elm$Html_Styled_Bdt_ops['?'],
											_rtfeldman$elm_css$Html_Styled_Attributes$tabindex(0),
											!viewState.isLocked),
										_1: {
											ctor: '::',
											_0: A2(
												_bluedogtraining$bdt_elm$Html_Styled_Bdt_ops['?'],
												_rtfeldman$elm_css$Html_Styled_Events$onFocus(_bluedogtraining$bdt_elm$Form_Select_Internal$Open),
												!viewState.isLocked),
											_1: {
												ctor: '::',
												_0: A2(
													_bluedogtraining$bdt_elm$Html_Styled_Bdt_ops['?'],
													_rtfeldman$elm_css$Html_Styled_Events$onClick(_bluedogtraining$bdt_elm$Form_Select_Internal$Open),
													!viewState.isLocked),
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}
						},
						{
							ctor: '::',
							_0: A2(
								_rtfeldman$elm_css$Html_Styled$div,
								{
									ctor: '::',
									_0: _rtfeldman$elm_css$Html_Styled_Attributes$title(
										A2(
											_elm_lang$core$Maybe$withDefault,
											viewState.defaultLabel,
											A2(
												_elm_lang$core$Maybe$map,
												viewState.toLabel,
												_bluedogtraining$bdt_elm$Resettable$getValue(state.selectedOption)))),
									_1: {
										ctor: '::',
										_0: _bluedogtraining$bdt_elm$Form_Select_Css$title(
											_elm_lang$core$Native_Utils.eq(
												_bluedogtraining$bdt_elm$Resettable$getValue(state.selectedOption),
												_elm_lang$core$Maybe$Nothing)),
										_1: {ctor: '[]'}
									}
								},
								{
									ctor: '::',
									_0: _rtfeldman$elm_css$Html_Styled$text(
										A2(
											_elm_lang$core$Maybe$withDefault,
											viewState.defaultLabel,
											A2(
												_elm_lang$core$Maybe$map,
												viewState.toLabel,
												_bluedogtraining$bdt_elm$Resettable$getValue(state.selectedOption)))),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(_bluedogtraining$bdt_elm$Form_Select_Internal$clearButton, state, viewState),
								_1: {
									ctor: '::',
									_0: A3(_bluedogtraining$bdt_elm$Icon$render, _bluedogtraining$bdt_elm$Icon$ExpandMore, 16, _elm_lang$core$Color$black),
									_1: {ctor: '[]'}
								}
							}
						}),
					_1: {ctor: '[]'}
				}));
	});
var _bluedogtraining$bdt_elm$Form_Select_Internal$Down = {ctor: 'Down'};
var _bluedogtraining$bdt_elm$Form_Select_Internal$Up = {ctor: 'Up'};
var _bluedogtraining$bdt_elm$Form_Select_Internal$Space = {ctor: 'Space'};
var _bluedogtraining$bdt_elm$Form_Select_Internal$Enter = {ctor: 'Enter'};
var _bluedogtraining$bdt_elm$Form_Select_Internal$isSelectInputKey = F2(
	function (msg, code) {
		var dict = _elm_lang$core$Dict$fromList(
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 13, _1: _bluedogtraining$bdt_elm$Form_Select_Internal$Enter},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 32, _1: _bluedogtraining$bdt_elm$Form_Select_Internal$Space},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 38, _1: _bluedogtraining$bdt_elm$Form_Select_Internal$Up},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 40, _1: _bluedogtraining$bdt_elm$Form_Select_Internal$Down},
							_1: {ctor: '[]'}
						}
					}
				}
			});
		var _p10 = A2(_elm_lang$core$Dict$get, code, dict);
		if (_p10.ctor === 'Just') {
			return _elm_lang$core$Json_Decode$succeed(
				msg(_p10._0));
		} else {
			return _elm_lang$core$Json_Decode$fail('Not a select input key');
		}
	});
var _bluedogtraining$bdt_elm$Form_Select_Internal$onKeyboardInput = function (msg) {
	return A3(
		_rtfeldman$elm_css$Html_Styled_Events$onWithOptions,
		'keydown',
		{preventDefault: true, stopPropagation: true},
		A2(
			_elm_lang$core$Json_Decode$andThen,
			_bluedogtraining$bdt_elm$Form_Select_Internal$isSelectInputKey(msg),
			_rtfeldman$elm_css$Html_Styled_Events$keyCode));
};
var _bluedogtraining$bdt_elm$Form_Select_Internal$optionItem = F3(
	function (state, viewState, option) {
		return A2(
			_rtfeldman$elm_css$Html_Styled$div,
			{
				ctor: '::',
				_0: A2(
					_bluedogtraining$bdt_elm$Form_Select_Css$optionItem,
					viewState.isOptionDisabled(option),
					_elm_lang$core$Native_Utils.eq(
						state.focusedOption,
						_elm_lang$core$Maybe$Just(option))),
				_1: {
					ctor: '::',
					_0: _rtfeldman$elm_css$Html_Styled_Attributes$id(
						_bluedogtraining$bdt_elm$Form_Helpers$toHtmlId(option)),
					_1: {
						ctor: '::',
						_0: _rtfeldman$elm_css$Html_Styled_Events$onFocus(
							_bluedogtraining$bdt_elm$Form_Select_Internal$Focus(option)),
						_1: {
							ctor: '::',
							_0: _rtfeldman$elm_css$Html_Styled_Events$onBlur(
								_bluedogtraining$bdt_elm$Form_Select_Internal$BlurOption(option)),
							_1: {
								ctor: '::',
								_0: _bluedogtraining$bdt_elm$Form_Select_Internal$onKeyboardInput(
									_bluedogtraining$bdt_elm$Form_Select_Internal$KeyboardInput(
										viewState.isOptionDisabled(option))),
								_1: {
									ctor: '::',
									_0: _rtfeldman$elm_css$Html_Styled_Attributes$tabindex(-1),
									_1: {
										ctor: '::',
										_0: A2(
											_bluedogtraining$bdt_elm$Html_Styled_Bdt_ops['?'],
											_rtfeldman$elm_css$Html_Styled_Events$onMouseDown(
												_bluedogtraining$bdt_elm$Form_Select_Internal$Select(option)),
											!viewState.isOptionDisabled(option)),
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}
				}
			},
			{
				ctor: '::',
				_0: _rtfeldman$elm_css$Html_Styled$text(
					viewState.toLabel(option)),
				_1: {ctor: '[]'}
			});
	});
var _bluedogtraining$bdt_elm$Form_Select_Internal$optionList = F2(
	function (state, viewState) {
		return A2(
			_rtfeldman$elm_css$Html_Styled$div,
			{
				ctor: '::',
				_0: _bluedogtraining$bdt_elm$Form_Select_Css$optionList,
				_1: {ctor: '[]'}
			},
			A2(
				_elm_lang$core$List$map,
				A2(_bluedogtraining$bdt_elm$Form_Select_Internal$optionItem, state, viewState),
				state.options));
	});
var _bluedogtraining$bdt_elm$Form_Select_Internal$open = F2(
	function (state, viewState) {
		return _rtfeldman$elm_css$Html_Styled$toUnstyled(
			A2(
				_rtfeldman$elm_css$Html_Styled$div,
				{
					ctor: '::',
					_0: _bluedogtraining$bdt_elm$Form_Select_Css$container,
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_rtfeldman$elm_css$Html_Styled$div,
						{
							ctor: '::',
							_0: A2(_bluedogtraining$bdt_elm$Form_Select_Css$input, viewState.isError, viewState.isLocked),
							_1: {
								ctor: '::',
								_0: A2(_bluedogtraining$bdt_elm$Html_Styled_Bdt$maybeAttribute, _rtfeldman$elm_css$Html_Styled_Attributes$id, viewState.id),
								_1: {
									ctor: '::',
									_0: _bluedogtraining$bdt_elm$Form_Select_Internal$onKeyboardInput(
										_bluedogtraining$bdt_elm$Form_Select_Internal$KeyboardInput(false)),
									_1: {
										ctor: '::',
										_0: _rtfeldman$elm_css$Html_Styled_Attributes$tabindex(-1),
										_1: {
											ctor: '::',
											_0: _rtfeldman$elm_css$Html_Styled_Events$onBlur(_bluedogtraining$bdt_elm$Form_Select_Internal$Blur),
											_1: {ctor: '[]'}
										}
									}
								}
							}
						},
						{
							ctor: '::',
							_0: A2(
								_rtfeldman$elm_css$Html_Styled$div,
								{
									ctor: '::',
									_0: _rtfeldman$elm_css$Html_Styled_Attributes$title(
										A2(
											_elm_lang$core$Maybe$withDefault,
											viewState.defaultLabel,
											A2(
												_elm_lang$core$Maybe$map,
												viewState.toLabel,
												_bluedogtraining$bdt_elm$Resettable$getValue(state.selectedOption)))),
									_1: {
										ctor: '::',
										_0: _bluedogtraining$bdt_elm$Form_Select_Css$title(
											_elm_lang$core$Native_Utils.eq(
												_bluedogtraining$bdt_elm$Resettable$getValue(state.selectedOption),
												_elm_lang$core$Maybe$Nothing)),
										_1: {ctor: '[]'}
									}
								},
								{
									ctor: '::',
									_0: _rtfeldman$elm_css$Html_Styled$text(
										A2(
											_elm_lang$core$Maybe$withDefault,
											viewState.defaultLabel,
											A2(
												_elm_lang$core$Maybe$map,
												viewState.toLabel,
												_bluedogtraining$bdt_elm$Resettable$getValue(state.selectedOption)))),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(_bluedogtraining$bdt_elm$Form_Select_Internal$optionList, state, viewState),
						_1: {ctor: '[]'}
					}
				}));
	});
var _bluedogtraining$bdt_elm$Form_Select_Internal$render = F2(
	function (state, viewState) {
		var _p11 = state.isOpen;
		if (_p11 === false) {
			return A3(_rtfeldman$elm_css$Html_Styled_Lazy$lazy2, _bluedogtraining$bdt_elm$Form_Select_Internal$closed, state, viewState);
		} else {
			return A3(_rtfeldman$elm_css$Html_Styled_Lazy$lazy2, _bluedogtraining$bdt_elm$Form_Select_Internal$open, state, viewState);
		}
	});

var _bluedogtraining$bdt_elm$Form_Select$getId = function (_p0) {
	var _p1 = _p0;
	return _bluedogtraining$bdt_elm$Form_Select_Internal$getId(_p1._1);
};
var _bluedogtraining$bdt_elm$Form_Select$getSelectedOption = function (_p2) {
	var _p3 = _p2;
	return _bluedogtraining$bdt_elm$Form_Select_Internal$getSelectedOption(_p3._0);
};
var _bluedogtraining$bdt_elm$Form_Select$getInitialOption = function (_p4) {
	var _p5 = _p4;
	return _bluedogtraining$bdt_elm$Form_Select_Internal$getInitialOption(_p5._0);
};
var _bluedogtraining$bdt_elm$Form_Select$getIsOpen = function (_p6) {
	var _p7 = _p6;
	return _bluedogtraining$bdt_elm$Form_Select_Internal$getIsOpen(_p7._0);
};
var _bluedogtraining$bdt_elm$Form_Select$getIsChanged = function (_p8) {
	var _p9 = _p8;
	return _bluedogtraining$bdt_elm$Form_Select_Internal$getIsChanged(_p9._0);
};
var _bluedogtraining$bdt_elm$Form_Select$render = function (_p10) {
	var _p11 = _p10;
	return A2(_bluedogtraining$bdt_elm$Form_Select_Internal$render, _p11._0, _p11._1);
};
var _bluedogtraining$bdt_elm$Form_Select$Model = function (a) {
	return {ctor: 'Model', _0: a};
};
var _bluedogtraining$bdt_elm$Form_Select$init = function (_p12) {
	return _bluedogtraining$bdt_elm$Form_Select$Model(
		_bluedogtraining$bdt_elm$Form_Select_Internal$init(_p12));
};
var _bluedogtraining$bdt_elm$Form_Select$update = F2(
	function (msg, _p13) {
		var _p14 = _p13;
		return A2(
			_elm_lang$core$Tuple$mapFirst,
			_bluedogtraining$bdt_elm$Form_Select$Model,
			A2(_bluedogtraining$bdt_elm$Form_Select_Internal$update, msg, _p14._0));
	});
var _bluedogtraining$bdt_elm$Form_Select$reInitialise = function (_p15) {
	var _p16 = _p15;
	return _bluedogtraining$bdt_elm$Form_Select$Model(
		_bluedogtraining$bdt_elm$Form_Select_Internal$reInitialise(_p16._0));
};
var _bluedogtraining$bdt_elm$Form_Select$reset = function (_p17) {
	var _p18 = _p17;
	return _bluedogtraining$bdt_elm$Form_Select$Model(
		_bluedogtraining$bdt_elm$Form_Select_Internal$reset(_p18._0));
};
var _bluedogtraining$bdt_elm$Form_Select$setInitialOption = F2(
	function (selectedOption, _p19) {
		var _p20 = _p19;
		return _bluedogtraining$bdt_elm$Form_Select$Model(
			A2(_bluedogtraining$bdt_elm$Form_Select_Internal$setInitialOption, selectedOption, _p20._0));
	});
var _bluedogtraining$bdt_elm$Form_Select$setSelectedOption = F2(
	function (selectedOption, _p21) {
		var _p22 = _p21;
		return _bluedogtraining$bdt_elm$Form_Select$Model(
			A2(_bluedogtraining$bdt_elm$Form_Select_Internal$setSelectedOption, selectedOption, _p22._0));
	});
var _bluedogtraining$bdt_elm$Form_Select$View = F2(
	function (a, b) {
		return {ctor: 'View', _0: a, _1: b};
	});
var _bluedogtraining$bdt_elm$Form_Select$view = function (_p23) {
	var _p24 = _p23;
	return A2(_bluedogtraining$bdt_elm$Form_Select$View, _p24._0, _bluedogtraining$bdt_elm$Form_Select_Internal$initialViewState);
};
var _bluedogtraining$bdt_elm$Form_Select$setIsOptionDisabled = F2(
	function (isOptionDisabled, _p25) {
		var _p26 = _p25;
		return A2(
			_bluedogtraining$bdt_elm$Form_Select$View,
			_p26._0,
			A2(_bluedogtraining$bdt_elm$Form_Select_Internal$setIsOptionDisabled, isOptionDisabled, _p26._1));
	});
var _bluedogtraining$bdt_elm$Form_Select$setIsError = F2(
	function (isError, _p27) {
		var _p28 = _p27;
		return A2(
			_bluedogtraining$bdt_elm$Form_Select$View,
			_p28._0,
			A2(_bluedogtraining$bdt_elm$Form_Select_Internal$setIsError, isError, _p28._1));
	});
var _bluedogtraining$bdt_elm$Form_Select$setIsLocked = F2(
	function (isLocked, _p29) {
		var _p30 = _p29;
		return A2(
			_bluedogtraining$bdt_elm$Form_Select$View,
			_p30._0,
			A2(_bluedogtraining$bdt_elm$Form_Select_Internal$setIsLocked, isLocked, _p30._1));
	});
var _bluedogtraining$bdt_elm$Form_Select$setIsClearable = F2(
	function (isClearable, _p31) {
		var _p32 = _p31;
		return A2(
			_bluedogtraining$bdt_elm$Form_Select$View,
			_p32._0,
			A2(_bluedogtraining$bdt_elm$Form_Select_Internal$setIsClearable, isClearable, _p32._1));
	});
var _bluedogtraining$bdt_elm$Form_Select$setToLabel = F2(
	function (toLabel, _p33) {
		var _p34 = _p33;
		return A2(
			_bluedogtraining$bdt_elm$Form_Select$View,
			_p34._0,
			A2(_bluedogtraining$bdt_elm$Form_Select_Internal$setToLabel, toLabel, _p34._1));
	});
var _bluedogtraining$bdt_elm$Form_Select$setDefaultLabel = F2(
	function (defaultLabel, _p35) {
		var _p36 = _p35;
		return A2(
			_bluedogtraining$bdt_elm$Form_Select$View,
			_p36._0,
			A2(_bluedogtraining$bdt_elm$Form_Select_Internal$setDefaultLabel, defaultLabel, _p36._1));
	});
var _bluedogtraining$bdt_elm$Form_Select$setId = F2(
	function (id, _p37) {
		var _p38 = _p37;
		return A2(
			_bluedogtraining$bdt_elm$Form_Select$View,
			_p38._0,
			A2(_bluedogtraining$bdt_elm$Form_Select_Internal$setId, id, _p38._1));
	});

var _bluedogtraining$bdt_elm$Form_Input_Css$input = F2(
	function (isError, isLocked) {
		return _rtfeldman$elm_css$Html_Styled_Attributes$css(
			A2(_bluedogtraining$bdt_elm$Form_Css$input, isError, isLocked));
	});

var _bluedogtraining$bdt_elm$Form_Input_Internal$getId = function (_) {
	return _.id;
};
var _bluedogtraining$bdt_elm$Form_Input_Internal$getValue = function (state) {
	return _bluedogtraining$bdt_elm$Resettable$getValue(state.value);
};
var _bluedogtraining$bdt_elm$Form_Input_Internal$getInitialValue = function (state) {
	return _bluedogtraining$bdt_elm$Resettable$getInitialValue(state.value);
};
var _bluedogtraining$bdt_elm$Form_Input_Internal$getIsChanged = function (state) {
	return _bluedogtraining$bdt_elm$Resettable$getIsChanged(state.value);
};
var _bluedogtraining$bdt_elm$Form_Input_Internal$setId = F2(
	function (id, viewState) {
		return _elm_lang$core$Native_Utils.update(
			viewState,
			{
				id: _elm_lang$core$Maybe$Just(id)
			});
	});
var _bluedogtraining$bdt_elm$Form_Input_Internal$setIsError = F2(
	function (isError, viewState) {
		return _elm_lang$core$Native_Utils.update(
			viewState,
			{isError: isError});
	});
var _bluedogtraining$bdt_elm$Form_Input_Internal$setIsLocked = F2(
	function (isLocked, viewState) {
		return _elm_lang$core$Native_Utils.update(
			viewState,
			{isLocked: isLocked});
	});
var _bluedogtraining$bdt_elm$Form_Input_Internal$setPlaceholder = F2(
	function (placeholder, viewState) {
		return _elm_lang$core$Native_Utils.update(
			viewState,
			{
				placeholder: _elm_lang$core$Maybe$Just(placeholder)
			});
	});
var _bluedogtraining$bdt_elm$Form_Input_Internal$setMaxLength = F2(
	function (maxLength, viewState) {
		return _elm_lang$core$Native_Utils.update(
			viewState,
			{
				maxLength: _elm_lang$core$Maybe$Just(maxLength)
			});
	});
var _bluedogtraining$bdt_elm$Form_Input_Internal$setValue = F2(
	function (value, state) {
		return _elm_lang$core$Native_Utils.update(
			state,
			{
				value: A2(_bluedogtraining$bdt_elm$Resettable$update, value, state.value)
			});
	});
var _bluedogtraining$bdt_elm$Form_Input_Internal$setInitialValue = F2(
	function (value, state) {
		return _elm_lang$core$Native_Utils.update(
			state,
			{
				value: _bluedogtraining$bdt_elm$Resettable$init(value)
			});
	});
var _bluedogtraining$bdt_elm$Form_Input_Internal$reset = function (state) {
	return _elm_lang$core$Native_Utils.update(
		state,
		{
			value: _bluedogtraining$bdt_elm$Resettable$reset(state.value)
		});
};
var _bluedogtraining$bdt_elm$Form_Input_Internal$reInitialise = function (state) {
	return _elm_lang$core$Native_Utils.update(
		state,
		{
			value: _bluedogtraining$bdt_elm$Resettable$init(
				_bluedogtraining$bdt_elm$Resettable$getValue(state.value))
		});
};
var _bluedogtraining$bdt_elm$Form_Input_Internal$typeToString = function (inputType) {
	var _p0 = inputType;
	switch (_p0.ctor) {
		case 'Text':
			return 'text';
		case 'Email':
			return 'email';
		case 'Password':
			return 'password';
		case 'Tel':
			return 'tel';
		default:
			return 'number';
	}
};
var _bluedogtraining$bdt_elm$Form_Input_Internal$update = F2(
	function (_p1, state) {
		var _p2 = _p1;
		return _elm_lang$core$Native_Utils.update(
			state,
			{
				value: A2(_bluedogtraining$bdt_elm$Resettable$update, _p2._0, state.value)
			});
	});
var _bluedogtraining$bdt_elm$Form_Input_Internal$init = {
	value: _bluedogtraining$bdt_elm$Resettable$init('')
};
var _bluedogtraining$bdt_elm$Form_Input_Internal$State = function (a) {
	return {value: a};
};
var _bluedogtraining$bdt_elm$Form_Input_Internal$ViewState = F6(
	function (a, b, c, d, e, f) {
		return {maxLength: a, placeholder: b, isLocked: c, isError: d, inputType: e, id: f};
	});
var _bluedogtraining$bdt_elm$Form_Input_Internal$Number = {ctor: 'Number'};
var _bluedogtraining$bdt_elm$Form_Input_Internal$setNumberType = function (viewState) {
	return _elm_lang$core$Native_Utils.update(
		viewState,
		{inputType: _bluedogtraining$bdt_elm$Form_Input_Internal$Number});
};
var _bluedogtraining$bdt_elm$Form_Input_Internal$Tel = {ctor: 'Tel'};
var _bluedogtraining$bdt_elm$Form_Input_Internal$setTelType = function (viewState) {
	return _elm_lang$core$Native_Utils.update(
		viewState,
		{inputType: _bluedogtraining$bdt_elm$Form_Input_Internal$Tel});
};
var _bluedogtraining$bdt_elm$Form_Input_Internal$Password = {ctor: 'Password'};
var _bluedogtraining$bdt_elm$Form_Input_Internal$setPasswordType = function (viewState) {
	return _elm_lang$core$Native_Utils.update(
		viewState,
		{inputType: _bluedogtraining$bdt_elm$Form_Input_Internal$Password});
};
var _bluedogtraining$bdt_elm$Form_Input_Internal$Email = {ctor: 'Email'};
var _bluedogtraining$bdt_elm$Form_Input_Internal$setEmailType = function (viewState) {
	return _elm_lang$core$Native_Utils.update(
		viewState,
		{inputType: _bluedogtraining$bdt_elm$Form_Input_Internal$Email});
};
var _bluedogtraining$bdt_elm$Form_Input_Internal$Text = {ctor: 'Text'};
var _bluedogtraining$bdt_elm$Form_Input_Internal$initialViewState = {maxLength: _elm_lang$core$Maybe$Nothing, placeholder: _elm_lang$core$Maybe$Nothing, isLocked: false, isError: false, inputType: _bluedogtraining$bdt_elm$Form_Input_Internal$Text, id: _elm_lang$core$Maybe$Nothing};
var _bluedogtraining$bdt_elm$Form_Input_Internal$setTextType = function (viewState) {
	return _elm_lang$core$Native_Utils.update(
		viewState,
		{inputType: _bluedogtraining$bdt_elm$Form_Input_Internal$Text});
};
var _bluedogtraining$bdt_elm$Form_Input_Internal$Input = function (a) {
	return {ctor: 'Input', _0: a};
};
var _bluedogtraining$bdt_elm$Form_Input_Internal$inputField = F2(
	function (state, viewState) {
		return _rtfeldman$elm_css$Html_Styled$toUnstyled(
			A2(
				_rtfeldman$elm_css$Html_Styled$input,
				{
					ctor: '::',
					_0: A2(_bluedogtraining$bdt_elm$Form_Input_Css$input, viewState.isError, viewState.isLocked),
					_1: {
						ctor: '::',
						_0: _rtfeldman$elm_css$Html_Styled_Attributes$disabled(viewState.isLocked),
						_1: {
							ctor: '::',
							_0: _rtfeldman$elm_css$Html_Styled_Attributes$value(
								_bluedogtraining$bdt_elm$Resettable$getValue(state.value)),
							_1: {
								ctor: '::',
								_0: _rtfeldman$elm_css$Html_Styled_Events$onInput(_bluedogtraining$bdt_elm$Form_Input_Internal$Input),
								_1: {
									ctor: '::',
									_0: A2(_bluedogtraining$bdt_elm$Html_Styled_Bdt$maybeAttribute, _rtfeldman$elm_css$Html_Styled_Attributes$placeholder, viewState.placeholder),
									_1: {
										ctor: '::',
										_0: A2(_bluedogtraining$bdt_elm$Html_Styled_Bdt$maybeAttribute, _rtfeldman$elm_css$Html_Styled_Attributes$maxlength, viewState.maxLength),
										_1: {
											ctor: '::',
											_0: A2(_bluedogtraining$bdt_elm$Html_Styled_Bdt$maybeAttribute, _rtfeldman$elm_css$Html_Styled_Attributes$id, viewState.id),
											_1: {
												ctor: '::',
												_0: _rtfeldman$elm_css$Html_Styled_Attributes$type_(
													_bluedogtraining$bdt_elm$Form_Input_Internal$typeToString(viewState.inputType)),
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}
						}
					}
				},
				{ctor: '[]'}));
	});
var _bluedogtraining$bdt_elm$Form_Input_Internal$render = F2(
	function (state, viewState) {
		return A3(_rtfeldman$elm_css$Html_Styled_Lazy$lazy2, _bluedogtraining$bdt_elm$Form_Input_Internal$inputField, state, viewState);
	});

var _bluedogtraining$bdt_elm$Form_Input$getId = function (_p0) {
	var _p1 = _p0;
	return _bluedogtraining$bdt_elm$Form_Input_Internal$getId(_p1._1);
};
var _bluedogtraining$bdt_elm$Form_Input$getValue = function (_p2) {
	var _p3 = _p2;
	return _bluedogtraining$bdt_elm$Form_Input_Internal$getValue(_p3._0);
};
var _bluedogtraining$bdt_elm$Form_Input$getInitialValue = function (_p4) {
	var _p5 = _p4;
	return _bluedogtraining$bdt_elm$Form_Input_Internal$getInitialValue(_p5._0);
};
var _bluedogtraining$bdt_elm$Form_Input$getIsChanged = function (_p6) {
	var _p7 = _p6;
	return _bluedogtraining$bdt_elm$Form_Input_Internal$getIsChanged(_p7._0);
};
var _bluedogtraining$bdt_elm$Form_Input$render = function (_p8) {
	var _p9 = _p8;
	return A2(_bluedogtraining$bdt_elm$Form_Input_Internal$render, _p9._0, _p9._1);
};
var _bluedogtraining$bdt_elm$Form_Input$Model = function (a) {
	return {ctor: 'Model', _0: a};
};
var _bluedogtraining$bdt_elm$Form_Input$init = _bluedogtraining$bdt_elm$Form_Input$Model(_bluedogtraining$bdt_elm$Form_Input_Internal$init);
var _bluedogtraining$bdt_elm$Form_Input$update = F2(
	function (msg, _p10) {
		var _p11 = _p10;
		return _bluedogtraining$bdt_elm$Form_Input$Model(
			A2(_bluedogtraining$bdt_elm$Form_Input_Internal$update, msg, _p11._0));
	});
var _bluedogtraining$bdt_elm$Form_Input$reInitialise = function (_p12) {
	var _p13 = _p12;
	return _bluedogtraining$bdt_elm$Form_Input$Model(
		_bluedogtraining$bdt_elm$Form_Input_Internal$reInitialise(_p13._0));
};
var _bluedogtraining$bdt_elm$Form_Input$reset = function (_p14) {
	var _p15 = _p14;
	return _bluedogtraining$bdt_elm$Form_Input$Model(
		_bluedogtraining$bdt_elm$Form_Input_Internal$reset(_p15._0));
};
var _bluedogtraining$bdt_elm$Form_Input$setInitialValue = F2(
	function (value, _p16) {
		var _p17 = _p16;
		return _bluedogtraining$bdt_elm$Form_Input$Model(
			A2(_bluedogtraining$bdt_elm$Form_Input_Internal$setInitialValue, value, _p17._0));
	});
var _bluedogtraining$bdt_elm$Form_Input$setValue = F2(
	function (value, _p18) {
		var _p19 = _p18;
		return _bluedogtraining$bdt_elm$Form_Input$Model(
			A2(_bluedogtraining$bdt_elm$Form_Input_Internal$setValue, value, _p19._0));
	});
var _bluedogtraining$bdt_elm$Form_Input$View = F2(
	function (a, b) {
		return {ctor: 'View', _0: a, _1: b};
	});
var _bluedogtraining$bdt_elm$Form_Input$view = function (_p20) {
	var _p21 = _p20;
	return A2(_bluedogtraining$bdt_elm$Form_Input$View, _p21._0, _bluedogtraining$bdt_elm$Form_Input_Internal$initialViewState);
};
var _bluedogtraining$bdt_elm$Form_Input$setMaxLength = F2(
	function (maxLength, _p22) {
		var _p23 = _p22;
		return A2(
			_bluedogtraining$bdt_elm$Form_Input$View,
			_p23._0,
			A2(_bluedogtraining$bdt_elm$Form_Input_Internal$setMaxLength, maxLength, _p23._1));
	});
var _bluedogtraining$bdt_elm$Form_Input$setPlaceholder = F2(
	function (placeholder, _p24) {
		var _p25 = _p24;
		return A2(
			_bluedogtraining$bdt_elm$Form_Input$View,
			_p25._0,
			A2(_bluedogtraining$bdt_elm$Form_Input_Internal$setPlaceholder, placeholder, _p25._1));
	});
var _bluedogtraining$bdt_elm$Form_Input$setIsLocked = F2(
	function (isLocked, _p26) {
		var _p27 = _p26;
		return A2(
			_bluedogtraining$bdt_elm$Form_Input$View,
			_p27._0,
			A2(_bluedogtraining$bdt_elm$Form_Input_Internal$setIsLocked, isLocked, _p27._1));
	});
var _bluedogtraining$bdt_elm$Form_Input$setIsError = F2(
	function (isError, _p28) {
		var _p29 = _p28;
		return A2(
			_bluedogtraining$bdt_elm$Form_Input$View,
			_p29._0,
			A2(_bluedogtraining$bdt_elm$Form_Input_Internal$setIsError, isError, _p29._1));
	});
var _bluedogtraining$bdt_elm$Form_Input$setId = F2(
	function (id, _p30) {
		var _p31 = _p30;
		return A2(
			_bluedogtraining$bdt_elm$Form_Input$View,
			_p31._0,
			A2(_bluedogtraining$bdt_elm$Form_Input_Internal$setId, id, _p31._1));
	});
var _bluedogtraining$bdt_elm$Form_Input$setTextType = function (_p32) {
	var _p33 = _p32;
	return A2(
		_bluedogtraining$bdt_elm$Form_Input$View,
		_p33._0,
		_bluedogtraining$bdt_elm$Form_Input_Internal$setTextType(_p33._1));
};
var _bluedogtraining$bdt_elm$Form_Input$setEmailType = function (_p34) {
	var _p35 = _p34;
	return A2(
		_bluedogtraining$bdt_elm$Form_Input$View,
		_p35._0,
		_bluedogtraining$bdt_elm$Form_Input_Internal$setEmailType(_p35._1));
};
var _bluedogtraining$bdt_elm$Form_Input$setPasswordType = function (_p36) {
	var _p37 = _p36;
	return A2(
		_bluedogtraining$bdt_elm$Form_Input$View,
		_p37._0,
		_bluedogtraining$bdt_elm$Form_Input_Internal$setPasswordType(_p37._1));
};
var _bluedogtraining$bdt_elm$Form_Input$setTelType = function (_p38) {
	var _p39 = _p38;
	return A2(
		_bluedogtraining$bdt_elm$Form_Input$View,
		_p39._0,
		_bluedogtraining$bdt_elm$Form_Input_Internal$setTelType(_p39._1));
};
var _bluedogtraining$bdt_elm$Form_Input$setNumberType = function (_p40) {
	var _p41 = _p40;
	return A2(
		_bluedogtraining$bdt_elm$Form_Input$View,
		_p41._0,
		_bluedogtraining$bdt_elm$Form_Input_Internal$setNumberType(_p41._1));
};

var _bluedogtraining$bdt_elm$Form_IntInput_Css$input = F2(
	function (isError, isLocked) {
		return _rtfeldman$elm_css$Html_Styled_Attributes$css(
			A2(_bluedogtraining$bdt_elm$Form_Css$input, isError, isLocked));
	});

var _bluedogtraining$bdt_elm$Form_IntInput_Internal$getId = function (_) {
	return _.id;
};
var _bluedogtraining$bdt_elm$Form_IntInput_Internal$stringToMaybeInt = function (string) {
	var _p0 = string;
	if (_p0 === '') {
		return _elm_lang$core$Maybe$Nothing;
	} else {
		var _p1 = _elm_lang$core$String$toInt(_p0);
		if (_p1.ctor === 'Err') {
			return _elm_lang$core$Native_Utils.crashCase(
				'Form.IntInput.Internal',
				{
					start: {line: 199, column: 13},
					end: {line: 205, column: 29}
				},
				_p1)('Failed to parse IntInput String to Int');
		} else {
			return _elm_lang$core$Maybe$Just(_p1._0);
		}
	}
};
var _bluedogtraining$bdt_elm$Form_IntInput_Internal$getValue = function (_p3) {
	return _bluedogtraining$bdt_elm$Form_IntInput_Internal$stringToMaybeInt(
		_bluedogtraining$bdt_elm$Resettable$getValue(
			function (_) {
				return _.value;
			}(_p3)));
};
var _bluedogtraining$bdt_elm$Form_IntInput_Internal$getInitialValue = function (_p4) {
	return _bluedogtraining$bdt_elm$Form_IntInput_Internal$stringToMaybeInt(
		_bluedogtraining$bdt_elm$Resettable$getInitialValue(
			function (_) {
				return _.value;
			}(_p4)));
};
var _bluedogtraining$bdt_elm$Form_IntInput_Internal$getIsChanged = function (state) {
	return _bluedogtraining$bdt_elm$Resettable$getIsChanged(state.value);
};
var _bluedogtraining$bdt_elm$Form_IntInput_Internal$setId = F2(
	function (id, viewState) {
		return _elm_lang$core$Native_Utils.update(
			viewState,
			{
				id: _elm_lang$core$Maybe$Just(id)
			});
	});
var _bluedogtraining$bdt_elm$Form_IntInput_Internal$setIsError = F2(
	function (isError, viewState) {
		return _elm_lang$core$Native_Utils.update(
			viewState,
			{isError: isError});
	});
var _bluedogtraining$bdt_elm$Form_IntInput_Internal$setIsLocked = F2(
	function (isLocked, viewState) {
		return _elm_lang$core$Native_Utils.update(
			viewState,
			{isLocked: isLocked});
	});
var _bluedogtraining$bdt_elm$Form_IntInput_Internal$setPlaceholder = F2(
	function (placeholder, viewState) {
		return _elm_lang$core$Native_Utils.update(
			viewState,
			{
				placeholder: _elm_lang$core$Maybe$Just(placeholder)
			});
	});
var _bluedogtraining$bdt_elm$Form_IntInput_Internal$setMaxLength = F2(
	function (maxLength, viewState) {
		return _elm_lang$core$Native_Utils.update(
			viewState,
			{
				maxLength: _elm_lang$core$Maybe$Just(maxLength)
			});
	});
var _bluedogtraining$bdt_elm$Form_IntInput_Internal$setValue = F2(
	function (value, state) {
		return _elm_lang$core$Native_Utils.update(
			state,
			{
				value: A2(
					_bluedogtraining$bdt_elm$Resettable$update,
					_elm_lang$core$Basics$toString(value),
					state.value)
			});
	});
var _bluedogtraining$bdt_elm$Form_IntInput_Internal$setInitialValue = F2(
	function (value, state) {
		return _elm_lang$core$Native_Utils.update(
			state,
			{
				value: _bluedogtraining$bdt_elm$Resettable$init(
					_elm_lang$core$Basics$toString(value))
			});
	});
var _bluedogtraining$bdt_elm$Form_IntInput_Internal$reset = function (state) {
	return _elm_lang$core$Native_Utils.update(
		state,
		{
			value: _bluedogtraining$bdt_elm$Resettable$reset(state.value)
		});
};
var _bluedogtraining$bdt_elm$Form_IntInput_Internal$reInitialise = function (state) {
	return _elm_lang$core$Native_Utils.update(
		state,
		{
			value: _bluedogtraining$bdt_elm$Resettable$init(
				_bluedogtraining$bdt_elm$Resettable$getValue(state.value))
		});
};
var _bluedogtraining$bdt_elm$Form_IntInput_Internal$update = F2(
	function (_p5, state) {
		var _p6 = _p5;
		var _p8 = _p6._0;
		var _p7 = A2(
			_elm_lang$core$Regex$contains,
			_elm_lang$core$Regex$regex('^[-]?[0-9]*$'),
			_p8);
		if (_p7 === true) {
			return _elm_lang$core$Native_Utils.update(
				state,
				{
					value: A2(_bluedogtraining$bdt_elm$Resettable$update, _p8, state.value)
				});
		} else {
			return _elm_lang$core$Native_Utils.update(
				state,
				{bypassLazy: state.bypassLazy + 1});
		}
	});
var _bluedogtraining$bdt_elm$Form_IntInput_Internal$initialViewState = {maxLength: _elm_lang$core$Maybe$Nothing, placeholder: _elm_lang$core$Maybe$Nothing, isLocked: false, isError: false, id: _elm_lang$core$Maybe$Nothing};
var _bluedogtraining$bdt_elm$Form_IntInput_Internal$init = {
	value: _bluedogtraining$bdt_elm$Resettable$init(''),
	bypassLazy: 0
};
var _bluedogtraining$bdt_elm$Form_IntInput_Internal$State = F2(
	function (a, b) {
		return {value: a, bypassLazy: b};
	});
var _bluedogtraining$bdt_elm$Form_IntInput_Internal$ViewState = F5(
	function (a, b, c, d, e) {
		return {maxLength: a, placeholder: b, isLocked: c, isError: d, id: e};
	});
var _bluedogtraining$bdt_elm$Form_IntInput_Internal$Input = function (a) {
	return {ctor: 'Input', _0: a};
};
var _bluedogtraining$bdt_elm$Form_IntInput_Internal$inputField = F2(
	function (state, viewState) {
		return _rtfeldman$elm_css$Html_Styled$toUnstyled(
			A2(
				_rtfeldman$elm_css$Html_Styled$input,
				{
					ctor: '::',
					_0: A2(_bluedogtraining$bdt_elm$Form_IntInput_Css$input, viewState.isError, viewState.isLocked),
					_1: {
						ctor: '::',
						_0: _rtfeldman$elm_css$Html_Styled_Attributes$disabled(viewState.isLocked),
						_1: {
							ctor: '::',
							_0: _rtfeldman$elm_css$Html_Styled_Attributes$value(
								_bluedogtraining$bdt_elm$Resettable$getValue(state.value)),
							_1: {
								ctor: '::',
								_0: _rtfeldman$elm_css$Html_Styled_Events$onInput(_bluedogtraining$bdt_elm$Form_IntInput_Internal$Input),
								_1: {
									ctor: '::',
									_0: A2(_bluedogtraining$bdt_elm$Html_Styled_Bdt$maybeAttribute, _rtfeldman$elm_css$Html_Styled_Attributes$placeholder, viewState.placeholder),
									_1: {
										ctor: '::',
										_0: A2(_bluedogtraining$bdt_elm$Html_Styled_Bdt$maybeAttribute, _rtfeldman$elm_css$Html_Styled_Attributes$maxlength, viewState.maxLength),
										_1: {
											ctor: '::',
											_0: A2(_bluedogtraining$bdt_elm$Html_Styled_Bdt$maybeAttribute, _rtfeldman$elm_css$Html_Styled_Attributes$id, viewState.id),
											_1: {ctor: '[]'}
										}
									}
								}
							}
						}
					}
				},
				{ctor: '[]'}));
	});
var _bluedogtraining$bdt_elm$Form_IntInput_Internal$render = F2(
	function (state, viewState) {
		return A3(_rtfeldman$elm_css$Html_Styled_Lazy$lazy2, _bluedogtraining$bdt_elm$Form_IntInput_Internal$inputField, state, viewState);
	});

var _bluedogtraining$bdt_elm$Form_IntInput$getId = function (_p0) {
	var _p1 = _p0;
	return _bluedogtraining$bdt_elm$Form_IntInput_Internal$getId(_p1._1);
};
var _bluedogtraining$bdt_elm$Form_IntInput$getValue = function (_p2) {
	var _p3 = _p2;
	return _bluedogtraining$bdt_elm$Form_IntInput_Internal$getValue(_p3._0);
};
var _bluedogtraining$bdt_elm$Form_IntInput$getInitialValue = function (_p4) {
	var _p5 = _p4;
	return _bluedogtraining$bdt_elm$Form_IntInput_Internal$getInitialValue(_p5._0);
};
var _bluedogtraining$bdt_elm$Form_IntInput$getIsChanged = function (_p6) {
	var _p7 = _p6;
	return _bluedogtraining$bdt_elm$Form_IntInput_Internal$getIsChanged(_p7._0);
};
var _bluedogtraining$bdt_elm$Form_IntInput$render = function (_p8) {
	var _p9 = _p8;
	return A2(_bluedogtraining$bdt_elm$Form_IntInput_Internal$render, _p9._0, _p9._1);
};
var _bluedogtraining$bdt_elm$Form_IntInput$Model = function (a) {
	return {ctor: 'Model', _0: a};
};
var _bluedogtraining$bdt_elm$Form_IntInput$init = _bluedogtraining$bdt_elm$Form_IntInput$Model(_bluedogtraining$bdt_elm$Form_IntInput_Internal$init);
var _bluedogtraining$bdt_elm$Form_IntInput$update = F2(
	function (msg, _p10) {
		var _p11 = _p10;
		return _bluedogtraining$bdt_elm$Form_IntInput$Model(
			A2(_bluedogtraining$bdt_elm$Form_IntInput_Internal$update, msg, _p11._0));
	});
var _bluedogtraining$bdt_elm$Form_IntInput$reInitialise = function (_p12) {
	var _p13 = _p12;
	return _bluedogtraining$bdt_elm$Form_IntInput$Model(
		_bluedogtraining$bdt_elm$Form_IntInput_Internal$reInitialise(_p13._0));
};
var _bluedogtraining$bdt_elm$Form_IntInput$reset = function (_p14) {
	var _p15 = _p14;
	return _bluedogtraining$bdt_elm$Form_IntInput$Model(
		_bluedogtraining$bdt_elm$Form_IntInput_Internal$reset(_p15._0));
};
var _bluedogtraining$bdt_elm$Form_IntInput$setInitialValue = F2(
	function (value, _p16) {
		var _p17 = _p16;
		return _bluedogtraining$bdt_elm$Form_IntInput$Model(
			A2(_bluedogtraining$bdt_elm$Form_IntInput_Internal$setInitialValue, value, _p17._0));
	});
var _bluedogtraining$bdt_elm$Form_IntInput$setValue = F2(
	function (value, _p18) {
		var _p19 = _p18;
		return _bluedogtraining$bdt_elm$Form_IntInput$Model(
			A2(_bluedogtraining$bdt_elm$Form_IntInput_Internal$setValue, value, _p19._0));
	});
var _bluedogtraining$bdt_elm$Form_IntInput$View = F2(
	function (a, b) {
		return {ctor: 'View', _0: a, _1: b};
	});
var _bluedogtraining$bdt_elm$Form_IntInput$view = function (_p20) {
	var _p21 = _p20;
	return A2(_bluedogtraining$bdt_elm$Form_IntInput$View, _p21._0, _bluedogtraining$bdt_elm$Form_IntInput_Internal$initialViewState);
};
var _bluedogtraining$bdt_elm$Form_IntInput$setMaxLength = F2(
	function (maxLength, _p22) {
		var _p23 = _p22;
		return A2(
			_bluedogtraining$bdt_elm$Form_IntInput$View,
			_p23._0,
			A2(_bluedogtraining$bdt_elm$Form_IntInput_Internal$setMaxLength, maxLength, _p23._1));
	});
var _bluedogtraining$bdt_elm$Form_IntInput$setPlaceholder = F2(
	function (placeholder, _p24) {
		var _p25 = _p24;
		return A2(
			_bluedogtraining$bdt_elm$Form_IntInput$View,
			_p25._0,
			A2(_bluedogtraining$bdt_elm$Form_IntInput_Internal$setPlaceholder, placeholder, _p25._1));
	});
var _bluedogtraining$bdt_elm$Form_IntInput$setIsLocked = F2(
	function (isLocked, _p26) {
		var _p27 = _p26;
		return A2(
			_bluedogtraining$bdt_elm$Form_IntInput$View,
			_p27._0,
			A2(_bluedogtraining$bdt_elm$Form_IntInput_Internal$setIsLocked, isLocked, _p27._1));
	});
var _bluedogtraining$bdt_elm$Form_IntInput$setIsError = F2(
	function (isError, _p28) {
		var _p29 = _p28;
		return A2(
			_bluedogtraining$bdt_elm$Form_IntInput$View,
			_p29._0,
			A2(_bluedogtraining$bdt_elm$Form_IntInput_Internal$setIsError, isError, _p29._1));
	});
var _bluedogtraining$bdt_elm$Form_IntInput$setId = F2(
	function (id, _p30) {
		var _p31 = _p30;
		return A2(
			_bluedogtraining$bdt_elm$Form_IntInput$View,
			_p31._0,
			A2(_bluedogtraining$bdt_elm$Form_IntInput_Internal$setId, id, _p31._1));
	});

var _bluedogtraining$bdt_elm$Form_TextArea_Internal$getId = function (_) {
	return _.id;
};
var _bluedogtraining$bdt_elm$Form_TextArea_Internal$getValue = function (state) {
	return _bluedogtraining$bdt_elm$Resettable$getValue(state.value);
};
var _bluedogtraining$bdt_elm$Form_TextArea_Internal$getInitialValue = function (state) {
	return _bluedogtraining$bdt_elm$Resettable$getInitialValue(state.value);
};
var _bluedogtraining$bdt_elm$Form_TextArea_Internal$getIsChanged = function (state) {
	return _bluedogtraining$bdt_elm$Resettable$getIsChanged(state.value);
};
var _bluedogtraining$bdt_elm$Form_TextArea_Internal$setId = F2(
	function (id, viewState) {
		return _elm_lang$core$Native_Utils.update(
			viewState,
			{
				id: _elm_lang$core$Maybe$Just(id)
			});
	});
var _bluedogtraining$bdt_elm$Form_TextArea_Internal$setIsError = F2(
	function (isError, viewState) {
		return _elm_lang$core$Native_Utils.update(
			viewState,
			{isError: isError});
	});
var _bluedogtraining$bdt_elm$Form_TextArea_Internal$setIsLocked = F2(
	function (isLocked, viewState) {
		return _elm_lang$core$Native_Utils.update(
			viewState,
			{isLocked: isLocked});
	});
var _bluedogtraining$bdt_elm$Form_TextArea_Internal$setPlaceholder = F2(
	function (placeholder, viewState) {
		return _elm_lang$core$Native_Utils.update(
			viewState,
			{placeholder: placeholder});
	});
var _bluedogtraining$bdt_elm$Form_TextArea_Internal$setMaxLength = F2(
	function (maxLength, viewState) {
		return _elm_lang$core$Native_Utils.update(
			viewState,
			{
				maxLength: _elm_lang$core$Maybe$Just(maxLength)
			});
	});
var _bluedogtraining$bdt_elm$Form_TextArea_Internal$setReplacements = F2(
	function (replacements, state) {
		return _elm_lang$core$Native_Utils.update(
			state,
			{replacements: replacements});
	});
var _bluedogtraining$bdt_elm$Form_TextArea_Internal$setSubstituteTabs = F2(
	function (substituteTabs, state) {
		return _elm_lang$core$Native_Utils.update(
			state,
			{substituteTabs: substituteTabs});
	});
var _bluedogtraining$bdt_elm$Form_TextArea_Internal$setValue = F2(
	function (value, state) {
		return _elm_lang$core$Native_Utils.update(
			state,
			{
				value: A2(_bluedogtraining$bdt_elm$Resettable$update, value, state.value)
			});
	});
var _bluedogtraining$bdt_elm$Form_TextArea_Internal$setInitialValue = F2(
	function (value, state) {
		return _elm_lang$core$Native_Utils.update(
			state,
			{
				value: _bluedogtraining$bdt_elm$Resettable$init(value)
			});
	});
var _bluedogtraining$bdt_elm$Form_TextArea_Internal$reset = function (state) {
	return _elm_lang$core$Native_Utils.update(
		state,
		{
			value: _bluedogtraining$bdt_elm$Resettable$reset(state.value)
		});
};
var _bluedogtraining$bdt_elm$Form_TextArea_Internal$reInitialise = function (state) {
	return _elm_lang$core$Native_Utils.update(
		state,
		{
			value: _bluedogtraining$bdt_elm$Resettable$init(
				_bluedogtraining$bdt_elm$Resettable$getValue(state.value))
		});
};
var _bluedogtraining$bdt_elm$Form_TextArea_Internal$replace = F2(
	function (_p0, acc) {
		var _p1 = _p0;
		return A3(_elm_community$string_extra$String_Extra$replace, _p1._0, _p1._1, acc);
	});
var _bluedogtraining$bdt_elm$Form_TextArea_Internal$update = F2(
	function (msg, state) {
		var _p2 = msg;
		if (_p2.ctor === 'Input') {
			return _elm_lang$core$Native_Utils.update(
				state,
				{
					value: A2(
						_bluedogtraining$bdt_elm$Resettable$update,
						A3(_elm_lang$core$List$foldl, _bluedogtraining$bdt_elm$Form_TextArea_Internal$replace, _p2._0, state.replacements),
						state.value)
				});
		} else {
			return _elm_lang$core$Native_Utils.update(
				state,
				{
					value: A2(_bluedogtraining$bdt_elm$Resettable$update, _p2._0, state.value)
				});
		}
	});
var _bluedogtraining$bdt_elm$Form_TextArea_Internal$initialViewState = {maxLength: _elm_lang$core$Maybe$Nothing, placeholder: '', isLocked: false, isError: false, id: _elm_lang$core$Maybe$Nothing};
var _bluedogtraining$bdt_elm$Form_TextArea_Internal$init = {
	value: _bluedogtraining$bdt_elm$Resettable$init(''),
	substituteTabs: false,
	replacements: {ctor: '[]'}
};
var _bluedogtraining$bdt_elm$Form_TextArea_Internal$State = F3(
	function (a, b, c) {
		return {value: a, substituteTabs: b, replacements: c};
	});
var _bluedogtraining$bdt_elm$Form_TextArea_Internal$ViewState = F5(
	function (a, b, c, d, e) {
		return {maxLength: a, placeholder: b, isLocked: c, isError: d, id: e};
	});
var _bluedogtraining$bdt_elm$Form_TextArea_Internal$Tab = function (a) {
	return {ctor: 'Tab', _0: a};
};
var _bluedogtraining$bdt_elm$Form_TextArea_Internal$shouldUpdateTab = function (keyCode) {
	var _p3 = keyCode;
	if (_p3 === 9) {
		return A2(
			_elm_lang$core$Json_Decode$andThen,
			function (_p4) {
				return _elm_lang$core$Json_Decode$succeed(
					_bluedogtraining$bdt_elm$Form_TextArea_Internal$Tab(_p4));
			},
			_rtfeldman$elm_css$Html_Styled_Events$targetValue);
	} else {
		return _elm_lang$core$Json_Decode$fail('Not Tab');
	}
};
var _bluedogtraining$bdt_elm$Form_TextArea_Internal$Input = function (a) {
	return {ctor: 'Input', _0: a};
};
var _bluedogtraining$bdt_elm$Form_TextArea_Internal$inputField = F2(
	function (state, viewState) {
		return _rtfeldman$elm_css$Html_Styled$toUnstyled(
			A2(
				_rtfeldman$elm_css$Html_Styled$textarea,
				{
					ctor: '::',
					_0: _rtfeldman$elm_css$Html_Styled_Attributes$css(
						A2(_bluedogtraining$bdt_elm$Form_Css$input, viewState.isError, viewState.isLocked)),
					_1: {
						ctor: '::',
						_0: _rtfeldman$elm_css$Html_Styled_Attributes$disabled(viewState.isLocked),
						_1: {
							ctor: '::',
							_0: _rtfeldman$elm_css$Html_Styled_Attributes$value(
								_bluedogtraining$bdt_elm$Resettable$getValue(state.value)),
							_1: {
								ctor: '::',
								_0: _rtfeldman$elm_css$Html_Styled_Events$onInput(_bluedogtraining$bdt_elm$Form_TextArea_Internal$Input),
								_1: {
									ctor: '::',
									_0: _rtfeldman$elm_css$Html_Styled_Attributes$placeholder(viewState.placeholder),
									_1: {
										ctor: '::',
										_0: A2(_bluedogtraining$bdt_elm$Html_Styled_Bdt$maybeAttribute, _rtfeldman$elm_css$Html_Styled_Attributes$maxlength, viewState.maxLength),
										_1: {
											ctor: '::',
											_0: A2(_bluedogtraining$bdt_elm$Html_Styled_Bdt$maybeAttribute, _rtfeldman$elm_css$Html_Styled_Attributes$id, viewState.id),
											_1: {
												ctor: '::',
												_0: A2(
													_bluedogtraining$bdt_elm$Html_Styled_Bdt_ops['?'],
													A2(_rtfeldman$elm_css$Html_Styled_Attributes$attribute, 'onkeydown', 'if(event.keyCode===9){var v=this.value,s=this.selectionStart,e=this.selectionEnd;this.value=v.substring(0, s)+\'\t\'+v.substring(e);this.selectionStart=this.selectionEnd=s+1;return false;}'),
													state.substituteTabs),
												_1: {
													ctor: '::',
													_0: A2(
														_bluedogtraining$bdt_elm$Html_Styled_Bdt_ops['?'],
														A2(
															_rtfeldman$elm_css$Html_Styled_Events$on,
															'keyup',
															A2(_elm_lang$core$Json_Decode$andThen, _bluedogtraining$bdt_elm$Form_TextArea_Internal$shouldUpdateTab, _rtfeldman$elm_css$Html_Styled_Events$keyCode)),
														state.substituteTabs),
													_1: {ctor: '[]'}
												}
											}
										}
									}
								}
							}
						}
					}
				},
				{ctor: '[]'}));
	});
var _bluedogtraining$bdt_elm$Form_TextArea_Internal$render = F2(
	function (state, viewState) {
		return A3(_rtfeldman$elm_css$Html_Styled_Lazy$lazy2, _bluedogtraining$bdt_elm$Form_TextArea_Internal$inputField, state, viewState);
	});

var _bluedogtraining$bdt_elm$Form_TextArea$getId = function (_p0) {
	var _p1 = _p0;
	return _bluedogtraining$bdt_elm$Form_TextArea_Internal$getId(_p1._1);
};
var _bluedogtraining$bdt_elm$Form_TextArea$getValue = function (_p2) {
	var _p3 = _p2;
	return _bluedogtraining$bdt_elm$Form_TextArea_Internal$getValue(_p3._0);
};
var _bluedogtraining$bdt_elm$Form_TextArea$getInitialValue = function (_p4) {
	var _p5 = _p4;
	return _bluedogtraining$bdt_elm$Form_TextArea_Internal$getInitialValue(_p5._0);
};
var _bluedogtraining$bdt_elm$Form_TextArea$getIsChanged = function (_p6) {
	var _p7 = _p6;
	return _bluedogtraining$bdt_elm$Form_TextArea_Internal$getIsChanged(_p7._0);
};
var _bluedogtraining$bdt_elm$Form_TextArea$render = function (_p8) {
	var _p9 = _p8;
	return A2(_bluedogtraining$bdt_elm$Form_TextArea_Internal$render, _p9._0, _p9._1);
};
var _bluedogtraining$bdt_elm$Form_TextArea$Model = function (a) {
	return {ctor: 'Model', _0: a};
};
var _bluedogtraining$bdt_elm$Form_TextArea$init = _bluedogtraining$bdt_elm$Form_TextArea$Model(_bluedogtraining$bdt_elm$Form_TextArea_Internal$init);
var _bluedogtraining$bdt_elm$Form_TextArea$update = F2(
	function (msg, _p10) {
		var _p11 = _p10;
		return _bluedogtraining$bdt_elm$Form_TextArea$Model(
			A2(_bluedogtraining$bdt_elm$Form_TextArea_Internal$update, msg, _p11._0));
	});
var _bluedogtraining$bdt_elm$Form_TextArea$reInitialise = function (_p12) {
	var _p13 = _p12;
	return _bluedogtraining$bdt_elm$Form_TextArea$Model(
		_bluedogtraining$bdt_elm$Form_TextArea_Internal$reInitialise(_p13._0));
};
var _bluedogtraining$bdt_elm$Form_TextArea$reset = function (_p14) {
	var _p15 = _p14;
	return _bluedogtraining$bdt_elm$Form_TextArea$Model(
		_bluedogtraining$bdt_elm$Form_TextArea_Internal$reset(_p15._0));
};
var _bluedogtraining$bdt_elm$Form_TextArea$setInitialValue = F2(
	function (value, _p16) {
		var _p17 = _p16;
		return _bluedogtraining$bdt_elm$Form_TextArea$Model(
			A2(_bluedogtraining$bdt_elm$Form_TextArea_Internal$setInitialValue, value, _p17._0));
	});
var _bluedogtraining$bdt_elm$Form_TextArea$setValue = F2(
	function (value, _p18) {
		var _p19 = _p18;
		return _bluedogtraining$bdt_elm$Form_TextArea$Model(
			A2(_bluedogtraining$bdt_elm$Form_TextArea_Internal$setValue, value, _p19._0));
	});
var _bluedogtraining$bdt_elm$Form_TextArea$setSubstituteTabs = F2(
	function (bool, _p20) {
		var _p21 = _p20;
		return _bluedogtraining$bdt_elm$Form_TextArea$Model(
			A2(_bluedogtraining$bdt_elm$Form_TextArea_Internal$setSubstituteTabs, bool, _p21._0));
	});
var _bluedogtraining$bdt_elm$Form_TextArea$setReplacements = F2(
	function (replacements, _p22) {
		var _p23 = _p22;
		return _bluedogtraining$bdt_elm$Form_TextArea$Model(
			A2(_bluedogtraining$bdt_elm$Form_TextArea_Internal$setReplacements, replacements, _p23._0));
	});
var _bluedogtraining$bdt_elm$Form_TextArea$View = F2(
	function (a, b) {
		return {ctor: 'View', _0: a, _1: b};
	});
var _bluedogtraining$bdt_elm$Form_TextArea$view = function (_p24) {
	var _p25 = _p24;
	return A2(_bluedogtraining$bdt_elm$Form_TextArea$View, _p25._0, _bluedogtraining$bdt_elm$Form_TextArea_Internal$initialViewState);
};
var _bluedogtraining$bdt_elm$Form_TextArea$setMaxLength = F2(
	function (maxLength, _p26) {
		var _p27 = _p26;
		return A2(
			_bluedogtraining$bdt_elm$Form_TextArea$View,
			_p27._0,
			A2(_bluedogtraining$bdt_elm$Form_TextArea_Internal$setMaxLength, maxLength, _p27._1));
	});
var _bluedogtraining$bdt_elm$Form_TextArea$setPlaceholder = F2(
	function (placeholder, _p28) {
		var _p29 = _p28;
		return A2(
			_bluedogtraining$bdt_elm$Form_TextArea$View,
			_p29._0,
			A2(_bluedogtraining$bdt_elm$Form_TextArea_Internal$setPlaceholder, placeholder, _p29._1));
	});
var _bluedogtraining$bdt_elm$Form_TextArea$setIsLocked = F2(
	function (isLocked, _p30) {
		var _p31 = _p30;
		return A2(
			_bluedogtraining$bdt_elm$Form_TextArea$View,
			_p31._0,
			A2(_bluedogtraining$bdt_elm$Form_TextArea_Internal$setIsLocked, isLocked, _p31._1));
	});
var _bluedogtraining$bdt_elm$Form_TextArea$setIsError = F2(
	function (isError, _p32) {
		var _p33 = _p32;
		return A2(
			_bluedogtraining$bdt_elm$Form_TextArea$View,
			_p33._0,
			A2(_bluedogtraining$bdt_elm$Form_TextArea_Internal$setIsError, isError, _p33._1));
	});
var _bluedogtraining$bdt_elm$Form_TextArea$setId = F2(
	function (id, _p34) {
		var _p35 = _p34;
		return A2(
			_bluedogtraining$bdt_elm$Form_TextArea$View,
			_p35._0,
			A2(_bluedogtraining$bdt_elm$Form_TextArea_Internal$setId, id, _p35._1));
	});

var _elm_community$json_extra$Json_Decode_Extra$when = F3(
	function (checkDecoder, check, passDecoder) {
		return A2(
			_elm_lang$core$Json_Decode$andThen,
			function (checkVal) {
				return check(checkVal) ? passDecoder : _elm_lang$core$Json_Decode$fail(
					A2(
						_elm_lang$core$Basics_ops['++'],
						'Check failed with input `',
						A2(
							_elm_lang$core$Basics_ops['++'],
							_elm_lang$core$Basics$toString(checkVal),
							'`')));
			},
			checkDecoder);
	});
var _elm_community$json_extra$Json_Decode_Extra$combine = A2(
	_elm_lang$core$List$foldr,
	_elm_lang$core$Json_Decode$map2(
		F2(
			function (x, y) {
				return {ctor: '::', _0: x, _1: y};
			})),
	_elm_lang$core$Json_Decode$succeed(
		{ctor: '[]'}));
var _elm_community$json_extra$Json_Decode_Extra$collection = function (decoder) {
	return A2(
		_elm_lang$core$Json_Decode$andThen,
		function (length) {
			return _elm_community$json_extra$Json_Decode_Extra$combine(
				A2(
					_elm_lang$core$List$map,
					function (index) {
						return A2(
							_elm_lang$core$Json_Decode$field,
							_elm_lang$core$Basics$toString(index),
							decoder);
					},
					A2(_elm_lang$core$List$range, 0, length - 1)));
		},
		A2(_elm_lang$core$Json_Decode$field, 'length', _elm_lang$core$Json_Decode$int));
};
var _elm_community$json_extra$Json_Decode_Extra$fromResult = function (result) {
	var _p0 = result;
	if (_p0.ctor === 'Ok') {
		return _elm_lang$core$Json_Decode$succeed(_p0._0);
	} else {
		return _elm_lang$core$Json_Decode$fail(_p0._0);
	}
};
var _elm_community$json_extra$Json_Decode_Extra$parseInt = A2(
	_elm_lang$core$Json_Decode$andThen,
	function (_p1) {
		return _elm_community$json_extra$Json_Decode_Extra$fromResult(
			_elm_lang$core$String$toInt(_p1));
	},
	_elm_lang$core$Json_Decode$string);
var _elm_community$json_extra$Json_Decode_Extra$parseFloat = A2(
	_elm_lang$core$Json_Decode$andThen,
	function (_p2) {
		return _elm_community$json_extra$Json_Decode_Extra$fromResult(
			_elm_lang$core$String$toFloat(_p2));
	},
	_elm_lang$core$Json_Decode$string);
var _elm_community$json_extra$Json_Decode_Extra$doubleEncoded = function (decoder) {
	return A2(
		_elm_lang$core$Json_Decode$andThen,
		function (_p3) {
			return _elm_community$json_extra$Json_Decode_Extra$fromResult(
				A2(_elm_lang$core$Json_Decode$decodeString, decoder, _p3));
		},
		_elm_lang$core$Json_Decode$string);
};
var _elm_community$json_extra$Json_Decode_Extra$keys = A2(
	_elm_lang$core$Json_Decode$map,
	A2(
		_elm_lang$core$List$foldl,
		F2(
			function (_p4, acc) {
				var _p5 = _p4;
				return {ctor: '::', _0: _p5._0, _1: acc};
			}),
		{ctor: '[]'}),
	_elm_lang$core$Json_Decode$keyValuePairs(
		_elm_lang$core$Json_Decode$succeed(
			{ctor: '_Tuple0'})));
var _elm_community$json_extra$Json_Decode_Extra$sequenceHelp = F2(
	function (decoders, jsonValues) {
		return (!_elm_lang$core$Native_Utils.eq(
			_elm_lang$core$List$length(jsonValues),
			_elm_lang$core$List$length(decoders))) ? _elm_lang$core$Json_Decode$fail('Number of decoders does not match number of values') : _elm_community$json_extra$Json_Decode_Extra$fromResult(
			A3(
				_elm_lang$core$List$foldr,
				_elm_lang$core$Result$map2(
					F2(
						function (x, y) {
							return {ctor: '::', _0: x, _1: y};
						})),
				_elm_lang$core$Result$Ok(
					{ctor: '[]'}),
				A3(_elm_lang$core$List$map2, _elm_lang$core$Json_Decode$decodeValue, decoders, jsonValues)));
	});
var _elm_community$json_extra$Json_Decode_Extra$sequence = function (decoders) {
	return A2(
		_elm_lang$core$Json_Decode$andThen,
		_elm_community$json_extra$Json_Decode_Extra$sequenceHelp(decoders),
		_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$value));
};
var _elm_community$json_extra$Json_Decode_Extra$indexedList = function (indexedDecoder) {
	return A2(
		_elm_lang$core$Json_Decode$andThen,
		function (values) {
			return _elm_community$json_extra$Json_Decode_Extra$sequence(
				A2(
					_elm_lang$core$List$map,
					indexedDecoder,
					A2(
						_elm_lang$core$List$range,
						0,
						_elm_lang$core$List$length(values) - 1)));
		},
		_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$value));
};
var _elm_community$json_extra$Json_Decode_Extra$optionalField = F2(
	function (fieldName, decoder) {
		var finishDecoding = function (json) {
			var _p6 = A2(
				_elm_lang$core$Json_Decode$decodeValue,
				A2(_elm_lang$core$Json_Decode$field, fieldName, _elm_lang$core$Json_Decode$value),
				json);
			if (_p6.ctor === 'Ok') {
				return A2(
					_elm_lang$core$Json_Decode$map,
					_elm_lang$core$Maybe$Just,
					A2(_elm_lang$core$Json_Decode$field, fieldName, decoder));
			} else {
				return _elm_lang$core$Json_Decode$succeed(_elm_lang$core$Maybe$Nothing);
			}
		};
		return A2(_elm_lang$core$Json_Decode$andThen, finishDecoding, _elm_lang$core$Json_Decode$value);
	});
var _elm_community$json_extra$Json_Decode_Extra$withDefault = F2(
	function (fallback, decoder) {
		return A2(
			_elm_lang$core$Json_Decode$map,
			_elm_lang$core$Maybe$withDefault(fallback),
			_elm_lang$core$Json_Decode$maybe(decoder));
	});
var _elm_community$json_extra$Json_Decode_Extra$decodeDictFromTuples = F2(
	function (keyDecoder, tuples) {
		var _p7 = tuples;
		if (_p7.ctor === '[]') {
			return _elm_lang$core$Json_Decode$succeed(_elm_lang$core$Dict$empty);
		} else {
			var _p8 = A2(_elm_lang$core$Json_Decode$decodeString, keyDecoder, _p7._0._0);
			if (_p8.ctor === 'Ok') {
				return A2(
					_elm_lang$core$Json_Decode$andThen,
					function (_p9) {
						return _elm_lang$core$Json_Decode$succeed(
							A3(_elm_lang$core$Dict$insert, _p8._0, _p7._0._1, _p9));
					},
					A2(_elm_community$json_extra$Json_Decode_Extra$decodeDictFromTuples, keyDecoder, _p7._1));
			} else {
				return _elm_lang$core$Json_Decode$fail(_p8._0);
			}
		}
	});
var _elm_community$json_extra$Json_Decode_Extra$dict2 = F2(
	function (keyDecoder, valueDecoder) {
		return A2(
			_elm_lang$core$Json_Decode$andThen,
			_elm_community$json_extra$Json_Decode_Extra$decodeDictFromTuples(keyDecoder),
			_elm_lang$core$Json_Decode$keyValuePairs(valueDecoder));
	});
var _elm_community$json_extra$Json_Decode_Extra$set = function (decoder) {
	return A2(
		_elm_lang$core$Json_Decode$map,
		_elm_lang$core$Set$fromList,
		_elm_lang$core$Json_Decode$list(decoder));
};
var _elm_community$json_extra$Json_Decode_Extra$date = A2(
	_elm_lang$core$Json_Decode$andThen,
	function (_p10) {
		return _elm_community$json_extra$Json_Decode_Extra$fromResult(
			_elm_lang$core$Date$fromString(_p10));
	},
	_elm_lang$core$Json_Decode$string);
var _elm_community$json_extra$Json_Decode_Extra$andMap = _elm_lang$core$Json_Decode$map2(
	F2(
		function (x, y) {
			return y(x);
		}));
var _elm_community$json_extra$Json_Decode_Extra_ops = _elm_community$json_extra$Json_Decode_Extra_ops || {};
_elm_community$json_extra$Json_Decode_Extra_ops['|:'] = _elm_lang$core$Basics$flip(_elm_community$json_extra$Json_Decode_Extra$andMap);

var _elm_lang$core$Process$kill = _elm_lang$core$Native_Scheduler.kill;
var _elm_lang$core$Process$sleep = _elm_lang$core$Native_Scheduler.sleep;
var _elm_lang$core$Process$spawn = _elm_lang$core$Native_Scheduler.spawn;

var _elm_lang$dom$Dom_LowLevel$onWindow = _elm_lang$dom$Native_Dom.onWindow;
var _elm_lang$dom$Dom_LowLevel$onDocument = _elm_lang$dom$Native_Dom.onDocument;

var _elm_lang$navigation$Native_Navigation = function() {


// FAKE NAVIGATION

function go(n)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		if (n !== 0)
		{
			history.go(n);
		}
		callback(_elm_lang$core$Native_Scheduler.succeed(_elm_lang$core$Native_Utils.Tuple0));
	});
}

function pushState(url)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		history.pushState({}, '', url);
		callback(_elm_lang$core$Native_Scheduler.succeed(getLocation()));
	});
}

function replaceState(url)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		history.replaceState({}, '', url);
		callback(_elm_lang$core$Native_Scheduler.succeed(getLocation()));
	});
}


// REAL NAVIGATION

function reloadPage(skipCache)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		document.location.reload(skipCache);
		callback(_elm_lang$core$Native_Scheduler.succeed(_elm_lang$core$Native_Utils.Tuple0));
	});
}

function setLocation(url)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		try
		{
			window.location = url;
		}
		catch(err)
		{
			// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.
			// Other browsers reload the page, so let's be consistent about that.
			document.location.reload(false);
		}
		callback(_elm_lang$core$Native_Scheduler.succeed(_elm_lang$core$Native_Utils.Tuple0));
	});
}


// GET LOCATION

function getLocation()
{
	var location = document.location;

	return {
		href: location.href,
		host: location.host,
		hostname: location.hostname,
		protocol: location.protocol,
		origin: location.origin,
		port_: location.port,
		pathname: location.pathname,
		search: location.search,
		hash: location.hash,
		username: location.username,
		password: location.password
	};
}


// DETECT IE11 PROBLEMS

function isInternetExplorer11()
{
	return window.navigator.userAgent.indexOf('Trident') !== -1;
}


return {
	go: go,
	setLocation: setLocation,
	reloadPage: reloadPage,
	pushState: pushState,
	replaceState: replaceState,
	getLocation: getLocation,
	isInternetExplorer11: isInternetExplorer11
};

}();

var _elm_lang$navigation$Navigation$replaceState = _elm_lang$navigation$Native_Navigation.replaceState;
var _elm_lang$navigation$Navigation$pushState = _elm_lang$navigation$Native_Navigation.pushState;
var _elm_lang$navigation$Navigation$go = _elm_lang$navigation$Native_Navigation.go;
var _elm_lang$navigation$Navigation$reloadPage = _elm_lang$navigation$Native_Navigation.reloadPage;
var _elm_lang$navigation$Navigation$setLocation = _elm_lang$navigation$Native_Navigation.setLocation;
var _elm_lang$navigation$Navigation_ops = _elm_lang$navigation$Navigation_ops || {};
_elm_lang$navigation$Navigation_ops['&>'] = F2(
	function (task1, task2) {
		return A2(
			_elm_lang$core$Task$andThen,
			function (_p0) {
				return task2;
			},
			task1);
	});
var _elm_lang$navigation$Navigation$notify = F3(
	function (router, subs, location) {
		var send = function (_p1) {
			var _p2 = _p1;
			return A2(
				_elm_lang$core$Platform$sendToApp,
				router,
				_p2._0(location));
		};
		return A2(
			_elm_lang$navigation$Navigation_ops['&>'],
			_elm_lang$core$Task$sequence(
				A2(_elm_lang$core$List$map, send, subs)),
			_elm_lang$core$Task$succeed(
				{ctor: '_Tuple0'}));
	});
var _elm_lang$navigation$Navigation$cmdHelp = F3(
	function (router, subs, cmd) {
		var _p3 = cmd;
		switch (_p3.ctor) {
			case 'Jump':
				return _elm_lang$navigation$Navigation$go(_p3._0);
			case 'New':
				return A2(
					_elm_lang$core$Task$andThen,
					A2(_elm_lang$navigation$Navigation$notify, router, subs),
					_elm_lang$navigation$Navigation$pushState(_p3._0));
			case 'Modify':
				return A2(
					_elm_lang$core$Task$andThen,
					A2(_elm_lang$navigation$Navigation$notify, router, subs),
					_elm_lang$navigation$Navigation$replaceState(_p3._0));
			case 'Visit':
				return _elm_lang$navigation$Navigation$setLocation(_p3._0);
			default:
				return _elm_lang$navigation$Navigation$reloadPage(_p3._0);
		}
	});
var _elm_lang$navigation$Navigation$killPopWatcher = function (popWatcher) {
	var _p4 = popWatcher;
	if (_p4.ctor === 'Normal') {
		return _elm_lang$core$Process$kill(_p4._0);
	} else {
		return A2(
			_elm_lang$navigation$Navigation_ops['&>'],
			_elm_lang$core$Process$kill(_p4._0),
			_elm_lang$core$Process$kill(_p4._1));
	}
};
var _elm_lang$navigation$Navigation$onSelfMsg = F3(
	function (router, location, state) {
		return A2(
			_elm_lang$navigation$Navigation_ops['&>'],
			A3(_elm_lang$navigation$Navigation$notify, router, state.subs, location),
			_elm_lang$core$Task$succeed(state));
	});
var _elm_lang$navigation$Navigation$subscription = _elm_lang$core$Native_Platform.leaf('Navigation');
var _elm_lang$navigation$Navigation$command = _elm_lang$core$Native_Platform.leaf('Navigation');
var _elm_lang$navigation$Navigation$Location = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return {href: a, host: b, hostname: c, protocol: d, origin: e, port_: f, pathname: g, search: h, hash: i, username: j, password: k};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _elm_lang$navigation$Navigation$State = F2(
	function (a, b) {
		return {subs: a, popWatcher: b};
	});
var _elm_lang$navigation$Navigation$init = _elm_lang$core$Task$succeed(
	A2(
		_elm_lang$navigation$Navigation$State,
		{ctor: '[]'},
		_elm_lang$core$Maybe$Nothing));
var _elm_lang$navigation$Navigation$Reload = function (a) {
	return {ctor: 'Reload', _0: a};
};
var _elm_lang$navigation$Navigation$reload = _elm_lang$navigation$Navigation$command(
	_elm_lang$navigation$Navigation$Reload(false));
var _elm_lang$navigation$Navigation$reloadAndSkipCache = _elm_lang$navigation$Navigation$command(
	_elm_lang$navigation$Navigation$Reload(true));
var _elm_lang$navigation$Navigation$Visit = function (a) {
	return {ctor: 'Visit', _0: a};
};
var _elm_lang$navigation$Navigation$load = function (url) {
	return _elm_lang$navigation$Navigation$command(
		_elm_lang$navigation$Navigation$Visit(url));
};
var _elm_lang$navigation$Navigation$Modify = function (a) {
	return {ctor: 'Modify', _0: a};
};
var _elm_lang$navigation$Navigation$modifyUrl = function (url) {
	return _elm_lang$navigation$Navigation$command(
		_elm_lang$navigation$Navigation$Modify(url));
};
var _elm_lang$navigation$Navigation$New = function (a) {
	return {ctor: 'New', _0: a};
};
var _elm_lang$navigation$Navigation$newUrl = function (url) {
	return _elm_lang$navigation$Navigation$command(
		_elm_lang$navigation$Navigation$New(url));
};
var _elm_lang$navigation$Navigation$Jump = function (a) {
	return {ctor: 'Jump', _0: a};
};
var _elm_lang$navigation$Navigation$back = function (n) {
	return _elm_lang$navigation$Navigation$command(
		_elm_lang$navigation$Navigation$Jump(0 - n));
};
var _elm_lang$navigation$Navigation$forward = function (n) {
	return _elm_lang$navigation$Navigation$command(
		_elm_lang$navigation$Navigation$Jump(n));
};
var _elm_lang$navigation$Navigation$cmdMap = F2(
	function (_p5, myCmd) {
		var _p6 = myCmd;
		switch (_p6.ctor) {
			case 'Jump':
				return _elm_lang$navigation$Navigation$Jump(_p6._0);
			case 'New':
				return _elm_lang$navigation$Navigation$New(_p6._0);
			case 'Modify':
				return _elm_lang$navigation$Navigation$Modify(_p6._0);
			case 'Visit':
				return _elm_lang$navigation$Navigation$Visit(_p6._0);
			default:
				return _elm_lang$navigation$Navigation$Reload(_p6._0);
		}
	});
var _elm_lang$navigation$Navigation$Monitor = function (a) {
	return {ctor: 'Monitor', _0: a};
};
var _elm_lang$navigation$Navigation$program = F2(
	function (locationToMessage, stuff) {
		var init = stuff.init(
			_elm_lang$navigation$Native_Navigation.getLocation(
				{ctor: '_Tuple0'}));
		var subs = function (model) {
			return _elm_lang$core$Platform_Sub$batch(
				{
					ctor: '::',
					_0: _elm_lang$navigation$Navigation$subscription(
						_elm_lang$navigation$Navigation$Monitor(locationToMessage)),
					_1: {
						ctor: '::',
						_0: stuff.subscriptions(model),
						_1: {ctor: '[]'}
					}
				});
		};
		return _elm_lang$html$Html$program(
			{init: init, view: stuff.view, update: stuff.update, subscriptions: subs});
	});
var _elm_lang$navigation$Navigation$programWithFlags = F2(
	function (locationToMessage, stuff) {
		var init = function (flags) {
			return A2(
				stuff.init,
				flags,
				_elm_lang$navigation$Native_Navigation.getLocation(
					{ctor: '_Tuple0'}));
		};
		var subs = function (model) {
			return _elm_lang$core$Platform_Sub$batch(
				{
					ctor: '::',
					_0: _elm_lang$navigation$Navigation$subscription(
						_elm_lang$navigation$Navigation$Monitor(locationToMessage)),
					_1: {
						ctor: '::',
						_0: stuff.subscriptions(model),
						_1: {ctor: '[]'}
					}
				});
		};
		return _elm_lang$html$Html$programWithFlags(
			{init: init, view: stuff.view, update: stuff.update, subscriptions: subs});
	});
var _elm_lang$navigation$Navigation$subMap = F2(
	function (func, _p7) {
		var _p8 = _p7;
		return _elm_lang$navigation$Navigation$Monitor(
			function (_p9) {
				return func(
					_p8._0(_p9));
			});
	});
var _elm_lang$navigation$Navigation$InternetExplorer = F2(
	function (a, b) {
		return {ctor: 'InternetExplorer', _0: a, _1: b};
	});
var _elm_lang$navigation$Navigation$Normal = function (a) {
	return {ctor: 'Normal', _0: a};
};
var _elm_lang$navigation$Navigation$spawnPopWatcher = function (router) {
	var reportLocation = function (_p10) {
		return A2(
			_elm_lang$core$Platform$sendToSelf,
			router,
			_elm_lang$navigation$Native_Navigation.getLocation(
				{ctor: '_Tuple0'}));
	};
	return _elm_lang$navigation$Native_Navigation.isInternetExplorer11(
		{ctor: '_Tuple0'}) ? A3(
		_elm_lang$core$Task$map2,
		_elm_lang$navigation$Navigation$InternetExplorer,
		_elm_lang$core$Process$spawn(
			A3(_elm_lang$dom$Dom_LowLevel$onWindow, 'popstate', _elm_lang$core$Json_Decode$value, reportLocation)),
		_elm_lang$core$Process$spawn(
			A3(_elm_lang$dom$Dom_LowLevel$onWindow, 'hashchange', _elm_lang$core$Json_Decode$value, reportLocation))) : A2(
		_elm_lang$core$Task$map,
		_elm_lang$navigation$Navigation$Normal,
		_elm_lang$core$Process$spawn(
			A3(_elm_lang$dom$Dom_LowLevel$onWindow, 'popstate', _elm_lang$core$Json_Decode$value, reportLocation)));
};
var _elm_lang$navigation$Navigation$onEffects = F4(
	function (router, cmds, subs, _p11) {
		var _p12 = _p11;
		var _p15 = _p12.popWatcher;
		var stepState = function () {
			var _p13 = {ctor: '_Tuple2', _0: subs, _1: _p15};
			_v6_2:
			do {
				if (_p13._0.ctor === '[]') {
					if (_p13._1.ctor === 'Just') {
						return A2(
							_elm_lang$navigation$Navigation_ops['&>'],
							_elm_lang$navigation$Navigation$killPopWatcher(_p13._1._0),
							_elm_lang$core$Task$succeed(
								A2(_elm_lang$navigation$Navigation$State, subs, _elm_lang$core$Maybe$Nothing)));
					} else {
						break _v6_2;
					}
				} else {
					if (_p13._1.ctor === 'Nothing') {
						return A2(
							_elm_lang$core$Task$map,
							function (_p14) {
								return A2(
									_elm_lang$navigation$Navigation$State,
									subs,
									_elm_lang$core$Maybe$Just(_p14));
							},
							_elm_lang$navigation$Navigation$spawnPopWatcher(router));
					} else {
						break _v6_2;
					}
				}
			} while(false);
			return _elm_lang$core$Task$succeed(
				A2(_elm_lang$navigation$Navigation$State, subs, _p15));
		}();
		return A2(
			_elm_lang$navigation$Navigation_ops['&>'],
			_elm_lang$core$Task$sequence(
				A2(
					_elm_lang$core$List$map,
					A2(_elm_lang$navigation$Navigation$cmdHelp, router, subs),
					cmds)),
			stepState);
	});
_elm_lang$core$Native_Platform.effectManagers['Navigation'] = {pkg: 'elm-lang/navigation', init: _elm_lang$navigation$Navigation$init, onEffects: _elm_lang$navigation$Navigation$onEffects, onSelfMsg: _elm_lang$navigation$Navigation$onSelfMsg, tag: 'fx', cmdMap: _elm_lang$navigation$Navigation$cmdMap, subMap: _elm_lang$navigation$Navigation$subMap};

var _evancz$url_parser$UrlParser$toKeyValuePair = function (segment) {
	var _p0 = A2(_elm_lang$core$String$split, '=', segment);
	if (((_p0.ctor === '::') && (_p0._1.ctor === '::')) && (_p0._1._1.ctor === '[]')) {
		return A3(
			_elm_lang$core$Maybe$map2,
			F2(
				function (v0, v1) {
					return {ctor: '_Tuple2', _0: v0, _1: v1};
				}),
			_elm_lang$http$Http$decodeUri(_p0._0),
			_elm_lang$http$Http$decodeUri(_p0._1._0));
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _evancz$url_parser$UrlParser$parseParams = function (queryString) {
	return _elm_lang$core$Dict$fromList(
		A2(
			_elm_lang$core$List$filterMap,
			_evancz$url_parser$UrlParser$toKeyValuePair,
			A2(
				_elm_lang$core$String$split,
				'&',
				A2(_elm_lang$core$String$dropLeft, 1, queryString))));
};
var _evancz$url_parser$UrlParser$splitUrl = function (url) {
	var _p1 = A2(_elm_lang$core$String$split, '/', url);
	if ((_p1.ctor === '::') && (_p1._0 === '')) {
		return _p1._1;
	} else {
		return _p1;
	}
};
var _evancz$url_parser$UrlParser$parseHelp = function (states) {
	parseHelp:
	while (true) {
		var _p2 = states;
		if (_p2.ctor === '[]') {
			return _elm_lang$core$Maybe$Nothing;
		} else {
			var _p4 = _p2._0;
			var _p3 = _p4.unvisited;
			if (_p3.ctor === '[]') {
				return _elm_lang$core$Maybe$Just(_p4.value);
			} else {
				if ((_p3._0 === '') && (_p3._1.ctor === '[]')) {
					return _elm_lang$core$Maybe$Just(_p4.value);
				} else {
					var _v4 = _p2._1;
					states = _v4;
					continue parseHelp;
				}
			}
		}
	}
};
var _evancz$url_parser$UrlParser$parse = F3(
	function (_p5, url, params) {
		var _p6 = _p5;
		return _evancz$url_parser$UrlParser$parseHelp(
			_p6._0(
				{
					visited: {ctor: '[]'},
					unvisited: _evancz$url_parser$UrlParser$splitUrl(url),
					params: params,
					value: _elm_lang$core$Basics$identity
				}));
	});
var _evancz$url_parser$UrlParser$parseHash = F2(
	function (parser, location) {
		return A3(
			_evancz$url_parser$UrlParser$parse,
			parser,
			A2(_elm_lang$core$String$dropLeft, 1, location.hash),
			_evancz$url_parser$UrlParser$parseParams(location.search));
	});
var _evancz$url_parser$UrlParser$parsePath = F2(
	function (parser, location) {
		return A3(
			_evancz$url_parser$UrlParser$parse,
			parser,
			location.pathname,
			_evancz$url_parser$UrlParser$parseParams(location.search));
	});
var _evancz$url_parser$UrlParser$intParamHelp = function (maybeValue) {
	var _p7 = maybeValue;
	if (_p7.ctor === 'Nothing') {
		return _elm_lang$core$Maybe$Nothing;
	} else {
		return _elm_lang$core$Result$toMaybe(
			_elm_lang$core$String$toInt(_p7._0));
	}
};
var _evancz$url_parser$UrlParser$mapHelp = F2(
	function (func, _p8) {
		var _p9 = _p8;
		return {
			visited: _p9.visited,
			unvisited: _p9.unvisited,
			params: _p9.params,
			value: func(_p9.value)
		};
	});
var _evancz$url_parser$UrlParser$State = F4(
	function (a, b, c, d) {
		return {visited: a, unvisited: b, params: c, value: d};
	});
var _evancz$url_parser$UrlParser$Parser = function (a) {
	return {ctor: 'Parser', _0: a};
};
var _evancz$url_parser$UrlParser$s = function (str) {
	return _evancz$url_parser$UrlParser$Parser(
		function (_p10) {
			var _p11 = _p10;
			var _p12 = _p11.unvisited;
			if (_p12.ctor === '[]') {
				return {ctor: '[]'};
			} else {
				var _p13 = _p12._0;
				return _elm_lang$core$Native_Utils.eq(_p13, str) ? {
					ctor: '::',
					_0: A4(
						_evancz$url_parser$UrlParser$State,
						{ctor: '::', _0: _p13, _1: _p11.visited},
						_p12._1,
						_p11.params,
						_p11.value),
					_1: {ctor: '[]'}
				} : {ctor: '[]'};
			}
		});
};
var _evancz$url_parser$UrlParser$custom = F2(
	function (tipe, stringToSomething) {
		return _evancz$url_parser$UrlParser$Parser(
			function (_p14) {
				var _p15 = _p14;
				var _p16 = _p15.unvisited;
				if (_p16.ctor === '[]') {
					return {ctor: '[]'};
				} else {
					var _p18 = _p16._0;
					var _p17 = stringToSomething(_p18);
					if (_p17.ctor === 'Ok') {
						return {
							ctor: '::',
							_0: A4(
								_evancz$url_parser$UrlParser$State,
								{ctor: '::', _0: _p18, _1: _p15.visited},
								_p16._1,
								_p15.params,
								_p15.value(_p17._0)),
							_1: {ctor: '[]'}
						};
					} else {
						return {ctor: '[]'};
					}
				}
			});
	});
var _evancz$url_parser$UrlParser$string = A2(_evancz$url_parser$UrlParser$custom, 'STRING', _elm_lang$core$Result$Ok);
var _evancz$url_parser$UrlParser$int = A2(_evancz$url_parser$UrlParser$custom, 'NUMBER', _elm_lang$core$String$toInt);
var _evancz$url_parser$UrlParser_ops = _evancz$url_parser$UrlParser_ops || {};
_evancz$url_parser$UrlParser_ops['</>'] = F2(
	function (_p20, _p19) {
		var _p21 = _p20;
		var _p22 = _p19;
		return _evancz$url_parser$UrlParser$Parser(
			function (state) {
				return A2(
					_elm_lang$core$List$concatMap,
					_p22._0,
					_p21._0(state));
			});
	});
var _evancz$url_parser$UrlParser$map = F2(
	function (subValue, _p23) {
		var _p24 = _p23;
		return _evancz$url_parser$UrlParser$Parser(
			function (_p25) {
				var _p26 = _p25;
				return A2(
					_elm_lang$core$List$map,
					_evancz$url_parser$UrlParser$mapHelp(_p26.value),
					_p24._0(
						{visited: _p26.visited, unvisited: _p26.unvisited, params: _p26.params, value: subValue}));
			});
	});
var _evancz$url_parser$UrlParser$oneOf = function (parsers) {
	return _evancz$url_parser$UrlParser$Parser(
		function (state) {
			return A2(
				_elm_lang$core$List$concatMap,
				function (_p27) {
					var _p28 = _p27;
					return _p28._0(state);
				},
				parsers);
		});
};
var _evancz$url_parser$UrlParser$top = _evancz$url_parser$UrlParser$Parser(
	function (state) {
		return {
			ctor: '::',
			_0: state,
			_1: {ctor: '[]'}
		};
	});
var _evancz$url_parser$UrlParser_ops = _evancz$url_parser$UrlParser_ops || {};
_evancz$url_parser$UrlParser_ops['<?>'] = F2(
	function (_p30, _p29) {
		var _p31 = _p30;
		var _p32 = _p29;
		return _evancz$url_parser$UrlParser$Parser(
			function (state) {
				return A2(
					_elm_lang$core$List$concatMap,
					_p32._0,
					_p31._0(state));
			});
	});
var _evancz$url_parser$UrlParser$QueryParser = function (a) {
	return {ctor: 'QueryParser', _0: a};
};
var _evancz$url_parser$UrlParser$customParam = F2(
	function (key, func) {
		return _evancz$url_parser$UrlParser$QueryParser(
			function (_p33) {
				var _p34 = _p33;
				var _p35 = _p34.params;
				return {
					ctor: '::',
					_0: A4(
						_evancz$url_parser$UrlParser$State,
						_p34.visited,
						_p34.unvisited,
						_p35,
						_p34.value(
							func(
								A2(_elm_lang$core$Dict$get, key, _p35)))),
					_1: {ctor: '[]'}
				};
			});
	});
var _evancz$url_parser$UrlParser$stringParam = function (name) {
	return A2(_evancz$url_parser$UrlParser$customParam, name, _elm_lang$core$Basics$identity);
};
var _evancz$url_parser$UrlParser$intParam = function (name) {
	return A2(_evancz$url_parser$UrlParser$customParam, name, _evancz$url_parser$UrlParser$intParamHelp);
};

var _lukewestby$elm_http_builder$HttpBuilder$replace = F2(
	function (old, $new) {
		return function (_p0) {
			return A2(
				_elm_lang$core$String$join,
				$new,
				A2(_elm_lang$core$String$split, old, _p0));
		};
	});
var _lukewestby$elm_http_builder$HttpBuilder$queryEscape = function (_p1) {
	return A3(
		_lukewestby$elm_http_builder$HttpBuilder$replace,
		'%20',
		'+',
		_elm_lang$http$Http$encodeUri(_p1));
};
var _lukewestby$elm_http_builder$HttpBuilder$queryPair = function (_p2) {
	var _p3 = _p2;
	return A2(
		_elm_lang$core$Basics_ops['++'],
		_lukewestby$elm_http_builder$HttpBuilder$queryEscape(_p3._0),
		A2(
			_elm_lang$core$Basics_ops['++'],
			'=',
			_lukewestby$elm_http_builder$HttpBuilder$queryEscape(_p3._1)));
};
var _lukewestby$elm_http_builder$HttpBuilder$joinUrlEncoded = function (args) {
	return A2(
		_elm_lang$core$String$join,
		'&',
		A2(_elm_lang$core$List$map, _lukewestby$elm_http_builder$HttpBuilder$queryPair, args));
};
var _lukewestby$elm_http_builder$HttpBuilder$toRequest = function (builder) {
	var encodedParams = _lukewestby$elm_http_builder$HttpBuilder$joinUrlEncoded(builder.queryParams);
	var fullUrl = _elm_lang$core$String$isEmpty(encodedParams) ? builder.url : A2(
		_elm_lang$core$Basics_ops['++'],
		builder.url,
		A2(_elm_lang$core$Basics_ops['++'], '?', encodedParams));
	return _elm_lang$http$Http$request(
		{method: builder.method, url: fullUrl, headers: builder.headers, body: builder.body, expect: builder.expect, timeout: builder.timeout, withCredentials: builder.withCredentials});
};
var _lukewestby$elm_http_builder$HttpBuilder$toTaskPlain = function (builder) {
	return _elm_lang$http$Http$toTask(
		_lukewestby$elm_http_builder$HttpBuilder$toRequest(builder));
};
var _lukewestby$elm_http_builder$HttpBuilder$withCacheBuster = F2(
	function (paramName, builder) {
		return _elm_lang$core$Native_Utils.update(
			builder,
			{
				cacheBuster: _elm_lang$core$Maybe$Just(paramName)
			});
	});
var _lukewestby$elm_http_builder$HttpBuilder$withQueryParams = F2(
	function (queryParams, builder) {
		return _elm_lang$core$Native_Utils.update(
			builder,
			{
				queryParams: A2(_elm_lang$core$Basics_ops['++'], builder.queryParams, queryParams)
			});
	});
var _lukewestby$elm_http_builder$HttpBuilder$toTaskWithCacheBuster = F2(
	function (paramName, builder) {
		var request = function (timestamp) {
			return _lukewestby$elm_http_builder$HttpBuilder$toTaskPlain(
				A2(
					_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
					{
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: paramName,
							_1: _elm_lang$core$Basics$toString(timestamp)
						},
						_1: {ctor: '[]'}
					},
					builder));
		};
		return A2(_elm_lang$core$Task$andThen, request, _elm_lang$core$Time$now);
	});
var _lukewestby$elm_http_builder$HttpBuilder$toTask = function (builder) {
	var _p4 = builder.cacheBuster;
	if (_p4.ctor === 'Just') {
		return A2(_lukewestby$elm_http_builder$HttpBuilder$toTaskWithCacheBuster, _p4._0, builder);
	} else {
		return _lukewestby$elm_http_builder$HttpBuilder$toTaskPlain(builder);
	}
};
var _lukewestby$elm_http_builder$HttpBuilder$send = F2(
	function (tagger, builder) {
		return A2(
			_elm_lang$core$Task$attempt,
			tagger,
			_lukewestby$elm_http_builder$HttpBuilder$toTask(builder));
	});
var _lukewestby$elm_http_builder$HttpBuilder$withExpectString = function (builder) {
	return _elm_lang$core$Native_Utils.update(
		builder,
		{expect: _elm_lang$http$Http$expectString});
};
var _lukewestby$elm_http_builder$HttpBuilder$withExpectJson = F2(
	function (decoder, builder) {
		return _elm_lang$core$Native_Utils.update(
			builder,
			{
				expect: _elm_lang$http$Http$expectJson(decoder)
			});
	});
var _lukewestby$elm_http_builder$HttpBuilder$withExpect = F2(
	function (expect, builder) {
		return _elm_lang$core$Native_Utils.update(
			builder,
			{expect: expect});
	});
var _lukewestby$elm_http_builder$HttpBuilder$withCredentials = function (builder) {
	return _elm_lang$core$Native_Utils.update(
		builder,
		{withCredentials: true});
};
var _lukewestby$elm_http_builder$HttpBuilder$withTimeout = F2(
	function (timeout, builder) {
		return _elm_lang$core$Native_Utils.update(
			builder,
			{
				timeout: _elm_lang$core$Maybe$Just(timeout)
			});
	});
var _lukewestby$elm_http_builder$HttpBuilder$withBody = F2(
	function (body, builder) {
		return _elm_lang$core$Native_Utils.update(
			builder,
			{body: body});
	});
var _lukewestby$elm_http_builder$HttpBuilder$withStringBody = F2(
	function (contentType, value) {
		return _lukewestby$elm_http_builder$HttpBuilder$withBody(
			A2(_elm_lang$http$Http$stringBody, contentType, value));
	});
var _lukewestby$elm_http_builder$HttpBuilder$withUrlEncodedBody = function (_p5) {
	return A2(
		_lukewestby$elm_http_builder$HttpBuilder$withStringBody,
		'application/x-www-form-urlencoded',
		_lukewestby$elm_http_builder$HttpBuilder$joinUrlEncoded(_p5));
};
var _lukewestby$elm_http_builder$HttpBuilder$withJsonBody = function (value) {
	return _lukewestby$elm_http_builder$HttpBuilder$withBody(
		_elm_lang$http$Http$jsonBody(value));
};
var _lukewestby$elm_http_builder$HttpBuilder$withMultipartStringBody = function (partPairs) {
	return _lukewestby$elm_http_builder$HttpBuilder$withBody(
		_elm_lang$http$Http$multipartBody(
			A2(
				_elm_lang$core$List$map,
				_elm_lang$core$Basics$uncurry(_elm_lang$http$Http$stringPart),
				partPairs)));
};
var _lukewestby$elm_http_builder$HttpBuilder$withBearerToken = F2(
	function (value, builder) {
		return _elm_lang$core$Native_Utils.update(
			builder,
			{
				headers: {
					ctor: '::',
					_0: A2(
						_elm_lang$http$Http$header,
						'Authorization',
						A2(_elm_lang$core$Basics_ops['++'], 'Bearer ', value)),
					_1: builder.headers
				}
			});
	});
var _lukewestby$elm_http_builder$HttpBuilder$withHeaders = F2(
	function (headerPairs, builder) {
		return _elm_lang$core$Native_Utils.update(
			builder,
			{
				headers: A2(
					_elm_lang$core$Basics_ops['++'],
					A2(
						_elm_lang$core$List$map,
						_elm_lang$core$Basics$uncurry(_elm_lang$http$Http$header),
						headerPairs),
					builder.headers)
			});
	});
var _lukewestby$elm_http_builder$HttpBuilder$withHeader = F3(
	function (key, value, builder) {
		return _elm_lang$core$Native_Utils.update(
			builder,
			{
				headers: {
					ctor: '::',
					_0: A2(_elm_lang$http$Http$header, key, value),
					_1: builder.headers
				}
			});
	});
var _lukewestby$elm_http_builder$HttpBuilder$requestWithMethodAndUrl = F2(
	function (method, url) {
		return {
			method: method,
			url: url,
			headers: {ctor: '[]'},
			body: _elm_lang$http$Http$emptyBody,
			expect: _elm_lang$http$Http$expectStringResponse(
				function (_p6) {
					return _elm_lang$core$Result$Ok(
						{ctor: '_Tuple0'});
				}),
			timeout: _elm_lang$core$Maybe$Nothing,
			withCredentials: false,
			queryParams: {ctor: '[]'},
			cacheBuster: _elm_lang$core$Maybe$Nothing
		};
	});
var _lukewestby$elm_http_builder$HttpBuilder$get = _lukewestby$elm_http_builder$HttpBuilder$requestWithMethodAndUrl('GET');
var _lukewestby$elm_http_builder$HttpBuilder$post = _lukewestby$elm_http_builder$HttpBuilder$requestWithMethodAndUrl('POST');
var _lukewestby$elm_http_builder$HttpBuilder$put = _lukewestby$elm_http_builder$HttpBuilder$requestWithMethodAndUrl('PUT');
var _lukewestby$elm_http_builder$HttpBuilder$patch = _lukewestby$elm_http_builder$HttpBuilder$requestWithMethodAndUrl('PATCH');
var _lukewestby$elm_http_builder$HttpBuilder$delete = _lukewestby$elm_http_builder$HttpBuilder$requestWithMethodAndUrl('DELETE');
var _lukewestby$elm_http_builder$HttpBuilder$options = _lukewestby$elm_http_builder$HttpBuilder$requestWithMethodAndUrl('OPTIONS');
var _lukewestby$elm_http_builder$HttpBuilder$trace = _lukewestby$elm_http_builder$HttpBuilder$requestWithMethodAndUrl('TRACE');
var _lukewestby$elm_http_builder$HttpBuilder$head = _lukewestby$elm_http_builder$HttpBuilder$requestWithMethodAndUrl('HEAD');
var _lukewestby$elm_http_builder$HttpBuilder$RequestBuilder = F9(
	function (a, b, c, d, e, f, g, h, i) {
		return {method: a, headers: b, url: c, body: d, expect: e, timeout: f, withCredentials: g, queryParams: h, cacheBuster: i};
	});

var _ryan_senn$elm_record_formatter$RecordFormatter$newLine = F4(
	function ($char, indentation, nextIndentation, acc) {
		return _elm_lang$core$Native_Utils.update(
			acc,
			{
				string: A2(
					_elm_lang$core$Basics_ops['++'],
					acc.string,
					A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$core$String$isEmpty(acc.string) ? '' : '\n',
						A2(
							_elm_lang$core$Basics_ops['++'],
							A2(_elm_lang$core$String$repeat, acc.indentation + indentation, ' '),
							_elm_lang$core$String$fromChar($char)))),
				indentation: acc.indentation + nextIndentation
			});
	});
var _ryan_senn$elm_record_formatter$RecordFormatter$format = F2(
	function ($char, acc) {
		var _p0 = {ctor: '_Tuple3', _0: $char, _1: acc.isString, _2: acc.isEscaped};
		_v0_11:
		do {
			if (_p0._1 === true) {
				if (_p0._2 === false) {
					switch (_p0._0.valueOf()) {
						case '\"':
							return _elm_lang$core$Native_Utils.update(
								acc,
								{
									string: A2(
										_elm_lang$core$Basics_ops['++'],
										acc.string,
										_elm_lang$core$String$fromChar($char)),
									isString: false
								});
						case '\\':
							return _elm_lang$core$Native_Utils.update(
								acc,
								{
									string: A2(
										_elm_lang$core$Basics_ops['++'],
										acc.string,
										_elm_lang$core$String$fromChar($char)),
									isEscaped: true
								});
						default:
							break _v0_11;
					}
				} else {
					if (_p0._0.valueOf() === '\\') {
						return _elm_lang$core$Native_Utils.update(
							acc,
							{
								string: A2(
									_elm_lang$core$Basics_ops['++'],
									acc.string,
									_elm_lang$core$String$fromChar($char)),
								isEscaped: false
							});
					} else {
						break _v0_11;
					}
				}
			} else {
				switch (_p0._0.valueOf()) {
					case '\"':
						if (_p0._2 === false) {
							return _elm_lang$core$Native_Utils.update(
								acc,
								{
									string: A2(
										_elm_lang$core$Basics_ops['++'],
										acc.string,
										_elm_lang$core$String$fromChar($char)),
									isString: true
								});
						} else {
							break _v0_11;
						}
					case '(':
						return A4(
							_ryan_senn$elm_record_formatter$RecordFormatter$newLine,
							_elm_lang$core$Native_Utils.chr('('),
							4,
							4,
							acc);
					case '[':
						return A4(
							_ryan_senn$elm_record_formatter$RecordFormatter$newLine,
							_elm_lang$core$Native_Utils.chr('['),
							4,
							4,
							acc);
					case '{':
						return A4(
							_ryan_senn$elm_record_formatter$RecordFormatter$newLine,
							_elm_lang$core$Native_Utils.chr('{'),
							4,
							4,
							acc);
					case ')':
						return A4(
							_ryan_senn$elm_record_formatter$RecordFormatter$newLine,
							_elm_lang$core$Native_Utils.chr(')'),
							0,
							-4,
							acc);
					case ']':
						return A4(
							_ryan_senn$elm_record_formatter$RecordFormatter$newLine,
							_elm_lang$core$Native_Utils.chr(']'),
							0,
							-4,
							acc);
					case '}':
						return A4(
							_ryan_senn$elm_record_formatter$RecordFormatter$newLine,
							_elm_lang$core$Native_Utils.chr('}'),
							0,
							-4,
							acc);
					case ',':
						return A4(
							_ryan_senn$elm_record_formatter$RecordFormatter$newLine,
							_elm_lang$core$Native_Utils.chr(','),
							0,
							0,
							acc);
					default:
						break _v0_11;
				}
			}
		} while(false);
		return _elm_lang$core$Native_Utils.update(
			acc,
			{
				string: A2(
					_elm_lang$core$Basics_ops['++'],
					acc.string,
					_elm_lang$core$String$fromChar(_p0._0))
			});
	});
var _ryan_senn$elm_record_formatter$RecordFormatter$Accumulator = F4(
	function (a, b, c, d) {
		return {string: a, indentation: b, isString: c, isEscaped: d};
	});
var _ryan_senn$elm_record_formatter$RecordFormatter$toString = function (_p1) {
	return function (_) {
		return _.string;
	}(
		A3(
			_elm_lang$core$List$foldl,
			_ryan_senn$elm_record_formatter$RecordFormatter$format,
			A4(_ryan_senn$elm_record_formatter$RecordFormatter$Accumulator, '', -4, false, false),
			_elm_lang$core$String$toList(
				_elm_lang$core$Basics$toString(_p1))));
};

var _ryan_senn$stellar_elm_demo$Config$sdkVersion = '1.0.2';

var _ryan_senn$stellar_elm_demo$Endpoints$TransactionDetails = {ctor: 'TransactionDetails'};
var _ryan_senn$stellar_elm_demo$Endpoints$TransactionsForLedger = {ctor: 'TransactionsForLedger'};
var _ryan_senn$stellar_elm_demo$Endpoints$TransactionsForAccount = {ctor: 'TransactionsForAccount'};
var _ryan_senn$stellar_elm_demo$Endpoints$PostTransaction = {ctor: 'PostTransaction'};
var _ryan_senn$stellar_elm_demo$Endpoints$AllTransactions = {ctor: 'AllTransactions'};
var _ryan_senn$stellar_elm_demo$Endpoints$PaymentsForTransaction = {ctor: 'PaymentsForTransaction'};
var _ryan_senn$stellar_elm_demo$Endpoints$PaymentsForLedger = {ctor: 'PaymentsForLedger'};
var _ryan_senn$stellar_elm_demo$Endpoints$PaymentsForAccount = {ctor: 'PaymentsForAccount'};
var _ryan_senn$stellar_elm_demo$Endpoints$AllPayments = {ctor: 'AllPayments'};
var _ryan_senn$stellar_elm_demo$Endpoints$FindPaymentPaths = {ctor: 'FindPaymentPaths'};
var _ryan_senn$stellar_elm_demo$Endpoints$OrderbookDetails = {ctor: 'OrderbookDetails'};
var _ryan_senn$stellar_elm_demo$Endpoints$OperationDetails = {ctor: 'OperationDetails'};
var _ryan_senn$stellar_elm_demo$Endpoints$OperationsForTransaction = {ctor: 'OperationsForTransaction'};
var _ryan_senn$stellar_elm_demo$Endpoints$OperationsForLedger = {ctor: 'OperationsForLedger'};
var _ryan_senn$stellar_elm_demo$Endpoints$OperationsForAccount = {ctor: 'OperationsForAccount'};
var _ryan_senn$stellar_elm_demo$Endpoints$AllOperations = {ctor: 'AllOperations'};
var _ryan_senn$stellar_elm_demo$Endpoints$OffersForAccount = {ctor: 'OffersForAccount'};
var _ryan_senn$stellar_elm_demo$Endpoints$LedgerDetails = {ctor: 'LedgerDetails'};
var _ryan_senn$stellar_elm_demo$Endpoints$AllLedgers = {ctor: 'AllLedgers'};
var _ryan_senn$stellar_elm_demo$Endpoints$EffectsForTransaction = {ctor: 'EffectsForTransaction'};
var _ryan_senn$stellar_elm_demo$Endpoints$EffectsForOperation = {ctor: 'EffectsForOperation'};
var _ryan_senn$stellar_elm_demo$Endpoints$EffectsForLedger = {ctor: 'EffectsForLedger'};
var _ryan_senn$stellar_elm_demo$Endpoints$EffectsForAccount = {ctor: 'EffectsForAccount'};
var _ryan_senn$stellar_elm_demo$Endpoints$AllEffects = {ctor: 'AllEffects'};
var _ryan_senn$stellar_elm_demo$Endpoints$DataForAccount = {ctor: 'DataForAccount'};
var _ryan_senn$stellar_elm_demo$Endpoints$AllAssets = {ctor: 'AllAssets'};
var _ryan_senn$stellar_elm_demo$Endpoints$AccountDetails = {ctor: 'AccountDetails'};
var _ryan_senn$stellar_elm_demo$Endpoints$asList = {
	ctor: '::',
	_0: _ryan_senn$stellar_elm_demo$Endpoints$AccountDetails,
	_1: {
		ctor: '::',
		_0: _ryan_senn$stellar_elm_demo$Endpoints$AllAssets,
		_1: {
			ctor: '::',
			_0: _ryan_senn$stellar_elm_demo$Endpoints$DataForAccount,
			_1: {
				ctor: '::',
				_0: _ryan_senn$stellar_elm_demo$Endpoints$AllEffects,
				_1: {
					ctor: '::',
					_0: _ryan_senn$stellar_elm_demo$Endpoints$EffectsForAccount,
					_1: {
						ctor: '::',
						_0: _ryan_senn$stellar_elm_demo$Endpoints$EffectsForLedger,
						_1: {
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints$EffectsForOperation,
							_1: {
								ctor: '::',
								_0: _ryan_senn$stellar_elm_demo$Endpoints$EffectsForTransaction,
								_1: {
									ctor: '::',
									_0: _ryan_senn$stellar_elm_demo$Endpoints$AllLedgers,
									_1: {
										ctor: '::',
										_0: _ryan_senn$stellar_elm_demo$Endpoints$LedgerDetails,
										_1: {
											ctor: '::',
											_0: _ryan_senn$stellar_elm_demo$Endpoints$OffersForAccount,
											_1: {
												ctor: '::',
												_0: _ryan_senn$stellar_elm_demo$Endpoints$AllOperations,
												_1: {
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints$OperationsForAccount,
													_1: {
														ctor: '::',
														_0: _ryan_senn$stellar_elm_demo$Endpoints$OperationsForLedger,
														_1: {
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints$OperationsForTransaction,
															_1: {
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints$OperationDetails,
																_1: {
																	ctor: '::',
																	_0: _ryan_senn$stellar_elm_demo$Endpoints$OrderbookDetails,
																	_1: {
																		ctor: '::',
																		_0: _ryan_senn$stellar_elm_demo$Endpoints$FindPaymentPaths,
																		_1: {
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints$AllPayments,
																			_1: {
																				ctor: '::',
																				_0: _ryan_senn$stellar_elm_demo$Endpoints$PaymentsForAccount,
																				_1: {
																					ctor: '::',
																					_0: _ryan_senn$stellar_elm_demo$Endpoints$PaymentsForLedger,
																					_1: {
																						ctor: '::',
																						_0: _ryan_senn$stellar_elm_demo$Endpoints$PaymentsForTransaction,
																						_1: {
																							ctor: '::',
																							_0: _ryan_senn$stellar_elm_demo$Endpoints$AllTransactions,
																							_1: {
																								ctor: '::',
																								_0: _ryan_senn$stellar_elm_demo$Endpoints$PostTransaction,
																								_1: {
																									ctor: '::',
																									_0: _ryan_senn$stellar_elm_demo$Endpoints$TransactionsForAccount,
																									_1: {
																										ctor: '::',
																										_0: _ryan_senn$stellar_elm_demo$Endpoints$TransactionsForLedger,
																										_1: {
																											ctor: '::',
																											_0: _ryan_senn$stellar_elm_demo$Endpoints$TransactionDetails,
																											_1: {ctor: '[]'}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
};

var _ryan_senn$stellar_elm_sdk$Stellar_PublicKey$decoder = _elm_lang$core$Json_Decode$string;

var _ryan_senn$stellar_elm_sdk$Stellar_Endpoint$decoder = _elm_lang$core$Json_Decode$string;

var _ryan_senn$stellar_elm_sdk$Stellar_Thresholds$Thresholds = F3(
	function (a, b, c) {
		return {low: a, med: b, high: c};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Thresholds$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'high_threshold',
	_elm_lang$core$Json_Decode$int,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'med_threshold',
		_elm_lang$core$Json_Decode$int,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'low_threshold',
			_elm_lang$core$Json_Decode$int,
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Thresholds$Thresholds))));

var _ryan_senn$stellar_elm_sdk$Stellar_Flags$Flags = F2(
	function (a, b) {
		return {authRequired: a, authRevocable: b};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Flags$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'auth_revocable',
	_elm_lang$core$Json_Decode$bool,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'auth_required',
		_elm_lang$core$Json_Decode$bool,
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Flags$Flags)));

var _ryan_senn$stellar_elm_sdk$Stellar_AssetType$toString = function (assetType) {
	var _p0 = assetType;
	switch (_p0.ctor) {
		case 'Native':
			return 'native';
		case 'CreditAlphanum4':
			return 'credit_alphanum4';
		default:
			return 'credit_alphanum12';
	}
};
var _ryan_senn$stellar_elm_sdk$Stellar_AssetType$CreditAlphanum12 = {ctor: 'CreditAlphanum12'};
var _ryan_senn$stellar_elm_sdk$Stellar_AssetType$CreditAlphanum4 = {ctor: 'CreditAlphanum4'};
var _ryan_senn$stellar_elm_sdk$Stellar_AssetType$Native = {ctor: 'Native'};
var _ryan_senn$stellar_elm_sdk$Stellar_AssetType$stringToAssetType = function (string) {
	var _p1 = string;
	switch (_p1) {
		case 'native':
			return _elm_lang$core$Json_Decode$succeed(_ryan_senn$stellar_elm_sdk$Stellar_AssetType$Native);
		case 'credit_alphanum4':
			return _elm_lang$core$Json_Decode$succeed(_ryan_senn$stellar_elm_sdk$Stellar_AssetType$CreditAlphanum4);
		case 'credit_alphanum12':
			return _elm_lang$core$Json_Decode$succeed(_ryan_senn$stellar_elm_sdk$Stellar_AssetType$CreditAlphanum12);
		default:
			return _elm_lang$core$Json_Decode$fail('Could not decode AssetType');
	}
};
var _ryan_senn$stellar_elm_sdk$Stellar_AssetType$decoder = A2(_elm_lang$core$Json_Decode$andThen, _ryan_senn$stellar_elm_sdk$Stellar_AssetType$stringToAssetType, _elm_lang$core$Json_Decode$string);
var _ryan_senn$stellar_elm_sdk$Stellar_AssetType$asList = {
	ctor: '::',
	_0: _ryan_senn$stellar_elm_sdk$Stellar_AssetType$Native,
	_1: {
		ctor: '::',
		_0: _ryan_senn$stellar_elm_sdk$Stellar_AssetType$CreditAlphanum4,
		_1: {
			ctor: '::',
			_0: _ryan_senn$stellar_elm_sdk$Stellar_AssetType$CreditAlphanum12,
			_1: {ctor: '[]'}
		}
	}
};

var _ryan_senn$stellar_elm_sdk$Stellar_Balance$Balance = F2(
	function (a, b) {
		return {balance: a, assetType: b};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Balance$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'asset_type',
	_ryan_senn$stellar_elm_sdk$Stellar_AssetType$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'balance',
		_elm_lang$core$Json_Decode$string,
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Balance$Balance)));

var _ryan_senn$stellar_elm_sdk$Stellar_Signer$Signer = F4(
	function (a, b, c, d) {
		return {publicKey: a, weight: b, key: c, type_: d};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Signer$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'type',
	_elm_lang$core$Json_Decode$string,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'key',
		_ryan_senn$stellar_elm_sdk$Stellar_PublicKey$decoder,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'weight',
			_elm_lang$core$Json_Decode$int,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'public_key',
				_ryan_senn$stellar_elm_sdk$Stellar_PublicKey$decoder,
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Signer$Signer)))));

var _ryan_senn$stellar_elm_sdk$Stellar_Link$Link = F2(
	function (a, b) {
		return {href: a, templated: b};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Link$decoder = A4(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
	'templated',
	_elm_lang$core$Json_Decode$bool,
	false,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'href',
		_elm_lang$core$Json_Decode$string,
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Link$Link)));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Data$Data = function (a) {
	return {value: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Data$decoder = A4(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
	'value',
	_elm_lang$core$Json_Decode$maybe(_elm_lang$core$Json_Decode$string),
	_elm_lang$core$Maybe$Nothing,
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Data$Data));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Account$Account = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return {id: a, accountId: b, sequence: c, subentryCount: d, balances: e, thresholds: f, signers: g, data: h, flags: i, pagingToken: j, links: k};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Account$Links = F9(
	function (a, b, c, d, e, f, g, h, i) {
		return {toml: a, data: b, effects: c, offers: d, operations: e, payments: f, self: g, trades: h, transactions: i};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Account$linksDecoder = A4(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
	'transactions',
	_elm_lang$core$Json_Decode$maybe(_ryan_senn$stellar_elm_sdk$Stellar_Link$decoder),
	_elm_lang$core$Maybe$Nothing,
	A4(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
		'trades',
		_elm_lang$core$Json_Decode$maybe(_ryan_senn$stellar_elm_sdk$Stellar_Link$decoder),
		_elm_lang$core$Maybe$Nothing,
		A4(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
			'self',
			_elm_lang$core$Json_Decode$maybe(_ryan_senn$stellar_elm_sdk$Stellar_Link$decoder),
			_elm_lang$core$Maybe$Nothing,
			A4(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
				'payments',
				_elm_lang$core$Json_Decode$maybe(_ryan_senn$stellar_elm_sdk$Stellar_Link$decoder),
				_elm_lang$core$Maybe$Nothing,
				A4(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
					'operations',
					_elm_lang$core$Json_Decode$maybe(_ryan_senn$stellar_elm_sdk$Stellar_Link$decoder),
					_elm_lang$core$Maybe$Nothing,
					A4(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
						'offers',
						_elm_lang$core$Json_Decode$maybe(_ryan_senn$stellar_elm_sdk$Stellar_Link$decoder),
						_elm_lang$core$Maybe$Nothing,
						A4(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
							'effects',
							_elm_lang$core$Json_Decode$maybe(_ryan_senn$stellar_elm_sdk$Stellar_Link$decoder),
							_elm_lang$core$Maybe$Nothing,
							A4(
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
								'data',
								_elm_lang$core$Json_Decode$maybe(_ryan_senn$stellar_elm_sdk$Stellar_Link$decoder),
								_elm_lang$core$Maybe$Nothing,
								A4(
									_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
									'toml',
									_elm_lang$core$Json_Decode$maybe(_ryan_senn$stellar_elm_sdk$Stellar_Link$decoder),
									_elm_lang$core$Maybe$Nothing,
									_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Account$Links))))))))));
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Account$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Account$linksDecoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'paging_token',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'flags',
			_ryan_senn$stellar_elm_sdk$Stellar_Flags$decoder,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'data',
				_ryan_senn$stellar_elm_sdk$Stellar_Resources_Data$decoder,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'signers',
					_elm_lang$core$Json_Decode$list(_ryan_senn$stellar_elm_sdk$Stellar_Signer$decoder),
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'thresholds',
						_ryan_senn$stellar_elm_sdk$Stellar_Thresholds$decoder,
						A3(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
							'balances',
							_elm_lang$core$Json_Decode$list(_ryan_senn$stellar_elm_sdk$Stellar_Balance$decoder),
							A3(
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
								'subentry_count',
								_elm_lang$core$Json_Decode$int,
								A3(
									_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
									'sequence',
									_elm_lang$core$Json_Decode$string,
									A3(
										_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
										'account_id',
										_ryan_senn$stellar_elm_sdk$Stellar_PublicKey$decoder,
										A3(
											_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
											'id',
											_ryan_senn$stellar_elm_sdk$Stellar_PublicKey$decoder,
											_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Account$Account))))))))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Error$Error = F5(
	function (a, b, c, d, e) {
		return {type_: a, title: b, status: c, detail: d, instance: e};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Error$decoder = A4(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
	'instance',
	_elm_lang$core$Json_Decode$maybe(_elm_lang$core$Json_Decode$string),
	_elm_lang$core$Maybe$Nothing,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'detail',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'status',
			_elm_lang$core$Json_Decode$int,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'title',
				_elm_lang$core$Json_Decode$string,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'type',
					_elm_lang$core$Json_Decode$string,
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Error$Error))))));
var _ryan_senn$stellar_elm_sdk$Stellar_Error$flattenError = F2(
	function (httpError, ok) {
		var _p0 = httpError;
		if (_p0.ctor === 'BadStatus') {
			var _p1 = A2(_elm_lang$core$Json_Decode$decodeString, _ryan_senn$stellar_elm_sdk$Stellar_Error$decoder, _p0._0.body);
			if (_p1.ctor === 'Ok') {
				return _elm_lang$core$Result$Ok(
					ok(_p1._0));
			} else {
				return _elm_lang$core$Result$Err(httpError);
			}
		} else {
			return _elm_lang$core$Result$Err(httpError);
		}
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Error$Forbidden = function (a) {
	return {ctor: 'Forbidden', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Error$RateLimitExceeded = function (a) {
	return {ctor: 'RateLimitExceeded', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Error$ServerError = function (a) {
	return {ctor: 'ServerError', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Error$standardErrorFromStatus = function (error) {
	var _p2 = error.status;
	switch (_p2) {
		case 403:
			return _elm_lang$core$Json_Decode$succeed(
				_ryan_senn$stellar_elm_sdk$Stellar_Error$Forbidden(error));
		case 429:
			return _elm_lang$core$Json_Decode$succeed(
				_ryan_senn$stellar_elm_sdk$Stellar_Error$RateLimitExceeded(error));
		case 500:
			return _elm_lang$core$Json_Decode$succeed(
				_ryan_senn$stellar_elm_sdk$Stellar_Error$ServerError(error));
		default:
			return _elm_lang$core$Json_Decode$fail('Could not decode standard error');
	}
};
var _ryan_senn$stellar_elm_sdk$Stellar_Error$standardErrorDecoder = A2(_elm_lang$core$Json_Decode$andThen, _ryan_senn$stellar_elm_sdk$Stellar_Error$standardErrorFromStatus, _ryan_senn$stellar_elm_sdk$Stellar_Error$decoder);

var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AccountDetails$url = F2(
	function (endpoint, publicKey) {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			endpoint,
			A2(_elm_lang$core$Basics_ops['++'], '/accounts/', publicKey));
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AccountDetails$send = _lukewestby$elm_http_builder$HttpBuilder$send;
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AccountDetails$Success = function (a) {
	return {ctor: 'Success', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AccountDetails$Error = function (a) {
	return {ctor: 'Error', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AccountDetails$decoder = _elm_lang$core$Json_Decode$oneOf(
	{
		ctor: '::',
		_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AccountDetails$Error, _ryan_senn$stellar_elm_sdk$Stellar_Error$decoder),
		_1: {
			ctor: '::',
			_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AccountDetails$Success, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Account$decoder),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AccountDetails$requestBuilder = F2(
	function (endpoint, publicKey) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withExpect,
			_elm_lang$http$Http$expectJson(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AccountDetails$decoder),
			_lukewestby$elm_http_builder$HttpBuilder$get(
				A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AccountDetails$url, endpoint, publicKey)));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_AccountDetails_Model$initialSettings = {publicKey: _bluedogtraining$bdt_elm$Form_Input$init};
var _ryan_senn$stellar_elm_demo$Endpoints_AccountDetails_Model$initialModel = {settings: _ryan_senn$stellar_elm_demo$Endpoints_AccountDetails_Model$initialSettings, isLoading: false, response: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_AccountDetails_Model$Model = F3(
	function (a, b, c) {
		return {settings: a, isLoading: b, response: c};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_AccountDetails_Model$Settings = function (a) {
	return {publicKey: a};
};

var _ryan_senn$stellar_elm_demo$Endpoints_AccountDetails_Msg$Response = function (a) {
	return {ctor: 'Response', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_AccountDetails_Msg$Request = F2(
	function (a, b) {
		return {ctor: 'Request', _0: a, _1: b};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_AccountDetails_Msg$SettingsMsg = function (a) {
	return {ctor: 'SettingsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_AccountDetails_Msg$UpdatePublicKey = function (a) {
	return {ctor: 'UpdatePublicKey', _0: a};
};

var _ryan_senn$stellar_elm_demo$Routes$isActiveRoute = F2(
	function (mRoute, route) {
		return _elm_lang$core$Native_Utils.eq(
			mRoute,
			_elm_lang$core$Maybe$Just(route));
	});
var _ryan_senn$stellar_elm_demo$Routes$routeToString = function (page) {
	var _p0 = page;
	if (_p0.ctor === 'Endpoints') {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			'#/endpoints/',
			_elm_community$string_extra$String_Extra$dasherize(
				_elm_community$string_extra$String_Extra$decapitalize(
					_elm_lang$core$Basics$toString(_p0._0))));
	} else {
		return '#/';
	}
};
var _ryan_senn$stellar_elm_demo$Routes$href = function (route) {
	return _rtfeldman$elm_css$Html_Styled_Attributes$href(
		_ryan_senn$stellar_elm_demo$Routes$routeToString(route));
};
var _ryan_senn$stellar_elm_demo$Routes$modifyUrl = function (_p1) {
	return _elm_lang$navigation$Navigation$modifyUrl(
		_ryan_senn$stellar_elm_demo$Routes$routeToString(_p1));
};
var _ryan_senn$stellar_elm_demo$Routes$Endpoints = function (a) {
	return {ctor: 'Endpoints', _0: a};
};
var _ryan_senn$stellar_elm_demo$Routes$endpointParser = function (endpoint) {
	return A2(
		_evancz$url_parser$UrlParser$map,
		_ryan_senn$stellar_elm_demo$Routes$Endpoints(endpoint),
		A2(
			_evancz$url_parser$UrlParser_ops['</>'],
			_evancz$url_parser$UrlParser$s('endpoints'),
			_evancz$url_parser$UrlParser$s(
				_elm_community$string_extra$String_Extra$dasherize(
					_elm_community$string_extra$String_Extra$decapitalize(
						_elm_lang$core$Basics$toString(endpoint))))));
};
var _ryan_senn$stellar_elm_demo$Routes$Home = {ctor: 'Home'};
var _ryan_senn$stellar_elm_demo$Routes$routeParser = _evancz$url_parser$UrlParser$oneOf(
	A2(
		_elm_lang$core$Basics_ops['++'],
		{
			ctor: '::',
			_0: A2(
				_evancz$url_parser$UrlParser$map,
				_ryan_senn$stellar_elm_demo$Routes$Home,
				_evancz$url_parser$UrlParser$s('')),
			_1: {
				ctor: '::',
				_0: A2(
					_evancz$url_parser$UrlParser$map,
					_ryan_senn$stellar_elm_demo$Routes$Home,
					_evancz$url_parser$UrlParser$s('#/')),
				_1: {ctor: '[]'}
			}
		},
		A2(_elm_lang$core$List$map, _ryan_senn$stellar_elm_demo$Routes$endpointParser, _ryan_senn$stellar_elm_demo$Endpoints$asList)));
var _ryan_senn$stellar_elm_demo$Routes$fromLocation = function (location) {
	return _elm_lang$core$String$isEmpty(location.hash) ? _elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_demo$Routes$Home) : A2(_evancz$url_parser$UrlParser$parseHash, _ryan_senn$stellar_elm_demo$Routes$routeParser, location);
};

var _ryan_senn$stellar_elm_sdk$Stellar_Sorting$toString = function (_p0) {
	return _elm_lang$core$String$toLower(
		_elm_lang$core$Basics$toString(_p0));
};
var _ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc = {ctor: 'Desc'};
var _ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc = {ctor: 'Asc'};

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Page$Page = F2(
	function (a, b) {
		return {embedded_: a, links_: b};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Page$Embed = function (a) {
	return {records: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Page$embeddedDecoder = function (recordDecoder) {
	return A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'records',
		_elm_lang$core$Json_Decode$list(recordDecoder),
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Page$Embed));
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Page$Links = F3(
	function (a, b, c) {
		return {self: a, prev: b, next: c};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Page$linksDecoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'next',
	_ryan_senn$stellar_elm_sdk$Stellar_Link$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'prev',
		_ryan_senn$stellar_elm_sdk$Stellar_Link$decoder,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'self',
			_ryan_senn$stellar_elm_sdk$Stellar_Link$decoder,
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Page$Links))));
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Page$decoder = function (recordDecoder) {
	return A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'_links',
		_ryan_senn$stellar_elm_sdk$Stellar_Resources_Page$linksDecoder,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'_embedded',
			_ryan_senn$stellar_elm_sdk$Stellar_Resources_Page$embeddedDecoder(recordDecoder),
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Page$Page)));
};

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Asset$Asset = F8(
	function (a, b, c, d, e, f, g, h) {
		return {assetType: a, assetCode: b, assetIssuer: c, amount: d, numAccounts: e, flags: f, pagingToken: g, links_: h};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Asset$Links = function (a) {
	return {toml: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Asset$linksDecoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'toml',
	_ryan_senn$stellar_elm_sdk$Stellar_Link$decoder,
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Asset$Links));
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Asset$CreditAlphanum12 = {ctor: 'CreditAlphanum12'};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Asset$CreditAlphanum4 = {ctor: 'CreditAlphanum4'};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Asset$stringToAssetType = function (string) {
	var _p0 = string;
	switch (_p0) {
		case 'credit_alphanum4':
			return _elm_lang$core$Json_Decode$succeed(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Asset$CreditAlphanum4);
		case 'credit_alphanum12':
			return _elm_lang$core$Json_Decode$succeed(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Asset$CreditAlphanum12);
		default:
			return _elm_lang$core$Json_Decode$fail('Could not decode AssetType');
	}
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Asset$assetTypeDecoder = A2(_elm_lang$core$Json_Decode$andThen, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Asset$stringToAssetType, _elm_lang$core$Json_Decode$string);
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Asset$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Asset$linksDecoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'paging_token',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'flags',
			_ryan_senn$stellar_elm_sdk$Stellar_Flags$decoder,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'num_accounts',
				_elm_lang$core$Json_Decode$int,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'amount',
					_elm_lang$core$Json_Decode$string,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'asset_issuer',
						_elm_lang$core$Json_Decode$string,
						A3(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
							'asset_code',
							_elm_lang$core$Json_Decode$string,
							A3(
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
								'asset_type',
								_ryan_senn$stellar_elm_sdk$Stellar_Resources_Asset$assetTypeDecoder,
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Asset$Asset)))))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllAssets$url = function (endpoint) {
	return A2(_elm_lang$core$Basics_ops['++'], endpoint, '/assets');
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllAssets$setSorting = F2(
	function (sorting, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'order',
					_1: _ryan_senn$stellar_elm_sdk$Stellar_Sorting$toString(sorting)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllAssets$setLimit = F2(
	function (limit, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'limit',
					_1: _elm_lang$core$Basics$toString(limit)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllAssets$setCursor = F2(
	function (cursor, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'cursor', _1: cursor},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllAssets$setAssetIssuer = F2(
	function (publicKey, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'asset_issuer', _1: publicKey},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllAssets$setAssetCode = F2(
	function (assetCode, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'asset_code', _1: assetCode},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllAssets$send = _lukewestby$elm_http_builder$HttpBuilder$send;
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllAssets$Success = function (a) {
	return {ctor: 'Success', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllAssets$Error = function (a) {
	return {ctor: 'Error', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllAssets$decoder = _elm_lang$core$Json_Decode$oneOf(
	{
		ctor: '::',
		_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllAssets$Error, _ryan_senn$stellar_elm_sdk$Stellar_Error$decoder),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$core$Json_Decode$map,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllAssets$Success,
				_ryan_senn$stellar_elm_sdk$Stellar_Resources_Page$decoder(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Asset$decoder)),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllAssets$requestBuilder = function (endpoint) {
	return A2(
		_lukewestby$elm_http_builder$HttpBuilder$withExpect,
		_elm_lang$http$Http$expectJson(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllAssets$decoder),
		_lukewestby$elm_http_builder$HttpBuilder$get(
			_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllAssets$url(endpoint)));
};

var _ryan_senn$stellar_elm_demo$Endpoints_AllAssets_Model$initialSettings = {assetCode: _bluedogtraining$bdt_elm$Form_Input$init, assetIssuer: _bluedogtraining$bdt_elm$Form_Input$init, cursor: _bluedogtraining$bdt_elm$Form_Input$init, limit: _bluedogtraining$bdt_elm$Form_IntInput$init, sorting: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_AllAssets_Model$initialModel = {settings: _ryan_senn$stellar_elm_demo$Endpoints_AllAssets_Model$initialSettings, isLoading: false, response: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_AllAssets_Model$Model = F3(
	function (a, b, c) {
		return {settings: a, isLoading: b, response: c};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_AllAssets_Model$Settings = F5(
	function (a, b, c, d, e) {
		return {assetCode: a, assetIssuer: b, cursor: c, limit: d, sorting: e};
	});

var _ryan_senn$stellar_elm_demo$Endpoints_AllAssets_Msg$Response = function (a) {
	return {ctor: 'Response', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_AllAssets_Msg$Request = F2(
	function (a, b) {
		return {ctor: 'Request', _0: a, _1: b};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_AllAssets_Msg$SettingsMsg = function (a) {
	return {ctor: 'SettingsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_AllAssets_Msg$UpdateSorting = function (a) {
	return {ctor: 'UpdateSorting', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_AllAssets_Msg$UpdateLimit = function (a) {
	return {ctor: 'UpdateLimit', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_AllAssets_Msg$UpdateCursor = function (a) {
	return {ctor: 'UpdateCursor', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_AllAssets_Msg$UpdateAssetIssuer = function (a) {
	return {ctor: 'UpdateAssetIssuer', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_AllAssets_Msg$UpdateAssetCode = function (a) {
	return {ctor: 'UpdateAssetCode', _0: a};
};

var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_DataForAccount$dataKeyToString = function (_p0) {
	return _elm_community$string_extra$String_Extra$dasherize(
		_elm_community$string_extra$String_Extra$decapitalize(
			_elm_lang$core$Basics$toString(_p0)));
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_DataForAccount$url = F3(
	function (endpoint, publicKey, key) {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			endpoint,
			A2(
				_elm_lang$core$Basics_ops['++'],
				'/accounts/',
				A2(
					_elm_lang$core$Basics_ops['++'],
					publicKey,
					A2(
						_elm_lang$core$Basics_ops['++'],
						'/data/',
						_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_DataForAccount$dataKeyToString(key)))));
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_DataForAccount$send = _lukewestby$elm_http_builder$HttpBuilder$send;
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_DataForAccount$UserId = {ctor: 'UserId'};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_DataForAccount$dataKeyList = {
	ctor: '::',
	_0: _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_DataForAccount$UserId,
	_1: {ctor: '[]'}
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_DataForAccount$Success = function (a) {
	return {ctor: 'Success', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_DataForAccount$Error = function (a) {
	return {ctor: 'Error', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_DataForAccount$decoder = _elm_lang$core$Json_Decode$oneOf(
	{
		ctor: '::',
		_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_DataForAccount$Error, _ryan_senn$stellar_elm_sdk$Stellar_Error$decoder),
		_1: {
			ctor: '::',
			_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_DataForAccount$Success, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Data$decoder),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_DataForAccount$requestBuilder = F3(
	function (endpoint, publicKey, dataKey) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withExpect,
			_elm_lang$http$Http$expectJson(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_DataForAccount$decoder),
			_lukewestby$elm_http_builder$HttpBuilder$get(
				A3(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_DataForAccount$url, endpoint, publicKey, dataKey)));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_DataForAccount_Model$initialSettings = {
	publicKey: _bluedogtraining$bdt_elm$Form_Input$init,
	dataKey: _bluedogtraining$bdt_elm$Form_Select$init(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_DataForAccount$dataKeyList)
};
var _ryan_senn$stellar_elm_demo$Endpoints_DataForAccount_Model$initialModel = {settings: _ryan_senn$stellar_elm_demo$Endpoints_DataForAccount_Model$initialSettings, isLoading: false, response: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_DataForAccount_Model$Model = F3(
	function (a, b, c) {
		return {settings: a, isLoading: b, response: c};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_DataForAccount_Model$Settings = F2(
	function (a, b) {
		return {publicKey: a, dataKey: b};
	});

var _ryan_senn$stellar_elm_demo$Endpoints_DataForAccount_Msg$Response = function (a) {
	return {ctor: 'Response', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_DataForAccount_Msg$Request = F2(
	function (a, b) {
		return {ctor: 'Request', _0: a, _1: b};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_DataForAccount_Msg$SettingsMsg = function (a) {
	return {ctor: 'SettingsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_DataForAccount_Msg$UpdateDataKey = function (a) {
	return {ctor: 'UpdateDataKey', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_DataForAccount_Msg$UpdatePublicKey = function (a) {
	return {ctor: 'UpdatePublicKey', _0: a};
};

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_Links$Links = F3(
	function (a, b, c) {
		return {operation: a, succeeds: b, precedes: c};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_Links$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'precedes',
	_ryan_senn$stellar_elm_sdk$Stellar_Link$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'succeeds',
		_ryan_senn$stellar_elm_sdk$Stellar_Link$decoder,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'operation',
			_ryan_senn$stellar_elm_sdk$Stellar_Link$decoder,
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_Links$Links))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_AccountCreated$AccountCreated = F8(
	function (a, b, c, d, e, f, g, h) {
		return {id: a, pagingToken: b, type_: c, typeI: d, account: e, startingBalance: f, createdAt: g, links: h};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_AccountCreated$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_Links$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'created_at',
		_elm_community$json_extra$Json_Decode_Extra$date,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'starting_balance',
			_elm_lang$core$Json_Decode$string,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'account',
				_elm_lang$core$Json_Decode$string,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'type_i',
					_elm_lang$core$Json_Decode$int,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'type',
						_elm_lang$core$Json_Decode$string,
						A3(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
							'paging_token',
							_elm_lang$core$Json_Decode$string,
							A3(
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
								'id',
								_elm_lang$core$Json_Decode$string,
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_AccountCreated$AccountCreated)))))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_AccountCredited$AccountCredited = F9(
	function (a, b, c, d, e, f, g, h, i) {
		return {id: a, pagingToken: b, type_: c, typeI: d, account: e, assetType: f, amount: g, createdAt: h, links: i};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_AccountCredited$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_Links$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'created_at',
		_elm_community$json_extra$Json_Decode_Extra$date,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'amount',
			_elm_lang$core$Json_Decode$string,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'asset_type',
				_ryan_senn$stellar_elm_sdk$Stellar_AssetType$decoder,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'account',
					_elm_lang$core$Json_Decode$string,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'type_i',
						_elm_lang$core$Json_Decode$int,
						A3(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
							'type',
							_elm_lang$core$Json_Decode$string,
							A3(
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
								'paging_token',
								_elm_lang$core$Json_Decode$string,
								A3(
									_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
									'id',
									_elm_lang$core$Json_Decode$string,
									_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_AccountCredited$AccountCredited))))))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_AccountDebited$AccountDebited = F9(
	function (a, b, c, d, e, f, g, h, i) {
		return {id: a, pagingToken: b, type_: c, typeI: d, account: e, assetType: f, amount: g, createdAt: h, links: i};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_AccountDebited$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_Links$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'created_at',
		_elm_community$json_extra$Json_Decode_Extra$date,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'amount',
			_elm_lang$core$Json_Decode$string,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'asset_type',
				_ryan_senn$stellar_elm_sdk$Stellar_AssetType$decoder,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'account',
					_elm_lang$core$Json_Decode$string,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'type_i',
						_elm_lang$core$Json_Decode$int,
						A3(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
							'type',
							_elm_lang$core$Json_Decode$string,
							A3(
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
								'paging_token',
								_elm_lang$core$Json_Decode$string,
								A3(
									_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
									'id',
									_elm_lang$core$Json_Decode$string,
									_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_AccountDebited$AccountDebited))))))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_AccountFlagsUpdated$AccountFlagsUpdated = F8(
	function (a, b, c, d, e, f, g, h) {
		return {id: a, pagingToken: b, type_: c, typeI: d, account: e, authRequired: f, authRevokable: g, links: h};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_AccountFlagsUpdated$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_Links$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'auth_revokable_flag',
		_elm_lang$core$Json_Decode$bool,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'auth_required_flag',
			_elm_lang$core$Json_Decode$bool,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'account',
				_elm_lang$core$Json_Decode$string,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'type_i',
					_elm_lang$core$Json_Decode$int,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'type',
						_elm_lang$core$Json_Decode$string,
						A3(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
							'paging_token',
							_elm_lang$core$Json_Decode$string,
							A3(
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
								'id',
								_elm_lang$core$Json_Decode$string,
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_AccountFlagsUpdated$AccountFlagsUpdated)))))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_AccountHomeDomainUpdated$AccountHomeDomainUpdated = F7(
	function (a, b, c, d, e, f, g) {
		return {id: a, pagingToken: b, type_: c, typeI: d, account: e, homeDomain: f, links: g};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_AccountHomeDomainUpdated$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_Links$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'home_domain',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'account',
			_elm_lang$core$Json_Decode$string,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'type_i',
				_elm_lang$core$Json_Decode$int,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'type',
					_elm_lang$core$Json_Decode$string,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'paging_token',
						_elm_lang$core$Json_Decode$string,
						A3(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
							'id',
							_elm_lang$core$Json_Decode$string,
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_AccountHomeDomainUpdated$AccountHomeDomainUpdated))))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_AccountInflationDestinationUpdated$AccountInflationDestinationUpdated = F6(
	function (a, b, c, d, e, f) {
		return {id: a, pagingToken: b, type_: c, typeI: d, account: e, links: f};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_AccountInflationDestinationUpdated$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_Links$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'account',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'type_i',
			_elm_lang$core$Json_Decode$int,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'type',
				_elm_lang$core$Json_Decode$string,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'paging_token',
					_elm_lang$core$Json_Decode$string,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'id',
						_elm_lang$core$Json_Decode$string,
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_AccountInflationDestinationUpdated$AccountInflationDestinationUpdated)))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_AccountRemoved$AccountRemoved = F6(
	function (a, b, c, d, e, f) {
		return {id: a, pagingToken: b, type_: c, typeI: d, account: e, links: f};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_AccountRemoved$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_Links$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'account',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'type_i',
			_elm_lang$core$Json_Decode$int,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'type',
				_elm_lang$core$Json_Decode$string,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'paging_token',
					_elm_lang$core$Json_Decode$string,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'id',
						_elm_lang$core$Json_Decode$string,
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_AccountRemoved$AccountRemoved)))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_AccountThresholdsUpdated$AccountThresholdsUpdated = F9(
	function (a, b, c, d, e, f, g, h, i) {
		return {id: a, pagingToken: b, type_: c, typeI: d, account: e, lowThreshold: f, medThreshold: g, highThreshold: h, links: i};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_AccountThresholdsUpdated$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_Links$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'high_threshold',
		_elm_lang$core$Json_Decode$int,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'mid_threshold',
			_elm_lang$core$Json_Decode$int,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'low_threshold',
				_elm_lang$core$Json_Decode$int,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'account',
					_elm_lang$core$Json_Decode$string,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'type_i',
						_elm_lang$core$Json_Decode$int,
						A3(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
							'type',
							_elm_lang$core$Json_Decode$string,
							A3(
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
								'paging_token',
								_elm_lang$core$Json_Decode$string,
								A3(
									_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
									'id',
									_elm_lang$core$Json_Decode$string,
									_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_AccountThresholdsUpdated$AccountThresholdsUpdated))))))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_DataCreated$DataCreated = F6(
	function (a, b, c, d, e, f) {
		return {id: a, pagingToken: b, type_: c, typeI: d, account: e, links: f};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_DataCreated$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_Links$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'account',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'type_i',
			_elm_lang$core$Json_Decode$int,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'type',
				_elm_lang$core$Json_Decode$string,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'paging_token',
					_elm_lang$core$Json_Decode$string,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'id',
						_elm_lang$core$Json_Decode$string,
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_DataCreated$DataCreated)))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_DataRemoved$DataRemoved = F6(
	function (a, b, c, d, e, f) {
		return {id: a, pagingToken: b, type_: c, typeI: d, account: e, links: f};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_DataRemoved$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_Links$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'account',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'type_i',
			_elm_lang$core$Json_Decode$int,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'type',
				_elm_lang$core$Json_Decode$string,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'paging_token',
					_elm_lang$core$Json_Decode$string,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'id',
						_elm_lang$core$Json_Decode$string,
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_DataRemoved$DataRemoved)))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_DataUpdated$DataUpdated = F6(
	function (a, b, c, d, e, f) {
		return {id: a, pagingToken: b, type_: c, typeI: d, account: e, links: f};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_DataUpdated$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_Links$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'account',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'type_i',
			_elm_lang$core$Json_Decode$int,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'type',
				_elm_lang$core$Json_Decode$string,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'paging_token',
					_elm_lang$core$Json_Decode$string,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'id',
						_elm_lang$core$Json_Decode$string,
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_DataUpdated$DataUpdated)))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_OfferCreated$OfferCreated = F6(
	function (a, b, c, d, e, f) {
		return {id: a, pagingToken: b, type_: c, typeI: d, account: e, links: f};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_OfferCreated$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_Links$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'account',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'type_i',
			_elm_lang$core$Json_Decode$int,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'type',
				_elm_lang$core$Json_Decode$string,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'paging_token',
					_elm_lang$core$Json_Decode$string,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'id',
						_elm_lang$core$Json_Decode$string,
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_OfferCreated$OfferCreated)))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_OfferRemoved$OfferRemoved = F6(
	function (a, b, c, d, e, f) {
		return {id: a, pagingToken: b, type_: c, typeI: d, account: e, links: f};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_OfferRemoved$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_Links$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'account',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'type_i',
			_elm_lang$core$Json_Decode$int,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'type',
				_elm_lang$core$Json_Decode$string,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'paging_token',
					_elm_lang$core$Json_Decode$string,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'id',
						_elm_lang$core$Json_Decode$string,
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_OfferRemoved$OfferRemoved)))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_OfferUpdated$OfferUpdated = F6(
	function (a, b, c, d, e, f) {
		return {id: a, pagingToken: b, type_: c, typeI: d, account: e, links: f};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_OfferUpdated$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_Links$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'account',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'type_i',
			_elm_lang$core$Json_Decode$int,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'type',
				_elm_lang$core$Json_Decode$string,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'paging_token',
					_elm_lang$core$Json_Decode$string,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'id',
						_elm_lang$core$Json_Decode$string,
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_OfferUpdated$OfferUpdated)))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_SignerCreated$SignerCreated = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return {id: a, pagingToken: b, type_: c, typeI: d, account: e, weight: f, publicKey: g, key: h, createdAt: i, links: j};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_SignerCreated$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_Links$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'created_at',
		_elm_community$json_extra$Json_Decode_Extra$date,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'key',
			_elm_lang$core$Json_Decode$string,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'public_key',
				_ryan_senn$stellar_elm_sdk$Stellar_PublicKey$decoder,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'weight',
					_elm_lang$core$Json_Decode$int,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'account',
						_elm_lang$core$Json_Decode$string,
						A3(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
							'type_i',
							_elm_lang$core$Json_Decode$int,
							A3(
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
								'type',
								_elm_lang$core$Json_Decode$string,
								A3(
									_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
									'paging_token',
									_elm_lang$core$Json_Decode$string,
									A3(
										_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
										'id',
										_elm_lang$core$Json_Decode$string,
										_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_SignerCreated$SignerCreated)))))))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_SignerRemoved$SignerRemoved = F9(
	function (a, b, c, d, e, f, g, h, i) {
		return {id: a, pagingToken: b, type_: c, typeI: d, account: e, weight: f, publicKey: g, key: h, links: i};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_SignerRemoved$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_Links$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'key',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'public_key',
			_ryan_senn$stellar_elm_sdk$Stellar_PublicKey$decoder,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'weight',
				_elm_lang$core$Json_Decode$int,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'account',
					_elm_lang$core$Json_Decode$string,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'type_i',
						_elm_lang$core$Json_Decode$int,
						A3(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
							'type',
							_elm_lang$core$Json_Decode$string,
							A3(
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
								'paging_token',
								_elm_lang$core$Json_Decode$string,
								A3(
									_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
									'id',
									_elm_lang$core$Json_Decode$string,
									_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_SignerRemoved$SignerRemoved))))))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_Trade$Trade = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return function (m) {
													return function (n) {
														return function (o) {
															return function (p) {
																return {id: a, pagingToken: b, type_: c, typeI: d, account: e, seller: f, offerId: g, soldAmount: h, soldAssetType: i, soldAssetCode: j, soldAssetIssuer: k, boughtAmount: l, boughtAssetType: m, boughtAssetCode: n, boughtAssetIssuer: o, links: p};
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_Trade$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_Links$decoder,
	A4(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
		'bought_asset_issuer',
		_elm_lang$core$Json_Decode$maybe(_elm_lang$core$Json_Decode$string),
		_elm_lang$core$Maybe$Nothing,
		A4(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
			'bought_asset_code',
			_elm_lang$core$Json_Decode$maybe(_elm_lang$core$Json_Decode$string),
			_elm_lang$core$Maybe$Nothing,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'bought_asset_type',
				_ryan_senn$stellar_elm_sdk$Stellar_AssetType$decoder,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'bought_amount',
					_elm_lang$core$Json_Decode$string,
					A4(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
						'sold_asset_issuer',
						_elm_lang$core$Json_Decode$maybe(_elm_lang$core$Json_Decode$string),
						_elm_lang$core$Maybe$Nothing,
						A4(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
							'sold_asset_code',
							_elm_lang$core$Json_Decode$maybe(_elm_lang$core$Json_Decode$string),
							_elm_lang$core$Maybe$Nothing,
							A3(
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
								'sold_asset_type',
								_ryan_senn$stellar_elm_sdk$Stellar_AssetType$decoder,
								A3(
									_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
									'sold_amount',
									_elm_lang$core$Json_Decode$string,
									A3(
										_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
										'offer_id',
										_elm_lang$core$Json_Decode$int,
										A3(
											_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
											'seller',
											_elm_lang$core$Json_Decode$string,
											A3(
												_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
												'account',
												_elm_lang$core$Json_Decode$string,
												A3(
													_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
													'type_i',
													_elm_lang$core$Json_Decode$int,
													A3(
														_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
														'type',
														_elm_lang$core$Json_Decode$string,
														A3(
															_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
															'paging_token',
															_elm_lang$core$Json_Decode$string,
															A3(
																_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
																'id',
																_elm_lang$core$Json_Decode$string,
																_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_Trade$Trade)))))))))))))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_TrustlineAuthorised$TrustlineAuthorised = F9(
	function (a, b, c, d, e, f, g, h, i) {
		return {id: a, pagingToken: b, type_: c, typeI: d, account: e, trustor: f, assetType: g, assetCode: h, links: i};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_TrustlineAuthorised$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_Links$decoder,
	A4(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
		'asset_code',
		_elm_lang$core$Json_Decode$maybe(_elm_lang$core$Json_Decode$string),
		_elm_lang$core$Maybe$Nothing,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'asset_type',
			_ryan_senn$stellar_elm_sdk$Stellar_AssetType$decoder,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'trustor',
				_elm_lang$core$Json_Decode$string,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'account',
					_elm_lang$core$Json_Decode$string,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'type_i',
						_elm_lang$core$Json_Decode$int,
						A3(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
							'type',
							_elm_lang$core$Json_Decode$string,
							A3(
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
								'paging_token',
								_elm_lang$core$Json_Decode$string,
								A3(
									_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
									'id',
									_elm_lang$core$Json_Decode$string,
									_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_TrustlineAuthorised$TrustlineAuthorised))))))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_TrustlineCreated$TrustlineCreated = F8(
	function (a, b, c, d, e, f, g, h) {
		return {id: a, pagingToken: b, type_: c, typeI: d, account: e, assetType: f, limit: g, links: h};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_TrustlineCreated$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_Links$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'limit',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'asset',
			_ryan_senn$stellar_elm_sdk$Stellar_AssetType$decoder,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'account',
				_elm_lang$core$Json_Decode$string,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'type_i',
					_elm_lang$core$Json_Decode$int,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'type',
						_elm_lang$core$Json_Decode$string,
						A3(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
							'paging_token',
							_elm_lang$core$Json_Decode$string,
							A3(
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
								'id',
								_elm_lang$core$Json_Decode$string,
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_TrustlineCreated$TrustlineCreated)))))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_TrustlineDeauthorised$TrustlineDeauthorised = F9(
	function (a, b, c, d, e, f, g, h, i) {
		return {id: a, pagingToken: b, type_: c, typeI: d, account: e, trustor: f, assetType: g, assetCode: h, links: i};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_TrustlineDeauthorised$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_Links$decoder,
	A4(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
		'asset_code',
		_elm_lang$core$Json_Decode$maybe(_elm_lang$core$Json_Decode$string),
		_elm_lang$core$Maybe$Nothing,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'asset_type',
			_ryan_senn$stellar_elm_sdk$Stellar_AssetType$decoder,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'trustor',
				_elm_lang$core$Json_Decode$string,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'account',
					_elm_lang$core$Json_Decode$string,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'type_i',
						_elm_lang$core$Json_Decode$int,
						A3(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
							'type',
							_elm_lang$core$Json_Decode$string,
							A3(
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
								'paging_token',
								_elm_lang$core$Json_Decode$string,
								A3(
									_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
									'id',
									_elm_lang$core$Json_Decode$string,
									_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_TrustlineDeauthorised$TrustlineDeauthorised))))))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_TrustlineRemoved$TrustlineRemoved = F8(
	function (a, b, c, d, e, f, g, h) {
		return {id: a, pagingToken: b, type_: c, typeI: d, account: e, assetType: f, limit: g, links: h};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_TrustlineRemoved$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_Links$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'limit',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'asset',
			_ryan_senn$stellar_elm_sdk$Stellar_AssetType$decoder,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'account',
				_elm_lang$core$Json_Decode$string,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'type_i',
					_elm_lang$core$Json_Decode$int,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'type',
						_elm_lang$core$Json_Decode$string,
						A3(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
							'paging_token',
							_elm_lang$core$Json_Decode$string,
							A3(
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
								'id',
								_elm_lang$core$Json_Decode$string,
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_TrustlineRemoved$TrustlineRemoved)))))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_TrustlineUpdated$TrustlineUpdated = F8(
	function (a, b, c, d, e, f, g, h) {
		return {id: a, pagingToken: b, type_: c, typeI: d, account: e, assetType: f, limit: g, links: h};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_TrustlineUpdated$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_Links$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'limit',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'asset',
			_ryan_senn$stellar_elm_sdk$Stellar_AssetType$decoder,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'account',
				_elm_lang$core$Json_Decode$string,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'type_i',
					_elm_lang$core$Json_Decode$int,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'type',
						_elm_lang$core$Json_Decode$string,
						A3(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
							'paging_token',
							_elm_lang$core$Json_Decode$string,
							A3(
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
								'id',
								_elm_lang$core$Json_Decode$string,
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_TrustlineUpdated$TrustlineUpdated)))))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$TrustlineUpdated = function (a) {
	return {ctor: 'TrustlineUpdated', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$TrustlineRemoved = function (a) {
	return {ctor: 'TrustlineRemoved', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$TrustlineDeauthorised = function (a) {
	return {ctor: 'TrustlineDeauthorised', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$TrustlineCreated = function (a) {
	return {ctor: 'TrustlineCreated', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$TrustlineAuthorised = function (a) {
	return {ctor: 'TrustlineAuthorised', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$Trade = function (a) {
	return {ctor: 'Trade', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$SignerRemoved = function (a) {
	return {ctor: 'SignerRemoved', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$SignerCreated = function (a) {
	return {ctor: 'SignerCreated', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$OfferUpdated = function (a) {
	return {ctor: 'OfferUpdated', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$OfferRemoved = function (a) {
	return {ctor: 'OfferRemoved', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$OfferCreated = function (a) {
	return {ctor: 'OfferCreated', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$DataUpdated = function (a) {
	return {ctor: 'DataUpdated', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$DataRemoved = function (a) {
	return {ctor: 'DataRemoved', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$DataCreated = function (a) {
	return {ctor: 'DataCreated', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$AccountThresholdsUpdated = function (a) {
	return {ctor: 'AccountThresholdsUpdated', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$AccountRemoved = function (a) {
	return {ctor: 'AccountRemoved', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$AccountInflationDestinationUpdated = function (a) {
	return {ctor: 'AccountInflationDestinationUpdated', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$AccountHomeDomainUpdated = function (a) {
	return {ctor: 'AccountHomeDomainUpdated', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$AccountFlagsUpdated = function (a) {
	return {ctor: 'AccountFlagsUpdated', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$AccountDebited = function (a) {
	return {ctor: 'AccountDebited', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$AccountCredited = function (a) {
	return {ctor: 'AccountCredited', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$AccountCreated = function (a) {
	return {ctor: 'AccountCreated', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$effectFromType = function (type_) {
	var _p0 = type_;
	switch (_p0) {
		case 'account_created':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$AccountCreated, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_AccountCreated$decoder);
		case 'account_credited':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$AccountCredited, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_AccountCredited$decoder);
		case 'account_debited':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$AccountDebited, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_AccountDebited$decoder);
		case 'account_flags_updated':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$AccountFlagsUpdated, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_AccountFlagsUpdated$decoder);
		case 'account_home_domain_updated':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$AccountHomeDomainUpdated, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_AccountHomeDomainUpdated$decoder);
		case 'account_inflation_destination_updated':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$AccountInflationDestinationUpdated, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_AccountInflationDestinationUpdated$decoder);
		case 'account_removed':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$AccountRemoved, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_AccountRemoved$decoder);
		case 'account_thresholds_updated':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$AccountThresholdsUpdated, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_AccountThresholdsUpdated$decoder);
		case 'data_created':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$DataCreated, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_DataCreated$decoder);
		case 'data_removed':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$DataRemoved, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_DataRemoved$decoder);
		case 'data_updated':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$DataUpdated, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_DataUpdated$decoder);
		case 'offer_created':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$OfferCreated, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_OfferCreated$decoder);
		case 'offer_removed':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$OfferRemoved, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_OfferRemoved$decoder);
		case 'offer_updated':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$OfferUpdated, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_OfferUpdated$decoder);
		case 'signer_created':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$SignerCreated, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_SignerCreated$decoder);
		case 'signer_removed':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$SignerRemoved, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_SignerRemoved$decoder);
		case 'trade':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$Trade, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_Trade$decoder);
		case 'trustline_authorised':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$TrustlineAuthorised, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_TrustlineAuthorised$decoder);
		case 'trustline_created':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$TrustlineCreated, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_TrustlineCreated$decoder);
		case 'trustline_deauthorised':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$TrustlineDeauthorised, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_TrustlineDeauthorised$decoder);
		case 'trustline_removed':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$TrustlineRemoved, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_TrustlineRemoved$decoder);
		case 'trustline_updated':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$TrustlineUpdated, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effects_TrustlineUpdated$decoder);
		default:
			return _elm_lang$core$Json_Decode$fail('Could not decode Effect');
	}
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$decoder = A2(
	_elm_lang$core$Json_Decode$andThen,
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$effectFromType,
	A2(_elm_lang$core$Json_Decode$field, 'type', _elm_lang$core$Json_Decode$string));

var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllEffects$url = function (endpoint) {
	return A2(_elm_lang$core$Basics_ops['++'], endpoint, '/effects');
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllEffects$setSorting = F2(
	function (sorting, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'order',
					_1: _ryan_senn$stellar_elm_sdk$Stellar_Sorting$toString(sorting)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllEffects$setLimit = F2(
	function (limit, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'limit',
					_1: _elm_lang$core$Basics$toString(limit)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllEffects$setCursor = F2(
	function (cursor, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'cursor', _1: cursor},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllEffects$send = _lukewestby$elm_http_builder$HttpBuilder$send;
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllEffects$Success = function (a) {
	return {ctor: 'Success', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllEffects$Error = function (a) {
	return {ctor: 'Error', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllEffects$decoder = _elm_lang$core$Json_Decode$oneOf(
	{
		ctor: '::',
		_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllEffects$Error, _ryan_senn$stellar_elm_sdk$Stellar_Error$decoder),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$core$Json_Decode$map,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllEffects$Success,
				_ryan_senn$stellar_elm_sdk$Stellar_Resources_Page$decoder(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$decoder)),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllEffects$requestBuilder = function (endpoint) {
	return A2(
		_lukewestby$elm_http_builder$HttpBuilder$withExpect,
		_elm_lang$http$Http$expectJson(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllEffects$decoder),
		_lukewestby$elm_http_builder$HttpBuilder$get(
			_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllEffects$url(endpoint)));
};

var _ryan_senn$stellar_elm_demo$Endpoints_AllEffects_Model$initialSettings = {cursor: _bluedogtraining$bdt_elm$Form_Input$init, limit: _bluedogtraining$bdt_elm$Form_IntInput$init, sorting: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_AllEffects_Model$initialModel = {settings: _ryan_senn$stellar_elm_demo$Endpoints_AllEffects_Model$initialSettings, isLoading: false, response: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_AllEffects_Model$Model = F3(
	function (a, b, c) {
		return {settings: a, isLoading: b, response: c};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_AllEffects_Model$Settings = F3(
	function (a, b, c) {
		return {cursor: a, limit: b, sorting: c};
	});

var _ryan_senn$stellar_elm_demo$Endpoints_AllEffects_Msg$Response = function (a) {
	return {ctor: 'Response', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_AllEffects_Msg$Request = F2(
	function (a, b) {
		return {ctor: 'Request', _0: a, _1: b};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_AllEffects_Msg$SettingsMsg = function (a) {
	return {ctor: 'SettingsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_AllEffects_Msg$UpdateSorting = function (a) {
	return {ctor: 'UpdateSorting', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_AllEffects_Msg$UpdateLimit = function (a) {
	return {ctor: 'UpdateLimit', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_AllEffects_Msg$UpdateCursor = function (a) {
	return {ctor: 'UpdateCursor', _0: a};
};

var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForAccount$url = F2(
	function (endpoint, publicKey) {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			endpoint,
			A2(
				_elm_lang$core$Basics_ops['++'],
				'/accounts/',
				A2(_elm_lang$core$Basics_ops['++'], publicKey, '/effects')));
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForAccount$setSorting = F2(
	function (sorting, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'order',
					_1: _ryan_senn$stellar_elm_sdk$Stellar_Sorting$toString(sorting)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForAccount$setLimit = F2(
	function (limit, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'limit',
					_1: _elm_lang$core$Basics$toString(limit)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForAccount$setCursor = F2(
	function (cursor, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'cursor', _1: cursor},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForAccount$send = _lukewestby$elm_http_builder$HttpBuilder$send;
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForAccount$Success = function (a) {
	return {ctor: 'Success', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForAccount$Error = function (a) {
	return {ctor: 'Error', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForAccount$decoder = _elm_lang$core$Json_Decode$oneOf(
	{
		ctor: '::',
		_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForAccount$Error, _ryan_senn$stellar_elm_sdk$Stellar_Error$decoder),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$core$Json_Decode$map,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForAccount$Success,
				_ryan_senn$stellar_elm_sdk$Stellar_Resources_Page$decoder(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$decoder)),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForAccount$requestBuilder = F2(
	function (endpoint, publicKey) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withExpect,
			_elm_lang$http$Http$expectJson(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForAccount$decoder),
			_lukewestby$elm_http_builder$HttpBuilder$get(
				A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForAccount$url, endpoint, publicKey)));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_Model$initialSettings = {account: _bluedogtraining$bdt_elm$Form_Input$init, cursor: _bluedogtraining$bdt_elm$Form_Input$init, limit: _bluedogtraining$bdt_elm$Form_IntInput$init, sorting: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_Model$initialModel = {settings: _ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_Model$initialSettings, isLoading: false, response: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_Model$Model = F3(
	function (a, b, c) {
		return {settings: a, isLoading: b, response: c};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_Model$Settings = F4(
	function (a, b, c, d) {
		return {account: a, cursor: b, limit: c, sorting: d};
	});

var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_Msg$Response = function (a) {
	return {ctor: 'Response', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_Msg$Request = F2(
	function (a, b) {
		return {ctor: 'Request', _0: a, _1: b};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_Msg$SettingsMsg = function (a) {
	return {ctor: 'SettingsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_Msg$UpdateSorting = function (a) {
	return {ctor: 'UpdateSorting', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_Msg$UpdateLimit = function (a) {
	return {ctor: 'UpdateLimit', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_Msg$UpdateCursor = function (a) {
	return {ctor: 'UpdateCursor', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_Msg$UpdateAccount = function (a) {
	return {ctor: 'UpdateAccount', _0: a};
};

var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForLedger$url = F2(
	function (endpoint, ledgerId) {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			endpoint,
			A2(
				_elm_lang$core$Basics_ops['++'],
				'/ledgers/',
				A2(
					_elm_lang$core$Basics_ops['++'],
					_elm_lang$core$Basics$toString(ledgerId),
					'/effects')));
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForLedger$setSorting = F2(
	function (sorting, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'order',
					_1: _ryan_senn$stellar_elm_sdk$Stellar_Sorting$toString(sorting)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForLedger$setLimit = F2(
	function (limit, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'limit',
					_1: _elm_lang$core$Basics$toString(limit)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForLedger$setCursor = F2(
	function (cursor, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'cursor', _1: cursor},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForLedger$send = _lukewestby$elm_http_builder$HttpBuilder$send;
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForLedger$Success = function (a) {
	return {ctor: 'Success', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForLedger$Error = function (a) {
	return {ctor: 'Error', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForLedger$decoder = _elm_lang$core$Json_Decode$oneOf(
	{
		ctor: '::',
		_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForLedger$Error, _ryan_senn$stellar_elm_sdk$Stellar_Error$decoder),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$core$Json_Decode$map,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForLedger$Success,
				_ryan_senn$stellar_elm_sdk$Stellar_Resources_Page$decoder(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$decoder)),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForLedger$requestBuilder = F2(
	function (endpoint, ledgerId) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withExpect,
			_elm_lang$http$Http$expectJson(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForLedger$decoder),
			_lukewestby$elm_http_builder$HttpBuilder$get(
				A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForLedger$url, endpoint, ledgerId)));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_Model$initialSettings = {ledgerId: _bluedogtraining$bdt_elm$Form_IntInput$init, cursor: _bluedogtraining$bdt_elm$Form_Input$init, limit: _bluedogtraining$bdt_elm$Form_IntInput$init, sorting: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_Model$initialModel = {settings: _ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_Model$initialSettings, isLoading: false, response: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_Model$Model = F3(
	function (a, b, c) {
		return {settings: a, isLoading: b, response: c};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_Model$Settings = F4(
	function (a, b, c, d) {
		return {ledgerId: a, cursor: b, limit: c, sorting: d};
	});

var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_Msg$Response = function (a) {
	return {ctor: 'Response', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_Msg$Request = F2(
	function (a, b) {
		return {ctor: 'Request', _0: a, _1: b};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_Msg$SettingsMsg = function (a) {
	return {ctor: 'SettingsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_Msg$UpdateSorting = function (a) {
	return {ctor: 'UpdateSorting', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_Msg$UpdateLimit = function (a) {
	return {ctor: 'UpdateLimit', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_Msg$UpdateCursor = function (a) {
	return {ctor: 'UpdateCursor', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_Msg$UpdateLedgerId = function (a) {
	return {ctor: 'UpdateLedgerId', _0: a};
};

var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForOperation$url = F2(
	function (endpoint, operationId) {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			endpoint,
			A2(
				_elm_lang$core$Basics_ops['++'],
				'/operations/',
				A2(
					_elm_lang$core$Basics_ops['++'],
					_elm_lang$core$Basics$toString(operationId),
					'/effects')));
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForOperation$setSorting = F2(
	function (sorting, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'order',
					_1: _ryan_senn$stellar_elm_sdk$Stellar_Sorting$toString(sorting)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForOperation$setLimit = F2(
	function (limit, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'limit',
					_1: _elm_lang$core$Basics$toString(limit)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForOperation$setCursor = F2(
	function (cursor, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'cursor', _1: cursor},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForOperation$send = _lukewestby$elm_http_builder$HttpBuilder$send;
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForOperation$Success = function (a) {
	return {ctor: 'Success', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForOperation$Error = function (a) {
	return {ctor: 'Error', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForOperation$decoder = _elm_lang$core$Json_Decode$oneOf(
	{
		ctor: '::',
		_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForOperation$Error, _ryan_senn$stellar_elm_sdk$Stellar_Error$decoder),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$core$Json_Decode$map,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForOperation$Success,
				_ryan_senn$stellar_elm_sdk$Stellar_Resources_Page$decoder(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$decoder)),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForOperation$requestBuilder = F2(
	function (endpoint, operationId) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withExpect,
			_elm_lang$http$Http$expectJson(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForOperation$decoder),
			_lukewestby$elm_http_builder$HttpBuilder$get(
				A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForOperation$url, endpoint, operationId)));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_Model$initialSettings = {operationId: _bluedogtraining$bdt_elm$Form_IntInput$init, cursor: _bluedogtraining$bdt_elm$Form_Input$init, limit: _bluedogtraining$bdt_elm$Form_IntInput$init, sorting: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_Model$initialModel = {settings: _ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_Model$initialSettings, isLoading: false, response: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_Model$Model = F3(
	function (a, b, c) {
		return {settings: a, isLoading: b, response: c};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_Model$Settings = F4(
	function (a, b, c, d) {
		return {operationId: a, cursor: b, limit: c, sorting: d};
	});

var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_Msg$Response = function (a) {
	return {ctor: 'Response', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_Msg$Request = F2(
	function (a, b) {
		return {ctor: 'Request', _0: a, _1: b};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_Msg$SettingsMsg = function (a) {
	return {ctor: 'SettingsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_Msg$UpdateSorting = function (a) {
	return {ctor: 'UpdateSorting', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_Msg$UpdateLimit = function (a) {
	return {ctor: 'UpdateLimit', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_Msg$UpdateCursor = function (a) {
	return {ctor: 'UpdateCursor', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_Msg$UpdateOperationId = function (a) {
	return {ctor: 'UpdateOperationId', _0: a};
};

var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForTransaction$url = F2(
	function (endpoint, hash) {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			endpoint,
			A2(
				_elm_lang$core$Basics_ops['++'],
				'/transactions/',
				A2(_elm_lang$core$Basics_ops['++'], hash, '/effects')));
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForTransaction$setSorting = F2(
	function (sorting, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'order',
					_1: _ryan_senn$stellar_elm_sdk$Stellar_Sorting$toString(sorting)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForTransaction$setLimit = F2(
	function (limit, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'limit',
					_1: _elm_lang$core$Basics$toString(limit)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForTransaction$setCursor = F2(
	function (cursor, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'cursor', _1: cursor},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForTransaction$send = _lukewestby$elm_http_builder$HttpBuilder$send;
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForTransaction$Success = function (a) {
	return {ctor: 'Success', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForTransaction$Error = function (a) {
	return {ctor: 'Error', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForTransaction$decoder = _elm_lang$core$Json_Decode$oneOf(
	{
		ctor: '::',
		_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForTransaction$Error, _ryan_senn$stellar_elm_sdk$Stellar_Error$decoder),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$core$Json_Decode$map,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForTransaction$Success,
				_ryan_senn$stellar_elm_sdk$Stellar_Resources_Page$decoder(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Effect$decoder)),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForTransaction$requestBuilder = F2(
	function (endpoint, hash) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withExpect,
			_elm_lang$http$Http$expectJson(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForTransaction$decoder),
			_lukewestby$elm_http_builder$HttpBuilder$get(
				A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForTransaction$url, endpoint, hash)));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_Model$initialSettings = {transaction: _bluedogtraining$bdt_elm$Form_Input$init, cursor: _bluedogtraining$bdt_elm$Form_Input$init, limit: _bluedogtraining$bdt_elm$Form_IntInput$init, sorting: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_Model$initialModel = {settings: _ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_Model$initialSettings, isLoading: false, response: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_Model$Model = F3(
	function (a, b, c) {
		return {settings: a, isLoading: b, response: c};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_Model$Settings = F4(
	function (a, b, c, d) {
		return {transaction: a, cursor: b, limit: c, sorting: d};
	});

var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_Msg$Response = function (a) {
	return {ctor: 'Response', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_Msg$Request = F2(
	function (a, b) {
		return {ctor: 'Request', _0: a, _1: b};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_Msg$SettingsMsg = function (a) {
	return {ctor: 'SettingsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_Msg$UpdateSorting = function (a) {
	return {ctor: 'UpdateSorting', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_Msg$UpdateLimit = function (a) {
	return {ctor: 'UpdateLimit', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_Msg$UpdateCursor = function (a) {
	return {ctor: 'UpdateCursor', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_Msg$UpdateTransaction = function (a) {
	return {ctor: 'UpdateTransaction', _0: a};
};

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Ledger$Ledger = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return function (m) {
													return function (n) {
														return function (o) {
															return function (p) {
																return function (q) {
																	return function (r) {
																		return {id: a, pagingToken: b, hash: c, prevHash: d, sequence: e, transactionCount: f, operationCount: g, closedAt: h, totalCoins: i, feePool: j, baseFee: k, baseReverse: l, maxTxSetSize: m, protocolVersion: n, headerXdr: o, baseFeeInStroops: p, baseReserveInStroops: q, links_: r};
																	};
																};
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Ledger$Links = F5(
	function (a, b, c, d, e) {
		return {effects: a, operations: b, payments: c, self: d, transactions: e};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Ledger$linksDecoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'transactions',
	_ryan_senn$stellar_elm_sdk$Stellar_Link$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'self',
		_ryan_senn$stellar_elm_sdk$Stellar_Link$decoder,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'payments',
			_ryan_senn$stellar_elm_sdk$Stellar_Link$decoder,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'operations',
				_ryan_senn$stellar_elm_sdk$Stellar_Link$decoder,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'effects',
					_ryan_senn$stellar_elm_sdk$Stellar_Link$decoder,
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Ledger$Links))))));
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Ledger$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Ledger$linksDecoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'base_reserve_in_stroops',
		_elm_lang$core$Json_Decode$int,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'base_fee_in_stroops',
			_elm_lang$core$Json_Decode$int,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'header_xdr',
				_elm_lang$core$Json_Decode$string,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'protocol_version',
					_elm_lang$core$Json_Decode$int,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'max_tx_set_size',
						_elm_lang$core$Json_Decode$int,
						A4(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
							'base_reverse',
							_elm_lang$core$Json_Decode$maybe(_elm_lang$core$Json_Decode$string),
							_elm_lang$core$Maybe$Nothing,
							A4(
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
								'base_fee',
								_elm_lang$core$Json_Decode$maybe(_elm_lang$core$Json_Decode$int),
								_elm_lang$core$Maybe$Nothing,
								A3(
									_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
									'fee_pool',
									_elm_lang$core$Json_Decode$string,
									A3(
										_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
										'total_coins',
										_elm_lang$core$Json_Decode$string,
										A3(
											_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
											'closed_at',
											_elm_community$json_extra$Json_Decode_Extra$date,
											A3(
												_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
												'operation_count',
												_elm_lang$core$Json_Decode$int,
												A3(
													_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
													'transaction_count',
													_elm_lang$core$Json_Decode$int,
													A3(
														_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
														'sequence',
														_elm_lang$core$Json_Decode$int,
														A4(
															_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
															'prev_hash',
															_elm_lang$core$Json_Decode$maybe(_elm_lang$core$Json_Decode$string),
															_elm_lang$core$Maybe$Nothing,
															A3(
																_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
																'hash',
																_elm_lang$core$Json_Decode$string,
																A3(
																	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
																	'paging_token',
																	_elm_lang$core$Json_Decode$string,
																	A3(
																		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
																		'id',
																		_elm_lang$core$Json_Decode$string,
																		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Ledger$Ledger)))))))))))))))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllLedgers$url = function (endpoint) {
	return A2(_elm_lang$core$Basics_ops['++'], endpoint, '/ledgers');
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllLedgers$setSorting = F2(
	function (sorting, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'order',
					_1: _ryan_senn$stellar_elm_sdk$Stellar_Sorting$toString(sorting)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllLedgers$setLimit = F2(
	function (limit, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'limit',
					_1: _elm_lang$core$Basics$toString(limit)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllLedgers$setCursor = F2(
	function (cursor, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'cursor', _1: cursor},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllLedgers$send = _lukewestby$elm_http_builder$HttpBuilder$send;
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllLedgers$Success = function (a) {
	return {ctor: 'Success', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllLedgers$Error = function (a) {
	return {ctor: 'Error', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllLedgers$decoder = _elm_lang$core$Json_Decode$oneOf(
	{
		ctor: '::',
		_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllLedgers$Error, _ryan_senn$stellar_elm_sdk$Stellar_Error$decoder),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$core$Json_Decode$map,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllLedgers$Success,
				_ryan_senn$stellar_elm_sdk$Stellar_Resources_Page$decoder(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Ledger$decoder)),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllLedgers$requestBuilder = function (endpoint) {
	return A2(
		_lukewestby$elm_http_builder$HttpBuilder$withExpect,
		_elm_lang$http$Http$expectJson(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllLedgers$decoder),
		_lukewestby$elm_http_builder$HttpBuilder$get(
			_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllLedgers$url(endpoint)));
};

var _ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_Model$initialSettings = {cursor: _bluedogtraining$bdt_elm$Form_Input$init, limit: _bluedogtraining$bdt_elm$Form_IntInput$init, sorting: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_Model$initialModel = {settings: _ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_Model$initialSettings, isLoading: false, response: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_Model$Model = F3(
	function (a, b, c) {
		return {settings: a, isLoading: b, response: c};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_Model$Settings = F3(
	function (a, b, c) {
		return {cursor: a, limit: b, sorting: c};
	});

var _ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_Msg$Response = function (a) {
	return {ctor: 'Response', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_Msg$Request = F2(
	function (a, b) {
		return {ctor: 'Request', _0: a, _1: b};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_Msg$SettingsMsg = function (a) {
	return {ctor: 'SettingsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_Msg$UpdateSorting = function (a) {
	return {ctor: 'UpdateSorting', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_Msg$UpdateLimit = function (a) {
	return {ctor: 'UpdateLimit', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_Msg$UpdateCursor = function (a) {
	return {ctor: 'UpdateCursor', _0: a};
};

var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_LedgerDetails$url = F2(
	function (endpoint, sequence) {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			endpoint,
			A2(
				_elm_lang$core$Basics_ops['++'],
				'/ledgers/',
				_elm_lang$core$Basics$toString(sequence)));
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_LedgerDetails$send = _lukewestby$elm_http_builder$HttpBuilder$send;
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_LedgerDetails$Success = function (a) {
	return {ctor: 'Success', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_LedgerDetails$Error = function (a) {
	return {ctor: 'Error', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_LedgerDetails$decoder = _elm_lang$core$Json_Decode$oneOf(
	{
		ctor: '::',
		_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_LedgerDetails$Error, _ryan_senn$stellar_elm_sdk$Stellar_Error$decoder),
		_1: {
			ctor: '::',
			_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_LedgerDetails$Success, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Ledger$decoder),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_LedgerDetails$requestBuilder = F2(
	function (endpoint, sequence) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withExpect,
			_elm_lang$http$Http$expectJson(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_LedgerDetails$decoder),
			_lukewestby$elm_http_builder$HttpBuilder$get(
				A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_LedgerDetails$url, endpoint, sequence)));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_LedgerDetails_Msg$Response = function (a) {
	return {ctor: 'Response', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_LedgerDetails_Msg$Request = F2(
	function (a, b) {
		return {ctor: 'Request', _0: a, _1: b};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_LedgerDetails_Msg$SettingsMsg = function (a) {
	return {ctor: 'SettingsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_LedgerDetails_Msg$UpdateSequence = function (a) {
	return {ctor: 'UpdateSequence', _0: a};
};

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Offer$Offer = F8(
	function (a, b, c, d, e, f, g, h) {
		return {id: a, pagingToken: b, seller: c, selling: d, buying: e, amount: f, priceR: g, price: h};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Offer$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'price',
	_elm_lang$core$Json_Decode$string,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'price_r',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'amount',
			_elm_lang$core$Json_Decode$string,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'buying',
				_ryan_senn$stellar_elm_sdk$Stellar_Resources_Asset$decoder,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'selling',
					_ryan_senn$stellar_elm_sdk$Stellar_Resources_Asset$decoder,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'seller',
						_elm_lang$core$Json_Decode$string,
						A3(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
							'paging_token',
							_elm_lang$core$Json_Decode$string,
							A3(
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
								'id',
								_elm_lang$core$Json_Decode$int,
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Offer$Offer)))))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OffersForAccount$url = F2(
	function (endpoint, publicKey) {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			endpoint,
			A2(
				_elm_lang$core$Basics_ops['++'],
				'/accounts/',
				A2(_elm_lang$core$Basics_ops['++'], publicKey, '/offers')));
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OffersForAccount$setSorting = F2(
	function (sorting, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'order',
					_1: _ryan_senn$stellar_elm_sdk$Stellar_Sorting$toString(sorting)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OffersForAccount$setLimit = F2(
	function (limit, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'limit',
					_1: _elm_lang$core$Basics$toString(limit)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OffersForAccount$setCursor = F2(
	function (cursor, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'cursor', _1: cursor},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OffersForAccount$send = _lukewestby$elm_http_builder$HttpBuilder$send;
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OffersForAccount$Success = function (a) {
	return {ctor: 'Success', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OffersForAccount$Error = function (a) {
	return {ctor: 'Error', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OffersForAccount$decoder = _elm_lang$core$Json_Decode$oneOf(
	{
		ctor: '::',
		_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OffersForAccount$Error, _ryan_senn$stellar_elm_sdk$Stellar_Error$decoder),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$core$Json_Decode$map,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OffersForAccount$Success,
				_ryan_senn$stellar_elm_sdk$Stellar_Resources_Page$decoder(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Offer$decoder)),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OffersForAccount$requestBuilder = F2(
	function (endpoint, publicKey) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withExpect,
			_elm_lang$http$Http$expectJson(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OffersForAccount$decoder),
			_lukewestby$elm_http_builder$HttpBuilder$get(
				A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OffersForAccount$url, endpoint, publicKey)));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_Model$initialSettings = {account: _bluedogtraining$bdt_elm$Form_Input$init, cursor: _bluedogtraining$bdt_elm$Form_Input$init, limit: _bluedogtraining$bdt_elm$Form_IntInput$init, sorting: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_Model$initialModel = {settings: _ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_Model$initialSettings, isLoading: false, response: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_Model$Model = F3(
	function (a, b, c) {
		return {settings: a, isLoading: b, response: c};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_Model$Settings = F4(
	function (a, b, c, d) {
		return {account: a, cursor: b, limit: c, sorting: d};
	});

var _ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_Msg$Response = function (a) {
	return {ctor: 'Response', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_Msg$Request = F2(
	function (a, b) {
		return {ctor: 'Request', _0: a, _1: b};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_Msg$SettingsMsg = function (a) {
	return {ctor: 'SettingsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_Msg$UpdateSorting = function (a) {
	return {ctor: 'UpdateSorting', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_Msg$UpdateLimit = function (a) {
	return {ctor: 'UpdateLimit', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_Msg$UpdateCursor = function (a) {
	return {ctor: 'UpdateCursor', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_Msg$UpdateAccount = function (a) {
	return {ctor: 'UpdateAccount', _0: a};
};

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_Links$Links = F5(
	function (a, b, c, d, e) {
		return {self: a, succeeds: b, precedes: c, effects: d, transaction: e};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_Links$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'transaction',
	_ryan_senn$stellar_elm_sdk$Stellar_Link$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'effects',
		_ryan_senn$stellar_elm_sdk$Stellar_Link$decoder,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'precedes',
			_ryan_senn$stellar_elm_sdk$Stellar_Link$decoder,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'succeeds',
				_ryan_senn$stellar_elm_sdk$Stellar_Link$decoder,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'self',
					_ryan_senn$stellar_elm_sdk$Stellar_Link$decoder,
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_Links$Links))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_CreateAccount$CreateAccount = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return {id: a, pagingToken: b, sourceAccount: c, type_: d, typeI: e, createdAt: f, transactionHash: g, startingBalance: h, funder: i, account: j, links: k};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_CreateAccount$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_Links$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'account',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'funder',
			_elm_lang$core$Json_Decode$string,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'starting_balance',
				_elm_lang$core$Json_Decode$string,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'transaction_hash',
					_elm_lang$core$Json_Decode$string,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'created_at',
						_elm_community$json_extra$Json_Decode_Extra$date,
						A3(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
							'type_i',
							_elm_lang$core$Json_Decode$int,
							A3(
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
								'type',
								_elm_lang$core$Json_Decode$string,
								A3(
									_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
									'source_account',
									_elm_lang$core$Json_Decode$string,
									A3(
										_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
										'paging_token',
										_elm_lang$core$Json_Decode$string,
										A3(
											_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
											'id',
											_elm_lang$core$Json_Decode$string,
											_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_CreateAccount$CreateAccount))))))))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_Payment$Payment = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return {id: a, pagingToken: b, sourceAccount: c, type_: d, typeI: e, createdAt: f, transactionHash: g, from: h, to: i, amount: j, links: k};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_Payment$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_Links$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'amount',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'to',
			_elm_lang$core$Json_Decode$string,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'from',
				_elm_lang$core$Json_Decode$string,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'transaction_hash',
					_elm_lang$core$Json_Decode$string,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'created_at',
						_elm_community$json_extra$Json_Decode_Extra$date,
						A3(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
							'type_i',
							_elm_lang$core$Json_Decode$int,
							A3(
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
								'type',
								_elm_lang$core$Json_Decode$string,
								A3(
									_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
									'source_account',
									_elm_lang$core$Json_Decode$string,
									A3(
										_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
										'paging_token',
										_elm_lang$core$Json_Decode$string,
										A3(
											_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
											'id',
											_elm_lang$core$Json_Decode$string,
											_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_Payment$Payment))))))))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_PathPayment$PathPayment = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return function (m) {
													return function (n) {
														return function (o) {
															return function (p) {
																return function (q) {
																	return function (r) {
																		return {id: a, pagingToken: b, sourceAccount: c, type_: d, typeI: e, createdAt: f, transactionHash: g, from: h, to: i, amount: j, assetCode: k, assetIssuer: l, assetType: m, sourceMax: n, sourceAssetType: o, sourceAssetCode: p, sourceAssetIssuer: q, links: r};
																	};
																};
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_PathPayment$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_Links$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'source_asset_issuer',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'source_asset_code',
			_elm_lang$core$Json_Decode$string,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'source_asset_type',
				_ryan_senn$stellar_elm_sdk$Stellar_AssetType$decoder,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'source_max',
					_elm_lang$core$Json_Decode$string,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'asset_type',
						_ryan_senn$stellar_elm_sdk$Stellar_AssetType$decoder,
						A3(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
							'asset_issuer',
							_elm_lang$core$Json_Decode$string,
							A3(
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
								'asset_code',
								_elm_lang$core$Json_Decode$string,
								A3(
									_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
									'amount',
									_elm_lang$core$Json_Decode$string,
									A3(
										_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
										'to',
										_elm_lang$core$Json_Decode$string,
										A3(
											_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
											'from',
											_elm_lang$core$Json_Decode$string,
											A3(
												_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
												'transaction_hash',
												_elm_lang$core$Json_Decode$string,
												A3(
													_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
													'created_at',
													_elm_community$json_extra$Json_Decode_Extra$date,
													A3(
														_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
														'type_i',
														_elm_lang$core$Json_Decode$int,
														A3(
															_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
															'type',
															_elm_lang$core$Json_Decode$string,
															A3(
																_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
																'source_account',
																_elm_lang$core$Json_Decode$string,
																A3(
																	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
																	'paging_token',
																	_elm_lang$core$Json_Decode$string,
																	A3(
																		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
																		'id',
																		_elm_lang$core$Json_Decode$string,
																		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_PathPayment$PathPayment)))))))))))))))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_ManageOffer$ManageOffer = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return function (m) {
													return function (n) {
														return function (o) {
															return function (p) {
																return function (q) {
																	return function (r) {
																		return {id: a, pagingToken: b, sourceAccount: c, type_: d, typeI: e, createdAt: f, transactionHash: g, offerId: h, amount: i, price: j, priceR: k, buyingAssetType: l, buyingAssetCode: m, buyingAssetIssuer: n, sellingAssetType: o, sellingAssetCode: p, sellingAssetIssuer: q, links: r};
																	};
																};
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_ManageOffer$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_Links$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'selling_asset_issuer',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'selling_asset_code',
			_elm_lang$core$Json_Decode$string,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'selling_asset_type',
				_ryan_senn$stellar_elm_sdk$Stellar_AssetType$decoder,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'buying_asset_issuer',
					_elm_lang$core$Json_Decode$string,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'buying_asset_code',
						_elm_lang$core$Json_Decode$string,
						A3(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
							'buying_asset_type',
							_ryan_senn$stellar_elm_sdk$Stellar_AssetType$decoder,
							A3(
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
								'price_r',
								_elm_lang$core$Json_Decode$string,
								A3(
									_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
									'price',
									_elm_lang$core$Json_Decode$string,
									A3(
										_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
										'amount',
										_elm_lang$core$Json_Decode$string,
										A3(
											_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
											'offer_id',
											_elm_lang$core$Json_Decode$int,
											A3(
												_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
												'transaction_hash',
												_elm_lang$core$Json_Decode$string,
												A3(
													_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
													'created_at',
													_elm_community$json_extra$Json_Decode_Extra$date,
													A3(
														_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
														'type_i',
														_elm_lang$core$Json_Decode$int,
														A3(
															_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
															'type',
															_elm_lang$core$Json_Decode$string,
															A3(
																_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
																'source_account',
																_elm_lang$core$Json_Decode$string,
																A3(
																	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
																	'paging_token',
																	_elm_lang$core$Json_Decode$string,
																	A3(
																		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
																		'id',
																		_elm_lang$core$Json_Decode$string,
																		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_ManageOffer$ManageOffer)))))))))))))))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_CreatePassiveOffer$CreatePassiveOffer = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return function (m) {
													return function (n) {
														return function (o) {
															return function (p) {
																return function (q) {
																	return function (r) {
																		return {id: a, pagingToken: b, sourceAccount: c, type_: d, typeI: e, createdAt: f, transactionHash: g, offerId: h, amount: i, price: j, priceR: k, buyingAssetType: l, buyingAssetCode: m, buyingAssetIssuer: n, sellingAssetType: o, sellingAssetCode: p, sellingAssetIssuer: q, links: r};
																	};
																};
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_CreatePassiveOffer$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_Links$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'selling_asset_issuer',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'selling_asset_code',
			_elm_lang$core$Json_Decode$string,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'selling_asset_type',
				_ryan_senn$stellar_elm_sdk$Stellar_AssetType$decoder,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'buying_asset_issuer',
					_elm_lang$core$Json_Decode$string,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'buying_asset_code',
						_elm_lang$core$Json_Decode$string,
						A3(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
							'buying_asset_type',
							_ryan_senn$stellar_elm_sdk$Stellar_AssetType$decoder,
							A3(
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
								'price_r',
								_elm_lang$core$Json_Decode$string,
								A3(
									_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
									'price',
									_elm_lang$core$Json_Decode$string,
									A3(
										_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
										'amount',
										_elm_lang$core$Json_Decode$string,
										A3(
											_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
											'offer_id',
											_elm_lang$core$Json_Decode$int,
											A3(
												_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
												'transaction_hash',
												_elm_lang$core$Json_Decode$string,
												A3(
													_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
													'created_at',
													_elm_community$json_extra$Json_Decode_Extra$date,
													A3(
														_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
														'type_i',
														_elm_lang$core$Json_Decode$int,
														A3(
															_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
															'type',
															_elm_lang$core$Json_Decode$string,
															A3(
																_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
																'source_account',
																_elm_lang$core$Json_Decode$string,
																A3(
																	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
																	'paging_token',
																	_elm_lang$core$Json_Decode$string,
																	A3(
																		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
																		'id',
																		_elm_lang$core$Json_Decode$string,
																		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_CreatePassiveOffer$CreatePassiveOffer)))))))))))))))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_SetOptions$SetOptions = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return function (m) {
													return function (n) {
														return function (o) {
															return function (p) {
																return function (q) {
																	return function (r) {
																		return function (s) {
																			return function (t) {
																				return {id: a, pagingToken: b, sourceAccount: c, type_: d, typeI: e, createdAt: f, transactionHash: g, homeDomain: h, inflationDestination: i, masterKeyWeight: j, signerKey: k, signerWeight: l, setFlags: m, setFlagsS: n, clearFlags: o, clearFlagsS: p, lowThreshold: q, medThreshold: r, highThreshold: s, links: t};
																			};
																		};
																	};
																};
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_SetOptions$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_Links$decoder,
	A4(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
		'high_threshold',
		_elm_lang$core$Json_Decode$maybe(_elm_lang$core$Json_Decode$int),
		_elm_lang$core$Maybe$Nothing,
		A4(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
			'med_threshold',
			_elm_lang$core$Json_Decode$maybe(_elm_lang$core$Json_Decode$int),
			_elm_lang$core$Maybe$Nothing,
			A4(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
				'low_threshold',
				_elm_lang$core$Json_Decode$maybe(_elm_lang$core$Json_Decode$int),
				_elm_lang$core$Maybe$Nothing,
				A4(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
					'clear_flags_s',
					_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string),
					{ctor: '[]'},
					A4(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
						'clear_flags',
						_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$int),
						{ctor: '[]'},
						A4(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
							'set_flags_s',
							_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string),
							{ctor: '[]'},
							A4(
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
								'set_flags',
								_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$int),
								{ctor: '[]'},
								A4(
									_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
									'signer_weight',
									_elm_lang$core$Json_Decode$maybe(_elm_lang$core$Json_Decode$int),
									_elm_lang$core$Maybe$Nothing,
									A4(
										_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
										'signer_key',
										_elm_lang$core$Json_Decode$maybe(_ryan_senn$stellar_elm_sdk$Stellar_PublicKey$decoder),
										_elm_lang$core$Maybe$Nothing,
										A4(
											_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
											'master_key_weight',
											_elm_lang$core$Json_Decode$maybe(_elm_lang$core$Json_Decode$int),
											_elm_lang$core$Maybe$Nothing,
											A4(
												_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
												'inflation_dest',
												_elm_lang$core$Json_Decode$maybe(_elm_lang$core$Json_Decode$string),
												_elm_lang$core$Maybe$Nothing,
												A4(
													_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
													'home_domain',
													_elm_lang$core$Json_Decode$maybe(_elm_lang$core$Json_Decode$string),
													_elm_lang$core$Maybe$Nothing,
													A3(
														_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
														'transaction_hash',
														_elm_lang$core$Json_Decode$string,
														A3(
															_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
															'created_at',
															_elm_community$json_extra$Json_Decode_Extra$date,
															A3(
																_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
																'type_i',
																_elm_lang$core$Json_Decode$int,
																A3(
																	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
																	'type',
																	_elm_lang$core$Json_Decode$string,
																	A3(
																		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
																		'source_account',
																		_elm_lang$core$Json_Decode$string,
																		A3(
																			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
																			'paging_token',
																			_elm_lang$core$Json_Decode$string,
																			A3(
																				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
																				'id',
																				_elm_lang$core$Json_Decode$string,
																				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_SetOptions$SetOptions)))))))))))))))))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_ChangeTrust$ChangeTrust = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return function (m) {
													return function (n) {
														return {id: a, pagingToken: b, sourceAccount: c, type_: d, typeI: e, createdAt: f, transactionHash: g, assetType: h, assetCode: i, assetIssuer: j, limit: k, trustee: l, trustor: m, links: n};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_ChangeTrust$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_Links$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'trustor',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'trustee',
			_elm_lang$core$Json_Decode$string,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'limit',
				_elm_lang$core$Json_Decode$string,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'asset_issuer',
					_elm_lang$core$Json_Decode$string,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'asset_code',
						_elm_lang$core$Json_Decode$string,
						A3(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
							'asset_type',
							_ryan_senn$stellar_elm_sdk$Stellar_AssetType$decoder,
							A3(
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
								'transaction_hash',
								_elm_lang$core$Json_Decode$string,
								A3(
									_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
									'created_at',
									_elm_community$json_extra$Json_Decode_Extra$date,
									A3(
										_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
										'type_i',
										_elm_lang$core$Json_Decode$int,
										A3(
											_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
											'type',
											_elm_lang$core$Json_Decode$string,
											A3(
												_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
												'source_account',
												_elm_lang$core$Json_Decode$string,
												A3(
													_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
													'paging_token',
													_elm_lang$core$Json_Decode$string,
													A3(
														_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
														'id',
														_elm_lang$core$Json_Decode$string,
														_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_ChangeTrust$ChangeTrust)))))))))))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_AllowTrust$AllowTrust = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return function (m) {
													return function (n) {
														return {id: a, pagingToken: b, sourceAccount: c, type_: d, typeI: e, createdAt: f, transactionHash: g, assetType: h, assetCode: i, assetIssuer: j, trustee: k, trustor: l, authorize: m, links: n};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_AllowTrust$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_Links$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'authorize',
		_elm_lang$core$Json_Decode$bool,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'trustor',
			_elm_lang$core$Json_Decode$string,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'trustee',
				_elm_lang$core$Json_Decode$string,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'asset_issuer',
					_elm_lang$core$Json_Decode$string,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'asset_code',
						_elm_lang$core$Json_Decode$string,
						A3(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
							'asset_type',
							_ryan_senn$stellar_elm_sdk$Stellar_AssetType$decoder,
							A3(
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
								'transaction_hash',
								_elm_lang$core$Json_Decode$string,
								A3(
									_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
									'created_at',
									_elm_community$json_extra$Json_Decode_Extra$date,
									A3(
										_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
										'type_i',
										_elm_lang$core$Json_Decode$int,
										A3(
											_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
											'type',
											_elm_lang$core$Json_Decode$string,
											A3(
												_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
												'source_account',
												_elm_lang$core$Json_Decode$string,
												A3(
													_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
													'paging_token',
													_elm_lang$core$Json_Decode$string,
													A3(
														_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
														'id',
														_elm_lang$core$Json_Decode$string,
														_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_AllowTrust$AllowTrust)))))))))))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_AccountMerge$AccountMerge = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return {id: a, pagingToken: b, sourceAccount: c, type_: d, typeI: e, createdAt: f, transactionHash: g, account: h, into: i, links: j};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_AccountMerge$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_Links$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'into',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'account',
			_elm_lang$core$Json_Decode$string,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'transaction_hash',
				_elm_lang$core$Json_Decode$string,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'created_at',
					_elm_community$json_extra$Json_Decode_Extra$date,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'type_i',
						_elm_lang$core$Json_Decode$int,
						A3(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
							'type',
							_elm_lang$core$Json_Decode$string,
							A3(
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
								'source_account',
								_elm_lang$core$Json_Decode$string,
								A3(
									_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
									'paging_token',
									_elm_lang$core$Json_Decode$string,
									A3(
										_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
										'id',
										_elm_lang$core$Json_Decode$string,
										_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_AccountMerge$AccountMerge)))))))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_Inflation$Inflation = F8(
	function (a, b, c, d, e, f, g, h) {
		return {id: a, pagingToken: b, sourceAccount: c, type_: d, typeI: e, createdAt: f, transactionHash: g, links: h};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_Inflation$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_Links$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'transaction_hash',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'created_at',
			_elm_community$json_extra$Json_Decode_Extra$date,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'type_i',
				_elm_lang$core$Json_Decode$int,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'type',
					_elm_lang$core$Json_Decode$string,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'source_account',
						_elm_lang$core$Json_Decode$string,
						A3(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
							'paging_token',
							_elm_lang$core$Json_Decode$string,
							A3(
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
								'id',
								_elm_lang$core$Json_Decode$string,
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_Inflation$Inflation)))))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_ManageData$ManageData = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return {id: a, pagingToken: b, sourceAccount: c, type_: d, typeI: e, createdAt: f, transactionHash: g, name: h, value: i, links: j};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_ManageData$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_Links$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'value',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'name',
			_elm_lang$core$Json_Decode$string,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'transaction_hash',
				_elm_lang$core$Json_Decode$string,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'created_at',
					_elm_community$json_extra$Json_Decode_Extra$date,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'type_i',
						_elm_lang$core$Json_Decode$int,
						A3(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
							'type',
							_elm_lang$core$Json_Decode$string,
							A3(
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
								'source_account',
								_elm_lang$core$Json_Decode$string,
								A3(
									_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
									'paging_token',
									_elm_lang$core$Json_Decode$string,
									A3(
										_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
										'id',
										_elm_lang$core$Json_Decode$string,
										_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_ManageData$ManageData)))))))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operation$ManageData = function (a) {
	return {ctor: 'ManageData', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operation$Inflation = function (a) {
	return {ctor: 'Inflation', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operation$AccountMerge = function (a) {
	return {ctor: 'AccountMerge', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operation$AllowTrust = function (a) {
	return {ctor: 'AllowTrust', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operation$ChangeTrust = function (a) {
	return {ctor: 'ChangeTrust', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operation$SetOptions = function (a) {
	return {ctor: 'SetOptions', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operation$CreatePassiveOffer = function (a) {
	return {ctor: 'CreatePassiveOffer', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operation$ManageOffer = function (a) {
	return {ctor: 'ManageOffer', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operation$PathPayment = function (a) {
	return {ctor: 'PathPayment', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operation$Payment = function (a) {
	return {ctor: 'Payment', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operation$CreateAccount = function (a) {
	return {ctor: 'CreateAccount', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operation$operationFromType = function (type_) {
	var _p0 = type_;
	switch (_p0) {
		case 'create_account':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operation$CreateAccount, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_CreateAccount$decoder);
		case 'payment':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operation$Payment, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_Payment$decoder);
		case 'path_payment':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operation$PathPayment, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_PathPayment$decoder);
		case 'manage_offer':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operation$ManageOffer, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_ManageOffer$decoder);
		case 'create_passive_offer':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operation$CreatePassiveOffer, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_CreatePassiveOffer$decoder);
		case 'set_options':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operation$SetOptions, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_SetOptions$decoder);
		case 'change_trust':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operation$ChangeTrust, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_ChangeTrust$decoder);
		case 'allow_trust':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operation$AllowTrust, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_AllowTrust$decoder);
		case 'account_merge':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operation$AccountMerge, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_AccountMerge$decoder);
		case 'inflation':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operation$Inflation, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_Inflation$decoder);
		case 'manage_data':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operation$ManageData, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_ManageData$decoder);
		default:
			return _elm_lang$core$Json_Decode$fail('Could not decode Operation');
	}
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operation$decoder = A2(
	_elm_lang$core$Json_Decode$andThen,
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Operation$operationFromType,
	A2(_elm_lang$core$Json_Decode$field, 'type', _elm_lang$core$Json_Decode$string));

var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllOperations$url = function (endpoint) {
	return A2(_elm_lang$core$Basics_ops['++'], endpoint, '/operations');
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllOperations$setSorting = F2(
	function (sorting, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'order',
					_1: _ryan_senn$stellar_elm_sdk$Stellar_Sorting$toString(sorting)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllOperations$setLimit = F2(
	function (limit, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'limit',
					_1: _elm_lang$core$Basics$toString(limit)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllOperations$setCursor = F2(
	function (cursor, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'cursor', _1: cursor},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllOperations$send = _lukewestby$elm_http_builder$HttpBuilder$send;
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllOperations$Success = function (a) {
	return {ctor: 'Success', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllOperations$Error = function (a) {
	return {ctor: 'Error', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllOperations$decoder = _elm_lang$core$Json_Decode$oneOf(
	{
		ctor: '::',
		_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllOperations$Error, _ryan_senn$stellar_elm_sdk$Stellar_Error$decoder),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$core$Json_Decode$map,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllOperations$Success,
				_ryan_senn$stellar_elm_sdk$Stellar_Resources_Page$decoder(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Operation$decoder)),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllOperations$requestBuilder = function (endpoint) {
	return A2(
		_lukewestby$elm_http_builder$HttpBuilder$withExpect,
		_elm_lang$http$Http$expectJson(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllOperations$decoder),
		_lukewestby$elm_http_builder$HttpBuilder$get(
			_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllOperations$url(endpoint)));
};

var _ryan_senn$stellar_elm_demo$Endpoints_AllOperations_Model$initialSettings = {cursor: _bluedogtraining$bdt_elm$Form_Input$init, limit: _bluedogtraining$bdt_elm$Form_IntInput$init, sorting: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_AllOperations_Model$initialModel = {settings: _ryan_senn$stellar_elm_demo$Endpoints_AllOperations_Model$initialSettings, isLoading: false, response: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_AllOperations_Model$Model = F3(
	function (a, b, c) {
		return {settings: a, isLoading: b, response: c};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_AllOperations_Model$Settings = F3(
	function (a, b, c) {
		return {cursor: a, limit: b, sorting: c};
	});

var _ryan_senn$stellar_elm_demo$Endpoints_AllOperations_Msg$Response = function (a) {
	return {ctor: 'Response', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_AllOperations_Msg$Request = F2(
	function (a, b) {
		return {ctor: 'Request', _0: a, _1: b};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_AllOperations_Msg$SettingsMsg = function (a) {
	return {ctor: 'SettingsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_AllOperations_Msg$UpdateSorting = function (a) {
	return {ctor: 'UpdateSorting', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_AllOperations_Msg$UpdateLimit = function (a) {
	return {ctor: 'UpdateLimit', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_AllOperations_Msg$UpdateCursor = function (a) {
	return {ctor: 'UpdateCursor', _0: a};
};

var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForAccount$url = F2(
	function (endpoint, publicKey) {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			endpoint,
			A2(
				_elm_lang$core$Basics_ops['++'],
				'/accounts/',
				A2(_elm_lang$core$Basics_ops['++'], publicKey, '/operations')));
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForAccount$setSorting = F2(
	function (sorting, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'order',
					_1: _ryan_senn$stellar_elm_sdk$Stellar_Sorting$toString(sorting)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForAccount$setLimit = F2(
	function (limit, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'limit',
					_1: _elm_lang$core$Basics$toString(limit)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForAccount$setCursor = F2(
	function (cursor, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'cursor', _1: cursor},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForAccount$send = _lukewestby$elm_http_builder$HttpBuilder$send;
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForAccount$Success = function (a) {
	return {ctor: 'Success', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForAccount$Error = function (a) {
	return {ctor: 'Error', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForAccount$decoder = _elm_lang$core$Json_Decode$oneOf(
	{
		ctor: '::',
		_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForAccount$Error, _ryan_senn$stellar_elm_sdk$Stellar_Error$decoder),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$core$Json_Decode$map,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForAccount$Success,
				_ryan_senn$stellar_elm_sdk$Stellar_Resources_Page$decoder(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Operation$decoder)),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForAccount$requestBuilder = F2(
	function (endpoint, publicKey) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withExpect,
			_elm_lang$http$Http$expectJson(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForAccount$decoder),
			_lukewestby$elm_http_builder$HttpBuilder$get(
				A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForAccount$url, endpoint, publicKey)));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_Model$initialSettings = {account: _bluedogtraining$bdt_elm$Form_Input$init, cursor: _bluedogtraining$bdt_elm$Form_Input$init, limit: _bluedogtraining$bdt_elm$Form_IntInput$init, sorting: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_Model$initialModel = {settings: _ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_Model$initialSettings, isLoading: false, response: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_Model$Model = F3(
	function (a, b, c) {
		return {settings: a, isLoading: b, response: c};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_Model$Settings = F4(
	function (a, b, c, d) {
		return {account: a, cursor: b, limit: c, sorting: d};
	});

var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_Msg$Response = function (a) {
	return {ctor: 'Response', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_Msg$Request = F2(
	function (a, b) {
		return {ctor: 'Request', _0: a, _1: b};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_Msg$SettingsMsg = function (a) {
	return {ctor: 'SettingsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_Msg$UpdateSorting = function (a) {
	return {ctor: 'UpdateSorting', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_Msg$UpdateLimit = function (a) {
	return {ctor: 'UpdateLimit', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_Msg$UpdateCursor = function (a) {
	return {ctor: 'UpdateCursor', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_Msg$UpdateAccount = function (a) {
	return {ctor: 'UpdateAccount', _0: a};
};

var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForLedger$url = F2(
	function (endpoint, ledgerId) {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			endpoint,
			A2(
				_elm_lang$core$Basics_ops['++'],
				'/ledgers/',
				A2(
					_elm_lang$core$Basics_ops['++'],
					_elm_lang$core$Basics$toString(ledgerId),
					'/operations')));
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForLedger$setSorting = F2(
	function (sorting, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'order',
					_1: _ryan_senn$stellar_elm_sdk$Stellar_Sorting$toString(sorting)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForLedger$setLimit = F2(
	function (limit, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'limit',
					_1: _elm_lang$core$Basics$toString(limit)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForLedger$setCursor = F2(
	function (cursor, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'cursor', _1: cursor},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForLedger$send = _lukewestby$elm_http_builder$HttpBuilder$send;
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForLedger$Success = function (a) {
	return {ctor: 'Success', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForLedger$Error = function (a) {
	return {ctor: 'Error', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForLedger$decoder = _elm_lang$core$Json_Decode$oneOf(
	{
		ctor: '::',
		_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForLedger$Error, _ryan_senn$stellar_elm_sdk$Stellar_Error$decoder),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$core$Json_Decode$map,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForLedger$Success,
				_ryan_senn$stellar_elm_sdk$Stellar_Resources_Page$decoder(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Operation$decoder)),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForLedger$requestBuilder = F2(
	function (endpoint, ledgerId) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withExpect,
			_elm_lang$http$Http$expectJson(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForLedger$decoder),
			_lukewestby$elm_http_builder$HttpBuilder$get(
				A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForLedger$url, endpoint, ledgerId)));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_Model$initialSettings = {ledgerId: _bluedogtraining$bdt_elm$Form_IntInput$init, cursor: _bluedogtraining$bdt_elm$Form_Input$init, limit: _bluedogtraining$bdt_elm$Form_IntInput$init, sorting: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_Model$initialModel = {settings: _ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_Model$initialSettings, isLoading: false, response: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_Model$Model = F3(
	function (a, b, c) {
		return {settings: a, isLoading: b, response: c};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_Model$Settings = F4(
	function (a, b, c, d) {
		return {ledgerId: a, cursor: b, limit: c, sorting: d};
	});

var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_Msg$Response = function (a) {
	return {ctor: 'Response', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_Msg$Request = F2(
	function (a, b) {
		return {ctor: 'Request', _0: a, _1: b};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_Msg$SettingsMsg = function (a) {
	return {ctor: 'SettingsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_Msg$UpdateSorting = function (a) {
	return {ctor: 'UpdateSorting', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_Msg$UpdateLimit = function (a) {
	return {ctor: 'UpdateLimit', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_Msg$UpdateCursor = function (a) {
	return {ctor: 'UpdateCursor', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_Msg$UpdateLedgerId = function (a) {
	return {ctor: 'UpdateLedgerId', _0: a};
};

var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForTransaction$url = F2(
	function (endpoint, hash) {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			endpoint,
			A2(
				_elm_lang$core$Basics_ops['++'],
				'/transactions/',
				A2(_elm_lang$core$Basics_ops['++'], hash, '/operations')));
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForTransaction$setSorting = F2(
	function (sorting, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'order',
					_1: _ryan_senn$stellar_elm_sdk$Stellar_Sorting$toString(sorting)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForTransaction$setLimit = F2(
	function (limit, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'limit',
					_1: _elm_lang$core$Basics$toString(limit)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForTransaction$setCursor = F2(
	function (cursor, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'cursor', _1: cursor},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForTransaction$send = _lukewestby$elm_http_builder$HttpBuilder$send;
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForTransaction$Success = function (a) {
	return {ctor: 'Success', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForTransaction$Error = function (a) {
	return {ctor: 'Error', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForTransaction$decoder = _elm_lang$core$Json_Decode$oneOf(
	{
		ctor: '::',
		_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForTransaction$Error, _ryan_senn$stellar_elm_sdk$Stellar_Error$decoder),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$core$Json_Decode$map,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForTransaction$Success,
				_ryan_senn$stellar_elm_sdk$Stellar_Resources_Page$decoder(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Operation$decoder)),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForTransaction$requestBuilder = F2(
	function (endpoint, hash) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withExpect,
			_elm_lang$http$Http$expectJson(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForTransaction$decoder),
			_lukewestby$elm_http_builder$HttpBuilder$get(
				A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForTransaction$url, endpoint, hash)));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_Model$initialSettings = {transaction: _bluedogtraining$bdt_elm$Form_Input$init, cursor: _bluedogtraining$bdt_elm$Form_Input$init, limit: _bluedogtraining$bdt_elm$Form_IntInput$init, sorting: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_Model$initialModel = {settings: _ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_Model$initialSettings, isLoading: false, response: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_Model$Model = F3(
	function (a, b, c) {
		return {settings: a, isLoading: b, response: c};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_Model$Settings = F4(
	function (a, b, c, d) {
		return {transaction: a, cursor: b, limit: c, sorting: d};
	});

var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_Msg$Response = function (a) {
	return {ctor: 'Response', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_Msg$Request = F2(
	function (a, b) {
		return {ctor: 'Request', _0: a, _1: b};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_Msg$SettingsMsg = function (a) {
	return {ctor: 'SettingsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_Msg$UpdateSorting = function (a) {
	return {ctor: 'UpdateSorting', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_Msg$UpdateLimit = function (a) {
	return {ctor: 'UpdateLimit', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_Msg$UpdateCursor = function (a) {
	return {ctor: 'UpdateCursor', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_Msg$UpdateTransaction = function (a) {
	return {ctor: 'UpdateTransaction', _0: a};
};

var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationDetails$url = F2(
	function (endpoint, operationId) {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			endpoint,
			A2(
				_elm_lang$core$Basics_ops['++'],
				'/operations/',
				_elm_lang$core$Basics$toString(operationId)));
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationDetails$send = _lukewestby$elm_http_builder$HttpBuilder$send;
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationDetails$Success = function (a) {
	return {ctor: 'Success', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationDetails$Error = function (a) {
	return {ctor: 'Error', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationDetails$decoder = _elm_lang$core$Json_Decode$oneOf(
	{
		ctor: '::',
		_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationDetails$Error, _ryan_senn$stellar_elm_sdk$Stellar_Error$decoder),
		_1: {
			ctor: '::',
			_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationDetails$Success, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operation$decoder),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationDetails$requestBuilder = F2(
	function (endpoint, operationId) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withExpect,
			_elm_lang$http$Http$expectJson(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationDetails$decoder),
			_lukewestby$elm_http_builder$HttpBuilder$get(
				A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationDetails$url, endpoint, operationId)));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_OperationDetails_Model$initialSettings = {operationId: _bluedogtraining$bdt_elm$Form_IntInput$init};
var _ryan_senn$stellar_elm_demo$Endpoints_OperationDetails_Model$initialModel = {settings: _ryan_senn$stellar_elm_demo$Endpoints_OperationDetails_Model$initialSettings, isLoading: false, response: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_OperationDetails_Model$Model = F3(
	function (a, b, c) {
		return {settings: a, isLoading: b, response: c};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_OperationDetails_Model$Settings = function (a) {
	return {operationId: a};
};

var _ryan_senn$stellar_elm_demo$Endpoints_OperationDetails_Msg$Response = function (a) {
	return {ctor: 'Response', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_OperationDetails_Msg$Request = F2(
	function (a, b) {
		return {ctor: 'Request', _0: a, _1: b};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_OperationDetails_Msg$SettingsMsg = function (a) {
	return {ctor: 'SettingsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_OperationDetails_Msg$UpdatePublicKey = function (a) {
	return {ctor: 'UpdatePublicKey', _0: a};
};

var _ryan_senn$stellar_elm_sdk$Stellar_RationalNumber$RationalNumber = F2(
	function (a, b) {
		return {n: a, d: b};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_RationalNumber$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'd',
	_elm_lang$core$Json_Decode$int,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'n',
		_elm_lang$core$Json_Decode$int,
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_RationalNumber$RationalNumber)));

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Orderbook$Orderbook = F4(
	function (a, b, c, d) {
		return {bids: a, asks: b, base: c, counter: d};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Orderbook$Listing = F3(
	function (a, b, c) {
		return {price: a, priceR: b, amount: c};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Orderbook$listingDecoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'amount',
	_elm_lang$core$Json_Decode$string,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'priceR',
		_ryan_senn$stellar_elm_sdk$Stellar_RationalNumber$decoder,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'price',
			_elm_lang$core$Json_Decode$string,
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Orderbook$Listing))));
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Orderbook$Offer = function (a) {
	return {assetType: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Orderbook$offerDecoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'asset_type',
	_ryan_senn$stellar_elm_sdk$Stellar_AssetType$decoder,
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Orderbook$Offer));
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Orderbook$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'counter',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Orderbook$offerDecoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'base',
		_ryan_senn$stellar_elm_sdk$Stellar_Resources_Orderbook$offerDecoder,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'asks',
			_elm_lang$core$Json_Decode$list(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Orderbook$listingDecoder),
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'bids',
				_elm_lang$core$Json_Decode$list(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Orderbook$listingDecoder),
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Orderbook$Orderbook)))));

var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OrderbookDetails$url = function (endpoint) {
	return A2(_elm_lang$core$Basics_ops['++'], endpoint, '/order_book');
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OrderbookDetails$setLimit = F2(
	function (limit, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'limit',
					_1: _elm_lang$core$Basics$toString(limit)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OrderbookDetails$setBuyingAssetIssuer = F2(
	function (buyingAssetIssuer, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'buying_asset_issuer', _1: buyingAssetIssuer},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OrderbookDetails$setBuyingAssetCode = F2(
	function (buyingAssetCode, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'buying_asset_code', _1: buyingAssetCode},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OrderbookDetails$setSellingAssetIssuer = F2(
	function (sellingAssetIssuer, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'selling_asset_issuer', _1: sellingAssetIssuer},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OrderbookDetails$setSellingAssetCode = F2(
	function (sellingAssetCode, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'selling_asset_code', _1: sellingAssetCode},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OrderbookDetails$send = _lukewestby$elm_http_builder$HttpBuilder$send;
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OrderbookDetails$Success = function (a) {
	return {ctor: 'Success', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OrderbookDetails$Error = function (a) {
	return {ctor: 'Error', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OrderbookDetails$decoder = _elm_lang$core$Json_Decode$oneOf(
	{
		ctor: '::',
		_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OrderbookDetails$Error, _ryan_senn$stellar_elm_sdk$Stellar_Error$decoder),
		_1: {
			ctor: '::',
			_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OrderbookDetails$Success, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Orderbook$decoder),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OrderbookDetails$requestBuilder = F3(
	function (endpoint, sellingAssetType, buyingAssetType) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'buying_asset_type',
					_1: _ryan_senn$stellar_elm_sdk$Stellar_AssetType$toString(buyingAssetType)
				},
				_1: {ctor: '[]'}
			},
			A2(
				_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'selling_asset_type',
						_1: _ryan_senn$stellar_elm_sdk$Stellar_AssetType$toString(sellingAssetType)
					},
					_1: {ctor: '[]'}
				},
				A2(
					_lukewestby$elm_http_builder$HttpBuilder$withExpect,
					_elm_lang$http$Http$expectJson(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OrderbookDetails$decoder),
					_lukewestby$elm_http_builder$HttpBuilder$get(
						_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OrderbookDetails$url(endpoint)))));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Model$initialSettings = {
	sellingAssetType: _bluedogtraining$bdt_elm$Form_Select$init(_ryan_senn$stellar_elm_sdk$Stellar_AssetType$asList),
	sellingAssetCode: _bluedogtraining$bdt_elm$Form_Input$init,
	sellingAssetIssuer: _bluedogtraining$bdt_elm$Form_Input$init,
	buyingAssetType: _bluedogtraining$bdt_elm$Form_Select$init(_ryan_senn$stellar_elm_sdk$Stellar_AssetType$asList),
	buyingAssetCode: _bluedogtraining$bdt_elm$Form_Input$init,
	buyingAssetIssuer: _bluedogtraining$bdt_elm$Form_Input$init,
	limit: _bluedogtraining$bdt_elm$Form_IntInput$init
};
var _ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Model$initialModel = {settings: _ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Model$initialSettings, isLoading: false, response: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Model$Model = F3(
	function (a, b, c) {
		return {settings: a, isLoading: b, response: c};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Model$Settings = F7(
	function (a, b, c, d, e, f, g) {
		return {sellingAssetType: a, sellingAssetCode: b, sellingAssetIssuer: c, buyingAssetType: d, buyingAssetCode: e, buyingAssetIssuer: f, limit: g};
	});

var _ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Msg$Response = function (a) {
	return {ctor: 'Response', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Msg$Request = F2(
	function (a, b) {
		return {ctor: 'Request', _0: a, _1: b};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Msg$SettingsMsg = function (a) {
	return {ctor: 'SettingsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Msg$UpdateLimit = function (a) {
	return {ctor: 'UpdateLimit', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Msg$UpdateBuyingAssetIssuer = function (a) {
	return {ctor: 'UpdateBuyingAssetIssuer', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Msg$UpdateBuyingAssetCode = function (a) {
	return {ctor: 'UpdateBuyingAssetCode', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Msg$UpdateBuyingAssetType = function (a) {
	return {ctor: 'UpdateBuyingAssetType', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Msg$UpdateSellingAssetIssuer = function (a) {
	return {ctor: 'UpdateSellingAssetIssuer', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Msg$UpdateSellingAssetCode = function (a) {
	return {ctor: 'UpdateSellingAssetCode', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Msg$UpdateSellingAssetType = function (a) {
	return {ctor: 'UpdateSellingAssetType', _0: a};
};

var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_FindPaymentPaths$url = function (endpoint) {
	return A2(_elm_lang$core$Basics_ops['++'], endpoint, '/paths');
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_FindPaymentPaths$setDestinationAssetIssuer = F2(
	function (destinationAssetIssuer, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'destination_asset_issuer', _1: destinationAssetIssuer},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_FindPaymentPaths$setDestinationAssetCode = F2(
	function (destinationAssetCode, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'destination_asset_code', _1: destinationAssetCode},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_FindPaymentPaths$send = _lukewestby$elm_http_builder$HttpBuilder$send;
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_FindPaymentPaths$Success = function (a) {
	return {ctor: 'Success', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_FindPaymentPaths$Error = function (a) {
	return {ctor: 'Error', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_FindPaymentPaths$decoder = _elm_lang$core$Json_Decode$oneOf(
	{
		ctor: '::',
		_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_FindPaymentPaths$Error, _ryan_senn$stellar_elm_sdk$Stellar_Error$decoder),
		_1: {
			ctor: '::',
			_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_FindPaymentPaths$Success, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operation$decoder),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_FindPaymentPaths$requestBuilder = F5(
	function (endpoint, sourceAccount, destinationAccount, assetType, amount) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'destination_amount',
					_1: _elm_lang$core$Basics$toString(amount)
				},
				_1: {ctor: '[]'}
			},
			A2(
				_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'destination_asset_type',
						_1: _ryan_senn$stellar_elm_sdk$Stellar_AssetType$toString(assetType)
					},
					_1: {ctor: '[]'}
				},
				A2(
					_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'destination_account', _1: destinationAccount},
						_1: {ctor: '[]'}
					},
					A2(
						_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'source_account', _1: sourceAccount},
							_1: {ctor: '[]'}
						},
						A2(
							_lukewestby$elm_http_builder$HttpBuilder$withExpect,
							_elm_lang$http$Http$expectJson(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_FindPaymentPaths$decoder),
							_lukewestby$elm_http_builder$HttpBuilder$get(
								_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_FindPaymentPaths$url(endpoint)))))));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Model$initialSettings = {
	sourceAccount: _bluedogtraining$bdt_elm$Form_Input$init,
	destinationAccount: _bluedogtraining$bdt_elm$Form_Input$init,
	destinationAssetType: _bluedogtraining$bdt_elm$Form_Select$init(_ryan_senn$stellar_elm_sdk$Stellar_AssetType$asList),
	destinationAssetCode: _bluedogtraining$bdt_elm$Form_Input$init,
	destinationAssetIssuer: _bluedogtraining$bdt_elm$Form_Input$init,
	destinationAmount: _bluedogtraining$bdt_elm$Form_IntInput$init
};
var _ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Model$initialModel = {settings: _ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Model$initialSettings, isLoading: false, response: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Model$Model = F3(
	function (a, b, c) {
		return {settings: a, isLoading: b, response: c};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Model$Settings = F6(
	function (a, b, c, d, e, f) {
		return {sourceAccount: a, destinationAccount: b, destinationAssetType: c, destinationAssetCode: d, destinationAssetIssuer: e, destinationAmount: f};
	});

var _ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Msg$Response = function (a) {
	return {ctor: 'Response', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Msg$Request = F2(
	function (a, b) {
		return {ctor: 'Request', _0: a, _1: b};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Msg$SettingsMsg = function (a) {
	return {ctor: 'SettingsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Msg$UpdateDestinationAmount = function (a) {
	return {ctor: 'UpdateDestinationAmount', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Msg$UpdateDestinationAssetIssuer = function (a) {
	return {ctor: 'UpdateDestinationAssetIssuer', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Msg$UpdateDestinationAssetCode = function (a) {
	return {ctor: 'UpdateDestinationAssetCode', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Msg$UpdateDestinationAssetType = function (a) {
	return {ctor: 'UpdateDestinationAssetType', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Msg$UpdateDestinationAccount = function (a) {
	return {ctor: 'UpdateDestinationAccount', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Msg$UpdateSourceAccount = function (a) {
	return {ctor: 'UpdateSourceAccount', _0: a};
};

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Payment$AccountMerge = function (a) {
	return {ctor: 'AccountMerge', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Payment$PathPayment = function (a) {
	return {ctor: 'PathPayment', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Payment$Payment_ = function (a) {
	return {ctor: 'Payment_', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Payment$CreateAccount = function (a) {
	return {ctor: 'CreateAccount', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Payment$operationFromType = function (type_) {
	var _p0 = type_;
	switch (_p0) {
		case 'create_account':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Payment$CreateAccount, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_CreateAccount$decoder);
		case 'payment':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Payment$Payment_, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_Payment$decoder);
		case 'path_payment':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Payment$PathPayment, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_PathPayment$decoder);
		case 'account_merge':
			return A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Payment$AccountMerge, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Operations_AccountMerge$decoder);
		default:
			return _elm_lang$core$Json_Decode$fail('Could not decode Payment');
	}
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Payment$decoder = A2(
	_elm_lang$core$Json_Decode$andThen,
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Payment$operationFromType,
	A2(_elm_lang$core$Json_Decode$field, 'type', _elm_lang$core$Json_Decode$string));

var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllPayments$url = function (endpoint) {
	return A2(_elm_lang$core$Basics_ops['++'], endpoint, '/payments');
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllPayments$setSorting = F2(
	function (sorting, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'order',
					_1: _ryan_senn$stellar_elm_sdk$Stellar_Sorting$toString(sorting)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllPayments$setLimit = F2(
	function (limit, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'limit',
					_1: _elm_lang$core$Basics$toString(limit)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllPayments$setCursor = F2(
	function (cursor, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'cursor', _1: cursor},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllPayments$send = _lukewestby$elm_http_builder$HttpBuilder$send;
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllPayments$Success = function (a) {
	return {ctor: 'Success', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllPayments$Error = function (a) {
	return {ctor: 'Error', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllPayments$decoder = _elm_lang$core$Json_Decode$oneOf(
	{
		ctor: '::',
		_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllPayments$Error, _ryan_senn$stellar_elm_sdk$Stellar_Error$decoder),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$core$Json_Decode$map,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllPayments$Success,
				_ryan_senn$stellar_elm_sdk$Stellar_Resources_Page$decoder(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Payment$decoder)),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllPayments$requestBuilder = function (endpoint) {
	return A2(
		_lukewestby$elm_http_builder$HttpBuilder$withExpect,
		_elm_lang$http$Http$expectJson(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllPayments$decoder),
		_lukewestby$elm_http_builder$HttpBuilder$get(
			_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllPayments$url(endpoint)));
};

var _ryan_senn$stellar_elm_demo$Endpoints_AllPayments_Model$initialSettings = {cursor: _bluedogtraining$bdt_elm$Form_Input$init, limit: _bluedogtraining$bdt_elm$Form_IntInput$init, sorting: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_AllPayments_Model$initialModel = {settings: _ryan_senn$stellar_elm_demo$Endpoints_AllPayments_Model$initialSettings, isLoading: false, response: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_AllPayments_Model$Model = F3(
	function (a, b, c) {
		return {settings: a, isLoading: b, response: c};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_AllPayments_Model$Settings = F3(
	function (a, b, c) {
		return {cursor: a, limit: b, sorting: c};
	});

var _ryan_senn$stellar_elm_demo$Endpoints_AllPayments_Msg$Response = function (a) {
	return {ctor: 'Response', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_AllPayments_Msg$Request = F2(
	function (a, b) {
		return {ctor: 'Request', _0: a, _1: b};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_AllPayments_Msg$SettingsMsg = function (a) {
	return {ctor: 'SettingsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_AllPayments_Msg$UpdateSorting = function (a) {
	return {ctor: 'UpdateSorting', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_AllPayments_Msg$UpdateLimit = function (a) {
	return {ctor: 'UpdateLimit', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_AllPayments_Msg$UpdateCursor = function (a) {
	return {ctor: 'UpdateCursor', _0: a};
};

var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForAccount$url = F2(
	function (endpoint, publicKey) {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			endpoint,
			A2(
				_elm_lang$core$Basics_ops['++'],
				'/accounts/',
				A2(_elm_lang$core$Basics_ops['++'], publicKey, '/payments')));
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForAccount$setSorting = F2(
	function (sorting, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'order',
					_1: _ryan_senn$stellar_elm_sdk$Stellar_Sorting$toString(sorting)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForAccount$setLimit = F2(
	function (limit, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'limit',
					_1: _elm_lang$core$Basics$toString(limit)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForAccount$setCursor = F2(
	function (cursor, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'cursor', _1: cursor},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForAccount$send = _lukewestby$elm_http_builder$HttpBuilder$send;
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForAccount$Success = function (a) {
	return {ctor: 'Success', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForAccount$Error = function (a) {
	return {ctor: 'Error', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForAccount$decoder = _elm_lang$core$Json_Decode$oneOf(
	{
		ctor: '::',
		_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForAccount$Error, _ryan_senn$stellar_elm_sdk$Stellar_Error$decoder),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$core$Json_Decode$map,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForAccount$Success,
				_ryan_senn$stellar_elm_sdk$Stellar_Resources_Page$decoder(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Payment$decoder)),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForAccount$requestBuilder = F2(
	function (endpoint, publicKey) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withExpect,
			_elm_lang$http$Http$expectJson(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForAccount$decoder),
			_lukewestby$elm_http_builder$HttpBuilder$get(
				A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForAccount$url, endpoint, publicKey)));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_Model$initialSettings = {account: _bluedogtraining$bdt_elm$Form_Input$init, cursor: _bluedogtraining$bdt_elm$Form_Input$init, limit: _bluedogtraining$bdt_elm$Form_IntInput$init, sorting: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_Model$initialModel = {settings: _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_Model$initialSettings, isLoading: false, response: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_Model$Model = F3(
	function (a, b, c) {
		return {settings: a, isLoading: b, response: c};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_Model$Settings = F4(
	function (a, b, c, d) {
		return {account: a, cursor: b, limit: c, sorting: d};
	});

var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_Msg$Response = function (a) {
	return {ctor: 'Response', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_Msg$Request = F2(
	function (a, b) {
		return {ctor: 'Request', _0: a, _1: b};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_Msg$SettingsMsg = function (a) {
	return {ctor: 'SettingsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_Msg$UpdateSorting = function (a) {
	return {ctor: 'UpdateSorting', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_Msg$UpdateLimit = function (a) {
	return {ctor: 'UpdateLimit', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_Msg$UpdateCursor = function (a) {
	return {ctor: 'UpdateCursor', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_Msg$UpdateAccount = function (a) {
	return {ctor: 'UpdateAccount', _0: a};
};

var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForLedger$url = F2(
	function (endpoint, ledgerId) {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			endpoint,
			A2(
				_elm_lang$core$Basics_ops['++'],
				'/ledgers/',
				A2(
					_elm_lang$core$Basics_ops['++'],
					_elm_lang$core$Basics$toString(ledgerId),
					'/payments')));
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForLedger$setSorting = F2(
	function (sorting, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'order',
					_1: _ryan_senn$stellar_elm_sdk$Stellar_Sorting$toString(sorting)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForLedger$setLimit = F2(
	function (limit, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'limit',
					_1: _elm_lang$core$Basics$toString(limit)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForLedger$setCursor = F2(
	function (cursor, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'cursor', _1: cursor},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForLedger$send = _lukewestby$elm_http_builder$HttpBuilder$send;
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForLedger$Success = function (a) {
	return {ctor: 'Success', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForLedger$Error = function (a) {
	return {ctor: 'Error', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForLedger$decoder = _elm_lang$core$Json_Decode$oneOf(
	{
		ctor: '::',
		_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForLedger$Error, _ryan_senn$stellar_elm_sdk$Stellar_Error$decoder),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$core$Json_Decode$map,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForLedger$Success,
				_ryan_senn$stellar_elm_sdk$Stellar_Resources_Page$decoder(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Payment$decoder)),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForLedger$requestBuilder = F2(
	function (endpoint, ledgerId) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withExpect,
			_elm_lang$http$Http$expectJson(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForLedger$decoder),
			_lukewestby$elm_http_builder$HttpBuilder$get(
				A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForLedger$url, endpoint, ledgerId)));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_Model$initialSettings = {ledgerId: _bluedogtraining$bdt_elm$Form_IntInput$init, cursor: _bluedogtraining$bdt_elm$Form_Input$init, limit: _bluedogtraining$bdt_elm$Form_IntInput$init, sorting: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_Model$initialModel = {settings: _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_Model$initialSettings, isLoading: false, response: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_Model$Model = F3(
	function (a, b, c) {
		return {settings: a, isLoading: b, response: c};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_Model$Settings = F4(
	function (a, b, c, d) {
		return {ledgerId: a, cursor: b, limit: c, sorting: d};
	});

var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_Msg$Response = function (a) {
	return {ctor: 'Response', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_Msg$Request = F2(
	function (a, b) {
		return {ctor: 'Request', _0: a, _1: b};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_Msg$SettingsMsg = function (a) {
	return {ctor: 'SettingsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_Msg$UpdateSorting = function (a) {
	return {ctor: 'UpdateSorting', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_Msg$UpdateLimit = function (a) {
	return {ctor: 'UpdateLimit', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_Msg$UpdateCursor = function (a) {
	return {ctor: 'UpdateCursor', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_Msg$UpdateLedgerId = function (a) {
	return {ctor: 'UpdateLedgerId', _0: a};
};

var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForTransaction$url = F2(
	function (endpoint, hash) {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			endpoint,
			A2(
				_elm_lang$core$Basics_ops['++'],
				'/transactions/',
				A2(_elm_lang$core$Basics_ops['++'], hash, '/payments')));
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForTransaction$setSorting = F2(
	function (sorting, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'order',
					_1: _ryan_senn$stellar_elm_sdk$Stellar_Sorting$toString(sorting)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForTransaction$setLimit = F2(
	function (limit, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'limit',
					_1: _elm_lang$core$Basics$toString(limit)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForTransaction$setCursor = F2(
	function (cursor, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'cursor', _1: cursor},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForTransaction$send = _lukewestby$elm_http_builder$HttpBuilder$send;
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForTransaction$Success = function (a) {
	return {ctor: 'Success', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForTransaction$Error = function (a) {
	return {ctor: 'Error', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForTransaction$decoder = _elm_lang$core$Json_Decode$oneOf(
	{
		ctor: '::',
		_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForTransaction$Error, _ryan_senn$stellar_elm_sdk$Stellar_Error$decoder),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$core$Json_Decode$map,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForTransaction$Success,
				_ryan_senn$stellar_elm_sdk$Stellar_Resources_Page$decoder(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Payment$decoder)),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForTransaction$requestBuilder = F2(
	function (endpoint, hash) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withExpect,
			_elm_lang$http$Http$expectJson(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForTransaction$decoder),
			_lukewestby$elm_http_builder$HttpBuilder$get(
				A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForTransaction$url, endpoint, hash)));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_Model$initialSettings = {transaction: _bluedogtraining$bdt_elm$Form_Input$init, cursor: _bluedogtraining$bdt_elm$Form_Input$init, limit: _bluedogtraining$bdt_elm$Form_IntInput$init, sorting: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_Model$initialModel = {settings: _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_Model$initialSettings, isLoading: false, response: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_Model$Model = F3(
	function (a, b, c) {
		return {settings: a, isLoading: b, response: c};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_Model$Settings = F4(
	function (a, b, c, d) {
		return {transaction: a, cursor: b, limit: c, sorting: d};
	});

var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_Msg$Response = function (a) {
	return {ctor: 'Response', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_Msg$Request = F2(
	function (a, b) {
		return {ctor: 'Request', _0: a, _1: b};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_Msg$SettingsMsg = function (a) {
	return {ctor: 'SettingsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_Msg$UpdateSorting = function (a) {
	return {ctor: 'UpdateSorting', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_Msg$UpdateLimit = function (a) {
	return {ctor: 'UpdateLimit', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_Msg$UpdateCursor = function (a) {
	return {ctor: 'UpdateCursor', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_Msg$UpdateTransaction = function (a) {
	return {ctor: 'UpdateTransaction', _0: a};
};

var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Transaction$Transaction = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return function (m) {
													return function (n) {
														return function (o) {
															return function (p) {
																return {id: a, pagingToken: b, hash: c, ledger: d, createdAt: e, sourceAccount: f, sourceAccountSequence: g, feePaid: h, operationCount: i, envelopeXdr: j, resultXdr: k, resultMetaXdr: l, feeMetaXdr: m, memoType: n, signatures: o, links: p};
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Transaction$Links = F7(
	function (a, b, c, d, e, f, g) {
		return {self: a, account: b, ledger: c, operations: d, effects: e, precedes: f, succeeds: g};
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Transaction$linksDecoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'succeeds',
	_ryan_senn$stellar_elm_sdk$Stellar_Link$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'precedes',
		_ryan_senn$stellar_elm_sdk$Stellar_Link$decoder,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'effects',
			_ryan_senn$stellar_elm_sdk$Stellar_Link$decoder,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'operations',
				_ryan_senn$stellar_elm_sdk$Stellar_Link$decoder,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'ledger',
					_ryan_senn$stellar_elm_sdk$Stellar_Link$decoder,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'account',
						_ryan_senn$stellar_elm_sdk$Stellar_Link$decoder,
						A3(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
							'self',
							_ryan_senn$stellar_elm_sdk$Stellar_Link$decoder,
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Transaction$Links))))))));
var _ryan_senn$stellar_elm_sdk$Stellar_Resources_Transaction$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'_links',
	_ryan_senn$stellar_elm_sdk$Stellar_Resources_Transaction$linksDecoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'signatures',
		_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string),
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'memo_type',
			_elm_lang$core$Json_Decode$string,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'fee_meta_xdr',
				_elm_lang$core$Json_Decode$string,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'result_meta_xdr',
					_elm_lang$core$Json_Decode$string,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'result_xdr',
						_elm_lang$core$Json_Decode$string,
						A3(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
							'envelope_xdr',
							_elm_lang$core$Json_Decode$string,
							A3(
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
								'operation_count',
								_elm_lang$core$Json_Decode$int,
								A3(
									_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
									'fee_paid',
									_elm_lang$core$Json_Decode$int,
									A3(
										_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
										'source_account_sequence',
										_elm_lang$core$Json_Decode$string,
										A3(
											_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
											'source_account',
											_elm_lang$core$Json_Decode$string,
											A3(
												_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
												'created_at',
												_elm_community$json_extra$Json_Decode_Extra$date,
												A3(
													_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
													'ledger',
													_elm_lang$core$Json_Decode$int,
													A3(
														_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
														'hash',
														_elm_lang$core$Json_Decode$string,
														A3(
															_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
															'paging_token',
															_elm_lang$core$Json_Decode$string,
															A3(
																_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
																'id',
																_elm_lang$core$Json_Decode$string,
																_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Transaction$Transaction)))))))))))))))));

var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllTransactions$url = function (endpoint) {
	return A2(_elm_lang$core$Basics_ops['++'], endpoint, '/transactions');
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllTransactions$setSorting = F2(
	function (sorting, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'order',
					_1: _ryan_senn$stellar_elm_sdk$Stellar_Sorting$toString(sorting)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllTransactions$setLimit = F2(
	function (limit, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'limit',
					_1: _elm_lang$core$Basics$toString(limit)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllTransactions$setCursor = F2(
	function (cursor, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'cursor', _1: cursor},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllTransactions$send = _lukewestby$elm_http_builder$HttpBuilder$send;
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllTransactions$Success = function (a) {
	return {ctor: 'Success', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllTransactions$Error = function (a) {
	return {ctor: 'Error', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllTransactions$decoder = _elm_lang$core$Json_Decode$oneOf(
	{
		ctor: '::',
		_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllTransactions$Error, _ryan_senn$stellar_elm_sdk$Stellar_Error$decoder),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$core$Json_Decode$map,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllTransactions$Success,
				_ryan_senn$stellar_elm_sdk$Stellar_Resources_Page$decoder(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Transaction$decoder)),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllTransactions$requestBuilder = function (endpoint) {
	return A2(
		_lukewestby$elm_http_builder$HttpBuilder$withExpect,
		_elm_lang$http$Http$expectJson(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllTransactions$decoder),
		_lukewestby$elm_http_builder$HttpBuilder$get(
			_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllTransactions$url(endpoint)));
};

var _ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_Model$initialSettings = {cursor: _bluedogtraining$bdt_elm$Form_Input$init, limit: _bluedogtraining$bdt_elm$Form_IntInput$init, sorting: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_Model$initialModel = {settings: _ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_Model$initialSettings, isLoading: false, response: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_Model$Model = F3(
	function (a, b, c) {
		return {settings: a, isLoading: b, response: c};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_Model$Settings = F3(
	function (a, b, c) {
		return {cursor: a, limit: b, sorting: c};
	});

var _ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_Msg$Response = function (a) {
	return {ctor: 'Response', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_Msg$Request = F2(
	function (a, b) {
		return {ctor: 'Request', _0: a, _1: b};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_Msg$SettingsMsg = function (a) {
	return {ctor: 'SettingsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_Msg$UpdateSorting = function (a) {
	return {ctor: 'UpdateSorting', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_Msg$UpdateLimit = function (a) {
	return {ctor: 'UpdateLimit', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_Msg$UpdateCursor = function (a) {
	return {ctor: 'UpdateCursor', _0: a};
};

var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PostTransaction$url = function (endpoint) {
	return A2(_elm_lang$core$Basics_ops['++'], endpoint, '/transactions');
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PostTransaction$send = _lukewestby$elm_http_builder$HttpBuilder$send;
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PostTransaction$Success = function (a) {
	return {ctor: 'Success', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PostTransaction$Error = function (a) {
	return {ctor: 'Error', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PostTransaction$decoder = _elm_lang$core$Json_Decode$oneOf(
	{
		ctor: '::',
		_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PostTransaction$Error, _ryan_senn$stellar_elm_sdk$Stellar_Error$decoder),
		_1: {
			ctor: '::',
			_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PostTransaction$Success, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Transaction$decoder),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PostTransaction$requestBuilder = F2(
	function (endpoint, transactionEnvelopeXdr) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withExpect,
			_elm_lang$http$Http$expectJson(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PostTransaction$decoder),
			A3(
				_lukewestby$elm_http_builder$HttpBuilder$withHeader,
				'Content-Type',
				'application/x-www-form-urlencoded',
				A2(
					_lukewestby$elm_http_builder$HttpBuilder$withJsonBody,
					_elm_lang$core$Json_Encode$object(
						{
							ctor: '::',
							_0: {
								ctor: '_Tuple2',
								_0: 'tx',
								_1: _elm_lang$core$Json_Encode$string(transactionEnvelopeXdr)
							},
							_1: {ctor: '[]'}
						}),
					_lukewestby$elm_http_builder$HttpBuilder$post(
						_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PostTransaction$url(endpoint)))));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_PostTransaction_Model$initialSettings = {transactionEnvelopeXdr: _bluedogtraining$bdt_elm$Form_TextArea$init};
var _ryan_senn$stellar_elm_demo$Endpoints_PostTransaction_Model$initialModel = {settings: _ryan_senn$stellar_elm_demo$Endpoints_PostTransaction_Model$initialSettings, isLoading: false, response: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_PostTransaction_Model$Model = F3(
	function (a, b, c) {
		return {settings: a, isLoading: b, response: c};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_PostTransaction_Model$Settings = function (a) {
	return {transactionEnvelopeXdr: a};
};

var _ryan_senn$stellar_elm_demo$Endpoints_PostTransaction_Msg$Response = function (a) {
	return {ctor: 'Response', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_PostTransaction_Msg$Request = F2(
	function (a, b) {
		return {ctor: 'Request', _0: a, _1: b};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_PostTransaction_Msg$SettingsMsg = function (a) {
	return {ctor: 'SettingsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_PostTransaction_Msg$UpdateTransactionEnvelopeXdr = function (a) {
	return {ctor: 'UpdateTransactionEnvelopeXdr', _0: a};
};

var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForAccount$url = F2(
	function (endpoint, publicKey) {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			endpoint,
			A2(
				_elm_lang$core$Basics_ops['++'],
				'/accounts/',
				A2(_elm_lang$core$Basics_ops['++'], publicKey, '/transactions')));
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForAccount$setSorting = F2(
	function (sorting, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'order',
					_1: _ryan_senn$stellar_elm_sdk$Stellar_Sorting$toString(sorting)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForAccount$setLimit = F2(
	function (limit, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'limit',
					_1: _elm_lang$core$Basics$toString(limit)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForAccount$setCursor = F2(
	function (cursor, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'cursor', _1: cursor},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForAccount$send = _lukewestby$elm_http_builder$HttpBuilder$send;
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForAccount$Success = function (a) {
	return {ctor: 'Success', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForAccount$Error = function (a) {
	return {ctor: 'Error', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForAccount$decoder = _elm_lang$core$Json_Decode$oneOf(
	{
		ctor: '::',
		_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForAccount$Error, _ryan_senn$stellar_elm_sdk$Stellar_Error$decoder),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$core$Json_Decode$map,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForAccount$Success,
				_ryan_senn$stellar_elm_sdk$Stellar_Resources_Page$decoder(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Transaction$decoder)),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForAccount$requestBuilder = F2(
	function (endpoint, publicKey) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withExpect,
			_elm_lang$http$Http$expectJson(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForAccount$decoder),
			_lukewestby$elm_http_builder$HttpBuilder$get(
				A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForAccount$url, endpoint, publicKey)));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_Model$initialSettings = {account: _bluedogtraining$bdt_elm$Form_Input$init, cursor: _bluedogtraining$bdt_elm$Form_Input$init, limit: _bluedogtraining$bdt_elm$Form_IntInput$init, sorting: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_Model$initialModel = {settings: _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_Model$initialSettings, isLoading: false, response: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_Model$Model = F3(
	function (a, b, c) {
		return {settings: a, isLoading: b, response: c};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_Model$Settings = F4(
	function (a, b, c, d) {
		return {account: a, cursor: b, limit: c, sorting: d};
	});

var _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_Msg$Response = function (a) {
	return {ctor: 'Response', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_Msg$Request = F2(
	function (a, b) {
		return {ctor: 'Request', _0: a, _1: b};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_Msg$SettingsMsg = function (a) {
	return {ctor: 'SettingsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_Msg$UpdateSorting = function (a) {
	return {ctor: 'UpdateSorting', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_Msg$UpdateLimit = function (a) {
	return {ctor: 'UpdateLimit', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_Msg$UpdateCursor = function (a) {
	return {ctor: 'UpdateCursor', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_Msg$UpdateAccount = function (a) {
	return {ctor: 'UpdateAccount', _0: a};
};

var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForLedger$url = F2(
	function (endpoint, ledgerId) {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			endpoint,
			A2(
				_elm_lang$core$Basics_ops['++'],
				'/ledgers/',
				A2(
					_elm_lang$core$Basics_ops['++'],
					_elm_lang$core$Basics$toString(ledgerId),
					'/transactions')));
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForLedger$setSorting = F2(
	function (sorting, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'order',
					_1: _ryan_senn$stellar_elm_sdk$Stellar_Sorting$toString(sorting)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForLedger$setLimit = F2(
	function (limit, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'limit',
					_1: _elm_lang$core$Basics$toString(limit)
				},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForLedger$setCursor = F2(
	function (cursor, requestBuilder) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withQueryParams,
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'cursor', _1: cursor},
				_1: {ctor: '[]'}
			},
			requestBuilder);
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForLedger$send = _lukewestby$elm_http_builder$HttpBuilder$send;
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForLedger$Success = function (a) {
	return {ctor: 'Success', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForLedger$Error = function (a) {
	return {ctor: 'Error', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForLedger$decoder = _elm_lang$core$Json_Decode$oneOf(
	{
		ctor: '::',
		_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForLedger$Error, _ryan_senn$stellar_elm_sdk$Stellar_Error$decoder),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$core$Json_Decode$map,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForLedger$Success,
				_ryan_senn$stellar_elm_sdk$Stellar_Resources_Page$decoder(_ryan_senn$stellar_elm_sdk$Stellar_Resources_Transaction$decoder)),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForLedger$requestBuilder = F2(
	function (endpoint, ledgerId) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withExpect,
			_elm_lang$http$Http$expectJson(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForLedger$decoder),
			_lukewestby$elm_http_builder$HttpBuilder$get(
				A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForLedger$url, endpoint, ledgerId)));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_Model$initialSettings = {ledgerId: _bluedogtraining$bdt_elm$Form_IntInput$init, cursor: _bluedogtraining$bdt_elm$Form_Input$init, limit: _bluedogtraining$bdt_elm$Form_IntInput$init, sorting: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_Model$initialModel = {settings: _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_Model$initialSettings, isLoading: false, response: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_Model$Model = F3(
	function (a, b, c) {
		return {settings: a, isLoading: b, response: c};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_Model$Settings = F4(
	function (a, b, c, d) {
		return {ledgerId: a, cursor: b, limit: c, sorting: d};
	});

var _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_Msg$Response = function (a) {
	return {ctor: 'Response', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_Msg$Request = F2(
	function (a, b) {
		return {ctor: 'Request', _0: a, _1: b};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_Msg$SettingsMsg = function (a) {
	return {ctor: 'SettingsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_Msg$UpdateSorting = function (a) {
	return {ctor: 'UpdateSorting', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_Msg$UpdateLimit = function (a) {
	return {ctor: 'UpdateLimit', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_Msg$UpdateCursor = function (a) {
	return {ctor: 'UpdateCursor', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_Msg$UpdateLedgerId = function (a) {
	return {ctor: 'UpdateLedgerId', _0: a};
};

var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionDetails$url = F2(
	function (endpoint, hash) {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			endpoint,
			A2(
				_elm_lang$core$Basics_ops['++'],
				'/transactions/',
				_elm_lang$core$Basics$toString(hash)));
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionDetails$send = _lukewestby$elm_http_builder$HttpBuilder$send;
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionDetails$Success = function (a) {
	return {ctor: 'Success', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionDetails$Error = function (a) {
	return {ctor: 'Error', _0: a};
};
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionDetails$decoder = _elm_lang$core$Json_Decode$oneOf(
	{
		ctor: '::',
		_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionDetails$Error, _ryan_senn$stellar_elm_sdk$Stellar_Error$decoder),
		_1: {
			ctor: '::',
			_0: A2(_elm_lang$core$Json_Decode$map, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionDetails$Success, _ryan_senn$stellar_elm_sdk$Stellar_Resources_Transaction$decoder),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionDetails$requestBuilder = F2(
	function (endpoint, hash) {
		return A2(
			_lukewestby$elm_http_builder$HttpBuilder$withExpect,
			_elm_lang$http$Http$expectJson(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionDetails$decoder),
			_lukewestby$elm_http_builder$HttpBuilder$get(
				A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionDetails$url, endpoint, hash)));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_TransactionDetails_Msg$Response = function (a) {
	return {ctor: 'Response', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_TransactionDetails_Msg$Request = F2(
	function (a, b) {
		return {ctor: 'Request', _0: a, _1: b};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_TransactionDetails_Msg$SettingsMsg = function (a) {
	return {ctor: 'SettingsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_TransactionDetails_Msg$UpdateHash = function (a) {
	return {ctor: 'UpdateHash', _0: a};
};

var _ryan_senn$stellar_elm_demo$Endpoints_Msg$TransactionDetailsMsg = function (a) {
	return {ctor: 'TransactionDetailsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_Msg$TransactionsForLedgerMsg = function (a) {
	return {ctor: 'TransactionsForLedgerMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_Msg$TransactionsForAccountMsg = function (a) {
	return {ctor: 'TransactionsForAccountMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_Msg$PostTransactionMsg = function (a) {
	return {ctor: 'PostTransactionMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_Msg$AllTransactionsMsg = function (a) {
	return {ctor: 'AllTransactionsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_Msg$PaymentsForTransactionMsg = function (a) {
	return {ctor: 'PaymentsForTransactionMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_Msg$PaymentsForLedgerMsg = function (a) {
	return {ctor: 'PaymentsForLedgerMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_Msg$PaymentsForAccountMsg = function (a) {
	return {ctor: 'PaymentsForAccountMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_Msg$AllPaymentsMsg = function (a) {
	return {ctor: 'AllPaymentsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_Msg$FindPaymentPathsMsg = function (a) {
	return {ctor: 'FindPaymentPathsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_Msg$OrderbookDetailsMsg = function (a) {
	return {ctor: 'OrderbookDetailsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_Msg$OperationDetailsMsg = function (a) {
	return {ctor: 'OperationDetailsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_Msg$OperationsForTransactionMsg = function (a) {
	return {ctor: 'OperationsForTransactionMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_Msg$OperationsForLedgerMsg = function (a) {
	return {ctor: 'OperationsForLedgerMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_Msg$OperationsForAccountMsg = function (a) {
	return {ctor: 'OperationsForAccountMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_Msg$AllOperationsMsg = function (a) {
	return {ctor: 'AllOperationsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_Msg$OffersForAccountMsg = function (a) {
	return {ctor: 'OffersForAccountMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_Msg$LedgerDetailsMsg = function (a) {
	return {ctor: 'LedgerDetailsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_Msg$AllLedgersMsg = function (a) {
	return {ctor: 'AllLedgersMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_Msg$EffectsForTransactionMsg = function (a) {
	return {ctor: 'EffectsForTransactionMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_Msg$EffectsForOperationMsg = function (a) {
	return {ctor: 'EffectsForOperationMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_Msg$EffectsForLedgerMsg = function (a) {
	return {ctor: 'EffectsForLedgerMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_Msg$EffectsForAccountMsg = function (a) {
	return {ctor: 'EffectsForAccountMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_Msg$AllEffectsMsg = function (a) {
	return {ctor: 'AllEffectsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_Msg$DataForAccountMsg = function (a) {
	return {ctor: 'DataForAccountMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_Msg$AllAssetsMsg = function (a) {
	return {ctor: 'AllAssetsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_Msg$AccountDetailsMsg = function (a) {
	return {ctor: 'AccountDetailsMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Endpoints_Msg$UpdateEndpoint = function (a) {
	return {ctor: 'UpdateEndpoint', _0: a};
};

var _ryan_senn$stellar_elm_demo$Msg$EndpointMsg = function (a) {
	return {ctor: 'EndpointMsg', _0: a};
};
var _ryan_senn$stellar_elm_demo$Msg$SetRoute = function (a) {
	return {ctor: 'SetRoute', _0: a};
};

var _ryan_senn$stellar_elm_demo$Endpoints_MsgFactory$composeMsg = function (msg) {
	return _ryan_senn$stellar_elm_demo$Msg$EndpointMsg(msg);
};

var _ryan_senn$stellar_elm_demo$Endpoints_AccountDetails_MsgFactory$composeMsg = function (_p0) {
	return _ryan_senn$stellar_elm_demo$Endpoints_MsgFactory$composeMsg(
		_ryan_senn$stellar_elm_demo$Endpoints_Msg$AccountDetailsMsg(_p0));
};

var _ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfJust = F3(
	function (setter, mValue, requestBuilder) {
		var _p0 = mValue;
		if (_p0.ctor === 'Just') {
			return A2(setter, _p0._0, requestBuilder);
		} else {
			return requestBuilder;
		}
	});
var _ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChangedMaybe = F5(
	function (setter, getIsChanged, getValue, formElement, requestBuilder) {
		var _p1 = {
			ctor: '_Tuple2',
			_0: getIsChanged(formElement),
			_1: getValue(formElement)
		};
		if (((_p1.ctor === '_Tuple2') && (_p1._0 === true)) && (_p1._1.ctor === 'Just')) {
			return A2(setter, _p1._1._0, requestBuilder);
		} else {
			return requestBuilder;
		}
	});
var _ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChanged = F5(
	function (setter, getIsChanged, getValue, formElement, requestBuilder) {
		return getIsChanged(formElement) ? A2(
			setter,
			getValue(formElement),
			requestBuilder) : requestBuilder;
	});
var _ryan_senn$stellar_elm_demo$Endpoints_Helpers$publicKeyFromInput = function (inputModel) {
	return _bluedogtraining$bdt_elm$Form_Input$getValue(inputModel);
};
var _ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput = function (inputModel) {
	return _bluedogtraining$bdt_elm$Form_Input$getValue(inputModel);
};

var _ryan_senn$stellar_elm_demo$Endpoints_AccountDetails_RequestBuilder$requestBuilder = F2(
	function (endpoint, settings) {
		return A2(
			_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AccountDetails$requestBuilder,
			_ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput(endpoint),
			_ryan_senn$stellar_elm_demo$Endpoints_Helpers$publicKeyFromInput(settings.publicKey));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_AccountDetails_Update$updateSettings = F2(
	function (updateSettingsMsg, model) {
		var settingsModel = model.settings;
		var newSettingsModel = function () {
			var _p0 = updateSettingsMsg;
			return _elm_lang$core$Native_Utils.update(
				settingsModel,
				{
					publicKey: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p0._0, settingsModel.publicKey)
				});
		}();
		return _elm_lang$core$Native_Utils.update(
			model,
			{settings: newSettingsModel});
	});
var _ryan_senn$stellar_elm_demo$Endpoints_AccountDetails_Update$update = F2(
	function (msg, model) {
		var _p1 = msg;
		switch (_p1.ctor) {
			case 'SettingsMsg':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					A2(_ryan_senn$stellar_elm_demo$Endpoints_AccountDetails_Update$updateSettings, _p1._0, model),
					{ctor: '[]'});
			case 'Request':
				var request = A2(_ryan_senn$stellar_elm_demo$Endpoints_AccountDetails_RequestBuilder$requestBuilder, _p1._0, _p1._1);
				var msg = function (_p2) {
					return _ryan_senn$stellar_elm_demo$Endpoints_AccountDetails_MsgFactory$composeMsg(
						_ryan_senn$stellar_elm_demo$Endpoints_AccountDetails_Msg$Response(_p2));
				};
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{isLoading: true}),
					{
						ctor: '::',
						_0: A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AccountDetails$send, msg, request),
						_1: {ctor: '[]'}
					});
			default:
				if (_p1._0.ctor === 'Err') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									A2(_ryan_senn$stellar_elm_sdk$Stellar_Error$flattenError, _p1._0._0, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AccountDetails$Error))
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									_elm_lang$core$Result$Ok(_p1._0._0))
							}),
						{ctor: '[]'});
				}
		}
	});

var _ryan_senn$stellar_elm_demo$Styles$home = _rtfeldman$elm_css$Html_Styled_Attributes$css(
	{
		ctor: '::',
		_0: _rtfeldman$elm_css$Css$padding(
			_rtfeldman$elm_css$Css$px(25)),
		_1: {ctor: '[]'}
	});
var _ryan_senn$stellar_elm_demo$Styles$content = _rtfeldman$elm_css$Html_Styled_Attributes$css(
	{
		ctor: '::',
		_0: _rtfeldman$elm_css$Css$flexGrow(
			_rtfeldman$elm_css$Css$int(1)),
		_1: {ctor: '[]'}
	});
var _ryan_senn$stellar_elm_demo$Styles$sidebarItemLink = _rtfeldman$elm_css$Html_Styled_Attributes$css(
	{
		ctor: '::',
		_0: A4(
			_rtfeldman$elm_css$Css$padding4,
			_rtfeldman$elm_css$Css$px(3),
			_rtfeldman$elm_css$Css$px(30),
			_rtfeldman$elm_css$Css$px(3),
			_rtfeldman$elm_css$Css$px(25)),
		_1: {
			ctor: '::',
			_0: _rtfeldman$elm_css$Css$cursor(_rtfeldman$elm_css$Css$pointer),
			_1: {
				ctor: '::',
				_0: _rtfeldman$elm_css$Css$hover(
					{
						ctor: '::',
						_0: _rtfeldman$elm_css$Css$textDecoration(_rtfeldman$elm_css$Css$underline),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: _rtfeldman$elm_css$Css$whiteSpace(_rtfeldman$elm_css$Css$noWrap),
					_1: {
						ctor: '::',
						_0: _rtfeldman$elm_css$Css$width(
							_rtfeldman$elm_css$Css$pct(100)),
						_1: {
							ctor: '::',
							_0: _rtfeldman$elm_css$Css$display(_rtfeldman$elm_css$Css$block),
							_1: {ctor: '[]'}
						}
					}
				}
			}
		}
	});
var _ryan_senn$stellar_elm_demo$Styles$sidebarList = _rtfeldman$elm_css$Html_Styled_Attributes$css(
	{
		ctor: '::',
		_0: _rtfeldman$elm_css$Css$listStyleType(_rtfeldman$elm_css$Css$none),
		_1: {
			ctor: '::',
			_0: _rtfeldman$elm_css$Css$padding(
				_rtfeldman$elm_css$Css$px(0)),
			_1: {
				ctor: '::',
				_0: A2(
					_rtfeldman$elm_css$Css$margin2,
					_rtfeldman$elm_css$Css$px(10),
					_rtfeldman$elm_css$Css$px(0)),
				_1: {ctor: '[]'}
			}
		}
	});
var _ryan_senn$stellar_elm_demo$Styles$sidebarTitle = _rtfeldman$elm_css$Html_Styled_Attributes$css(
	{
		ctor: '::',
		_0: A2(
			_rtfeldman$elm_css$Css$margin2,
			_rtfeldman$elm_css$Css$px(5),
			_rtfeldman$elm_css$Css$px(20)),
		_1: {ctor: '[]'}
	});
var _ryan_senn$stellar_elm_demo$Styles$sidebar = _rtfeldman$elm_css$Html_Styled_Attributes$css(
	{
		ctor: '::',
		_0: _rtfeldman$elm_css$Css$backgroundColor(
			_rtfeldman$elm_css$Css$hex('e6f8fc')),
		_1: {
			ctor: '::',
			_0: A2(
				_rtfeldman$elm_css$Css$padding2,
				_rtfeldman$elm_css$Css$px(20),
				_rtfeldman$elm_css$Css$px(0)),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_demo$Styles$body = _rtfeldman$elm_css$Html_Styled_Attributes$css(
	{
		ctor: '::',
		_0: _rtfeldman$elm_css$Css$displayFlex,
		_1: {
			ctor: '::',
			_0: A3(
				_rtfeldman$elm_css$Css$borderTop3,
				_rtfeldman$elm_css$Css$px(1),
				_rtfeldman$elm_css$Css$solid,
				_rtfeldman$elm_css$Css$hex('dedfe0')),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_demo$Styles$elmTitle = _rtfeldman$elm_css$Html_Styled_Attributes$css(
	{
		ctor: '::',
		_0: _rtfeldman$elm_css$Css$color(
			_rtfeldman$elm_css$Css$hex('666666')),
		_1: {
			ctor: '::',
			_0: _rtfeldman$elm_css$Css$fontSize(
				_rtfeldman$elm_css$Css$em(0.8)),
			_1: {
				ctor: '::',
				_0: _rtfeldman$elm_css$Css$fontWeight(
					_rtfeldman$elm_css$Css$int(500)),
				_1: {
					ctor: '::',
					_0: _rtfeldman$elm_css$Css$marginLeft(
						_rtfeldman$elm_css$Css$px(10)),
					_1: {
						ctor: '::',
						_0: _rtfeldman$elm_css$Css$cursor(_rtfeldman$elm_css$Css$pointer),
						_1: {
							ctor: '::',
							_0: _rtfeldman$elm_css$Css$textDecoration(_rtfeldman$elm_css$Css$none),
							_1: {ctor: '[]'}
						}
					}
				}
			}
		}
	});
var _ryan_senn$stellar_elm_demo$Styles$stellarTitle = _rtfeldman$elm_css$Html_Styled_Attributes$css(
	{
		ctor: '::',
		_0: _rtfeldman$elm_css$Css$color(
			_rtfeldman$elm_css$Css$hex('08b5e5')),
		_1: {
			ctor: '::',
			_0: _rtfeldman$elm_css$Css$fontWeight(
				_rtfeldman$elm_css$Css$int(700)),
			_1: {
				ctor: '::',
				_0: _rtfeldman$elm_css$Css$fontSize(
					_rtfeldman$elm_css$Css$em(1.2)),
				_1: {
					ctor: '::',
					_0: _rtfeldman$elm_css$Css$cursor(_rtfeldman$elm_css$Css$pointer),
					_1: {
						ctor: '::',
						_0: _rtfeldman$elm_css$Css$textDecoration(_rtfeldman$elm_css$Css$none),
						_1: {ctor: '[]'}
					}
				}
			}
		}
	});
var _ryan_senn$stellar_elm_demo$Styles$title = _rtfeldman$elm_css$Html_Styled_Attributes$css(
	{
		ctor: '::',
		_0: _rtfeldman$elm_css$Css$margin(
			_rtfeldman$elm_css$Css$px(0)),
		_1: {ctor: '[]'}
	});
var _ryan_senn$stellar_elm_demo$Styles$header = _rtfeldman$elm_css$Html_Styled_Attributes$css(
	{
		ctor: '::',
		_0: _rtfeldman$elm_css$Css$displayFlex,
		_1: {
			ctor: '::',
			_0: _rtfeldman$elm_css$Css$padding(
				_rtfeldman$elm_css$Css$em(1)),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_demo$Styles$layout = _rtfeldman$elm_css$Html_Styled_Attributes$css(
	{
		ctor: '::',
		_0: _rtfeldman$elm_css$Css$displayFlex,
		_1: {
			ctor: '::',
			_0: _rtfeldman$elm_css$Css$flexDirection(_rtfeldman$elm_css$Css$column),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_demo$Styles_ops = _ryan_senn$stellar_elm_demo$Styles_ops || {};
_ryan_senn$stellar_elm_demo$Styles_ops['?'] = F2(
	function (style, shouldDisplay) {
		var _p0 = shouldDisplay;
		if (_p0 === true) {
			return style;
		} else {
			return _rtfeldman$elm_css$Css$resize(_rtfeldman$elm_css$Css$none);
		}
	});
var _ryan_senn$stellar_elm_demo$Styles$sidebarItem = function (isSelected) {
	return _rtfeldman$elm_css$Html_Styled_Attributes$css(
		{
			ctor: '::',
			_0: A2(
				_ryan_senn$stellar_elm_demo$Styles_ops['?'],
				_rtfeldman$elm_css$Css$backgroundColor(
					_rtfeldman$elm_css$Css$hex('ffffff')),
				isSelected),
			_1: {
				ctor: '::',
				_0: A2(
					_ryan_senn$stellar_elm_demo$Styles_ops['?'],
					A3(
						_rtfeldman$elm_css$Css$borderLeft3,
						_rtfeldman$elm_css$Css$px(10),
						_rtfeldman$elm_css$Css$solid,
						_rtfeldman$elm_css$Css$hex('08b5e5')),
					isSelected),
				_1: {
					ctor: '::',
					_0: A2(
						_ryan_senn$stellar_elm_demo$Styles_ops['?'],
						A3(
							_rtfeldman$elm_css$Css$borderLeft3,
							_rtfeldman$elm_css$Css$px(10),
							_rtfeldman$elm_css$Css$solid,
							_rtfeldman$elm_css$Css$transparent),
						!isSelected),
					_1: {ctor: '[]'}
				}
			}
		});
};

var _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton = function (isSelected) {
	return _rtfeldman$elm_css$Html_Styled_Attributes$css(
		{
			ctor: '::',
			_0: A2(
				_rtfeldman$elm_css$Css$padding2,
				_rtfeldman$elm_css$Css$px(8),
				_rtfeldman$elm_css$Css$px(12)),
			_1: {
				ctor: '::',
				_0: _rtfeldman$elm_css$Css$backgroundColor(
					isSelected ? _rtfeldman$elm_css$Css$hex('e6f8fc') : _rtfeldman$elm_css$Css$hex('ffffff')),
				_1: {
					ctor: '::',
					_0: _rtfeldman$elm_css$Css$outlineWidth(
						_rtfeldman$elm_css$Css$px(0)),
					_1: {
						ctor: '::',
						_0: _rtfeldman$elm_css$Css$cursor(_rtfeldman$elm_css$Css$pointer),
						_1: {
							ctor: '::',
							_0: A3(
								_rtfeldman$elm_css$Css$border3,
								_rtfeldman$elm_css$Css$px(1),
								_rtfeldman$elm_css$Css$solid,
								_rtfeldman$elm_css$Css$hex('dddddd')),
							_1: {
								ctor: '::',
								_0: _rtfeldman$elm_css$Css$display(_rtfeldman$elm_css$Css$inlineBlock),
								_1: {
									ctor: '::',
									_0: _rtfeldman$elm_css$Css$marginRight(
										_rtfeldman$elm_css$Css$px(5)),
									_1: {
										ctor: '::',
										_0: _rtfeldman$elm_css$Css$borderRadius(
											_rtfeldman$elm_css$Css$px(3)),
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}
				}
			}
		});
};
var _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample = _rtfeldman$elm_css$Html_Styled_Attributes$css(
	{
		ctor: '::',
		_0: _rtfeldman$elm_css$Css$color(
			_rtfeldman$elm_css$Css$hex('777777')),
		_1: {
			ctor: '::',
			_0: _rtfeldman$elm_css$Css$marginLeft(
				_rtfeldman$elm_css$Css$px(10)),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelMandatory = _rtfeldman$elm_css$Html_Styled_Attributes$css(
	{
		ctor: '::',
		_0: _rtfeldman$elm_css$Css$after(
			{
				ctor: '::',
				_0: A2(_rtfeldman$elm_css$Css$property, 'content', '\" *\"'),
				_1: {ctor: '[]'}
			}),
		_1: {ctor: '[]'}
	});
var _ryan_senn$stellar_elm_demo$Endpoints_Styles$label = _rtfeldman$elm_css$Html_Styled_Attributes$css(
	{
		ctor: '::',
		_0: _rtfeldman$elm_css$Css$marginTop(
			_rtfeldman$elm_css$Css$px(15)),
		_1: {
			ctor: '::',
			_0: _rtfeldman$elm_css$Css$marginBottom(
				_rtfeldman$elm_css$Css$px(3)),
			_1: {
				ctor: '::',
				_0: _rtfeldman$elm_css$Css$display(_rtfeldman$elm_css$Css$block),
				_1: {ctor: '[]'}
			}
		}
	});
var _ryan_senn$stellar_elm_demo$Endpoints_Styles$requestButton = function (isLoading) {
	return _rtfeldman$elm_css$Html_Styled_Attributes$css(
		{
			ctor: '::',
			_0: _rtfeldman$elm_css$Css$backgroundColor(
				_rtfeldman$elm_css$Css$hex('ffffff')),
			_1: {
				ctor: '::',
				_0: A2(
					_rtfeldman$elm_css$Css$padding2,
					_rtfeldman$elm_css$Css$px(8),
					_rtfeldman$elm_css$Css$px(12)),
				_1: {
					ctor: '::',
					_0: A3(
						_rtfeldman$elm_css$Css$border3,
						_rtfeldman$elm_css$Css$px(1),
						_rtfeldman$elm_css$Css$solid,
						_rtfeldman$elm_css$Css$hex('dfdfdfdf')),
					_1: {
						ctor: '::',
						_0: _rtfeldman$elm_css$Css$marginTop(
							_rtfeldman$elm_css$Css$px(15)),
						_1: {
							ctor: '::',
							_0: A2(
								_ryan_senn$stellar_elm_demo$Styles_ops['?'],
								_rtfeldman$elm_css$Css$cursor(_rtfeldman$elm_css$Css$pointer),
								!isLoading),
							_1: {
								ctor: '::',
								_0: _rtfeldman$elm_css$Css$fontSize(
									_rtfeldman$elm_css$Css$px(14)),
								_1: {
									ctor: '::',
									_0: _rtfeldman$elm_css$Css$borderRadius(
										_rtfeldman$elm_css$Css$px(3)),
									_1: {
										ctor: '::',
										_0: _rtfeldman$elm_css$Css$outlineWidth(
											_rtfeldman$elm_css$Css$px(0)),
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}
				}
			}
		});
};
var _ryan_senn$stellar_elm_demo$Endpoints_Styles$requestHttpBarUrl = _rtfeldman$elm_css$Html_Styled_Attributes$css(
	{
		ctor: '::',
		_0: _rtfeldman$elm_css$Css$cursor(_rtfeldman$elm_css$Css$pointer),
		_1: {
			ctor: '::',
			_0: _rtfeldman$elm_css$Css$flexGrow(
				_rtfeldman$elm_css$Css$int(1)),
			_1: {
				ctor: '::',
				_0: A2(
					_rtfeldman$elm_css$Css$padding2,
					_rtfeldman$elm_css$Css$px(8),
					_rtfeldman$elm_css$Css$px(12)),
				_1: {
					ctor: '::',
					_0: A3(
						_rtfeldman$elm_css$Css$border3,
						_rtfeldman$elm_css$Css$px(1),
						_rtfeldman$elm_css$Css$solid,
						_rtfeldman$elm_css$Css$hex('dfdfdfdf')),
					_1: {
						ctor: '::',
						_0: A2(_rtfeldman$elm_css$Css$property, 'word-break', 'break-word'),
						_1: {ctor: '[]'}
					}
				}
			}
		}
	});
var _ryan_senn$stellar_elm_demo$Endpoints_Styles$requestHttpBarType = _rtfeldman$elm_css$Html_Styled_Attributes$css(
	{
		ctor: '::',
		_0: A2(
			_rtfeldman$elm_css$Css$padding2,
			_rtfeldman$elm_css$Css$px(8),
			_rtfeldman$elm_css$Css$px(12)),
		_1: {
			ctor: '::',
			_0: _rtfeldman$elm_css$Css$backgroundColor(
				_rtfeldman$elm_css$Css$hex('f6f6f6f6')),
			_1: {
				ctor: '::',
				_0: A3(
					_rtfeldman$elm_css$Css$border3,
					_rtfeldman$elm_css$Css$px(1),
					_rtfeldman$elm_css$Css$solid,
					_rtfeldman$elm_css$Css$hex('dfdfdfdf')),
				_1: {
					ctor: '::',
					_0: _rtfeldman$elm_css$Css$borderRightWidth(
						_rtfeldman$elm_css$Css$px(0)),
					_1: {ctor: '[]'}
				}
			}
		}
	});
var _ryan_senn$stellar_elm_demo$Endpoints_Styles$requestHttpBar = _rtfeldman$elm_css$Html_Styled_Attributes$css(
	{
		ctor: '::',
		_0: _rtfeldman$elm_css$Css$displayFlex,
		_1: {
			ctor: '::',
			_0: _rtfeldman$elm_css$Css$marginTop(
				_rtfeldman$elm_css$Css$px(15)),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_demo$Endpoints_Styles$response = _rtfeldman$elm_css$Html_Styled_Attributes$css(
	{
		ctor: '::',
		_0: _rtfeldman$elm_css$Css$maxWidth(
			A3(
				_rtfeldman$elm_css$Css$calc,
				_rtfeldman$elm_css$Css$vw(100),
				_rtfeldman$elm_css$Css$minus,
				_rtfeldman$elm_css$Css$px(350))),
		_1: {ctor: '[]'}
	});
var _ryan_senn$stellar_elm_demo$Endpoints_Styles$pageTitleLink = _rtfeldman$elm_css$Html_Styled_Attributes$css(
	{
		ctor: '::',
		_0: _rtfeldman$elm_css$Css$marginLeft(
			_rtfeldman$elm_css$Css$px(10)),
		_1: {
			ctor: '::',
			_0: _rtfeldman$elm_css$Css$marginTop(
				_rtfeldman$elm_css$Css$px(5)),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_demo$Endpoints_Styles$pageTitleContainer = _rtfeldman$elm_css$Html_Styled_Attributes$css(
	{
		ctor: '::',
		_0: _rtfeldman$elm_css$Css$displayFlex,
		_1: {
			ctor: '::',
			_0: _rtfeldman$elm_css$Css$alignItems(_rtfeldman$elm_css$Css$center),
			_1: {ctor: '[]'}
		}
	});
var _ryan_senn$stellar_elm_demo$Endpoints_Styles$officialLink = _rtfeldman$elm_css$Html_Styled_Attributes$css(
	{
		ctor: '::',
		_0: _rtfeldman$elm_css$Css$marginLeft(
			_rtfeldman$elm_css$Css$px(10)),
		_1: {
			ctor: '::',
			_0: _rtfeldman$elm_css$Css$lineHeight(
				_rtfeldman$elm_css$Css$em(1.7)),
			_1: {
				ctor: '::',
				_0: _rtfeldman$elm_css$Css$marginBottom(
					_rtfeldman$elm_css$Css$px(4)),
				_1: {ctor: '[]'}
			}
		}
	});
var _ryan_senn$stellar_elm_demo$Endpoints_Styles$title = _rtfeldman$elm_css$Html_Styled_Attributes$css(
	{
		ctor: '::',
		_0: _rtfeldman$elm_css$Css$margin(
			_rtfeldman$elm_css$Css$px(0)),
		_1: {ctor: '[]'}
	});
var _ryan_senn$stellar_elm_demo$Endpoints_Styles$titleContainer = _rtfeldman$elm_css$Html_Styled_Attributes$css(
	{
		ctor: '::',
		_0: A3(
			_rtfeldman$elm_css$Css$borderBottom3,
			_rtfeldman$elm_css$Css$px(1),
			_rtfeldman$elm_css$Css$solid,
			_rtfeldman$elm_css$Css$hex('dedfe0')),
		_1: {
			ctor: '::',
			_0: A2(
				_rtfeldman$elm_css$Css$padding2,
				_rtfeldman$elm_css$Css$px(20),
				_rtfeldman$elm_css$Css$px(40)),
			_1: {
				ctor: '::',
				_0: _rtfeldman$elm_css$Css$displayFlex,
				_1: {
					ctor: '::',
					_0: _rtfeldman$elm_css$Css$alignItems(_rtfeldman$elm_css$Css$flexEnd),
					_1: {ctor: '[]'}
				}
			}
		}
	});
var _ryan_senn$stellar_elm_demo$Endpoints_Styles$page = _rtfeldman$elm_css$Html_Styled_Attributes$css(
	{
		ctor: '::',
		_0: A2(
			_rtfeldman$elm_css$Css$padding2,
			_rtfeldman$elm_css$Css$px(10),
			_rtfeldman$elm_css$Css$px(40)),
		_1: {ctor: '[]'}
	});

var _ryan_senn$stellar_elm_demo$Endpoints_Views_Title$view = F2(
	function (title, link) {
		return A2(
			_rtfeldman$elm_css$Html_Styled$div,
			{
				ctor: '::',
				_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$titleContainer,
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_rtfeldman$elm_css$Html_Styled$h1,
					{
						ctor: '::',
						_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$title,
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _rtfeldman$elm_css$Html_Styled$text(title),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_rtfeldman$elm_css$Html_Styled$span,
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$officialLink,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _rtfeldman$elm_css$Html_Styled$text('Link to the offial docs: '),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_rtfeldman$elm_css$Html_Styled$a,
							{
								ctor: '::',
								_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$officialLink,
								_1: {
									ctor: '::',
									_0: _rtfeldman$elm_css$Html_Styled_Attributes$href(link),
									_1: {
										ctor: '::',
										_0: _rtfeldman$elm_css$Html_Styled_Attributes$target('_blank'),
										_1: {ctor: '[]'}
									}
								}
							},
							{
								ctor: '::',
								_0: _rtfeldman$elm_css$Html_Styled$text(title),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}
			});
	});

var _ryan_senn$stellar_elm_demo$Endpoints_Views_RequestTitle$view = function (title) {
	return A2(
		_rtfeldman$elm_css$Html_Styled$div,
		{
			ctor: '::',
			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$pageTitleContainer,
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_rtfeldman$elm_css$Html_Styled$h2,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _rtfeldman$elm_css$Html_Styled$text('Response'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_rtfeldman$elm_css$Html_Styled$a,
					{
						ctor: '::',
						_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$pageTitleLink,
						_1: {
							ctor: '::',
							_0: _rtfeldman$elm_css$Html_Styled_Attributes$href(
								A2(
									_elm_lang$core$Basics_ops['++'],
									'http://package.elm-lang.org/packages/ryan-senn/stellar-elm-sdk/',
									A2(
										_elm_lang$core$Basics_ops['++'],
										_ryan_senn$stellar_elm_demo$Config$sdkVersion,
										A2(
											_elm_lang$core$Basics_ops['++'],
											'/Stellar-Endpoints-',
											A2(_elm_lang$core$Basics_ops['++'], title, '#Response'))))),
							_1: {
								ctor: '::',
								_0: _rtfeldman$elm_css$Html_Styled_Attributes$target('_blank'),
								_1: {ctor: '[]'}
							}
						}
					},
					{
						ctor: '::',
						_0: _rtfeldman$elm_css$Html_Styled$text('View Reponse on Elm Packages Documentation'),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};

var _ryan_senn$stellar_elm_demo$Endpoints_Views_Endpoint$view = function (inputModel) {
	return A2(
		_rtfeldman$elm_css$Html_Styled$div,
		{
			ctor: '::',
			_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_rtfeldman$elm_css$Html_Styled$label,
				{
					ctor: '::',
					_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
					_1: {
						ctor: '::',
						_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelMandatory,
						_1: {ctor: '[]'}
					}
				},
				{
					ctor: '::',
					_0: _rtfeldman$elm_css$Html_Styled$text('Endpoint'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_rtfeldman$elm_css$Html_Styled$map,
					function (_p0) {
						return _ryan_senn$stellar_elm_demo$Endpoints_MsgFactory$composeMsg(
							_ryan_senn$stellar_elm_demo$Endpoints_Msg$UpdateEndpoint(_p0));
					},
					_bluedogtraining$bdt_elm$Form_Input$render(
						_bluedogtraining$bdt_elm$Form_Input$view(inputModel))),
				_1: {ctor: '[]'}
			}
		});
};

var _ryan_senn$stellar_elm_demo$Endpoints_Views_Request$replace = F2(
	function (old, $new) {
		return function (_p0) {
			return A2(
				_elm_lang$core$String$join,
				$new,
				A2(_elm_lang$core$String$split, old, _p0));
		};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_Views_Request$queryEscape = function (_p1) {
	return A3(
		_ryan_senn$stellar_elm_demo$Endpoints_Views_Request$replace,
		'%20',
		'+',
		_elm_lang$http$Http$encodeUri(_p1));
};
var _ryan_senn$stellar_elm_demo$Endpoints_Views_Request$queryPair = function (_p2) {
	var _p3 = _p2;
	return A2(
		_elm_lang$core$Basics_ops['++'],
		_ryan_senn$stellar_elm_demo$Endpoints_Views_Request$queryEscape(_p3._0),
		A2(
			_elm_lang$core$Basics_ops['++'],
			'=',
			_ryan_senn$stellar_elm_demo$Endpoints_Views_Request$queryEscape(_p3._1)));
};
var _ryan_senn$stellar_elm_demo$Endpoints_Views_Request$joinUrlEncoded = function (args) {
	return A2(
		_elm_lang$core$String$join,
		'&',
		A2(_elm_lang$core$List$map, _ryan_senn$stellar_elm_demo$Endpoints_Views_Request$queryPair, args));
};
var _ryan_senn$stellar_elm_demo$Endpoints_Views_Request$queryParams = function (args) {
	var _p4 = _elm_lang$core$List$isEmpty(args);
	if (_p4 === false) {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			'?',
			_ryan_senn$stellar_elm_demo$Endpoints_Views_Request$joinUrlEncoded(args));
	} else {
		return '';
	}
};
var _ryan_senn$stellar_elm_demo$Endpoints_Views_Request$view = function (requestBuilder) {
	var _p5 = requestBuilder.method;
	switch (_p5) {
		case 'GET':
			return A2(
				_rtfeldman$elm_css$Html_Styled$div,
				{
					ctor: '::',
					_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$requestHttpBar,
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_rtfeldman$elm_css$Html_Styled$div,
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$requestHttpBarType,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _rtfeldman$elm_css$Html_Styled$text('GET'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_rtfeldman$elm_css$Html_Styled$div,
							{
								ctor: '::',
								_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$requestHttpBarUrl,
								_1: {
									ctor: '::',
									_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('clipboard'),
									_1: {
										ctor: '::',
										_0: _rtfeldman$elm_css$Html_Styled_Attributes$title('Copy to Clipboard'),
										_1: {
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled_Attributes$attribute,
												'data-clipboard-text',
												A2(
													_elm_lang$core$Basics_ops['++'],
													requestBuilder.url,
													_ryan_senn$stellar_elm_demo$Endpoints_Views_Request$queryParams(requestBuilder.queryParams))),
											_1: {ctor: '[]'}
										}
									}
								}
							},
							{
								ctor: '::',
								_0: _rtfeldman$elm_css$Html_Styled$text(
									A2(
										_elm_lang$core$Basics_ops['++'],
										requestBuilder.url,
										_ryan_senn$stellar_elm_demo$Endpoints_Views_Request$queryParams(requestBuilder.queryParams))),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				});
		case 'POST':
			return A2(
				_rtfeldman$elm_css$Html_Styled$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _rtfeldman$elm_css$Html_Styled$text('POST'),
					_1: {ctor: '[]'}
				});
		default:
			return A2(
				_rtfeldman$elm_css$Html_Styled$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _rtfeldman$elm_css$Html_Styled$text('Request Type not Supported'),
					_1: {ctor: '[]'}
				});
	}
};

var _ryan_senn$stellar_elm_demo$Endpoints_Views_Button$view = F2(
	function (isLoading, msg) {
		return A2(
			_rtfeldman$elm_css$Html_Styled$button,
			{
				ctor: '::',
				_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$requestButton(isLoading),
				_1: {
					ctor: '::',
					_0: A2(
						_bluedogtraining$bdt_elm$Html_Styled_Bdt_ops['?'],
						_rtfeldman$elm_css$Html_Styled_Events$onClick(msg),
						!isLoading),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: _rtfeldman$elm_css$Html_Styled$text('Submit Request'),
				_1: {ctor: '[]'}
			});
	});

var _ryan_senn$stellar_elm_demo$Endpoints_Views_Response$record = F2(
	function (response, isLoading) {
		var _p0 = {ctor: '_Tuple2', _0: isLoading, _1: response};
		_v0_0:
		do {
			if (_p0._1.ctor === 'Nothing') {
				if (_p0._0 === true) {
					break _v0_0;
				} else {
					return _rtfeldman$elm_css$Html_Styled$toUnstyled(
						A2(
							_rtfeldman$elm_css$Html_Styled$p,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _rtfeldman$elm_css$Html_Styled$text('Not requested yet.'),
								_1: {ctor: '[]'}
							}));
				}
			} else {
				if (_p0._0 === true) {
					break _v0_0;
				} else {
					return _rtfeldman$elm_css$Html_Styled$toUnstyled(
						A2(
							_rtfeldman$elm_css$Html_Styled$div,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: A2(
									_rtfeldman$elm_css$Html_Styled$pre,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: A2(
											_rtfeldman$elm_css$Html_Styled$code,
											{
												ctor: '::',
												_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('elm'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: _rtfeldman$elm_css$Html_Styled$text(
													_ryan_senn$elm_record_formatter$RecordFormatter$toString(_p0._1._0)),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A3(
										_rtfeldman$elm_css$Html_Styled$node,
										'script',
										{ctor: '[]'},
										{
											ctor: '::',
											_0: _rtfeldman$elm_css$Html_Styled$text('hljs.initHighlighting.called = false;hljs.initHighlighting();'),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}
							}));
				}
			}
		} while(false);
		return _rtfeldman$elm_css$Html_Styled$toUnstyled(
			A2(
				_rtfeldman$elm_css$Html_Styled$p,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _rtfeldman$elm_css$Html_Styled$text('Loading...'),
					_1: {ctor: '[]'}
				}));
	});
var _ryan_senn$stellar_elm_demo$Endpoints_Views_Response$view = F3(
	function (link, response, isLoading) {
		return A2(
			_rtfeldman$elm_css$Html_Styled$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(
					_rtfeldman$elm_css$Html_Styled$div,
					{
						ctor: '::',
						_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$pageTitleContainer,
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_rtfeldman$elm_css$Html_Styled$h2,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _rtfeldman$elm_css$Html_Styled$text('Response'),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_rtfeldman$elm_css$Html_Styled$a,
								{
									ctor: '::',
									_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$pageTitleLink,
									_1: {
										ctor: '::',
										_0: _rtfeldman$elm_css$Html_Styled_Attributes$href(
											A2(
												_elm_lang$core$Basics_ops['++'],
												'http://package.elm-lang.org/packages/ryan-senn/stellar-elm-sdk/',
												A2(_elm_lang$core$Basics_ops['++'], _ryan_senn$stellar_elm_demo$Config$sdkVersion, '/Stellar-Endpoints-AccountDetails#Response'))),
										_1: {
											ctor: '::',
											_0: _rtfeldman$elm_css$Html_Styled_Attributes$target('_blank'),
											_1: {ctor: '[]'}
										}
									}
								},
								{
									ctor: '::',
									_0: _rtfeldman$elm_css$Html_Styled$text('View Reponse on Elm Packages Documentation'),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}),
				_1: {
					ctor: '::',
					_0: A3(_rtfeldman$elm_css$Html_Styled_Lazy$lazy2, _ryan_senn$stellar_elm_demo$Endpoints_Views_Response$record, response, isLoading),
					_1: {ctor: '[]'}
				}
			});
	});

var _ryan_senn$stellar_elm_demo$Endpoints_AccountDetails_View$view = F2(
	function (endpoint, model) {
		return A2(
			_rtfeldman$elm_css$Html_Styled$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(_ryan_senn$stellar_elm_demo$Endpoints_Views_Title$view, 'Account Details', 'https://www.stellar.org/developers/horizon/reference/endpoints/accounts-single.html'),
				_1: {
					ctor: '::',
					_0: A2(
						_rtfeldman$elm_css$Html_Styled$div,
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$page,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_RequestTitle$view('AccountDetails'),
							_1: {
								ctor: '::',
								_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Endpoint$view(endpoint),
								_1: {
									ctor: '::',
									_0: A2(
										_rtfeldman$elm_css$Html_Styled$div,
										{
											ctor: '::',
											_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$label,
												{
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$span,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelMandatory,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: _rtfeldman$elm_css$Html_Styled$text('Public Key'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('(eg: GA2HGBJIJKI6O4XEM7CZWY5PS6GKSXL6D34ERAJYQSPYA6X6AI7HYW36)'),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$map,
													function (_p0) {
														return _ryan_senn$stellar_elm_demo$Endpoints_AccountDetails_MsgFactory$composeMsg(
															_ryan_senn$stellar_elm_demo$Endpoints_AccountDetails_Msg$SettingsMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_AccountDetails_Msg$UpdatePublicKey(_p0)));
													},
													_bluedogtraining$bdt_elm$Form_Input$render(
														_bluedogtraining$bdt_elm$Form_Input$view(model.settings.publicKey))),
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Request$view(
											A2(_ryan_senn$stellar_elm_demo$Endpoints_AccountDetails_RequestBuilder$requestBuilder, endpoint, model.settings)),
										_1: {
											ctor: '::',
											_0: A2(
												_ryan_senn$stellar_elm_demo$Endpoints_Views_Button$view,
												model.isLoading,
												_ryan_senn$stellar_elm_demo$Endpoints_AccountDetails_MsgFactory$composeMsg(
													A2(_ryan_senn$stellar_elm_demo$Endpoints_AccountDetails_Msg$Request, endpoint, model.settings))),
											_1: {
												ctor: '::',
												_0: A3(_ryan_senn$stellar_elm_demo$Endpoints_Views_Response$view, 'AccountDetails', model.response, model.isLoading),
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	});

var _ryan_senn$stellar_elm_demo$Endpoints_AllAssets_MsgFactory$composeMsg = function (_p0) {
	return _ryan_senn$stellar_elm_demo$Endpoints_MsgFactory$composeMsg(
		_ryan_senn$stellar_elm_demo$Endpoints_Msg$AllAssetsMsg(_p0));
};

var _ryan_senn$stellar_elm_demo$Endpoints_AllAssets_RequestBuilder$requestBuilder = F2(
	function (endpoint, settings) {
		return A3(
			_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfJust,
			_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllAssets$setSorting,
			settings.sorting,
			A5(
				_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChangedMaybe,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllAssets$setLimit,
				_bluedogtraining$bdt_elm$Form_IntInput$getIsChanged,
				_bluedogtraining$bdt_elm$Form_IntInput$getValue,
				settings.limit,
				A5(
					_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChanged,
					_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllAssets$setCursor,
					_bluedogtraining$bdt_elm$Form_Input$getIsChanged,
					_bluedogtraining$bdt_elm$Form_Input$getValue,
					settings.cursor,
					A5(
						_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChanged,
						_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllAssets$setAssetIssuer,
						_bluedogtraining$bdt_elm$Form_Input$getIsChanged,
						_bluedogtraining$bdt_elm$Form_Input$getValue,
						settings.assetIssuer,
						A5(
							_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChanged,
							_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllAssets$setAssetCode,
							_bluedogtraining$bdt_elm$Form_Input$getIsChanged,
							_bluedogtraining$bdt_elm$Form_Input$getValue,
							settings.assetCode,
							_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllAssets$requestBuilder(endpoint))))));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_AllAssets_Update$updateSettings = F2(
	function (updateSettingsMsg, model) {
		var settingsModel = model.settings;
		var newSettingsModel = function () {
			var _p0 = updateSettingsMsg;
			switch (_p0.ctor) {
				case 'UpdateAssetCode':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							assetCode: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p0._0, settingsModel.assetCode)
						});
				case 'UpdateAssetIssuer':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							assetIssuer: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p0._0, settingsModel.assetIssuer)
						});
				case 'UpdateCursor':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							cursor: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p0._0, settingsModel.cursor)
						});
				case 'UpdateLimit':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							limit: A2(_bluedogtraining$bdt_elm$Form_IntInput$update, _p0._0, settingsModel.limit)
						});
				default:
					var _p1 = _p0._0;
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							sorting: _elm_lang$core$Native_Utils.eq(
								settingsModel.sorting,
								_elm_lang$core$Maybe$Just(_p1)) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(_p1)
						});
			}
		}();
		return _elm_lang$core$Native_Utils.update(
			model,
			{settings: newSettingsModel});
	});
var _ryan_senn$stellar_elm_demo$Endpoints_AllAssets_Update$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'SettingsMsg':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					A2(_ryan_senn$stellar_elm_demo$Endpoints_AllAssets_Update$updateSettings, _p2._0, model),
					{ctor: '[]'});
			case 'Request':
				var request = A2(_ryan_senn$stellar_elm_demo$Endpoints_AllAssets_RequestBuilder$requestBuilder, _p2._0, _p2._1);
				var msg = function (_p3) {
					return _ryan_senn$stellar_elm_demo$Endpoints_AllAssets_MsgFactory$composeMsg(
						_ryan_senn$stellar_elm_demo$Endpoints_AllAssets_Msg$Response(_p3));
				};
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{isLoading: true}),
					{
						ctor: '::',
						_0: A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllAssets$send, msg, request),
						_1: {ctor: '[]'}
					});
			default:
				if (_p2._0.ctor === 'Err') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									A2(_ryan_senn$stellar_elm_sdk$Stellar_Error$flattenError, _p2._0._0, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllAssets$Error))
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									_elm_lang$core$Result$Ok(_p2._0._0))
							}),
						{ctor: '[]'});
				}
		}
	});

var _ryan_senn$stellar_elm_demo$Endpoints_AllAssets_View$view = F2(
	function (endpoint, model) {
		return A2(
			_rtfeldman$elm_css$Html_Styled$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(_ryan_senn$stellar_elm_demo$Endpoints_Views_Title$view, 'All Assets', 'https://www.stellar.org/developers/horizon/reference/endpoints/assets-all.html'),
				_1: {
					ctor: '::',
					_0: A2(
						_rtfeldman$elm_css$Html_Styled$div,
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$page,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_RequestTitle$view('AllAssets'),
							_1: {
								ctor: '::',
								_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Endpoint$view(endpoint),
								_1: {
									ctor: '::',
									_0: A2(
										_rtfeldman$elm_css$Html_Styled$div,
										{
											ctor: '::',
											_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$label,
												{
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$span,
														{ctor: '[]'},
														{
															ctor: '::',
															_0: _rtfeldman$elm_css$Html_Styled$text('Asset Code'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('(eg: USD)'),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$map,
													function (_p0) {
														return _ryan_senn$stellar_elm_demo$Endpoints_AllAssets_MsgFactory$composeMsg(
															_ryan_senn$stellar_elm_demo$Endpoints_AllAssets_Msg$SettingsMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_AllAssets_Msg$UpdateAssetCode(_p0)));
													},
													_bluedogtraining$bdt_elm$Form_Input$render(
														_bluedogtraining$bdt_elm$Form_Input$view(model.settings.assetCode))),
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_rtfeldman$elm_css$Html_Styled$div,
											{
												ctor: '::',
												_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$label,
													{
														ctor: '::',
														_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('Asset Issuer'),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{
																	ctor: '::',
																	_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																	_1: {ctor: '[]'}
																},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('(eg: GA2HGBJIJKI6O4XEM7CZWY5PS6GKSXL6D34ERAJYQSPYA6X6AI7HYW36)'),
																	_1: {ctor: '[]'}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$map,
														function (_p1) {
															return _ryan_senn$stellar_elm_demo$Endpoints_AllAssets_MsgFactory$composeMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_AllAssets_Msg$SettingsMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_AllAssets_Msg$UpdateAssetIssuer(_p1)));
														},
														_bluedogtraining$bdt_elm$Form_Input$render(
															_bluedogtraining$bdt_elm$Form_Input$view(model.settings.assetIssuer))),
													_1: {ctor: '[]'}
												}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$div,
												{
													ctor: '::',
													_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$label,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('Cursor'),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{
																		ctor: '::',
																		_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																		_1: {ctor: '[]'}
																	},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 1)'),
																		_1: {ctor: '[]'}
																	}),
																_1: {ctor: '[]'}
															}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$map,
															function (_p2) {
																return _ryan_senn$stellar_elm_demo$Endpoints_AllAssets_MsgFactory$composeMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_AllAssets_Msg$SettingsMsg(
																		_ryan_senn$stellar_elm_demo$Endpoints_AllAssets_Msg$UpdateCursor(_p2)));
															},
															_bluedogtraining$bdt_elm$Form_Input$render(
																_bluedogtraining$bdt_elm$Form_Input$view(model.settings.cursor))),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$div,
													{
														ctor: '::',
														_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$label,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{ctor: '[]'},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('Limit'),
																		_1: {ctor: '[]'}
																	}),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																			_1: {ctor: '[]'}
																		},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 200, default: 10)'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {ctor: '[]'}
																}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$map,
																function (_p3) {
																	return _ryan_senn$stellar_elm_demo$Endpoints_AllAssets_MsgFactory$composeMsg(
																		_ryan_senn$stellar_elm_demo$Endpoints_AllAssets_Msg$SettingsMsg(
																			_ryan_senn$stellar_elm_demo$Endpoints_AllAssets_Msg$UpdateLimit(_p3)));
																},
																_bluedogtraining$bdt_elm$Form_IntInput$render(
																	_bluedogtraining$bdt_elm$Form_IntInput$view(model.settings.limit))),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$div,
														{
															ctor: '::',
															_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$label,
																{
																	ctor: '::',
																	_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
																	_1: {ctor: '[]'}
																},
																{
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{ctor: '[]'},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('Sorting'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {
																		ctor: '::',
																		_0: A2(
																			_rtfeldman$elm_css$Html_Styled$span,
																			{
																				ctor: '::',
																				_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																				_1: {ctor: '[]'}
																			},
																			{
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled$text('(default: asc)'),
																				_1: {ctor: '[]'}
																			}),
																		_1: {ctor: '[]'}
																	}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$div,
																	{ctor: '[]'},
																	{
																		ctor: '::',
																		_0: A2(
																			_rtfeldman$elm_css$Html_Styled$span,
																			{
																				ctor: '::',
																				_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																					_elm_lang$core$Native_Utils.eq(
																						model.settings.sorting,
																						_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc))),
																				_1: {
																					ctor: '::',
																					_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																						_ryan_senn$stellar_elm_demo$Endpoints_AllAssets_MsgFactory$composeMsg(
																							_ryan_senn$stellar_elm_demo$Endpoints_AllAssets_Msg$SettingsMsg(
																								_ryan_senn$stellar_elm_demo$Endpoints_AllAssets_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc)))),
																					_1: {ctor: '[]'}
																				}
																			},
																			{
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled$text('Asc'),
																				_1: {ctor: '[]'}
																			}),
																		_1: {
																			ctor: '::',
																			_0: A2(
																				_rtfeldman$elm_css$Html_Styled$span,
																				{
																					ctor: '::',
																					_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																						_elm_lang$core$Native_Utils.eq(
																							model.settings.sorting,
																							_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc))),
																					_1: {
																						ctor: '::',
																						_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																							_ryan_senn$stellar_elm_demo$Endpoints_AllAssets_MsgFactory$composeMsg(
																								_ryan_senn$stellar_elm_demo$Endpoints_AllAssets_Msg$SettingsMsg(
																									_ryan_senn$stellar_elm_demo$Endpoints_AllAssets_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc)))),
																						_1: {ctor: '[]'}
																					}
																				},
																				{
																					ctor: '::',
																					_0: _rtfeldman$elm_css$Html_Styled$text('Desc'),
																					_1: {ctor: '[]'}
																				}),
																			_1: {ctor: '[]'}
																		}
																	}),
																_1: {ctor: '[]'}
															}
														}),
													_1: {
														ctor: '::',
														_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Request$view(
															A2(
																_ryan_senn$stellar_elm_demo$Endpoints_AllAssets_RequestBuilder$requestBuilder,
																_ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput(endpoint),
																model.settings)),
														_1: {
															ctor: '::',
															_0: A2(
																_ryan_senn$stellar_elm_demo$Endpoints_Views_Button$view,
																model.isLoading,
																_ryan_senn$stellar_elm_demo$Endpoints_AllAssets_MsgFactory$composeMsg(
																	A2(
																		_ryan_senn$stellar_elm_demo$Endpoints_AllAssets_Msg$Request,
																		_ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput(endpoint),
																		model.settings))),
															_1: {
																ctor: '::',
																_0: A3(_ryan_senn$stellar_elm_demo$Endpoints_Views_Response$view, 'AllAssets', model.response, model.isLoading),
																_1: {ctor: '[]'}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	});

var _ryan_senn$stellar_elm_demo$Endpoints_AllEffects_MsgFactory$composeMsg = function (_p0) {
	return _ryan_senn$stellar_elm_demo$Endpoints_MsgFactory$composeMsg(
		_ryan_senn$stellar_elm_demo$Endpoints_Msg$AllEffectsMsg(_p0));
};

var _ryan_senn$stellar_elm_demo$Endpoints_AllEffects_RequestBuilder$requestBuilder = F2(
	function (endpoint, settings) {
		return A3(
			_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfJust,
			_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllEffects$setSorting,
			settings.sorting,
			A5(
				_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChangedMaybe,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllEffects$setLimit,
				_bluedogtraining$bdt_elm$Form_IntInput$getIsChanged,
				_bluedogtraining$bdt_elm$Form_IntInput$getValue,
				settings.limit,
				A5(
					_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChanged,
					_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllEffects$setCursor,
					_bluedogtraining$bdt_elm$Form_Input$getIsChanged,
					_bluedogtraining$bdt_elm$Form_Input$getValue,
					settings.cursor,
					_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllEffects$requestBuilder(endpoint))));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_AllEffects_Update$updateSettings = F2(
	function (updateSettingsMsg, model) {
		var settingsModel = model.settings;
		var newSettingsModel = function () {
			var _p0 = updateSettingsMsg;
			switch (_p0.ctor) {
				case 'UpdateCursor':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							cursor: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p0._0, settingsModel.cursor)
						});
				case 'UpdateLimit':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							limit: A2(_bluedogtraining$bdt_elm$Form_IntInput$update, _p0._0, settingsModel.limit)
						});
				default:
					var _p1 = _p0._0;
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							sorting: _elm_lang$core$Native_Utils.eq(
								settingsModel.sorting,
								_elm_lang$core$Maybe$Just(_p1)) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(_p1)
						});
			}
		}();
		return _elm_lang$core$Native_Utils.update(
			model,
			{settings: newSettingsModel});
	});
var _ryan_senn$stellar_elm_demo$Endpoints_AllEffects_Update$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'SettingsMsg':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					A2(_ryan_senn$stellar_elm_demo$Endpoints_AllEffects_Update$updateSettings, _p2._0, model),
					{ctor: '[]'});
			case 'Request':
				var request = A2(_ryan_senn$stellar_elm_demo$Endpoints_AllEffects_RequestBuilder$requestBuilder, _p2._0, _p2._1);
				var msg = function (_p3) {
					return _ryan_senn$stellar_elm_demo$Endpoints_AllEffects_MsgFactory$composeMsg(
						_ryan_senn$stellar_elm_demo$Endpoints_AllEffects_Msg$Response(_p3));
				};
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{isLoading: true}),
					{
						ctor: '::',
						_0: A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllEffects$send, msg, request),
						_1: {ctor: '[]'}
					});
			default:
				if (_p2._0.ctor === 'Err') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									A2(_ryan_senn$stellar_elm_sdk$Stellar_Error$flattenError, _p2._0._0, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllEffects$Error))
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									_elm_lang$core$Result$Ok(_p2._0._0))
							}),
						{ctor: '[]'});
				}
		}
	});

var _ryan_senn$stellar_elm_demo$Endpoints_AllEffects_View$view = F2(
	function (endpoint, model) {
		return A2(
			_rtfeldman$elm_css$Html_Styled$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(_ryan_senn$stellar_elm_demo$Endpoints_Views_Title$view, 'All Effects', 'https://www.stellar.org/developers/horizon/reference/endpoints/effects-all.html'),
				_1: {
					ctor: '::',
					_0: A2(
						_rtfeldman$elm_css$Html_Styled$div,
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$page,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_RequestTitle$view('AllEffects'),
							_1: {
								ctor: '::',
								_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Endpoint$view(endpoint),
								_1: {
									ctor: '::',
									_0: A2(
										_rtfeldman$elm_css$Html_Styled$div,
										{
											ctor: '::',
											_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$label,
												{
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$span,
														{ctor: '[]'},
														{
															ctor: '::',
															_0: _rtfeldman$elm_css$Html_Styled$text('Cursor'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 1)'),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$map,
													function (_p0) {
														return _ryan_senn$stellar_elm_demo$Endpoints_AllEffects_MsgFactory$composeMsg(
															_ryan_senn$stellar_elm_demo$Endpoints_AllEffects_Msg$SettingsMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_AllEffects_Msg$UpdateCursor(_p0)));
													},
													_bluedogtraining$bdt_elm$Form_Input$render(
														_bluedogtraining$bdt_elm$Form_Input$view(model.settings.cursor))),
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_rtfeldman$elm_css$Html_Styled$div,
											{
												ctor: '::',
												_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$label,
													{
														ctor: '::',
														_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('Limit'),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{
																	ctor: '::',
																	_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																	_1: {ctor: '[]'}
																},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 200, default: 10)'),
																	_1: {ctor: '[]'}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$map,
														function (_p1) {
															return _ryan_senn$stellar_elm_demo$Endpoints_AllEffects_MsgFactory$composeMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_AllEffects_Msg$SettingsMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_AllEffects_Msg$UpdateLimit(_p1)));
														},
														_bluedogtraining$bdt_elm$Form_IntInput$render(
															_bluedogtraining$bdt_elm$Form_IntInput$view(model.settings.limit))),
													_1: {ctor: '[]'}
												}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$div,
												{
													ctor: '::',
													_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$label,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('Sorting'),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{
																		ctor: '::',
																		_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																		_1: {ctor: '[]'}
																	},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('(default: asc)'),
																		_1: {ctor: '[]'}
																	}),
																_1: {ctor: '[]'}
															}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$div,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{
																		ctor: '::',
																		_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																			_elm_lang$core$Native_Utils.eq(
																				model.settings.sorting,
																				_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc))),
																		_1: {
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																				_ryan_senn$stellar_elm_demo$Endpoints_AllEffects_MsgFactory$composeMsg(
																					_ryan_senn$stellar_elm_demo$Endpoints_AllEffects_Msg$SettingsMsg(
																						_ryan_senn$stellar_elm_demo$Endpoints_AllEffects_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc)))),
																			_1: {ctor: '[]'}
																		}
																	},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('Asc'),
																		_1: {ctor: '[]'}
																	}),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																				_elm_lang$core$Native_Utils.eq(
																					model.settings.sorting,
																					_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc))),
																			_1: {
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																					_ryan_senn$stellar_elm_demo$Endpoints_AllEffects_MsgFactory$composeMsg(
																						_ryan_senn$stellar_elm_demo$Endpoints_AllEffects_Msg$SettingsMsg(
																							_ryan_senn$stellar_elm_demo$Endpoints_AllEffects_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc)))),
																				_1: {ctor: '[]'}
																			}
																		},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('Desc'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {ctor: '[]'}
																}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Request$view(
													A2(
														_ryan_senn$stellar_elm_demo$Endpoints_AllEffects_RequestBuilder$requestBuilder,
														_ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput(endpoint),
														model.settings)),
												_1: {
													ctor: '::',
													_0: A2(
														_ryan_senn$stellar_elm_demo$Endpoints_Views_Button$view,
														model.isLoading,
														_ryan_senn$stellar_elm_demo$Endpoints_AllEffects_MsgFactory$composeMsg(
															A2(
																_ryan_senn$stellar_elm_demo$Endpoints_AllEffects_Msg$Request,
																_ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput(endpoint),
																model.settings))),
													_1: {
														ctor: '::',
														_0: A3(_ryan_senn$stellar_elm_demo$Endpoints_Views_Response$view, 'AllEffects', model.response, model.isLoading),
														_1: {ctor: '[]'}
													}
												}
											}
										}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	});

var _ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_MsgFactory$composeMsg = function (_p0) {
	return _ryan_senn$stellar_elm_demo$Endpoints_MsgFactory$composeMsg(
		_ryan_senn$stellar_elm_demo$Endpoints_Msg$AllLedgersMsg(_p0));
};

var _ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_RequestBuilder$requestBuilder = F2(
	function (endpoint, settings) {
		return A3(
			_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfJust,
			_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllLedgers$setSorting,
			settings.sorting,
			A5(
				_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChangedMaybe,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllLedgers$setLimit,
				_bluedogtraining$bdt_elm$Form_IntInput$getIsChanged,
				_bluedogtraining$bdt_elm$Form_IntInput$getValue,
				settings.limit,
				A5(
					_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChanged,
					_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllLedgers$setCursor,
					_bluedogtraining$bdt_elm$Form_Input$getIsChanged,
					_bluedogtraining$bdt_elm$Form_Input$getValue,
					settings.cursor,
					_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllLedgers$requestBuilder(
						_ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput(endpoint)))));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_Update$updateSettings = F2(
	function (updateSettingsMsg, model) {
		var settingsModel = model.settings;
		var newSettingsModel = function () {
			var _p0 = updateSettingsMsg;
			switch (_p0.ctor) {
				case 'UpdateCursor':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							cursor: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p0._0, settingsModel.cursor)
						});
				case 'UpdateLimit':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							limit: A2(_bluedogtraining$bdt_elm$Form_IntInput$update, _p0._0, settingsModel.limit)
						});
				default:
					var _p1 = _p0._0;
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							sorting: _elm_lang$core$Native_Utils.eq(
								settingsModel.sorting,
								_elm_lang$core$Maybe$Just(_p1)) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(_p1)
						});
			}
		}();
		return _elm_lang$core$Native_Utils.update(
			model,
			{settings: newSettingsModel});
	});
var _ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_Update$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'SettingsMsg':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					A2(_ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_Update$updateSettings, _p2._0, model),
					{ctor: '[]'});
			case 'Request':
				var request = A2(_ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_RequestBuilder$requestBuilder, _p2._0, _p2._1);
				var msg = function (_p3) {
					return _ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_MsgFactory$composeMsg(
						_ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_Msg$Response(_p3));
				};
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{isLoading: true}),
					{
						ctor: '::',
						_0: A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllLedgers$send, msg, request),
						_1: {ctor: '[]'}
					});
			default:
				if (_p2._0.ctor === 'Err') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									A2(_ryan_senn$stellar_elm_sdk$Stellar_Error$flattenError, _p2._0._0, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllLedgers$Error))
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									_elm_lang$core$Result$Ok(_p2._0._0))
							}),
						{ctor: '[]'});
				}
		}
	});

var _ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_View$view = F2(
	function (endpoint, model) {
		return A2(
			_rtfeldman$elm_css$Html_Styled$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(_ryan_senn$stellar_elm_demo$Endpoints_Views_Title$view, 'All Assets', 'https://www.stellar.org/developers/horizon/reference/endpoints/ledgers-all.html'),
				_1: {
					ctor: '::',
					_0: A2(
						_rtfeldman$elm_css$Html_Styled$div,
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$page,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_RequestTitle$view('AllLedgers'),
							_1: {
								ctor: '::',
								_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Endpoint$view(endpoint),
								_1: {
									ctor: '::',
									_0: A2(
										_rtfeldman$elm_css$Html_Styled$div,
										{
											ctor: '::',
											_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$label,
												{
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$span,
														{ctor: '[]'},
														{
															ctor: '::',
															_0: _rtfeldman$elm_css$Html_Styled$text('Cursor'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 1)'),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$map,
													function (_p0) {
														return _ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_MsgFactory$composeMsg(
															_ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_Msg$SettingsMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_Msg$UpdateCursor(_p0)));
													},
													_bluedogtraining$bdt_elm$Form_Input$render(
														_bluedogtraining$bdt_elm$Form_Input$view(model.settings.cursor))),
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_rtfeldman$elm_css$Html_Styled$div,
											{
												ctor: '::',
												_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$label,
													{
														ctor: '::',
														_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('Limit'),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{
																	ctor: '::',
																	_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																	_1: {ctor: '[]'}
																},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 200, default: 10)'),
																	_1: {ctor: '[]'}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$map,
														function (_p1) {
															return _ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_MsgFactory$composeMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_Msg$SettingsMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_Msg$UpdateLimit(_p1)));
														},
														_bluedogtraining$bdt_elm$Form_IntInput$render(
															_bluedogtraining$bdt_elm$Form_IntInput$view(model.settings.limit))),
													_1: {ctor: '[]'}
												}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$div,
												{
													ctor: '::',
													_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$label,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('Sorting'),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{
																		ctor: '::',
																		_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																		_1: {ctor: '[]'}
																	},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('(default: asc)'),
																		_1: {ctor: '[]'}
																	}),
																_1: {ctor: '[]'}
															}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$div,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{
																		ctor: '::',
																		_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																			_elm_lang$core$Native_Utils.eq(
																				model.settings.sorting,
																				_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc))),
																		_1: {
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																				_ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_MsgFactory$composeMsg(
																					_ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_Msg$SettingsMsg(
																						_ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc)))),
																			_1: {ctor: '[]'}
																		}
																	},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('Asc'),
																		_1: {ctor: '[]'}
																	}),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																				_elm_lang$core$Native_Utils.eq(
																					model.settings.sorting,
																					_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc))),
																			_1: {
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																					_ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_MsgFactory$composeMsg(
																						_ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_Msg$SettingsMsg(
																							_ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc)))),
																				_1: {ctor: '[]'}
																			}
																		},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('Desc'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {ctor: '[]'}
																}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Request$view(
													A2(_ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_RequestBuilder$requestBuilder, endpoint, model.settings)),
												_1: {
													ctor: '::',
													_0: A2(
														_ryan_senn$stellar_elm_demo$Endpoints_Views_Button$view,
														model.isLoading,
														_ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_MsgFactory$composeMsg(
															A2(_ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_Msg$Request, endpoint, model.settings))),
													_1: {
														ctor: '::',
														_0: A3(_ryan_senn$stellar_elm_demo$Endpoints_Views_Response$view, 'AllLedgers', model.response, model.isLoading),
														_1: {ctor: '[]'}
													}
												}
											}
										}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	});

var _ryan_senn$stellar_elm_demo$Endpoints_AllOperations_MsgFactory$composeMsg = function (_p0) {
	return _ryan_senn$stellar_elm_demo$Endpoints_MsgFactory$composeMsg(
		_ryan_senn$stellar_elm_demo$Endpoints_Msg$AllOperationsMsg(_p0));
};

var _ryan_senn$stellar_elm_demo$Endpoints_AllOperations_RequestBuilder$requestBuilder = F2(
	function (endpoint, settings) {
		return A3(
			_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfJust,
			_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllOperations$setSorting,
			settings.sorting,
			A5(
				_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChangedMaybe,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllOperations$setLimit,
				_bluedogtraining$bdt_elm$Form_IntInput$getIsChanged,
				_bluedogtraining$bdt_elm$Form_IntInput$getValue,
				settings.limit,
				A5(
					_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChanged,
					_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllOperations$setCursor,
					_bluedogtraining$bdt_elm$Form_Input$getIsChanged,
					_bluedogtraining$bdt_elm$Form_Input$getValue,
					settings.cursor,
					_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllOperations$requestBuilder(endpoint))));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_AllOperations_Update$updateSettings = F2(
	function (updateSettingsMsg, model) {
		var settingsModel = model.settings;
		var newSettingsModel = function () {
			var _p0 = updateSettingsMsg;
			switch (_p0.ctor) {
				case 'UpdateCursor':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							cursor: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p0._0, settingsModel.cursor)
						});
				case 'UpdateLimit':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							limit: A2(_bluedogtraining$bdt_elm$Form_IntInput$update, _p0._0, settingsModel.limit)
						});
				default:
					var _p1 = _p0._0;
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							sorting: _elm_lang$core$Native_Utils.eq(
								settingsModel.sorting,
								_elm_lang$core$Maybe$Just(_p1)) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(_p1)
						});
			}
		}();
		return _elm_lang$core$Native_Utils.update(
			model,
			{settings: newSettingsModel});
	});
var _ryan_senn$stellar_elm_demo$Endpoints_AllOperations_Update$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'SettingsMsg':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					A2(_ryan_senn$stellar_elm_demo$Endpoints_AllOperations_Update$updateSettings, _p2._0, model),
					{ctor: '[]'});
			case 'Request':
				var request = A2(_ryan_senn$stellar_elm_demo$Endpoints_AllOperations_RequestBuilder$requestBuilder, _p2._0, _p2._1);
				var msg = function (_p3) {
					return _ryan_senn$stellar_elm_demo$Endpoints_AllOperations_MsgFactory$composeMsg(
						_ryan_senn$stellar_elm_demo$Endpoints_AllOperations_Msg$Response(_p3));
				};
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{isLoading: true}),
					{
						ctor: '::',
						_0: A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllOperations$send, msg, request),
						_1: {ctor: '[]'}
					});
			default:
				if (_p2._0.ctor === 'Err') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									A2(_ryan_senn$stellar_elm_sdk$Stellar_Error$flattenError, _p2._0._0, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllOperations$Error))
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									_elm_lang$core$Result$Ok(_p2._0._0))
							}),
						{ctor: '[]'});
				}
		}
	});

var _ryan_senn$stellar_elm_demo$Endpoints_AllOperations_View$view = F2(
	function (endpoint, model) {
		return A2(
			_rtfeldman$elm_css$Html_Styled$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(_ryan_senn$stellar_elm_demo$Endpoints_Views_Title$view, 'All Operations', 'https://www.stellar.org/developers/horizon/reference/endpoints/operations-all.html'),
				_1: {
					ctor: '::',
					_0: A2(
						_rtfeldman$elm_css$Html_Styled$div,
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$page,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_RequestTitle$view('AllOperations'),
							_1: {
								ctor: '::',
								_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Endpoint$view(endpoint),
								_1: {
									ctor: '::',
									_0: A2(
										_rtfeldman$elm_css$Html_Styled$div,
										{
											ctor: '::',
											_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$label,
												{
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$span,
														{ctor: '[]'},
														{
															ctor: '::',
															_0: _rtfeldman$elm_css$Html_Styled$text('Cursor'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 1)'),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$map,
													function (_p0) {
														return _ryan_senn$stellar_elm_demo$Endpoints_AllOperations_MsgFactory$composeMsg(
															_ryan_senn$stellar_elm_demo$Endpoints_AllOperations_Msg$SettingsMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_AllOperations_Msg$UpdateCursor(_p0)));
													},
													_bluedogtraining$bdt_elm$Form_Input$render(
														_bluedogtraining$bdt_elm$Form_Input$view(model.settings.cursor))),
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_rtfeldman$elm_css$Html_Styled$div,
											{
												ctor: '::',
												_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$label,
													{
														ctor: '::',
														_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('Limit'),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{
																	ctor: '::',
																	_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																	_1: {ctor: '[]'}
																},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 200, default: 10)'),
																	_1: {ctor: '[]'}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$map,
														function (_p1) {
															return _ryan_senn$stellar_elm_demo$Endpoints_AllOperations_MsgFactory$composeMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_AllOperations_Msg$SettingsMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_AllOperations_Msg$UpdateLimit(_p1)));
														},
														_bluedogtraining$bdt_elm$Form_IntInput$render(
															_bluedogtraining$bdt_elm$Form_IntInput$view(model.settings.limit))),
													_1: {ctor: '[]'}
												}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$div,
												{
													ctor: '::',
													_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$label,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('Sorting'),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{
																		ctor: '::',
																		_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																		_1: {ctor: '[]'}
																	},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('(default: asc)'),
																		_1: {ctor: '[]'}
																	}),
																_1: {ctor: '[]'}
															}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$div,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{
																		ctor: '::',
																		_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																			_elm_lang$core$Native_Utils.eq(
																				model.settings.sorting,
																				_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc))),
																		_1: {
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																				_ryan_senn$stellar_elm_demo$Endpoints_AllOperations_MsgFactory$composeMsg(
																					_ryan_senn$stellar_elm_demo$Endpoints_AllOperations_Msg$SettingsMsg(
																						_ryan_senn$stellar_elm_demo$Endpoints_AllOperations_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc)))),
																			_1: {ctor: '[]'}
																		}
																	},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('Asc'),
																		_1: {ctor: '[]'}
																	}),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																				_elm_lang$core$Native_Utils.eq(
																					model.settings.sorting,
																					_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc))),
																			_1: {
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																					_ryan_senn$stellar_elm_demo$Endpoints_AllOperations_MsgFactory$composeMsg(
																						_ryan_senn$stellar_elm_demo$Endpoints_AllOperations_Msg$SettingsMsg(
																							_ryan_senn$stellar_elm_demo$Endpoints_AllOperations_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc)))),
																				_1: {ctor: '[]'}
																			}
																		},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('Desc'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {ctor: '[]'}
																}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Request$view(
													A2(
														_ryan_senn$stellar_elm_demo$Endpoints_AllOperations_RequestBuilder$requestBuilder,
														_ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput(endpoint),
														model.settings)),
												_1: {
													ctor: '::',
													_0: A2(
														_ryan_senn$stellar_elm_demo$Endpoints_Views_Button$view,
														model.isLoading,
														_ryan_senn$stellar_elm_demo$Endpoints_AllOperations_MsgFactory$composeMsg(
															A2(
																_ryan_senn$stellar_elm_demo$Endpoints_AllOperations_Msg$Request,
																_ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput(endpoint),
																model.settings))),
													_1: {
														ctor: '::',
														_0: A3(_ryan_senn$stellar_elm_demo$Endpoints_Views_Response$view, 'AllOperations', model.response, model.isLoading),
														_1: {ctor: '[]'}
													}
												}
											}
										}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	});

var _ryan_senn$stellar_elm_demo$Endpoints_AllPayments_MsgFactory$composeMsg = function (_p0) {
	return _ryan_senn$stellar_elm_demo$Endpoints_MsgFactory$composeMsg(
		_ryan_senn$stellar_elm_demo$Endpoints_Msg$AllPaymentsMsg(_p0));
};

var _ryan_senn$stellar_elm_demo$Endpoints_AllPayments_RequestBuilder$requestBuilder = F2(
	function (endpoint, settings) {
		return A3(
			_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfJust,
			_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllPayments$setSorting,
			settings.sorting,
			A5(
				_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChangedMaybe,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllPayments$setLimit,
				_bluedogtraining$bdt_elm$Form_IntInput$getIsChanged,
				_bluedogtraining$bdt_elm$Form_IntInput$getValue,
				settings.limit,
				A5(
					_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChanged,
					_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllPayments$setCursor,
					_bluedogtraining$bdt_elm$Form_Input$getIsChanged,
					_bluedogtraining$bdt_elm$Form_Input$getValue,
					settings.cursor,
					_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllPayments$requestBuilder(endpoint))));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_AllPayments_Update$updateSettings = F2(
	function (updateSettingsMsg, model) {
		var settingsModel = model.settings;
		var newSettingsModel = function () {
			var _p0 = updateSettingsMsg;
			switch (_p0.ctor) {
				case 'UpdateCursor':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							cursor: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p0._0, settingsModel.cursor)
						});
				case 'UpdateLimit':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							limit: A2(_bluedogtraining$bdt_elm$Form_IntInput$update, _p0._0, settingsModel.limit)
						});
				default:
					var _p1 = _p0._0;
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							sorting: _elm_lang$core$Native_Utils.eq(
								settingsModel.sorting,
								_elm_lang$core$Maybe$Just(_p1)) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(_p1)
						});
			}
		}();
		return _elm_lang$core$Native_Utils.update(
			model,
			{settings: newSettingsModel});
	});
var _ryan_senn$stellar_elm_demo$Endpoints_AllPayments_Update$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'SettingsMsg':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					A2(_ryan_senn$stellar_elm_demo$Endpoints_AllPayments_Update$updateSettings, _p2._0, model),
					{ctor: '[]'});
			case 'Request':
				var request = A2(_ryan_senn$stellar_elm_demo$Endpoints_AllPayments_RequestBuilder$requestBuilder, _p2._0, _p2._1);
				var msg = function (_p3) {
					return _ryan_senn$stellar_elm_demo$Endpoints_AllPayments_MsgFactory$composeMsg(
						_ryan_senn$stellar_elm_demo$Endpoints_AllPayments_Msg$Response(_p3));
				};
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{isLoading: true}),
					{
						ctor: '::',
						_0: A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllPayments$send, msg, request),
						_1: {ctor: '[]'}
					});
			default:
				if (_p2._0.ctor === 'Err') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									A2(_ryan_senn$stellar_elm_sdk$Stellar_Error$flattenError, _p2._0._0, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllPayments$Error))
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									_elm_lang$core$Result$Ok(_p2._0._0))
							}),
						{ctor: '[]'});
				}
		}
	});

var _ryan_senn$stellar_elm_demo$Endpoints_AllPayments_View$view = F2(
	function (endpoint, model) {
		return A2(
			_rtfeldman$elm_css$Html_Styled$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(_ryan_senn$stellar_elm_demo$Endpoints_Views_Title$view, 'All Payments', 'https://www.stellar.org/developers/horizon/reference/endpoints/payments-all.html'),
				_1: {
					ctor: '::',
					_0: A2(
						_rtfeldman$elm_css$Html_Styled$div,
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$page,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_RequestTitle$view('AllPayments'),
							_1: {
								ctor: '::',
								_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Endpoint$view(endpoint),
								_1: {
									ctor: '::',
									_0: A2(
										_rtfeldman$elm_css$Html_Styled$div,
										{
											ctor: '::',
											_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$label,
												{
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$span,
														{ctor: '[]'},
														{
															ctor: '::',
															_0: _rtfeldman$elm_css$Html_Styled$text('Cursor'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 1)'),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$map,
													function (_p0) {
														return _ryan_senn$stellar_elm_demo$Endpoints_AllPayments_MsgFactory$composeMsg(
															_ryan_senn$stellar_elm_demo$Endpoints_AllPayments_Msg$SettingsMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_AllPayments_Msg$UpdateCursor(_p0)));
													},
													_bluedogtraining$bdt_elm$Form_Input$render(
														_bluedogtraining$bdt_elm$Form_Input$view(model.settings.cursor))),
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_rtfeldman$elm_css$Html_Styled$div,
											{
												ctor: '::',
												_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$label,
													{
														ctor: '::',
														_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('Limit'),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{
																	ctor: '::',
																	_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																	_1: {ctor: '[]'}
																},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 200, default: 10)'),
																	_1: {ctor: '[]'}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$map,
														function (_p1) {
															return _ryan_senn$stellar_elm_demo$Endpoints_AllPayments_MsgFactory$composeMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_AllPayments_Msg$SettingsMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_AllPayments_Msg$UpdateLimit(_p1)));
														},
														_bluedogtraining$bdt_elm$Form_IntInput$render(
															_bluedogtraining$bdt_elm$Form_IntInput$view(model.settings.limit))),
													_1: {ctor: '[]'}
												}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$div,
												{
													ctor: '::',
													_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$label,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('Sorting'),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{
																		ctor: '::',
																		_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																		_1: {ctor: '[]'}
																	},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('(default: asc)'),
																		_1: {ctor: '[]'}
																	}),
																_1: {ctor: '[]'}
															}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$div,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{
																		ctor: '::',
																		_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																			_elm_lang$core$Native_Utils.eq(
																				model.settings.sorting,
																				_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc))),
																		_1: {
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																				_ryan_senn$stellar_elm_demo$Endpoints_AllPayments_MsgFactory$composeMsg(
																					_ryan_senn$stellar_elm_demo$Endpoints_AllPayments_Msg$SettingsMsg(
																						_ryan_senn$stellar_elm_demo$Endpoints_AllPayments_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc)))),
																			_1: {ctor: '[]'}
																		}
																	},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('Asc'),
																		_1: {ctor: '[]'}
																	}),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																				_elm_lang$core$Native_Utils.eq(
																					model.settings.sorting,
																					_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc))),
																			_1: {
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																					_ryan_senn$stellar_elm_demo$Endpoints_AllPayments_MsgFactory$composeMsg(
																						_ryan_senn$stellar_elm_demo$Endpoints_AllPayments_Msg$SettingsMsg(
																							_ryan_senn$stellar_elm_demo$Endpoints_AllPayments_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc)))),
																				_1: {ctor: '[]'}
																			}
																		},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('Desc'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {ctor: '[]'}
																}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Request$view(
													A2(
														_ryan_senn$stellar_elm_demo$Endpoints_AllPayments_RequestBuilder$requestBuilder,
														_ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput(endpoint),
														model.settings)),
												_1: {
													ctor: '::',
													_0: A2(
														_ryan_senn$stellar_elm_demo$Endpoints_Views_Button$view,
														model.isLoading,
														_ryan_senn$stellar_elm_demo$Endpoints_AllPayments_MsgFactory$composeMsg(
															A2(
																_ryan_senn$stellar_elm_demo$Endpoints_AllPayments_Msg$Request,
																_ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput(endpoint),
																model.settings))),
													_1: {
														ctor: '::',
														_0: A3(_ryan_senn$stellar_elm_demo$Endpoints_Views_Response$view, 'AllPayments', model.response, model.isLoading),
														_1: {ctor: '[]'}
													}
												}
											}
										}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	});

var _ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_MsgFactory$composeMsg = function (_p0) {
	return _ryan_senn$stellar_elm_demo$Endpoints_MsgFactory$composeMsg(
		_ryan_senn$stellar_elm_demo$Endpoints_Msg$AllTransactionsMsg(_p0));
};

var _ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_RequestBuilder$requestBuilder = F2(
	function (endpoint, settings) {
		return A3(
			_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfJust,
			_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllTransactions$setSorting,
			settings.sorting,
			A5(
				_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChangedMaybe,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllTransactions$setLimit,
				_bluedogtraining$bdt_elm$Form_IntInput$getIsChanged,
				_bluedogtraining$bdt_elm$Form_IntInput$getValue,
				settings.limit,
				A5(
					_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChanged,
					_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllTransactions$setCursor,
					_bluedogtraining$bdt_elm$Form_Input$getIsChanged,
					_bluedogtraining$bdt_elm$Form_Input$getValue,
					settings.cursor,
					_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllTransactions$requestBuilder(endpoint))));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_Update$updateSettings = F2(
	function (updateSettingsMsg, model) {
		var settingsModel = model.settings;
		var newSettingsModel = function () {
			var _p0 = updateSettingsMsg;
			switch (_p0.ctor) {
				case 'UpdateCursor':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							cursor: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p0._0, settingsModel.cursor)
						});
				case 'UpdateLimit':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							limit: A2(_bluedogtraining$bdt_elm$Form_IntInput$update, _p0._0, settingsModel.limit)
						});
				default:
					var _p1 = _p0._0;
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							sorting: _elm_lang$core$Native_Utils.eq(
								settingsModel.sorting,
								_elm_lang$core$Maybe$Just(_p1)) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(_p1)
						});
			}
		}();
		return _elm_lang$core$Native_Utils.update(
			model,
			{settings: newSettingsModel});
	});
var _ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_Update$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'SettingsMsg':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					A2(_ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_Update$updateSettings, _p2._0, model),
					{ctor: '[]'});
			case 'Request':
				var request = A2(_ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_RequestBuilder$requestBuilder, _p2._0, _p2._1);
				var msg = function (_p3) {
					return _ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_MsgFactory$composeMsg(
						_ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_Msg$Response(_p3));
				};
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{isLoading: true}),
					{
						ctor: '::',
						_0: A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllTransactions$send, msg, request),
						_1: {ctor: '[]'}
					});
			default:
				if (_p2._0.ctor === 'Err') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									A2(_ryan_senn$stellar_elm_sdk$Stellar_Error$flattenError, _p2._0._0, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_AllTransactions$Error))
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									_elm_lang$core$Result$Ok(_p2._0._0))
							}),
						{ctor: '[]'});
				}
		}
	});

var _ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_View$view = F2(
	function (endpoint, model) {
		return A2(
			_rtfeldman$elm_css$Html_Styled$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(_ryan_senn$stellar_elm_demo$Endpoints_Views_Title$view, 'All Transactions', 'https://www.stellar.org/developers/horizon/reference/endpoints/transactions-all.html'),
				_1: {
					ctor: '::',
					_0: A2(
						_rtfeldman$elm_css$Html_Styled$div,
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$page,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_RequestTitle$view('AllTransactions'),
							_1: {
								ctor: '::',
								_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Endpoint$view(endpoint),
								_1: {
									ctor: '::',
									_0: A2(
										_rtfeldman$elm_css$Html_Styled$div,
										{
											ctor: '::',
											_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$label,
												{
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$span,
														{ctor: '[]'},
														{
															ctor: '::',
															_0: _rtfeldman$elm_css$Html_Styled$text('Cursor'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 1)'),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$map,
													function (_p0) {
														return _ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_MsgFactory$composeMsg(
															_ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_Msg$SettingsMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_Msg$UpdateCursor(_p0)));
													},
													_bluedogtraining$bdt_elm$Form_Input$render(
														_bluedogtraining$bdt_elm$Form_Input$view(model.settings.cursor))),
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_rtfeldman$elm_css$Html_Styled$div,
											{
												ctor: '::',
												_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$label,
													{
														ctor: '::',
														_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('Limit'),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{
																	ctor: '::',
																	_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																	_1: {ctor: '[]'}
																},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 200, default: 10)'),
																	_1: {ctor: '[]'}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$map,
														function (_p1) {
															return _ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_MsgFactory$composeMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_Msg$SettingsMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_Msg$UpdateLimit(_p1)));
														},
														_bluedogtraining$bdt_elm$Form_IntInput$render(
															_bluedogtraining$bdt_elm$Form_IntInput$view(model.settings.limit))),
													_1: {ctor: '[]'}
												}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$div,
												{
													ctor: '::',
													_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$label,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('Sorting'),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{
																		ctor: '::',
																		_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																		_1: {ctor: '[]'}
																	},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('(default: asc)'),
																		_1: {ctor: '[]'}
																	}),
																_1: {ctor: '[]'}
															}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$div,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{
																		ctor: '::',
																		_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																			_elm_lang$core$Native_Utils.eq(
																				model.settings.sorting,
																				_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc))),
																		_1: {
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																				_ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_MsgFactory$composeMsg(
																					_ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_Msg$SettingsMsg(
																						_ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc)))),
																			_1: {ctor: '[]'}
																		}
																	},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('Asc'),
																		_1: {ctor: '[]'}
																	}),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																				_elm_lang$core$Native_Utils.eq(
																					model.settings.sorting,
																					_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc))),
																			_1: {
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																					_ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_MsgFactory$composeMsg(
																						_ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_Msg$SettingsMsg(
																							_ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc)))),
																				_1: {ctor: '[]'}
																			}
																		},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('Desc'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {ctor: '[]'}
																}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Request$view(
													A2(
														_ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_RequestBuilder$requestBuilder,
														_ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput(endpoint),
														model.settings)),
												_1: {
													ctor: '::',
													_0: A2(
														_ryan_senn$stellar_elm_demo$Endpoints_Views_Button$view,
														model.isLoading,
														_ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_MsgFactory$composeMsg(
															A2(
																_ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_Msg$Request,
																_ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput(endpoint),
																model.settings))),
													_1: {
														ctor: '::',
														_0: A3(_ryan_senn$stellar_elm_demo$Endpoints_Views_Response$view, 'AllTransactions', model.response, model.isLoading),
														_1: {ctor: '[]'}
													}
												}
											}
										}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	});

var _ryan_senn$stellar_elm_demo$Endpoints_DataForAccount_MsgFactory$composeMsg = function (_p0) {
	return _ryan_senn$stellar_elm_demo$Endpoints_MsgFactory$composeMsg(
		_ryan_senn$stellar_elm_demo$Endpoints_Msg$DataForAccountMsg(_p0));
};

var _ryan_senn$stellar_elm_demo$Endpoints_DataForAccount_RequestBuilder$requestBuilder = F2(
	function (endpoint, settings) {
		return A3(
			_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_DataForAccount$requestBuilder,
			_ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput(endpoint),
			_ryan_senn$stellar_elm_demo$Endpoints_Helpers$publicKeyFromInput(settings.publicKey),
			A2(
				_elm_lang$core$Maybe$withDefault,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_DataForAccount$UserId,
				_bluedogtraining$bdt_elm$Form_Select$getSelectedOption(settings.dataKey)));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_DataForAccount_Update$updateSettings = F2(
	function (updateSettingsMsg, model) {
		var settingsModel = model.settings;
		var _p0 = function () {
			var _p1 = updateSettingsMsg;
			if (_p1.ctor === 'UpdatePublicKey') {
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							publicKey: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p1._0, settingsModel.publicKey)
						}),
					{ctor: '[]'});
			} else {
				var _p2 = A2(_bluedogtraining$bdt_elm$Form_Select$update, _p1._0, settingsModel.dataKey);
				var dataKeyModel = _p2._0;
				var cmds = _p2._1;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						settingsModel,
						{dataKey: dataKeyModel}),
					{
						ctor: '::',
						_0: A2(
							_elm_lang$core$Platform_Cmd$map,
							function (_p3) {
								return _ryan_senn$stellar_elm_demo$Endpoints_DataForAccount_MsgFactory$composeMsg(
									_ryan_senn$stellar_elm_demo$Endpoints_DataForAccount_Msg$SettingsMsg(
										_ryan_senn$stellar_elm_demo$Endpoints_DataForAccount_Msg$UpdateDataKey(_p3)));
							},
							cmds),
						_1: {ctor: '[]'}
					});
			}
		}();
		var newSettingsModel = _p0._0;
		var cmds = _p0._1;
		return A2(
			_elm_lang$core$Platform_Cmd_ops['!'],
			_elm_lang$core$Native_Utils.update(
				model,
				{settings: newSettingsModel}),
			{
				ctor: '::',
				_0: cmds,
				_1: {ctor: '[]'}
			});
	});
var _ryan_senn$stellar_elm_demo$Endpoints_DataForAccount_Update$update = F2(
	function (msg, model) {
		var _p4 = msg;
		switch (_p4.ctor) {
			case 'SettingsMsg':
				return A2(_ryan_senn$stellar_elm_demo$Endpoints_DataForAccount_Update$updateSettings, _p4._0, model);
			case 'Request':
				var request = A2(_ryan_senn$stellar_elm_demo$Endpoints_DataForAccount_RequestBuilder$requestBuilder, _p4._0, _p4._1);
				var msg = function (_p5) {
					return _ryan_senn$stellar_elm_demo$Endpoints_DataForAccount_MsgFactory$composeMsg(
						_ryan_senn$stellar_elm_demo$Endpoints_DataForAccount_Msg$Response(_p5));
				};
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{isLoading: true}),
					{
						ctor: '::',
						_0: A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_DataForAccount$send, msg, request),
						_1: {ctor: '[]'}
					});
			default:
				if (_p4._0.ctor === 'Err') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									A2(_ryan_senn$stellar_elm_sdk$Stellar_Error$flattenError, _p4._0._0, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_DataForAccount$Error))
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									_elm_lang$core$Result$Ok(_p4._0._0))
							}),
						{ctor: '[]'});
				}
		}
	});

var _ryan_senn$stellar_elm_demo$Endpoints_DataForAccount_View$view = F2(
	function (endpoint, model) {
		return A2(
			_rtfeldman$elm_css$Html_Styled$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(_ryan_senn$stellar_elm_demo$Endpoints_Views_Title$view, 'Data for Account', 'https://www.stellar.org/developers/horizon/reference/endpoints/data-for-account.html'),
				_1: {
					ctor: '::',
					_0: A2(
						_rtfeldman$elm_css$Html_Styled$div,
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$page,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_RequestTitle$view('DataForAccount'),
							_1: {
								ctor: '::',
								_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Endpoint$view(endpoint),
								_1: {
									ctor: '::',
									_0: A2(
										_rtfeldman$elm_css$Html_Styled$div,
										{
											ctor: '::',
											_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$label,
												{
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$span,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelMandatory,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: _rtfeldman$elm_css$Html_Styled$text('Public Key'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('(eg: GA2HGBJIJKI6O4XEM7CZWY5PS6GKSXL6D34ERAJYQSPYA6X6AI7HYW36)'),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$map,
													function (_p0) {
														return _ryan_senn$stellar_elm_demo$Endpoints_DataForAccount_MsgFactory$composeMsg(
															_ryan_senn$stellar_elm_demo$Endpoints_DataForAccount_Msg$SettingsMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_DataForAccount_Msg$UpdatePublicKey(_p0)));
													},
													_bluedogtraining$bdt_elm$Form_Input$render(
														_bluedogtraining$bdt_elm$Form_Input$view(model.settings.publicKey))),
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_rtfeldman$elm_css$Html_Styled$div,
											{
												ctor: '::',
												_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$label,
													{
														ctor: '::',
														_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelMandatory,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('Data Key'),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$map,
														function (_p1) {
															return _ryan_senn$stellar_elm_demo$Endpoints_DataForAccount_MsgFactory$composeMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_DataForAccount_Msg$SettingsMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_DataForAccount_Msg$UpdateDataKey(_p1)));
														},
														_bluedogtraining$bdt_elm$Form_Select$render(
															A2(
																_bluedogtraining$bdt_elm$Form_Select$setToLabel,
																function (_p2) {
																	return _elm_community$string_extra$String_Extra$dasherize(
																		_elm_community$string_extra$String_Extra$decapitalize(
																			_elm_lang$core$Basics$toString(_p2)));
																},
																_bluedogtraining$bdt_elm$Form_Select$view(model.settings.dataKey)))),
													_1: {ctor: '[]'}
												}
											}),
										_1: {
											ctor: '::',
											_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Request$view(
												A2(_ryan_senn$stellar_elm_demo$Endpoints_DataForAccount_RequestBuilder$requestBuilder, endpoint, model.settings)),
											_1: {
												ctor: '::',
												_0: A2(
													_ryan_senn$stellar_elm_demo$Endpoints_Views_Button$view,
													model.isLoading,
													_ryan_senn$stellar_elm_demo$Endpoints_DataForAccount_MsgFactory$composeMsg(
														A2(_ryan_senn$stellar_elm_demo$Endpoints_DataForAccount_Msg$Request, endpoint, model.settings))),
												_1: {
													ctor: '::',
													_0: A3(_ryan_senn$stellar_elm_demo$Endpoints_Views_Response$view, 'DataForAccount', model.response, model.isLoading),
													_1: {ctor: '[]'}
												}
											}
										}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	});

var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_MsgFactory$composeMsg = function (_p0) {
	return _ryan_senn$stellar_elm_demo$Endpoints_MsgFactory$composeMsg(
		_ryan_senn$stellar_elm_demo$Endpoints_Msg$EffectsForAccountMsg(_p0));
};

var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_RequestBuilder$requestBuilder = F2(
	function (endpoint, settings) {
		return A3(
			_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfJust,
			_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForAccount$setSorting,
			settings.sorting,
			A5(
				_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChangedMaybe,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForAccount$setLimit,
				_bluedogtraining$bdt_elm$Form_IntInput$getIsChanged,
				_bluedogtraining$bdt_elm$Form_IntInput$getValue,
				settings.limit,
				A5(
					_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChanged,
					_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForAccount$setCursor,
					_bluedogtraining$bdt_elm$Form_Input$getIsChanged,
					_bluedogtraining$bdt_elm$Form_Input$getValue,
					settings.cursor,
					A2(
						_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForAccount$requestBuilder,
						_ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput(endpoint),
						_ryan_senn$stellar_elm_demo$Endpoints_Helpers$publicKeyFromInput(settings.account)))));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_Update$updateSettings = F2(
	function (updateSettingsMsg, model) {
		var settingsModel = model.settings;
		var newSettingsModel = function () {
			var _p0 = updateSettingsMsg;
			switch (_p0.ctor) {
				case 'UpdateAccount':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							account: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p0._0, settingsModel.account)
						});
				case 'UpdateCursor':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							cursor: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p0._0, settingsModel.cursor)
						});
				case 'UpdateLimit':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							limit: A2(_bluedogtraining$bdt_elm$Form_IntInput$update, _p0._0, settingsModel.limit)
						});
				default:
					var _p1 = _p0._0;
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							sorting: _elm_lang$core$Native_Utils.eq(
								settingsModel.sorting,
								_elm_lang$core$Maybe$Just(_p1)) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(_p1)
						});
			}
		}();
		return _elm_lang$core$Native_Utils.update(
			model,
			{settings: newSettingsModel});
	});
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_Update$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'SettingsMsg':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					A2(_ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_Update$updateSettings, _p2._0, model),
					{ctor: '[]'});
			case 'Request':
				var request = A2(_ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_RequestBuilder$requestBuilder, _p2._0, _p2._1);
				var msg = function (_p3) {
					return _ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_MsgFactory$composeMsg(
						_ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_Msg$Response(_p3));
				};
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{isLoading: true}),
					{
						ctor: '::',
						_0: A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForAccount$send, msg, request),
						_1: {ctor: '[]'}
					});
			default:
				if (_p2._0.ctor === 'Err') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									A2(_ryan_senn$stellar_elm_sdk$Stellar_Error$flattenError, _p2._0._0, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForAccount$Error))
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									_elm_lang$core$Result$Ok(_p2._0._0))
							}),
						{ctor: '[]'});
				}
		}
	});

var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_View$view = F2(
	function (endpoint, model) {
		return A2(
			_rtfeldman$elm_css$Html_Styled$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(_ryan_senn$stellar_elm_demo$Endpoints_Views_Title$view, 'Effects for Account', 'https://www.stellar.org/developers/horizon/reference/endpoints/effects-for-account.html'),
				_1: {
					ctor: '::',
					_0: A2(
						_rtfeldman$elm_css$Html_Styled$div,
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$page,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_RequestTitle$view('EffectsForAccount'),
							_1: {
								ctor: '::',
								_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Endpoint$view(endpoint),
								_1: {
									ctor: '::',
									_0: A2(
										_rtfeldman$elm_css$Html_Styled$div,
										{
											ctor: '::',
											_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$label,
												{
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$span,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelMandatory,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: _rtfeldman$elm_css$Html_Styled$text('Account'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('(eg: GA2HGBJIJKI6O4XEM7CZWY5PS6GKSXL6D34ERAJYQSPYA6X6AI7HYW36)'),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$map,
													function (_p0) {
														return _ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_MsgFactory$composeMsg(
															_ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_Msg$SettingsMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_Msg$UpdateAccount(_p0)));
													},
													_bluedogtraining$bdt_elm$Form_Input$render(
														_bluedogtraining$bdt_elm$Form_Input$view(model.settings.account))),
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_rtfeldman$elm_css$Html_Styled$div,
											{
												ctor: '::',
												_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$label,
													{
														ctor: '::',
														_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('Cursor'),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{
																	ctor: '::',
																	_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																	_1: {ctor: '[]'}
																},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 1)'),
																	_1: {ctor: '[]'}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$map,
														function (_p1) {
															return _ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_MsgFactory$composeMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_Msg$SettingsMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_Msg$UpdateCursor(_p1)));
														},
														_bluedogtraining$bdt_elm$Form_Input$render(
															_bluedogtraining$bdt_elm$Form_Input$view(model.settings.cursor))),
													_1: {ctor: '[]'}
												}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$div,
												{
													ctor: '::',
													_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$label,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('Limit'),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{
																		ctor: '::',
																		_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																		_1: {ctor: '[]'}
																	},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 200, default: 10)'),
																		_1: {ctor: '[]'}
																	}),
																_1: {ctor: '[]'}
															}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$map,
															function (_p2) {
																return _ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_MsgFactory$composeMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_Msg$SettingsMsg(
																		_ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_Msg$UpdateLimit(_p2)));
															},
															_bluedogtraining$bdt_elm$Form_IntInput$render(
																_bluedogtraining$bdt_elm$Form_IntInput$view(model.settings.limit))),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$div,
													{
														ctor: '::',
														_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$label,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{ctor: '[]'},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('Sorting'),
																		_1: {ctor: '[]'}
																	}),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																			_1: {ctor: '[]'}
																		},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('(default: asc)'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {ctor: '[]'}
																}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$div,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																				_elm_lang$core$Native_Utils.eq(
																					model.settings.sorting,
																					_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc))),
																			_1: {
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																					_ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_MsgFactory$composeMsg(
																						_ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_Msg$SettingsMsg(
																							_ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc)))),
																				_1: {ctor: '[]'}
																			}
																		},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('Asc'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {
																		ctor: '::',
																		_0: A2(
																			_rtfeldman$elm_css$Html_Styled$span,
																			{
																				ctor: '::',
																				_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																					_elm_lang$core$Native_Utils.eq(
																						model.settings.sorting,
																						_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc))),
																				_1: {
																					ctor: '::',
																					_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																						_ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_MsgFactory$composeMsg(
																							_ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_Msg$SettingsMsg(
																								_ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc)))),
																					_1: {ctor: '[]'}
																				}
																			},
																			{
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled$text('Desc'),
																				_1: {ctor: '[]'}
																			}),
																		_1: {ctor: '[]'}
																	}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Request$view(
														A2(_ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_RequestBuilder$requestBuilder, endpoint, model.settings)),
													_1: {
														ctor: '::',
														_0: A2(
															_ryan_senn$stellar_elm_demo$Endpoints_Views_Button$view,
															model.isLoading,
															_ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_MsgFactory$composeMsg(
																A2(_ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_Msg$Request, endpoint, model.settings))),
														_1: {
															ctor: '::',
															_0: A3(_ryan_senn$stellar_elm_demo$Endpoints_Views_Response$view, 'EffectsForAccount', model.response, model.isLoading),
															_1: {ctor: '[]'}
														}
													}
												}
											}
										}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	});

var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_MsgFactory$composeMsg = function (_p0) {
	return _ryan_senn$stellar_elm_demo$Endpoints_MsgFactory$composeMsg(
		_ryan_senn$stellar_elm_demo$Endpoints_Msg$EffectsForLedgerMsg(_p0));
};

var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_RequestBuilder$requestBuilder = F2(
	function (endpoint, settings) {
		return A3(
			_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfJust,
			_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForLedger$setSorting,
			settings.sorting,
			A5(
				_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChangedMaybe,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForLedger$setLimit,
				_bluedogtraining$bdt_elm$Form_IntInput$getIsChanged,
				_bluedogtraining$bdt_elm$Form_IntInput$getValue,
				settings.limit,
				A5(
					_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChanged,
					_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForLedger$setCursor,
					_bluedogtraining$bdt_elm$Form_Input$getIsChanged,
					_bluedogtraining$bdt_elm$Form_Input$getValue,
					settings.cursor,
					A2(
						_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForLedger$requestBuilder,
						_ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput(endpoint),
						A2(
							_elm_lang$core$Maybe$withDefault,
							0,
							_bluedogtraining$bdt_elm$Form_IntInput$getValue(settings.ledgerId))))));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_Update$updateSettings = F2(
	function (updateSettingsMsg, model) {
		var settingsModel = model.settings;
		var newSettingsModel = function () {
			var _p0 = updateSettingsMsg;
			switch (_p0.ctor) {
				case 'UpdateLedgerId':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							ledgerId: A2(_bluedogtraining$bdt_elm$Form_IntInput$update, _p0._0, settingsModel.ledgerId)
						});
				case 'UpdateCursor':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							cursor: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p0._0, settingsModel.cursor)
						});
				case 'UpdateLimit':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							limit: A2(_bluedogtraining$bdt_elm$Form_IntInput$update, _p0._0, settingsModel.limit)
						});
				default:
					var _p1 = _p0._0;
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							sorting: _elm_lang$core$Native_Utils.eq(
								settingsModel.sorting,
								_elm_lang$core$Maybe$Just(_p1)) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(_p1)
						});
			}
		}();
		return _elm_lang$core$Native_Utils.update(
			model,
			{settings: newSettingsModel});
	});
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_Update$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'SettingsMsg':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					A2(_ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_Update$updateSettings, _p2._0, model),
					{ctor: '[]'});
			case 'Request':
				var request = A2(_ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_RequestBuilder$requestBuilder, _p2._0, _p2._1);
				var msg = function (_p3) {
					return _ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_MsgFactory$composeMsg(
						_ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_Msg$Response(_p3));
				};
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{isLoading: true}),
					{
						ctor: '::',
						_0: A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForLedger$send, msg, request),
						_1: {ctor: '[]'}
					});
			default:
				if (_p2._0.ctor === 'Err') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									A2(_ryan_senn$stellar_elm_sdk$Stellar_Error$flattenError, _p2._0._0, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForLedger$Error))
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									_elm_lang$core$Result$Ok(_p2._0._0))
							}),
						{ctor: '[]'});
				}
		}
	});

var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_View$view = F2(
	function (endpoint, model) {
		return A2(
			_rtfeldman$elm_css$Html_Styled$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(_ryan_senn$stellar_elm_demo$Endpoints_Views_Title$view, 'Effects for Ledger', 'https://www.stellar.org/developers/horizon/reference/endpoints/effects-for-ledger.html'),
				_1: {
					ctor: '::',
					_0: A2(
						_rtfeldman$elm_css$Html_Styled$div,
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$page,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_RequestTitle$view('EffectsForLedger'),
							_1: {
								ctor: '::',
								_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Endpoint$view(endpoint),
								_1: {
									ctor: '::',
									_0: A2(
										_rtfeldman$elm_css$Html_Styled$div,
										{
											ctor: '::',
											_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$label,
												{
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$span,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelMandatory,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: _rtfeldman$elm_css$Html_Styled$text('Ledger'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 69859)'),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$map,
													function (_p0) {
														return _ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_MsgFactory$composeMsg(
															_ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_Msg$SettingsMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_Msg$UpdateLedgerId(_p0)));
													},
													_bluedogtraining$bdt_elm$Form_IntInput$render(
														_bluedogtraining$bdt_elm$Form_IntInput$view(model.settings.ledgerId))),
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_rtfeldman$elm_css$Html_Styled$div,
											{
												ctor: '::',
												_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$label,
													{
														ctor: '::',
														_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('Cursor'),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{
																	ctor: '::',
																	_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																	_1: {ctor: '[]'}
																},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 1)'),
																	_1: {ctor: '[]'}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$map,
														function (_p1) {
															return _ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_MsgFactory$composeMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_Msg$SettingsMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_Msg$UpdateCursor(_p1)));
														},
														_bluedogtraining$bdt_elm$Form_Input$render(
															_bluedogtraining$bdt_elm$Form_Input$view(model.settings.cursor))),
													_1: {ctor: '[]'}
												}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$div,
												{
													ctor: '::',
													_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$label,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('Limit'),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{
																		ctor: '::',
																		_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																		_1: {ctor: '[]'}
																	},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 200, default: 10)'),
																		_1: {ctor: '[]'}
																	}),
																_1: {ctor: '[]'}
															}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$map,
															function (_p2) {
																return _ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_MsgFactory$composeMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_Msg$SettingsMsg(
																		_ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_Msg$UpdateLimit(_p2)));
															},
															_bluedogtraining$bdt_elm$Form_IntInput$render(
																_bluedogtraining$bdt_elm$Form_IntInput$view(model.settings.limit))),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$div,
													{
														ctor: '::',
														_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$label,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{ctor: '[]'},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('Sorting'),
																		_1: {ctor: '[]'}
																	}),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																			_1: {ctor: '[]'}
																		},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('(default: asc)'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {ctor: '[]'}
																}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$div,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																				_elm_lang$core$Native_Utils.eq(
																					model.settings.sorting,
																					_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc))),
																			_1: {
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																					_ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_MsgFactory$composeMsg(
																						_ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_Msg$SettingsMsg(
																							_ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc)))),
																				_1: {ctor: '[]'}
																			}
																		},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('Asc'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {
																		ctor: '::',
																		_0: A2(
																			_rtfeldman$elm_css$Html_Styled$span,
																			{
																				ctor: '::',
																				_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																					_elm_lang$core$Native_Utils.eq(
																						model.settings.sorting,
																						_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc))),
																				_1: {
																					ctor: '::',
																					_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																						_ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_MsgFactory$composeMsg(
																							_ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_Msg$SettingsMsg(
																								_ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc)))),
																					_1: {ctor: '[]'}
																				}
																			},
																			{
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled$text('Desc'),
																				_1: {ctor: '[]'}
																			}),
																		_1: {ctor: '[]'}
																	}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Request$view(
														A2(_ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_RequestBuilder$requestBuilder, endpoint, model.settings)),
													_1: {
														ctor: '::',
														_0: A2(
															_ryan_senn$stellar_elm_demo$Endpoints_Views_Button$view,
															model.isLoading,
															_ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_MsgFactory$composeMsg(
																A2(_ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_Msg$Request, endpoint, model.settings))),
														_1: {
															ctor: '::',
															_0: A3(_ryan_senn$stellar_elm_demo$Endpoints_Views_Response$view, 'EffectsForLedger', model.response, model.isLoading),
															_1: {ctor: '[]'}
														}
													}
												}
											}
										}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	});

var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_MsgFactory$composeMsg = function (_p0) {
	return _ryan_senn$stellar_elm_demo$Endpoints_MsgFactory$composeMsg(
		_ryan_senn$stellar_elm_demo$Endpoints_Msg$EffectsForOperationMsg(_p0));
};

var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_RequestBuilder$requestBuilder = F2(
	function (endpoint, settings) {
		return A3(
			_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfJust,
			_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForOperation$setSorting,
			settings.sorting,
			A5(
				_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChangedMaybe,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForOperation$setLimit,
				_bluedogtraining$bdt_elm$Form_IntInput$getIsChanged,
				_bluedogtraining$bdt_elm$Form_IntInput$getValue,
				settings.limit,
				A5(
					_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChanged,
					_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForOperation$setCursor,
					_bluedogtraining$bdt_elm$Form_Input$getIsChanged,
					_bluedogtraining$bdt_elm$Form_Input$getValue,
					settings.cursor,
					A2(
						_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForOperation$requestBuilder,
						_ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput(endpoint),
						A2(
							_elm_lang$core$Maybe$withDefault,
							0,
							_bluedogtraining$bdt_elm$Form_IntInput$getValue(settings.operationId))))));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_Update$updateSettings = F2(
	function (updateSettingsMsg, model) {
		var settingsModel = model.settings;
		var newSettingsModel = function () {
			var _p0 = updateSettingsMsg;
			switch (_p0.ctor) {
				case 'UpdateOperationId':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							operationId: A2(_bluedogtraining$bdt_elm$Form_IntInput$update, _p0._0, settingsModel.operationId)
						});
				case 'UpdateCursor':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							cursor: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p0._0, settingsModel.cursor)
						});
				case 'UpdateLimit':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							limit: A2(_bluedogtraining$bdt_elm$Form_IntInput$update, _p0._0, settingsModel.limit)
						});
				default:
					var _p1 = _p0._0;
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							sorting: _elm_lang$core$Native_Utils.eq(
								settingsModel.sorting,
								_elm_lang$core$Maybe$Just(_p1)) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(_p1)
						});
			}
		}();
		return _elm_lang$core$Native_Utils.update(
			model,
			{settings: newSettingsModel});
	});
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_Update$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'SettingsMsg':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					A2(_ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_Update$updateSettings, _p2._0, model),
					{ctor: '[]'});
			case 'Request':
				var request = A2(_ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_RequestBuilder$requestBuilder, _p2._0, _p2._1);
				var msg = function (_p3) {
					return _ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_MsgFactory$composeMsg(
						_ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_Msg$Response(_p3));
				};
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{isLoading: true}),
					{
						ctor: '::',
						_0: A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForOperation$send, msg, request),
						_1: {ctor: '[]'}
					});
			default:
				if (_p2._0.ctor === 'Err') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									A2(_ryan_senn$stellar_elm_sdk$Stellar_Error$flattenError, _p2._0._0, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForOperation$Error))
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									_elm_lang$core$Result$Ok(_p2._0._0))
							}),
						{ctor: '[]'});
				}
		}
	});

var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_View$view = F2(
	function (endpoint, model) {
		return A2(
			_rtfeldman$elm_css$Html_Styled$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(_ryan_senn$stellar_elm_demo$Endpoints_Views_Title$view, 'Effects for Operation', 'https://www.stellar.org/developers/horizon/reference/endpoints/effects-for-operation.html'),
				_1: {
					ctor: '::',
					_0: A2(
						_rtfeldman$elm_css$Html_Styled$div,
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$page,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_RequestTitle$view('EffectsForOperation'),
							_1: {
								ctor: '::',
								_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Endpoint$view(endpoint),
								_1: {
									ctor: '::',
									_0: A2(
										_rtfeldman$elm_css$Html_Styled$div,
										{
											ctor: '::',
											_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$label,
												{
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$span,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelMandatory,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: _rtfeldman$elm_css$Html_Styled$text('Operation'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 69859)'),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$map,
													function (_p0) {
														return _ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_MsgFactory$composeMsg(
															_ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_Msg$SettingsMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_Msg$UpdateOperationId(_p0)));
													},
													_bluedogtraining$bdt_elm$Form_IntInput$render(
														_bluedogtraining$bdt_elm$Form_IntInput$view(model.settings.operationId))),
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_rtfeldman$elm_css$Html_Styled$div,
											{
												ctor: '::',
												_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$label,
													{
														ctor: '::',
														_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('Cursor'),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{
																	ctor: '::',
																	_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																	_1: {ctor: '[]'}
																},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 1)'),
																	_1: {ctor: '[]'}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$map,
														function (_p1) {
															return _ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_MsgFactory$composeMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_Msg$SettingsMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_Msg$UpdateCursor(_p1)));
														},
														_bluedogtraining$bdt_elm$Form_Input$render(
															_bluedogtraining$bdt_elm$Form_Input$view(model.settings.cursor))),
													_1: {ctor: '[]'}
												}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$div,
												{
													ctor: '::',
													_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$label,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('Limit'),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{
																		ctor: '::',
																		_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																		_1: {ctor: '[]'}
																	},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 200, default: 10)'),
																		_1: {ctor: '[]'}
																	}),
																_1: {ctor: '[]'}
															}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$map,
															function (_p2) {
																return _ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_MsgFactory$composeMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_Msg$SettingsMsg(
																		_ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_Msg$UpdateLimit(_p2)));
															},
															_bluedogtraining$bdt_elm$Form_IntInput$render(
																_bluedogtraining$bdt_elm$Form_IntInput$view(model.settings.limit))),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$div,
													{
														ctor: '::',
														_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$label,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{ctor: '[]'},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('Sorting'),
																		_1: {ctor: '[]'}
																	}),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																			_1: {ctor: '[]'}
																		},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('(default: asc)'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {ctor: '[]'}
																}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$div,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																				_elm_lang$core$Native_Utils.eq(
																					model.settings.sorting,
																					_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc))),
																			_1: {
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																					_ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_MsgFactory$composeMsg(
																						_ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_Msg$SettingsMsg(
																							_ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc)))),
																				_1: {ctor: '[]'}
																			}
																		},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('Asc'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {
																		ctor: '::',
																		_0: A2(
																			_rtfeldman$elm_css$Html_Styled$span,
																			{
																				ctor: '::',
																				_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																					_elm_lang$core$Native_Utils.eq(
																						model.settings.sorting,
																						_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc))),
																				_1: {
																					ctor: '::',
																					_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																						_ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_MsgFactory$composeMsg(
																							_ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_Msg$SettingsMsg(
																								_ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc)))),
																					_1: {ctor: '[]'}
																				}
																			},
																			{
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled$text('Desc'),
																				_1: {ctor: '[]'}
																			}),
																		_1: {ctor: '[]'}
																	}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Request$view(
														A2(_ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_RequestBuilder$requestBuilder, endpoint, model.settings)),
													_1: {
														ctor: '::',
														_0: A2(
															_ryan_senn$stellar_elm_demo$Endpoints_Views_Button$view,
															model.isLoading,
															_ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_MsgFactory$composeMsg(
																A2(_ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_Msg$Request, endpoint, model.settings))),
														_1: {
															ctor: '::',
															_0: A3(_ryan_senn$stellar_elm_demo$Endpoints_Views_Response$view, 'EffectsForOperation', model.response, model.isLoading),
															_1: {ctor: '[]'}
														}
													}
												}
											}
										}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	});

var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_MsgFactory$composeMsg = function (_p0) {
	return _ryan_senn$stellar_elm_demo$Endpoints_MsgFactory$composeMsg(
		_ryan_senn$stellar_elm_demo$Endpoints_Msg$EffectsForTransactionMsg(_p0));
};

var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_RequestBuilder$requestBuilder = F2(
	function (endpoint, settings) {
		return A3(
			_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfJust,
			_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForTransaction$setSorting,
			settings.sorting,
			A5(
				_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChangedMaybe,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForTransaction$setLimit,
				_bluedogtraining$bdt_elm$Form_IntInput$getIsChanged,
				_bluedogtraining$bdt_elm$Form_IntInput$getValue,
				settings.limit,
				A5(
					_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChanged,
					_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForTransaction$setCursor,
					_bluedogtraining$bdt_elm$Form_Input$getIsChanged,
					_bluedogtraining$bdt_elm$Form_Input$getValue,
					settings.cursor,
					A2(
						_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForTransaction$requestBuilder,
						_ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput(endpoint),
						_bluedogtraining$bdt_elm$Form_Input$getValue(settings.transaction)))));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_Update$updateSettings = F2(
	function (updateSettingsMsg, model) {
		var settingsModel = model.settings;
		var newSettingsModel = function () {
			var _p0 = updateSettingsMsg;
			switch (_p0.ctor) {
				case 'UpdateTransaction':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							transaction: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p0._0, settingsModel.transaction)
						});
				case 'UpdateCursor':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							cursor: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p0._0, settingsModel.cursor)
						});
				case 'UpdateLimit':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							limit: A2(_bluedogtraining$bdt_elm$Form_IntInput$update, _p0._0, settingsModel.limit)
						});
				default:
					var _p1 = _p0._0;
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							sorting: _elm_lang$core$Native_Utils.eq(
								settingsModel.sorting,
								_elm_lang$core$Maybe$Just(_p1)) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(_p1)
						});
			}
		}();
		return _elm_lang$core$Native_Utils.update(
			model,
			{settings: newSettingsModel});
	});
var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_Update$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'SettingsMsg':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					A2(_ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_Update$updateSettings, _p2._0, model),
					{ctor: '[]'});
			case 'Request':
				var request = A2(_ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_RequestBuilder$requestBuilder, _p2._0, _p2._1);
				var msg = function (_p3) {
					return _ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_MsgFactory$composeMsg(
						_ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_Msg$Response(_p3));
				};
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{isLoading: true}),
					{
						ctor: '::',
						_0: A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForTransaction$send, msg, request),
						_1: {ctor: '[]'}
					});
			default:
				if (_p2._0.ctor === 'Err') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									A2(_ryan_senn$stellar_elm_sdk$Stellar_Error$flattenError, _p2._0._0, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_EffectsForTransaction$Error))
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									_elm_lang$core$Result$Ok(_p2._0._0))
							}),
						{ctor: '[]'});
				}
		}
	});

var _ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_View$view = F2(
	function (endpoint, model) {
		return A2(
			_rtfeldman$elm_css$Html_Styled$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(_ryan_senn$stellar_elm_demo$Endpoints_Views_Title$view, 'Effects for Transaction', 'https://www.stellar.org/developers/horizon/reference/endpoints/effects-for-transaction.html'),
				_1: {
					ctor: '::',
					_0: A2(
						_rtfeldman$elm_css$Html_Styled$div,
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$page,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_RequestTitle$view('EffectsForTransaction'),
							_1: {
								ctor: '::',
								_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Endpoint$view(endpoint),
								_1: {
									ctor: '::',
									_0: A2(
										_rtfeldman$elm_css$Html_Styled$div,
										{
											ctor: '::',
											_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$label,
												{
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$span,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelMandatory,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: _rtfeldman$elm_css$Html_Styled$text('Hash'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 6391dd190f15f7d1665ba53c63842e368f485651a53d8d852ed442a446d1c69a)'),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$map,
													function (_p0) {
														return _ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_MsgFactory$composeMsg(
															_ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_Msg$SettingsMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_Msg$UpdateTransaction(_p0)));
													},
													_bluedogtraining$bdt_elm$Form_Input$render(
														_bluedogtraining$bdt_elm$Form_Input$view(model.settings.transaction))),
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_rtfeldman$elm_css$Html_Styled$div,
											{
												ctor: '::',
												_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$label,
													{
														ctor: '::',
														_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('Cursor'),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{
																	ctor: '::',
																	_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																	_1: {ctor: '[]'}
																},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 1)'),
																	_1: {ctor: '[]'}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$map,
														function (_p1) {
															return _ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_MsgFactory$composeMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_Msg$SettingsMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_Msg$UpdateCursor(_p1)));
														},
														_bluedogtraining$bdt_elm$Form_Input$render(
															_bluedogtraining$bdt_elm$Form_Input$view(model.settings.cursor))),
													_1: {ctor: '[]'}
												}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$div,
												{
													ctor: '::',
													_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$label,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('Limit'),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{
																		ctor: '::',
																		_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																		_1: {ctor: '[]'}
																	},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 200, default: 10)'),
																		_1: {ctor: '[]'}
																	}),
																_1: {ctor: '[]'}
															}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$map,
															function (_p2) {
																return _ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_MsgFactory$composeMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_Msg$SettingsMsg(
																		_ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_Msg$UpdateLimit(_p2)));
															},
															_bluedogtraining$bdt_elm$Form_IntInput$render(
																_bluedogtraining$bdt_elm$Form_IntInput$view(model.settings.limit))),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$div,
													{
														ctor: '::',
														_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$label,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{ctor: '[]'},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('Sorting'),
																		_1: {ctor: '[]'}
																	}),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																			_1: {ctor: '[]'}
																		},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('(default: asc)'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {ctor: '[]'}
																}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$div,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																				_elm_lang$core$Native_Utils.eq(
																					model.settings.sorting,
																					_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc))),
																			_1: {
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																					_ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_MsgFactory$composeMsg(
																						_ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_Msg$SettingsMsg(
																							_ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc)))),
																				_1: {ctor: '[]'}
																			}
																		},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('Asc'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {
																		ctor: '::',
																		_0: A2(
																			_rtfeldman$elm_css$Html_Styled$span,
																			{
																				ctor: '::',
																				_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																					_elm_lang$core$Native_Utils.eq(
																						model.settings.sorting,
																						_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc))),
																				_1: {
																					ctor: '::',
																					_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																						_ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_MsgFactory$composeMsg(
																							_ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_Msg$SettingsMsg(
																								_ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc)))),
																					_1: {ctor: '[]'}
																				}
																			},
																			{
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled$text('Desc'),
																				_1: {ctor: '[]'}
																			}),
																		_1: {ctor: '[]'}
																	}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Request$view(
														A2(_ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_RequestBuilder$requestBuilder, endpoint, model.settings)),
													_1: {
														ctor: '::',
														_0: A2(
															_ryan_senn$stellar_elm_demo$Endpoints_Views_Button$view,
															model.isLoading,
															_ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_MsgFactory$composeMsg(
																A2(_ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_Msg$Request, endpoint, model.settings))),
														_1: {
															ctor: '::',
															_0: A3(_ryan_senn$stellar_elm_demo$Endpoints_Views_Response$view, 'EffectsForTransaction', model.response, model.isLoading),
															_1: {ctor: '[]'}
														}
													}
												}
											}
										}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	});

var _ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_MsgFactory$composeMsg = function (_p0) {
	return _ryan_senn$stellar_elm_demo$Endpoints_MsgFactory$composeMsg(
		_ryan_senn$stellar_elm_demo$Endpoints_Msg$FindPaymentPathsMsg(_p0));
};

var _ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_RequestBuilder$requestBuilder = F2(
	function (endpoint, settings) {
		return A5(
			_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChanged,
			_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_FindPaymentPaths$setDestinationAssetIssuer,
			_bluedogtraining$bdt_elm$Form_Input$getIsChanged,
			_bluedogtraining$bdt_elm$Form_Input$getValue,
			settings.destinationAssetIssuer,
			A5(
				_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChanged,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_FindPaymentPaths$setDestinationAssetCode,
				_bluedogtraining$bdt_elm$Form_Input$getIsChanged,
				_bluedogtraining$bdt_elm$Form_Input$getValue,
				settings.destinationAssetCode,
				A5(
					_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_FindPaymentPaths$requestBuilder,
					_ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput(endpoint),
					_ryan_senn$stellar_elm_demo$Endpoints_Helpers$publicKeyFromInput(settings.sourceAccount),
					_ryan_senn$stellar_elm_demo$Endpoints_Helpers$publicKeyFromInput(settings.destinationAccount),
					A2(
						_elm_lang$core$Maybe$withDefault,
						_ryan_senn$stellar_elm_sdk$Stellar_AssetType$Native,
						_bluedogtraining$bdt_elm$Form_Select$getSelectedOption(settings.destinationAssetType)),
					A2(
						_elm_lang$core$Maybe$withDefault,
						0,
						_bluedogtraining$bdt_elm$Form_IntInput$getValue(settings.destinationAmount)))));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Update$updateSettings = F2(
	function (updateSettingsMsg, model) {
		var settingsModel = model.settings;
		var _p0 = function () {
			var _p1 = updateSettingsMsg;
			switch (_p1.ctor) {
				case 'UpdateSourceAccount':
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							settingsModel,
							{
								sourceAccount: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p1._0, settingsModel.sourceAccount)
							}),
						{ctor: '[]'});
				case 'UpdateDestinationAccount':
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							settingsModel,
							{
								destinationAccount: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p1._0, settingsModel.destinationAccount)
							}),
						{ctor: '[]'});
				case 'UpdateDestinationAssetType':
					var _p2 = A2(_bluedogtraining$bdt_elm$Form_Select$update, _p1._0, settingsModel.destinationAssetType);
					var destinationAssetType = _p2._0;
					var cmds = _p2._1;
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							settingsModel,
							{destinationAssetType: destinationAssetType}),
						{
							ctor: '::',
							_0: A2(
								_elm_lang$core$Platform_Cmd$map,
								function (_p3) {
									return _ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_MsgFactory$composeMsg(
										_ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Msg$SettingsMsg(
											_ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Msg$UpdateDestinationAssetType(_p3)));
								},
								cmds),
							_1: {ctor: '[]'}
						});
				case 'UpdateDestinationAssetCode':
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							settingsModel,
							{
								destinationAssetCode: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p1._0, settingsModel.destinationAssetCode)
							}),
						{ctor: '[]'});
				case 'UpdateDestinationAssetIssuer':
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							settingsModel,
							{
								destinationAssetIssuer: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p1._0, settingsModel.destinationAssetIssuer)
							}),
						{ctor: '[]'});
				default:
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							settingsModel,
							{
								destinationAmount: A2(_bluedogtraining$bdt_elm$Form_IntInput$update, _p1._0, settingsModel.destinationAmount)
							}),
						{ctor: '[]'});
			}
		}();
		var newSettingsModel = _p0._0;
		var cmds = _p0._1;
		return A2(
			_elm_lang$core$Platform_Cmd_ops['!'],
			_elm_lang$core$Native_Utils.update(
				model,
				{settings: newSettingsModel}),
			{
				ctor: '::',
				_0: cmds,
				_1: {ctor: '[]'}
			});
	});
var _ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Update$update = F2(
	function (msg, model) {
		var _p4 = msg;
		switch (_p4.ctor) {
			case 'SettingsMsg':
				return A2(_ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Update$updateSettings, _p4._0, model);
			case 'Request':
				var request = A2(_ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_RequestBuilder$requestBuilder, _p4._0, _p4._1);
				var msg = function (_p5) {
					return _ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_MsgFactory$composeMsg(
						_ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Msg$Response(_p5));
				};
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{isLoading: true}),
					{
						ctor: '::',
						_0: A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_FindPaymentPaths$send, msg, request),
						_1: {ctor: '[]'}
					});
			default:
				if (_p4._0.ctor === 'Err') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									A2(_ryan_senn$stellar_elm_sdk$Stellar_Error$flattenError, _p4._0._0, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_FindPaymentPaths$Error))
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									_elm_lang$core$Result$Ok(_p4._0._0))
							}),
						{ctor: '[]'});
				}
		}
	});

var _ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_View$view = F2(
	function (endpoint, model) {
		return A2(
			_rtfeldman$elm_css$Html_Styled$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(_ryan_senn$stellar_elm_demo$Endpoints_Views_Title$view, 'Operation Details', 'https://www.stellar.org/developers/horizon/reference/endpoints/path-finding.html'),
				_1: {
					ctor: '::',
					_0: A2(
						_rtfeldman$elm_css$Html_Styled$div,
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$page,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_RequestTitle$view('FindPaymentPaths'),
							_1: {
								ctor: '::',
								_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Endpoint$view(endpoint),
								_1: {
									ctor: '::',
									_0: A2(
										_rtfeldman$elm_css$Html_Styled$div,
										{
											ctor: '::',
											_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$label,
												{
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$span,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelMandatory,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: _rtfeldman$elm_css$Html_Styled$text('Source Account'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('(eg: GA2HGBJIJKI6O4XEM7CZWY5PS6GKSXL6D34ERAJYQSPYA6X6AI7HYW36)'),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$map,
													function (_p0) {
														return _ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_MsgFactory$composeMsg(
															_ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Msg$SettingsMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Msg$UpdateSourceAccount(_p0)));
													},
													_bluedogtraining$bdt_elm$Form_Input$render(
														_bluedogtraining$bdt_elm$Form_Input$view(model.settings.sourceAccount))),
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_rtfeldman$elm_css$Html_Styled$div,
											{
												ctor: '::',
												_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$label,
													{
														ctor: '::',
														_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelMandatory,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('Destination Account'),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{
																	ctor: '::',
																	_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																	_1: {ctor: '[]'}
																},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('(eg: GA2HGBJIJKI6O4XEM7CZWY5PS6GKSXL6D34ERAJYQSPYA6X6AI7HYW36)'),
																	_1: {ctor: '[]'}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$map,
														function (_p1) {
															return _ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_MsgFactory$composeMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Msg$SettingsMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Msg$UpdateDestinationAccount(_p1)));
														},
														_bluedogtraining$bdt_elm$Form_Input$render(
															_bluedogtraining$bdt_elm$Form_Input$view(model.settings.destinationAccount))),
													_1: {ctor: '[]'}
												}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$div,
												{
													ctor: '::',
													_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$label,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{
																	ctor: '::',
																	_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelMandatory,
																	_1: {ctor: '[]'}
																},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('Destination Asset Type'),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{ctor: '[]'},
																	{ctor: '[]'}),
																_1: {ctor: '[]'}
															}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$map,
															function (_p2) {
																return _ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_MsgFactory$composeMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Msg$SettingsMsg(
																		_ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Msg$UpdateDestinationAssetType(_p2)));
															},
															_bluedogtraining$bdt_elm$Form_Select$render(
																_bluedogtraining$bdt_elm$Form_Select$view(model.settings.destinationAssetType))),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A3(
													_bluedogtraining$bdt_elm$Html_Styled_Bdt$divIf,
													(!_elm_lang$core$Native_Utils.eq(
														_bluedogtraining$bdt_elm$Form_Select$getSelectedOption(model.settings.destinationAssetType),
														_elm_lang$core$Maybe$Nothing)) && (!_elm_lang$core$Native_Utils.eq(
														_bluedogtraining$bdt_elm$Form_Select$getSelectedOption(model.settings.destinationAssetType),
														_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_AssetType$Native))),
													{
														ctor: '::',
														_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$label,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{ctor: '[]'},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('Destination Asset Code'),
																		_1: {ctor: '[]'}
																	}),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																			_1: {ctor: '[]'}
																		},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('(eg: USD)'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {ctor: '[]'}
																}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$map,
																function (_p3) {
																	return _ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_MsgFactory$composeMsg(
																		_ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Msg$SettingsMsg(
																			_ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Msg$UpdateDestinationAssetCode(_p3)));
																},
																_bluedogtraining$bdt_elm$Form_Input$render(
																	_bluedogtraining$bdt_elm$Form_Input$view(model.settings.destinationAssetCode))),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: A3(
														_bluedogtraining$bdt_elm$Html_Styled_Bdt$divIf,
														(!_elm_lang$core$Native_Utils.eq(
															_bluedogtraining$bdt_elm$Form_Select$getSelectedOption(model.settings.destinationAssetType),
															_elm_lang$core$Maybe$Nothing)) && (!_elm_lang$core$Native_Utils.eq(
															_bluedogtraining$bdt_elm$Form_Select$getSelectedOption(model.settings.destinationAssetType),
															_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_AssetType$Native))),
														{
															ctor: '::',
															_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$label,
																{
																	ctor: '::',
																	_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
																	_1: {ctor: '[]'}
																},
																{
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{ctor: '[]'},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('Destination Asset Issuer'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {
																		ctor: '::',
																		_0: A2(
																			_rtfeldman$elm_css$Html_Styled$span,
																			{
																				ctor: '::',
																				_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																				_1: {ctor: '[]'}
																			},
																			{
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled$text('(eg: GA2HGBJIJKI6O4XEM7CZWY5PS6GKSXL6D34ERAJYQSPYA6X6AI7HYW36)'),
																				_1: {ctor: '[]'}
																			}),
																		_1: {ctor: '[]'}
																	}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$map,
																	function (_p4) {
																		return _ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_MsgFactory$composeMsg(
																			_ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Msg$SettingsMsg(
																				_ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Msg$UpdateDestinationAssetIssuer(_p4)));
																	},
																	_bluedogtraining$bdt_elm$Form_Input$render(
																		_bluedogtraining$bdt_elm$Form_Input$view(model.settings.destinationAssetIssuer))),
																_1: {ctor: '[]'}
															}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$div,
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$label,
																	{
																		ctor: '::',
																		_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
																		_1: {ctor: '[]'}
																	},
																	{
																		ctor: '::',
																		_0: A2(
																			_rtfeldman$elm_css$Html_Styled$span,
																			{
																				ctor: '::',
																				_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelMandatory,
																				_1: {ctor: '[]'}
																			},
																			{
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled$text('Destination Amount'),
																				_1: {ctor: '[]'}
																			}),
																		_1: {
																			ctor: '::',
																			_0: A2(
																				_rtfeldman$elm_css$Html_Styled$span,
																				{
																					ctor: '::',
																					_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																					_1: {ctor: '[]'}
																				},
																				{
																					ctor: '::',
																					_0: _rtfeldman$elm_css$Html_Styled$text('(eg: GA2HGBJIJKI6O4XEM7CZWY5PS6GKSXL6D34ERAJYQSPYA6X6AI7HYW36)'),
																					_1: {ctor: '[]'}
																				}),
																			_1: {ctor: '[]'}
																		}
																	}),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$map,
																		function (_p5) {
																			return _ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_MsgFactory$composeMsg(
																				_ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Msg$SettingsMsg(
																					_ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Msg$UpdateDestinationAmount(_p5)));
																		},
																		_bluedogtraining$bdt_elm$Form_IntInput$render(
																			_bluedogtraining$bdt_elm$Form_IntInput$view(model.settings.destinationAmount))),
																	_1: {ctor: '[]'}
																}
															}),
														_1: {
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Request$view(
																A2(_ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_RequestBuilder$requestBuilder, endpoint, model.settings)),
															_1: {
																ctor: '::',
																_0: A2(
																	_ryan_senn$stellar_elm_demo$Endpoints_Views_Button$view,
																	model.isLoading,
																	_ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_MsgFactory$composeMsg(
																		A2(_ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Msg$Request, endpoint, model.settings))),
																_1: {
																	ctor: '::',
																	_0: A3(_ryan_senn$stellar_elm_demo$Endpoints_Views_Response$view, 'FindPaymentPaths', model.response, model.isLoading),
																	_1: {ctor: '[]'}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	});

var _ryan_senn$stellar_elm_demo$Endpoints_LedgerDetails_Model$initialSettings = {sequence: _bluedogtraining$bdt_elm$Form_IntInput$init};
var _ryan_senn$stellar_elm_demo$Endpoints_LedgerDetails_Model$initialModel = {settings: _ryan_senn$stellar_elm_demo$Endpoints_LedgerDetails_Model$initialSettings, isLoading: false, response: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_LedgerDetails_Model$Model = F3(
	function (a, b, c) {
		return {settings: a, isLoading: b, response: c};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_LedgerDetails_Model$Settings = function (a) {
	return {sequence: a};
};

var _ryan_senn$stellar_elm_demo$Endpoints_LedgerDetails_MsgFactory$composeMsg = function (_p0) {
	return _ryan_senn$stellar_elm_demo$Endpoints_MsgFactory$composeMsg(
		_ryan_senn$stellar_elm_demo$Endpoints_Msg$LedgerDetailsMsg(_p0));
};

var _ryan_senn$stellar_elm_demo$Endpoints_LedgerDetails_Update$updateSettings = F2(
	function (updateSettingsMsg, model) {
		var settingsModel = model.settings;
		var newSettingsModel = function () {
			var _p0 = updateSettingsMsg;
			return _elm_lang$core$Native_Utils.update(
				settingsModel,
				{
					sequence: A2(_bluedogtraining$bdt_elm$Form_IntInput$update, _p0._0, settingsModel.sequence)
				});
		}();
		return _elm_lang$core$Native_Utils.update(
			model,
			{settings: newSettingsModel});
	});
var _ryan_senn$stellar_elm_demo$Endpoints_LedgerDetails_Update$update = F2(
	function (msg, model) {
		var _p1 = msg;
		switch (_p1.ctor) {
			case 'SettingsMsg':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					A2(_ryan_senn$stellar_elm_demo$Endpoints_LedgerDetails_Update$updateSettings, _p1._0, model),
					{ctor: '[]'});
			case 'Request':
				var requestBuilder = A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_LedgerDetails$requestBuilder, _p1._0, _p1._1);
				var msg = function (_p2) {
					return _ryan_senn$stellar_elm_demo$Endpoints_LedgerDetails_MsgFactory$composeMsg(
						_ryan_senn$stellar_elm_demo$Endpoints_LedgerDetails_Msg$Response(_p2));
				};
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{isLoading: true}),
					{
						ctor: '::',
						_0: A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_LedgerDetails$send, msg, requestBuilder),
						_1: {ctor: '[]'}
					});
			default:
				if (_p1._0.ctor === 'Err') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									A2(_ryan_senn$stellar_elm_sdk$Stellar_Error$flattenError, _p1._0._0, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_LedgerDetails$Error))
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									_elm_lang$core$Result$Ok(_p1._0._0))
							}),
						{ctor: '[]'});
				}
		}
	});

var _ryan_senn$stellar_elm_demo$Endpoints_LedgerDetails_View$view = F2(
	function (endpoint, model) {
		return A2(
			_rtfeldman$elm_css$Html_Styled$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(_ryan_senn$stellar_elm_demo$Endpoints_Views_Title$view, 'Ledger Details', 'https://www.stellar.org/developers/horizon/reference/endpoints/ledgers-single.html'),
				_1: {
					ctor: '::',
					_0: A2(
						_rtfeldman$elm_css$Html_Styled$div,
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$page,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_RequestTitle$view('LedgerDetails'),
							_1: {
								ctor: '::',
								_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Endpoint$view(endpoint),
								_1: {
									ctor: '::',
									_0: A2(
										_rtfeldman$elm_css$Html_Styled$div,
										{
											ctor: '::',
											_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$label,
												{
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$span,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelMandatory,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: _rtfeldman$elm_css$Html_Styled$text('Sequence'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 69859)'),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$map,
													function (_p0) {
														return _ryan_senn$stellar_elm_demo$Endpoints_LedgerDetails_MsgFactory$composeMsg(
															_ryan_senn$stellar_elm_demo$Endpoints_LedgerDetails_Msg$SettingsMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_LedgerDetails_Msg$UpdateSequence(_p0)));
													},
													_bluedogtraining$bdt_elm$Form_IntInput$render(
														_bluedogtraining$bdt_elm$Form_IntInput$view(model.settings.sequence))),
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Request$view(
											A2(
												_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_LedgerDetails$requestBuilder,
												_ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput(endpoint),
												A2(
													_elm_lang$core$Maybe$withDefault,
													0,
													_bluedogtraining$bdt_elm$Form_IntInput$getValue(model.settings.sequence)))),
										_1: {
											ctor: '::',
											_0: A2(
												_ryan_senn$stellar_elm_demo$Endpoints_Views_Button$view,
												model.isLoading,
												_ryan_senn$stellar_elm_demo$Endpoints_LedgerDetails_MsgFactory$composeMsg(
													A2(
														_ryan_senn$stellar_elm_demo$Endpoints_LedgerDetails_Msg$Request,
														_ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput(endpoint),
														A2(
															_elm_lang$core$Maybe$withDefault,
															0,
															_bluedogtraining$bdt_elm$Form_IntInput$getValue(model.settings.sequence))))),
											_1: {
												ctor: '::',
												_0: A3(_ryan_senn$stellar_elm_demo$Endpoints_Views_Response$view, 'LedgerDetails', model.response, model.isLoading),
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	});

var _ryan_senn$stellar_elm_demo$Endpoints_TransactionDetails_Model$initialSettings = {hash: _bluedogtraining$bdt_elm$Form_Input$init};
var _ryan_senn$stellar_elm_demo$Endpoints_TransactionDetails_Model$initialModel = {settings: _ryan_senn$stellar_elm_demo$Endpoints_TransactionDetails_Model$initialSettings, isLoading: false, response: _elm_lang$core$Maybe$Nothing};
var _ryan_senn$stellar_elm_demo$Endpoints_TransactionDetails_Model$Model = F3(
	function (a, b, c) {
		return {settings: a, isLoading: b, response: c};
	});
var _ryan_senn$stellar_elm_demo$Endpoints_TransactionDetails_Model$Settings = function (a) {
	return {hash: a};
};

var _ryan_senn$stellar_elm_demo$Endpoints_Model$initialModel = {
	endpoint: A2(_bluedogtraining$bdt_elm$Form_Input$setInitialValue, 'https://horizon-testnet.stellar.org', _bluedogtraining$bdt_elm$Form_Input$init),
	accountDetails: _ryan_senn$stellar_elm_demo$Endpoints_AccountDetails_Model$initialModel,
	allAssets: _ryan_senn$stellar_elm_demo$Endpoints_AllAssets_Model$initialModel,
	allEffects: _ryan_senn$stellar_elm_demo$Endpoints_AllEffects_Model$initialModel,
	effectsForAccount: _ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_Model$initialModel,
	effectsForLedger: _ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_Model$initialModel,
	effectsForOperation: _ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_Model$initialModel,
	effectsForTransaction: _ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_Model$initialModel,
	dataForAccount: _ryan_senn$stellar_elm_demo$Endpoints_DataForAccount_Model$initialModel,
	allLedgers: _ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_Model$initialModel,
	ledgerDetails: _ryan_senn$stellar_elm_demo$Endpoints_LedgerDetails_Model$initialModel,
	offersForAccount: _ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_Model$initialModel,
	allOperations: _ryan_senn$stellar_elm_demo$Endpoints_AllOperations_Model$initialModel,
	operationsForAccount: _ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_Model$initialModel,
	operationsForLedger: _ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_Model$initialModel,
	operationsForTransaction: _ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_Model$initialModel,
	operationDetails: _ryan_senn$stellar_elm_demo$Endpoints_OperationDetails_Model$initialModel,
	orderbookDetails: _ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Model$initialModel,
	findPaymentPaths: _ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Model$initialModel,
	allPayments: _ryan_senn$stellar_elm_demo$Endpoints_AllPayments_Model$initialModel,
	paymentsForAccount: _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_Model$initialModel,
	paymentsForLedger: _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_Model$initialModel,
	paymentsForTransaction: _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_Model$initialModel,
	allTransactions: _ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_Model$initialModel,
	postTransaction: _ryan_senn$stellar_elm_demo$Endpoints_PostTransaction_Model$initialModel,
	transactionsForAccount: _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_Model$initialModel,
	transactionsForLedger: _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_Model$initialModel,
	transactionDetails: _ryan_senn$stellar_elm_demo$Endpoints_TransactionDetails_Model$initialModel
};
var _ryan_senn$stellar_elm_demo$Endpoints_Model$Model = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return function (m) {
													return function (n) {
														return function (o) {
															return function (p) {
																return function (q) {
																	return function (r) {
																		return function (s) {
																			return function (t) {
																				return function (u) {
																					return function (v) {
																						return function (w) {
																							return function (x) {
																								return function (y) {
																									return function (z) {
																										return function (_1) {
																											return function (_2) {
																												return {endpoint: a, accountDetails: b, allAssets: c, allEffects: d, effectsForAccount: e, effectsForLedger: f, effectsForOperation: g, effectsForTransaction: h, dataForAccount: i, allLedgers: j, ledgerDetails: k, offersForAccount: l, allOperations: m, operationsForAccount: n, operationsForLedger: o, operationsForTransaction: p, operationDetails: q, orderbookDetails: r, findPaymentPaths: s, allPayments: t, paymentsForAccount: u, paymentsForLedger: v, paymentsForTransaction: w, allTransactions: x, postTransaction: y, transactionsForAccount: z, transactionsForLedger: _1, transactionDetails: _2};
																											};
																										};
																									};
																								};
																							};
																						};
																					};
																				};
																			};
																		};
																	};
																};
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};

var _ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_MsgFactory$composeMsg = function (_p0) {
	return _ryan_senn$stellar_elm_demo$Endpoints_MsgFactory$composeMsg(
		_ryan_senn$stellar_elm_demo$Endpoints_Msg$OffersForAccountMsg(_p0));
};

var _ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_RequestBuilder$requestBuilder = F2(
	function (endpoint, settings) {
		return A3(
			_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfJust,
			_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OffersForAccount$setSorting,
			settings.sorting,
			A5(
				_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChangedMaybe,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OffersForAccount$setLimit,
				_bluedogtraining$bdt_elm$Form_IntInput$getIsChanged,
				_bluedogtraining$bdt_elm$Form_IntInput$getValue,
				settings.limit,
				A5(
					_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChanged,
					_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OffersForAccount$setCursor,
					_bluedogtraining$bdt_elm$Form_Input$getIsChanged,
					_bluedogtraining$bdt_elm$Form_Input$getValue,
					settings.cursor,
					A2(
						_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OffersForAccount$requestBuilder,
						_ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput(endpoint),
						_ryan_senn$stellar_elm_demo$Endpoints_Helpers$publicKeyFromInput(settings.account)))));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_Update$updateSettings = F2(
	function (updateSettingsMsg, model) {
		var settingsModel = model.settings;
		var newSettingsModel = function () {
			var _p0 = updateSettingsMsg;
			switch (_p0.ctor) {
				case 'UpdateAccount':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							account: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p0._0, settingsModel.account)
						});
				case 'UpdateCursor':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							cursor: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p0._0, settingsModel.cursor)
						});
				case 'UpdateLimit':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							limit: A2(_bluedogtraining$bdt_elm$Form_IntInput$update, _p0._0, settingsModel.limit)
						});
				default:
					var _p1 = _p0._0;
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							sorting: _elm_lang$core$Native_Utils.eq(
								settingsModel.sorting,
								_elm_lang$core$Maybe$Just(_p1)) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(_p1)
						});
			}
		}();
		return _elm_lang$core$Native_Utils.update(
			model,
			{settings: newSettingsModel});
	});
var _ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_Update$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'SettingsMsg':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					A2(_ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_Update$updateSettings, _p2._0, model),
					{ctor: '[]'});
			case 'Request':
				var request = A2(_ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_RequestBuilder$requestBuilder, _p2._0, _p2._1);
				var msg = function (_p3) {
					return _ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_MsgFactory$composeMsg(
						_ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_Msg$Response(_p3));
				};
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{isLoading: true}),
					{
						ctor: '::',
						_0: A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OffersForAccount$send, msg, request),
						_1: {ctor: '[]'}
					});
			default:
				if (_p2._0.ctor === 'Err') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									A2(_ryan_senn$stellar_elm_sdk$Stellar_Error$flattenError, _p2._0._0, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OffersForAccount$Error))
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									_elm_lang$core$Result$Ok(_p2._0._0))
							}),
						{ctor: '[]'});
				}
		}
	});

var _ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_View$view = F2(
	function (endpoint, model) {
		return A2(
			_rtfeldman$elm_css$Html_Styled$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(_ryan_senn$stellar_elm_demo$Endpoints_Views_Title$view, 'Offers for Account', 'https://www.stellar.org/developers/horizon/reference/endpoints/offers-for-account.html'),
				_1: {
					ctor: '::',
					_0: A2(
						_rtfeldman$elm_css$Html_Styled$div,
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$page,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_RequestTitle$view('OffersForAccount'),
							_1: {
								ctor: '::',
								_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Endpoint$view(endpoint),
								_1: {
									ctor: '::',
									_0: A2(
										_rtfeldman$elm_css$Html_Styled$div,
										{
											ctor: '::',
											_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$label,
												{
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$span,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelMandatory,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: _rtfeldman$elm_css$Html_Styled$text('Account'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('(eg: GA2HGBJIJKI6O4XEM7CZWY5PS6GKSXL6D34ERAJYQSPYA6X6AI7HYW36)'),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$map,
													function (_p0) {
														return _ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_MsgFactory$composeMsg(
															_ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_Msg$SettingsMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_Msg$UpdateAccount(_p0)));
													},
													_bluedogtraining$bdt_elm$Form_Input$render(
														_bluedogtraining$bdt_elm$Form_Input$view(model.settings.account))),
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_rtfeldman$elm_css$Html_Styled$div,
											{
												ctor: '::',
												_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$label,
													{
														ctor: '::',
														_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('Cursor'),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{
																	ctor: '::',
																	_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																	_1: {ctor: '[]'}
																},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 1)'),
																	_1: {ctor: '[]'}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$map,
														function (_p1) {
															return _ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_MsgFactory$composeMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_Msg$SettingsMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_Msg$UpdateCursor(_p1)));
														},
														_bluedogtraining$bdt_elm$Form_Input$render(
															_bluedogtraining$bdt_elm$Form_Input$view(model.settings.cursor))),
													_1: {ctor: '[]'}
												}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$div,
												{
													ctor: '::',
													_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$label,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('Limit'),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{
																		ctor: '::',
																		_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																		_1: {ctor: '[]'}
																	},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 200, default: 10)'),
																		_1: {ctor: '[]'}
																	}),
																_1: {ctor: '[]'}
															}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$map,
															function (_p2) {
																return _ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_MsgFactory$composeMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_Msg$SettingsMsg(
																		_ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_Msg$UpdateLimit(_p2)));
															},
															_bluedogtraining$bdt_elm$Form_IntInput$render(
																_bluedogtraining$bdt_elm$Form_IntInput$view(model.settings.limit))),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$div,
													{
														ctor: '::',
														_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$label,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{ctor: '[]'},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('Sorting'),
																		_1: {ctor: '[]'}
																	}),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																			_1: {ctor: '[]'}
																		},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('(default: asc)'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {ctor: '[]'}
																}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$div,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																				_elm_lang$core$Native_Utils.eq(
																					model.settings.sorting,
																					_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc))),
																			_1: {
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																					_ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_MsgFactory$composeMsg(
																						_ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_Msg$SettingsMsg(
																							_ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc)))),
																				_1: {ctor: '[]'}
																			}
																		},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('Asc'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {
																		ctor: '::',
																		_0: A2(
																			_rtfeldman$elm_css$Html_Styled$span,
																			{
																				ctor: '::',
																				_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																					_elm_lang$core$Native_Utils.eq(
																						model.settings.sorting,
																						_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc))),
																				_1: {
																					ctor: '::',
																					_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																						_ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_MsgFactory$composeMsg(
																							_ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_Msg$SettingsMsg(
																								_ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc)))),
																					_1: {ctor: '[]'}
																				}
																			},
																			{
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled$text('Desc'),
																				_1: {ctor: '[]'}
																			}),
																		_1: {ctor: '[]'}
																	}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Request$view(
														A2(_ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_RequestBuilder$requestBuilder, endpoint, model.settings)),
													_1: {
														ctor: '::',
														_0: A2(
															_ryan_senn$stellar_elm_demo$Endpoints_Views_Button$view,
															model.isLoading,
															_ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_MsgFactory$composeMsg(
																A2(_ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_Msg$Request, endpoint, model.settings))),
														_1: {
															ctor: '::',
															_0: A3(_ryan_senn$stellar_elm_demo$Endpoints_Views_Response$view, 'OffersForAccount', model.response, model.isLoading),
															_1: {ctor: '[]'}
														}
													}
												}
											}
										}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	});

var _ryan_senn$stellar_elm_demo$Endpoints_OperationDetails_MsgFactory$composeMsg = function (_p0) {
	return _ryan_senn$stellar_elm_demo$Endpoints_MsgFactory$composeMsg(
		_ryan_senn$stellar_elm_demo$Endpoints_Msg$OperationDetailsMsg(_p0));
};

var _ryan_senn$stellar_elm_demo$Endpoints_OperationDetails_RequestBuilder$requestBuilder = F2(
	function (endpoint, settings) {
		return A2(
			_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationDetails$requestBuilder,
			_ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput(endpoint),
			A2(
				_elm_lang$core$Maybe$withDefault,
				0,
				_bluedogtraining$bdt_elm$Form_IntInput$getValue(settings.operationId)));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_OperationDetails_Update$updateSettings = F2(
	function (updateSettingsMsg, model) {
		var settingsModel = model.settings;
		var newSettingsModel = function () {
			var _p0 = updateSettingsMsg;
			return _elm_lang$core$Native_Utils.update(
				settingsModel,
				{
					operationId: A2(_bluedogtraining$bdt_elm$Form_IntInput$update, _p0._0, settingsModel.operationId)
				});
		}();
		return _elm_lang$core$Native_Utils.update(
			model,
			{settings: newSettingsModel});
	});
var _ryan_senn$stellar_elm_demo$Endpoints_OperationDetails_Update$update = F2(
	function (msg, model) {
		var _p1 = msg;
		switch (_p1.ctor) {
			case 'SettingsMsg':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					A2(_ryan_senn$stellar_elm_demo$Endpoints_OperationDetails_Update$updateSettings, _p1._0, model),
					{ctor: '[]'});
			case 'Request':
				var request = A2(_ryan_senn$stellar_elm_demo$Endpoints_OperationDetails_RequestBuilder$requestBuilder, _p1._0, _p1._1);
				var msg = function (_p2) {
					return _ryan_senn$stellar_elm_demo$Endpoints_OperationDetails_MsgFactory$composeMsg(
						_ryan_senn$stellar_elm_demo$Endpoints_OperationDetails_Msg$Response(_p2));
				};
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{isLoading: true}),
					{
						ctor: '::',
						_0: A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationDetails$send, msg, request),
						_1: {ctor: '[]'}
					});
			default:
				if (_p1._0.ctor === 'Err') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									A2(_ryan_senn$stellar_elm_sdk$Stellar_Error$flattenError, _p1._0._0, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationDetails$Error))
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									_elm_lang$core$Result$Ok(_p1._0._0))
							}),
						{ctor: '[]'});
				}
		}
	});

var _ryan_senn$stellar_elm_demo$Endpoints_OperationDetails_View$view = F2(
	function (endpoint, model) {
		return A2(
			_rtfeldman$elm_css$Html_Styled$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(_ryan_senn$stellar_elm_demo$Endpoints_Views_Title$view, 'Operation Details', 'https://www.stellar.org/developers/horizon/reference/endpoints/operations-single.html'),
				_1: {
					ctor: '::',
					_0: A2(
						_rtfeldman$elm_css$Html_Styled$div,
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$page,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_RequestTitle$view('OperationDetails'),
							_1: {
								ctor: '::',
								_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Endpoint$view(endpoint),
								_1: {
									ctor: '::',
									_0: A2(
										_rtfeldman$elm_css$Html_Styled$div,
										{
											ctor: '::',
											_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$label,
												{
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$span,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelMandatory,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: _rtfeldman$elm_css$Html_Styled$text('Operation Id'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 77309415424)'),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$map,
													function (_p0) {
														return _ryan_senn$stellar_elm_demo$Endpoints_OperationDetails_MsgFactory$composeMsg(
															_ryan_senn$stellar_elm_demo$Endpoints_OperationDetails_Msg$SettingsMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_OperationDetails_Msg$UpdatePublicKey(_p0)));
													},
													_bluedogtraining$bdt_elm$Form_IntInput$render(
														_bluedogtraining$bdt_elm$Form_IntInput$view(model.settings.operationId))),
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Request$view(
											A2(_ryan_senn$stellar_elm_demo$Endpoints_OperationDetails_RequestBuilder$requestBuilder, endpoint, model.settings)),
										_1: {
											ctor: '::',
											_0: A2(
												_ryan_senn$stellar_elm_demo$Endpoints_Views_Button$view,
												model.isLoading,
												_ryan_senn$stellar_elm_demo$Endpoints_OperationDetails_MsgFactory$composeMsg(
													A2(_ryan_senn$stellar_elm_demo$Endpoints_OperationDetails_Msg$Request, endpoint, model.settings))),
											_1: {
												ctor: '::',
												_0: A3(_ryan_senn$stellar_elm_demo$Endpoints_Views_Response$view, 'OperationDetails', model.response, model.isLoading),
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	});

var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_MsgFactory$composeMsg = function (_p0) {
	return _ryan_senn$stellar_elm_demo$Endpoints_MsgFactory$composeMsg(
		_ryan_senn$stellar_elm_demo$Endpoints_Msg$OperationsForAccountMsg(_p0));
};

var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_RequestBuilder$requestBuilder = F2(
	function (endpoint, settings) {
		return A3(
			_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfJust,
			_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForAccount$setSorting,
			settings.sorting,
			A5(
				_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChangedMaybe,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForAccount$setLimit,
				_bluedogtraining$bdt_elm$Form_IntInput$getIsChanged,
				_bluedogtraining$bdt_elm$Form_IntInput$getValue,
				settings.limit,
				A5(
					_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChanged,
					_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForAccount$setCursor,
					_bluedogtraining$bdt_elm$Form_Input$getIsChanged,
					_bluedogtraining$bdt_elm$Form_Input$getValue,
					settings.cursor,
					A2(
						_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForAccount$requestBuilder,
						_ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput(endpoint),
						_ryan_senn$stellar_elm_demo$Endpoints_Helpers$publicKeyFromInput(settings.account)))));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_Update$updateSettings = F2(
	function (updateSettingsMsg, model) {
		var settingsModel = model.settings;
		var newSettingsModel = function () {
			var _p0 = updateSettingsMsg;
			switch (_p0.ctor) {
				case 'UpdateAccount':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							account: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p0._0, settingsModel.account)
						});
				case 'UpdateCursor':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							cursor: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p0._0, settingsModel.cursor)
						});
				case 'UpdateLimit':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							limit: A2(_bluedogtraining$bdt_elm$Form_IntInput$update, _p0._0, settingsModel.limit)
						});
				default:
					var _p1 = _p0._0;
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							sorting: _elm_lang$core$Native_Utils.eq(
								settingsModel.sorting,
								_elm_lang$core$Maybe$Just(_p1)) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(_p1)
						});
			}
		}();
		return _elm_lang$core$Native_Utils.update(
			model,
			{settings: newSettingsModel});
	});
var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_Update$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'SettingsMsg':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					A2(_ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_Update$updateSettings, _p2._0, model),
					{ctor: '[]'});
			case 'Request':
				var request = A2(_ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_RequestBuilder$requestBuilder, _p2._0, _p2._1);
				var msg = function (_p3) {
					return _ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_MsgFactory$composeMsg(
						_ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_Msg$Response(_p3));
				};
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{isLoading: true}),
					{
						ctor: '::',
						_0: A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForAccount$send, msg, request),
						_1: {ctor: '[]'}
					});
			default:
				if (_p2._0.ctor === 'Err') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									A2(_ryan_senn$stellar_elm_sdk$Stellar_Error$flattenError, _p2._0._0, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForAccount$Error))
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									_elm_lang$core$Result$Ok(_p2._0._0))
							}),
						{ctor: '[]'});
				}
		}
	});

var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_View$view = F2(
	function (endpoint, model) {
		return A2(
			_rtfeldman$elm_css$Html_Styled$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(_ryan_senn$stellar_elm_demo$Endpoints_Views_Title$view, 'Operations for Account', 'https://www.stellar.org/developers/horizon/reference/endpoints/operations-for-account.html'),
				_1: {
					ctor: '::',
					_0: A2(
						_rtfeldman$elm_css$Html_Styled$div,
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$page,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_RequestTitle$view('OperationsForAccount'),
							_1: {
								ctor: '::',
								_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Endpoint$view(endpoint),
								_1: {
									ctor: '::',
									_0: A2(
										_rtfeldman$elm_css$Html_Styled$div,
										{
											ctor: '::',
											_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$label,
												{
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$span,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelMandatory,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: _rtfeldman$elm_css$Html_Styled$text('Account'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('(eg: GA2HGBJIJKI6O4XEM7CZWY5PS6GKSXL6D34ERAJYQSPYA6X6AI7HYW36)'),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$map,
													function (_p0) {
														return _ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_MsgFactory$composeMsg(
															_ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_Msg$SettingsMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_Msg$UpdateAccount(_p0)));
													},
													_bluedogtraining$bdt_elm$Form_Input$render(
														_bluedogtraining$bdt_elm$Form_Input$view(model.settings.account))),
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_rtfeldman$elm_css$Html_Styled$div,
											{
												ctor: '::',
												_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$label,
													{
														ctor: '::',
														_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('Cursor'),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{
																	ctor: '::',
																	_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																	_1: {ctor: '[]'}
																},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 1)'),
																	_1: {ctor: '[]'}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$map,
														function (_p1) {
															return _ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_MsgFactory$composeMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_Msg$SettingsMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_Msg$UpdateCursor(_p1)));
														},
														_bluedogtraining$bdt_elm$Form_Input$render(
															_bluedogtraining$bdt_elm$Form_Input$view(model.settings.cursor))),
													_1: {ctor: '[]'}
												}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$div,
												{
													ctor: '::',
													_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$label,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('Limit'),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{
																		ctor: '::',
																		_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																		_1: {ctor: '[]'}
																	},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 200, default: 10)'),
																		_1: {ctor: '[]'}
																	}),
																_1: {ctor: '[]'}
															}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$map,
															function (_p2) {
																return _ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_MsgFactory$composeMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_Msg$SettingsMsg(
																		_ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_Msg$UpdateLimit(_p2)));
															},
															_bluedogtraining$bdt_elm$Form_IntInput$render(
																_bluedogtraining$bdt_elm$Form_IntInput$view(model.settings.limit))),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$div,
													{
														ctor: '::',
														_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$label,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{ctor: '[]'},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('Sorting'),
																		_1: {ctor: '[]'}
																	}),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																			_1: {ctor: '[]'}
																		},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('(default: asc)'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {ctor: '[]'}
																}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$div,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																				_elm_lang$core$Native_Utils.eq(
																					model.settings.sorting,
																					_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc))),
																			_1: {
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																					_ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_MsgFactory$composeMsg(
																						_ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_Msg$SettingsMsg(
																							_ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc)))),
																				_1: {ctor: '[]'}
																			}
																		},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('Asc'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {
																		ctor: '::',
																		_0: A2(
																			_rtfeldman$elm_css$Html_Styled$span,
																			{
																				ctor: '::',
																				_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																					_elm_lang$core$Native_Utils.eq(
																						model.settings.sorting,
																						_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc))),
																				_1: {
																					ctor: '::',
																					_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																						_ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_MsgFactory$composeMsg(
																							_ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_Msg$SettingsMsg(
																								_ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc)))),
																					_1: {ctor: '[]'}
																				}
																			},
																			{
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled$text('Desc'),
																				_1: {ctor: '[]'}
																			}),
																		_1: {ctor: '[]'}
																	}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Request$view(
														A2(_ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_RequestBuilder$requestBuilder, endpoint, model.settings)),
													_1: {
														ctor: '::',
														_0: A2(
															_ryan_senn$stellar_elm_demo$Endpoints_Views_Button$view,
															model.isLoading,
															_ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_MsgFactory$composeMsg(
																A2(_ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_Msg$Request, endpoint, model.settings))),
														_1: {
															ctor: '::',
															_0: A3(_ryan_senn$stellar_elm_demo$Endpoints_Views_Response$view, 'OperationsForAccount', model.response, model.isLoading),
															_1: {ctor: '[]'}
														}
													}
												}
											}
										}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	});

var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_MsgFactory$composeMsg = function (_p0) {
	return _ryan_senn$stellar_elm_demo$Endpoints_MsgFactory$composeMsg(
		_ryan_senn$stellar_elm_demo$Endpoints_Msg$OperationsForLedgerMsg(_p0));
};

var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_RequestBuilder$requestBuilder = F2(
	function (endpoint, settings) {
		return A3(
			_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfJust,
			_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForLedger$setSorting,
			settings.sorting,
			A5(
				_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChangedMaybe,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForLedger$setLimit,
				_bluedogtraining$bdt_elm$Form_IntInput$getIsChanged,
				_bluedogtraining$bdt_elm$Form_IntInput$getValue,
				settings.limit,
				A5(
					_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChanged,
					_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForLedger$setCursor,
					_bluedogtraining$bdt_elm$Form_Input$getIsChanged,
					_bluedogtraining$bdt_elm$Form_Input$getValue,
					settings.cursor,
					A2(
						_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForLedger$requestBuilder,
						_ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput(endpoint),
						A2(
							_elm_lang$core$Maybe$withDefault,
							0,
							_bluedogtraining$bdt_elm$Form_IntInput$getValue(settings.ledgerId))))));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_Update$updateSettings = F2(
	function (updateSettingsMsg, model) {
		var settingsModel = model.settings;
		var newSettingsModel = function () {
			var _p0 = updateSettingsMsg;
			switch (_p0.ctor) {
				case 'UpdateLedgerId':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							ledgerId: A2(_bluedogtraining$bdt_elm$Form_IntInput$update, _p0._0, settingsModel.ledgerId)
						});
				case 'UpdateCursor':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							cursor: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p0._0, settingsModel.cursor)
						});
				case 'UpdateLimit':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							limit: A2(_bluedogtraining$bdt_elm$Form_IntInput$update, _p0._0, settingsModel.limit)
						});
				default:
					var _p1 = _p0._0;
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							sorting: _elm_lang$core$Native_Utils.eq(
								settingsModel.sorting,
								_elm_lang$core$Maybe$Just(_p1)) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(_p1)
						});
			}
		}();
		return _elm_lang$core$Native_Utils.update(
			model,
			{settings: newSettingsModel});
	});
var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_Update$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'SettingsMsg':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					A2(_ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_Update$updateSettings, _p2._0, model),
					{ctor: '[]'});
			case 'Request':
				var request = A2(_ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_RequestBuilder$requestBuilder, _p2._0, _p2._1);
				var msg = function (_p3) {
					return _ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_MsgFactory$composeMsg(
						_ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_Msg$Response(_p3));
				};
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{isLoading: true}),
					{
						ctor: '::',
						_0: A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForLedger$send, msg, request),
						_1: {ctor: '[]'}
					});
			default:
				if (_p2._0.ctor === 'Err') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									A2(_ryan_senn$stellar_elm_sdk$Stellar_Error$flattenError, _p2._0._0, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForLedger$Error))
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									_elm_lang$core$Result$Ok(_p2._0._0))
							}),
						{ctor: '[]'});
				}
		}
	});

var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_View$view = F2(
	function (endpoint, model) {
		return A2(
			_rtfeldman$elm_css$Html_Styled$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(_ryan_senn$stellar_elm_demo$Endpoints_Views_Title$view, 'Operations for Ledger', 'https://www.stellar.org/developers/horizon/reference/endpoints/operations-for-ledger.html'),
				_1: {
					ctor: '::',
					_0: A2(
						_rtfeldman$elm_css$Html_Styled$div,
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$page,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_RequestTitle$view('OperationsForLEdger'),
							_1: {
								ctor: '::',
								_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Endpoint$view(endpoint),
								_1: {
									ctor: '::',
									_0: A2(
										_rtfeldman$elm_css$Html_Styled$div,
										{
											ctor: '::',
											_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$label,
												{
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$span,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelMandatory,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: _rtfeldman$elm_css$Html_Styled$text('Ledger'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 69859)'),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$map,
													function (_p0) {
														return _ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_MsgFactory$composeMsg(
															_ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_Msg$SettingsMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_Msg$UpdateLedgerId(_p0)));
													},
													_bluedogtraining$bdt_elm$Form_IntInput$render(
														_bluedogtraining$bdt_elm$Form_IntInput$view(model.settings.ledgerId))),
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_rtfeldman$elm_css$Html_Styled$div,
											{
												ctor: '::',
												_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$label,
													{
														ctor: '::',
														_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('Cursor'),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{
																	ctor: '::',
																	_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																	_1: {ctor: '[]'}
																},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 1)'),
																	_1: {ctor: '[]'}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$map,
														function (_p1) {
															return _ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_MsgFactory$composeMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_Msg$SettingsMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_Msg$UpdateCursor(_p1)));
														},
														_bluedogtraining$bdt_elm$Form_Input$render(
															_bluedogtraining$bdt_elm$Form_Input$view(model.settings.cursor))),
													_1: {ctor: '[]'}
												}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$div,
												{
													ctor: '::',
													_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$label,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('Limit'),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{
																		ctor: '::',
																		_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																		_1: {ctor: '[]'}
																	},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 200, default: 10)'),
																		_1: {ctor: '[]'}
																	}),
																_1: {ctor: '[]'}
															}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$map,
															function (_p2) {
																return _ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_MsgFactory$composeMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_Msg$SettingsMsg(
																		_ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_Msg$UpdateLimit(_p2)));
															},
															_bluedogtraining$bdt_elm$Form_IntInput$render(
																_bluedogtraining$bdt_elm$Form_IntInput$view(model.settings.limit))),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$div,
													{
														ctor: '::',
														_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$label,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{ctor: '[]'},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('Sorting'),
																		_1: {ctor: '[]'}
																	}),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																			_1: {ctor: '[]'}
																		},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('(default: asc)'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {ctor: '[]'}
																}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$div,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																				_elm_lang$core$Native_Utils.eq(
																					model.settings.sorting,
																					_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc))),
																			_1: {
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																					_ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_MsgFactory$composeMsg(
																						_ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_Msg$SettingsMsg(
																							_ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc)))),
																				_1: {ctor: '[]'}
																			}
																		},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('Asc'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {
																		ctor: '::',
																		_0: A2(
																			_rtfeldman$elm_css$Html_Styled$span,
																			{
																				ctor: '::',
																				_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																					_elm_lang$core$Native_Utils.eq(
																						model.settings.sorting,
																						_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc))),
																				_1: {
																					ctor: '::',
																					_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																						_ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_MsgFactory$composeMsg(
																							_ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_Msg$SettingsMsg(
																								_ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc)))),
																					_1: {ctor: '[]'}
																				}
																			},
																			{
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled$text('Desc'),
																				_1: {ctor: '[]'}
																			}),
																		_1: {ctor: '[]'}
																	}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Request$view(
														A2(_ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_RequestBuilder$requestBuilder, endpoint, model.settings)),
													_1: {
														ctor: '::',
														_0: A2(
															_ryan_senn$stellar_elm_demo$Endpoints_Views_Button$view,
															model.isLoading,
															_ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_MsgFactory$composeMsg(
																A2(_ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_Msg$Request, endpoint, model.settings))),
														_1: {
															ctor: '::',
															_0: A3(_ryan_senn$stellar_elm_demo$Endpoints_Views_Response$view, 'OperationsForLEdger', model.response, model.isLoading),
															_1: {ctor: '[]'}
														}
													}
												}
											}
										}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	});

var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_MsgFactory$composeMsg = function (_p0) {
	return _ryan_senn$stellar_elm_demo$Endpoints_MsgFactory$composeMsg(
		_ryan_senn$stellar_elm_demo$Endpoints_Msg$OperationsForTransactionMsg(_p0));
};

var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_RequestBuilder$requestBuilder = F2(
	function (endpoint, settings) {
		return A3(
			_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfJust,
			_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForTransaction$setSorting,
			settings.sorting,
			A5(
				_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChangedMaybe,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForTransaction$setLimit,
				_bluedogtraining$bdt_elm$Form_IntInput$getIsChanged,
				_bluedogtraining$bdt_elm$Form_IntInput$getValue,
				settings.limit,
				A5(
					_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChanged,
					_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForTransaction$setCursor,
					_bluedogtraining$bdt_elm$Form_Input$getIsChanged,
					_bluedogtraining$bdt_elm$Form_Input$getValue,
					settings.cursor,
					A2(
						_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForTransaction$requestBuilder,
						_ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput(endpoint),
						_bluedogtraining$bdt_elm$Form_Input$getValue(settings.transaction)))));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_Update$updateSettings = F2(
	function (updateSettingsMsg, model) {
		var settingsModel = model.settings;
		var newSettingsModel = function () {
			var _p0 = updateSettingsMsg;
			switch (_p0.ctor) {
				case 'UpdateTransaction':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							transaction: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p0._0, settingsModel.transaction)
						});
				case 'UpdateCursor':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							cursor: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p0._0, settingsModel.cursor)
						});
				case 'UpdateLimit':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							limit: A2(_bluedogtraining$bdt_elm$Form_IntInput$update, _p0._0, settingsModel.limit)
						});
				default:
					var _p1 = _p0._0;
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							sorting: _elm_lang$core$Native_Utils.eq(
								settingsModel.sorting,
								_elm_lang$core$Maybe$Just(_p1)) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(_p1)
						});
			}
		}();
		return _elm_lang$core$Native_Utils.update(
			model,
			{settings: newSettingsModel});
	});
var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_Update$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'SettingsMsg':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					A2(_ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_Update$updateSettings, _p2._0, model),
					{ctor: '[]'});
			case 'Request':
				var request = A2(_ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_RequestBuilder$requestBuilder, _p2._0, _p2._1);
				var msg = function (_p3) {
					return _ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_MsgFactory$composeMsg(
						_ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_Msg$Response(_p3));
				};
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{isLoading: true}),
					{
						ctor: '::',
						_0: A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForTransaction$send, msg, request),
						_1: {ctor: '[]'}
					});
			default:
				if (_p2._0.ctor === 'Err') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									A2(_ryan_senn$stellar_elm_sdk$Stellar_Error$flattenError, _p2._0._0, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OperationsForTransaction$Error))
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									_elm_lang$core$Result$Ok(_p2._0._0))
							}),
						{ctor: '[]'});
				}
		}
	});

var _ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_View$view = F2(
	function (endpoint, model) {
		return A2(
			_rtfeldman$elm_css$Html_Styled$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(_ryan_senn$stellar_elm_demo$Endpoints_Views_Title$view, 'Operations for Transaction', 'https://www.stellar.org/developers/horizon/reference/endpoints/operations-for-transaction.html'),
				_1: {
					ctor: '::',
					_0: A2(
						_rtfeldman$elm_css$Html_Styled$div,
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$page,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_RequestTitle$view('OperationsForTransaction'),
							_1: {
								ctor: '::',
								_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Endpoint$view(endpoint),
								_1: {
									ctor: '::',
									_0: A2(
										_rtfeldman$elm_css$Html_Styled$div,
										{
											ctor: '::',
											_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$label,
												{
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$span,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelMandatory,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: _rtfeldman$elm_css$Html_Styled$text('Hash'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 6391dd190f15f7d1665ba53c63842e368f485651a53d8d852ed442a446d1c69a)'),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$map,
													function (_p0) {
														return _ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_MsgFactory$composeMsg(
															_ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_Msg$SettingsMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_Msg$UpdateTransaction(_p0)));
													},
													_bluedogtraining$bdt_elm$Form_Input$render(
														_bluedogtraining$bdt_elm$Form_Input$view(model.settings.transaction))),
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_rtfeldman$elm_css$Html_Styled$div,
											{
												ctor: '::',
												_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$label,
													{
														ctor: '::',
														_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('Cursor'),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{
																	ctor: '::',
																	_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																	_1: {ctor: '[]'}
																},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 1)'),
																	_1: {ctor: '[]'}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$map,
														function (_p1) {
															return _ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_MsgFactory$composeMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_Msg$SettingsMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_Msg$UpdateCursor(_p1)));
														},
														_bluedogtraining$bdt_elm$Form_Input$render(
															_bluedogtraining$bdt_elm$Form_Input$view(model.settings.cursor))),
													_1: {ctor: '[]'}
												}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$div,
												{
													ctor: '::',
													_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$label,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('Limit'),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{
																		ctor: '::',
																		_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																		_1: {ctor: '[]'}
																	},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 200, default: 10)'),
																		_1: {ctor: '[]'}
																	}),
																_1: {ctor: '[]'}
															}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$map,
															function (_p2) {
																return _ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_MsgFactory$composeMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_Msg$SettingsMsg(
																		_ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_Msg$UpdateLimit(_p2)));
															},
															_bluedogtraining$bdt_elm$Form_IntInput$render(
																_bluedogtraining$bdt_elm$Form_IntInput$view(model.settings.limit))),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$div,
													{
														ctor: '::',
														_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$label,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{ctor: '[]'},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('Sorting'),
																		_1: {ctor: '[]'}
																	}),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																			_1: {ctor: '[]'}
																		},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('(default: asc)'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {ctor: '[]'}
																}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$div,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																				_elm_lang$core$Native_Utils.eq(
																					model.settings.sorting,
																					_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc))),
																			_1: {
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																					_ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_MsgFactory$composeMsg(
																						_ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_Msg$SettingsMsg(
																							_ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc)))),
																				_1: {ctor: '[]'}
																			}
																		},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('Asc'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {
																		ctor: '::',
																		_0: A2(
																			_rtfeldman$elm_css$Html_Styled$span,
																			{
																				ctor: '::',
																				_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																					_elm_lang$core$Native_Utils.eq(
																						model.settings.sorting,
																						_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc))),
																				_1: {
																					ctor: '::',
																					_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																						_ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_MsgFactory$composeMsg(
																							_ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_Msg$SettingsMsg(
																								_ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc)))),
																					_1: {ctor: '[]'}
																				}
																			},
																			{
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled$text('Desc'),
																				_1: {ctor: '[]'}
																			}),
																		_1: {ctor: '[]'}
																	}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Request$view(
														A2(_ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_RequestBuilder$requestBuilder, endpoint, model.settings)),
													_1: {
														ctor: '::',
														_0: A2(
															_ryan_senn$stellar_elm_demo$Endpoints_Views_Button$view,
															model.isLoading,
															_ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_MsgFactory$composeMsg(
																A2(_ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_Msg$Request, endpoint, model.settings))),
														_1: {
															ctor: '::',
															_0: A3(_ryan_senn$stellar_elm_demo$Endpoints_Views_Response$view, 'OperationsForTransaction', model.response, model.isLoading),
															_1: {ctor: '[]'}
														}
													}
												}
											}
										}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	});

var _ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_MsgFactory$composeMsg = function (_p0) {
	return _ryan_senn$stellar_elm_demo$Endpoints_MsgFactory$composeMsg(
		_ryan_senn$stellar_elm_demo$Endpoints_Msg$OrderbookDetailsMsg(_p0));
};

var _ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_RequestBuilder$requestBuilder = F2(
	function (endpoint, settings) {
		return A5(
			_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChangedMaybe,
			_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OrderbookDetails$setLimit,
			_bluedogtraining$bdt_elm$Form_IntInput$getIsChanged,
			_bluedogtraining$bdt_elm$Form_IntInput$getValue,
			settings.limit,
			A5(
				_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChanged,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OrderbookDetails$setBuyingAssetIssuer,
				_bluedogtraining$bdt_elm$Form_Input$getIsChanged,
				_bluedogtraining$bdt_elm$Form_Input$getValue,
				settings.buyingAssetIssuer,
				A5(
					_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChanged,
					_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OrderbookDetails$setBuyingAssetCode,
					_bluedogtraining$bdt_elm$Form_Input$getIsChanged,
					_bluedogtraining$bdt_elm$Form_Input$getValue,
					settings.buyingAssetCode,
					A5(
						_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChanged,
						_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OrderbookDetails$setSellingAssetIssuer,
						_bluedogtraining$bdt_elm$Form_Input$getIsChanged,
						_bluedogtraining$bdt_elm$Form_Input$getValue,
						settings.sellingAssetIssuer,
						A5(
							_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChanged,
							_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OrderbookDetails$setSellingAssetCode,
							_bluedogtraining$bdt_elm$Form_Input$getIsChanged,
							_bluedogtraining$bdt_elm$Form_Input$getValue,
							settings.sellingAssetCode,
							A3(
								_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OrderbookDetails$requestBuilder,
								_ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput(endpoint),
								A2(
									_elm_lang$core$Maybe$withDefault,
									_ryan_senn$stellar_elm_sdk$Stellar_AssetType$Native,
									_bluedogtraining$bdt_elm$Form_Select$getSelectedOption(settings.sellingAssetType)),
								A2(
									_elm_lang$core$Maybe$withDefault,
									_ryan_senn$stellar_elm_sdk$Stellar_AssetType$Native,
									_bluedogtraining$bdt_elm$Form_Select$getSelectedOption(settings.buyingAssetType))))))));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Update$updateSettings = F2(
	function (updateSettingsMsg, model) {
		var settingsModel = model.settings;
		var _p0 = function () {
			var _p1 = updateSettingsMsg;
			switch (_p1.ctor) {
				case 'UpdateSellingAssetType':
					var _p2 = A2(_bluedogtraining$bdt_elm$Form_Select$update, _p1._0, settingsModel.sellingAssetType);
					var sellingAssetType = _p2._0;
					var cmds = _p2._1;
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							settingsModel,
							{sellingAssetType: sellingAssetType}),
						{
							ctor: '::',
							_0: A2(
								_elm_lang$core$Platform_Cmd$map,
								function (_p3) {
									return _ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_MsgFactory$composeMsg(
										_ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Msg$SettingsMsg(
											_ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Msg$UpdateSellingAssetType(_p3)));
								},
								cmds),
							_1: {ctor: '[]'}
						});
				case 'UpdateSellingAssetCode':
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							settingsModel,
							{
								sellingAssetCode: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p1._0, settingsModel.sellingAssetCode)
							}),
						{ctor: '[]'});
				case 'UpdateSellingAssetIssuer':
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							settingsModel,
							{
								sellingAssetIssuer: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p1._0, settingsModel.sellingAssetIssuer)
							}),
						{ctor: '[]'});
				case 'UpdateBuyingAssetType':
					var _p4 = A2(_bluedogtraining$bdt_elm$Form_Select$update, _p1._0, settingsModel.buyingAssetType);
					var buyingAssetType = _p4._0;
					var cmds = _p4._1;
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							settingsModel,
							{buyingAssetType: buyingAssetType}),
						{
							ctor: '::',
							_0: A2(
								_elm_lang$core$Platform_Cmd$map,
								function (_p5) {
									return _ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_MsgFactory$composeMsg(
										_ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Msg$SettingsMsg(
											_ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Msg$UpdateBuyingAssetType(_p5)));
								},
								cmds),
							_1: {ctor: '[]'}
						});
				case 'UpdateBuyingAssetCode':
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							settingsModel,
							{
								buyingAssetCode: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p1._0, settingsModel.buyingAssetCode)
							}),
						{ctor: '[]'});
				case 'UpdateBuyingAssetIssuer':
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							settingsModel,
							{
								buyingAssetIssuer: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p1._0, settingsModel.buyingAssetIssuer)
							}),
						{ctor: '[]'});
				default:
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							settingsModel,
							{
								limit: A2(_bluedogtraining$bdt_elm$Form_IntInput$update, _p1._0, settingsModel.limit)
							}),
						{ctor: '[]'});
			}
		}();
		var newSettingsModel = _p0._0;
		var cmds = _p0._1;
		return A2(
			_elm_lang$core$Platform_Cmd_ops['!'],
			_elm_lang$core$Native_Utils.update(
				model,
				{settings: newSettingsModel}),
			{
				ctor: '::',
				_0: cmds,
				_1: {ctor: '[]'}
			});
	});
var _ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Update$update = F2(
	function (msg, model) {
		var _p6 = msg;
		switch (_p6.ctor) {
			case 'SettingsMsg':
				return A2(_ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Update$updateSettings, _p6._0, model);
			case 'Request':
				var request = A2(_ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_RequestBuilder$requestBuilder, _p6._0, _p6._1);
				var msg = function (_p7) {
					return _ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_MsgFactory$composeMsg(
						_ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Msg$Response(_p7));
				};
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{isLoading: true}),
					{
						ctor: '::',
						_0: A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OrderbookDetails$send, msg, request),
						_1: {ctor: '[]'}
					});
			default:
				if (_p6._0.ctor === 'Err') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									A2(_ryan_senn$stellar_elm_sdk$Stellar_Error$flattenError, _p6._0._0, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_OrderbookDetails$Error))
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									_elm_lang$core$Result$Ok(_p6._0._0))
							}),
						{ctor: '[]'});
				}
		}
	});

var _ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_View$view = F2(
	function (endpoint, model) {
		return A2(
			_rtfeldman$elm_css$Html_Styled$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(_ryan_senn$stellar_elm_demo$Endpoints_Views_Title$view, 'Orderbook Details', 'https://www.stellar.org/developers/horizon/reference/endpoints/orderbook-details.html'),
				_1: {
					ctor: '::',
					_0: A2(
						_rtfeldman$elm_css$Html_Styled$div,
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$page,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_RequestTitle$view('OrderbookDetails'),
							_1: {
								ctor: '::',
								_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Endpoint$view(endpoint),
								_1: {
									ctor: '::',
									_0: A2(
										_rtfeldman$elm_css$Html_Styled$div,
										{
											ctor: '::',
											_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$label,
												{
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$span,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelMandatory,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: _rtfeldman$elm_css$Html_Styled$text('Selling Asset Type'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{ctor: '[]'},
															{ctor: '[]'}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$map,
													function (_p0) {
														return _ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_MsgFactory$composeMsg(
															_ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Msg$SettingsMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Msg$UpdateSellingAssetType(_p0)));
													},
													_bluedogtraining$bdt_elm$Form_Select$render(
														_bluedogtraining$bdt_elm$Form_Select$view(model.settings.sellingAssetType))),
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: A3(
											_bluedogtraining$bdt_elm$Html_Styled_Bdt$divIf,
											(!_elm_lang$core$Native_Utils.eq(
												_bluedogtraining$bdt_elm$Form_Select$getSelectedOption(model.settings.sellingAssetType),
												_elm_lang$core$Maybe$Nothing)) && (!_elm_lang$core$Native_Utils.eq(
												_bluedogtraining$bdt_elm$Form_Select$getSelectedOption(model.settings.sellingAssetType),
												_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_AssetType$Native))),
											{
												ctor: '::',
												_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$label,
													{
														ctor: '::',
														_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('Selling Asset Code'),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{
																	ctor: '::',
																	_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																	_1: {ctor: '[]'}
																},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('(eg: USD)'),
																	_1: {ctor: '[]'}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$map,
														function (_p1) {
															return _ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_MsgFactory$composeMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Msg$SettingsMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Msg$UpdateSellingAssetCode(_p1)));
														},
														_bluedogtraining$bdt_elm$Form_Input$render(
															_bluedogtraining$bdt_elm$Form_Input$view(model.settings.sellingAssetCode))),
													_1: {ctor: '[]'}
												}
											}),
										_1: {
											ctor: '::',
											_0: A3(
												_bluedogtraining$bdt_elm$Html_Styled_Bdt$divIf,
												(!_elm_lang$core$Native_Utils.eq(
													_bluedogtraining$bdt_elm$Form_Select$getSelectedOption(model.settings.sellingAssetType),
													_elm_lang$core$Maybe$Nothing)) && (!_elm_lang$core$Native_Utils.eq(
													_bluedogtraining$bdt_elm$Form_Select$getSelectedOption(model.settings.sellingAssetType),
													_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_AssetType$Native))),
												{
													ctor: '::',
													_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$label,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('Selling Asset Issuer'),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{
																		ctor: '::',
																		_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																		_1: {ctor: '[]'}
																	},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('(eg: GA2HGBJIJKI6O4XEM7CZWY5PS6GKSXL6D34ERAJYQSPYA6X6AI7HYW36)'),
																		_1: {ctor: '[]'}
																	}),
																_1: {ctor: '[]'}
															}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$map,
															function (_p2) {
																return _ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_MsgFactory$composeMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Msg$SettingsMsg(
																		_ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Msg$UpdateSellingAssetIssuer(_p2)));
															},
															_bluedogtraining$bdt_elm$Form_Input$render(
																_bluedogtraining$bdt_elm$Form_Input$view(model.settings.sellingAssetIssuer))),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$div,
													{
														ctor: '::',
														_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$label,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{
																		ctor: '::',
																		_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelMandatory,
																		_1: {ctor: '[]'}
																	},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('Buying Asset Type'),
																		_1: {ctor: '[]'}
																	}),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{ctor: '[]'},
																		{ctor: '[]'}),
																	_1: {ctor: '[]'}
																}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$map,
																function (_p3) {
																	return _ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_MsgFactory$composeMsg(
																		_ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Msg$SettingsMsg(
																			_ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Msg$UpdateBuyingAssetType(_p3)));
																},
																_bluedogtraining$bdt_elm$Form_Select$render(
																	_bluedogtraining$bdt_elm$Form_Select$view(model.settings.buyingAssetType))),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: A3(
														_bluedogtraining$bdt_elm$Html_Styled_Bdt$divIf,
														(!_elm_lang$core$Native_Utils.eq(
															_bluedogtraining$bdt_elm$Form_Select$getSelectedOption(model.settings.buyingAssetType),
															_elm_lang$core$Maybe$Nothing)) && (!_elm_lang$core$Native_Utils.eq(
															_bluedogtraining$bdt_elm$Form_Select$getSelectedOption(model.settings.buyingAssetType),
															_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_AssetType$Native))),
														{
															ctor: '::',
															_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$label,
																{
																	ctor: '::',
																	_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
																	_1: {ctor: '[]'}
																},
																{
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{ctor: '[]'},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('Buying Asset Code'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {
																		ctor: '::',
																		_0: A2(
																			_rtfeldman$elm_css$Html_Styled$span,
																			{
																				ctor: '::',
																				_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																				_1: {ctor: '[]'}
																			},
																			{
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled$text('(eg: USD)'),
																				_1: {ctor: '[]'}
																			}),
																		_1: {ctor: '[]'}
																	}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$map,
																	function (_p4) {
																		return _ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_MsgFactory$composeMsg(
																			_ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Msg$SettingsMsg(
																				_ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Msg$UpdateBuyingAssetCode(_p4)));
																	},
																	_bluedogtraining$bdt_elm$Form_Input$render(
																		_bluedogtraining$bdt_elm$Form_Input$view(model.settings.buyingAssetCode))),
																_1: {ctor: '[]'}
															}
														}),
													_1: {
														ctor: '::',
														_0: A3(
															_bluedogtraining$bdt_elm$Html_Styled_Bdt$divIf,
															(!_elm_lang$core$Native_Utils.eq(
																_bluedogtraining$bdt_elm$Form_Select$getSelectedOption(model.settings.buyingAssetType),
																_elm_lang$core$Maybe$Nothing)) && (!_elm_lang$core$Native_Utils.eq(
																_bluedogtraining$bdt_elm$Form_Select$getSelectedOption(model.settings.buyingAssetType),
																_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_AssetType$Native))),
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$label,
																	{
																		ctor: '::',
																		_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
																		_1: {ctor: '[]'}
																	},
																	{
																		ctor: '::',
																		_0: A2(
																			_rtfeldman$elm_css$Html_Styled$span,
																			{ctor: '[]'},
																			{
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled$text('Buying Asset Issuer'),
																				_1: {ctor: '[]'}
																			}),
																		_1: {
																			ctor: '::',
																			_0: A2(
																				_rtfeldman$elm_css$Html_Styled$span,
																				{
																					ctor: '::',
																					_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																					_1: {ctor: '[]'}
																				},
																				{
																					ctor: '::',
																					_0: _rtfeldman$elm_css$Html_Styled$text('(eg: GA2HGBJIJKI6O4XEM7CZWY5PS6GKSXL6D34ERAJYQSPYA6X6AI7HYW36)'),
																					_1: {ctor: '[]'}
																				}),
																			_1: {ctor: '[]'}
																		}
																	}),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$map,
																		function (_p5) {
																			return _ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_MsgFactory$composeMsg(
																				_ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Msg$SettingsMsg(
																					_ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Msg$UpdateBuyingAssetIssuer(_p5)));
																		},
																		_bluedogtraining$bdt_elm$Form_Input$render(
																			_bluedogtraining$bdt_elm$Form_Input$view(model.settings.buyingAssetIssuer))),
																	_1: {ctor: '[]'}
																}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$div,
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
																	_1: {ctor: '[]'}
																},
																{
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$label,
																		{
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
																			_1: {ctor: '[]'}
																		},
																		{
																			ctor: '::',
																			_0: A2(
																				_rtfeldman$elm_css$Html_Styled$span,
																				{ctor: '[]'},
																				{
																					ctor: '::',
																					_0: _rtfeldman$elm_css$Html_Styled$text('Limit'),
																					_1: {ctor: '[]'}
																				}),
																			_1: {
																				ctor: '::',
																				_0: A2(
																					_rtfeldman$elm_css$Html_Styled$span,
																					{
																						ctor: '::',
																						_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																						_1: {ctor: '[]'}
																					},
																					{
																						ctor: '::',
																						_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 200, default: 10)'),
																						_1: {ctor: '[]'}
																					}),
																				_1: {ctor: '[]'}
																			}
																		}),
																	_1: {
																		ctor: '::',
																		_0: A2(
																			_rtfeldman$elm_css$Html_Styled$map,
																			function (_p6) {
																				return _ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_MsgFactory$composeMsg(
																					_ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Msg$SettingsMsg(
																						_ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Msg$UpdateLimit(_p6)));
																			},
																			_bluedogtraining$bdt_elm$Form_IntInput$render(
																				_bluedogtraining$bdt_elm$Form_IntInput$view(model.settings.limit))),
																		_1: {ctor: '[]'}
																	}
																}),
															_1: {
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Request$view(
																	A2(_ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_RequestBuilder$requestBuilder, endpoint, model.settings)),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_ryan_senn$stellar_elm_demo$Endpoints_Views_Button$view,
																		model.isLoading,
																		_ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_MsgFactory$composeMsg(
																			A2(_ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Msg$Request, endpoint, model.settings))),
																	_1: {
																		ctor: '::',
																		_0: A3(_ryan_senn$stellar_elm_demo$Endpoints_Views_Response$view, 'OrderbookDetails', model.response, model.isLoading),
																		_1: {ctor: '[]'}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	});

var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_MsgFactory$composeMsg = function (_p0) {
	return _ryan_senn$stellar_elm_demo$Endpoints_MsgFactory$composeMsg(
		_ryan_senn$stellar_elm_demo$Endpoints_Msg$PaymentsForAccountMsg(_p0));
};

var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_RequestBuilder$requestBuilder = F2(
	function (endpoint, settings) {
		return A3(
			_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfJust,
			_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForAccount$setSorting,
			settings.sorting,
			A5(
				_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChangedMaybe,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForAccount$setLimit,
				_bluedogtraining$bdt_elm$Form_IntInput$getIsChanged,
				_bluedogtraining$bdt_elm$Form_IntInput$getValue,
				settings.limit,
				A5(
					_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChanged,
					_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForAccount$setCursor,
					_bluedogtraining$bdt_elm$Form_Input$getIsChanged,
					_bluedogtraining$bdt_elm$Form_Input$getValue,
					settings.cursor,
					A2(
						_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForAccount$requestBuilder,
						_ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput(endpoint),
						_ryan_senn$stellar_elm_demo$Endpoints_Helpers$publicKeyFromInput(settings.account)))));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_Update$updateSettings = F2(
	function (updateSettingsMsg, model) {
		var settingsModel = model.settings;
		var newSettingsModel = function () {
			var _p0 = updateSettingsMsg;
			switch (_p0.ctor) {
				case 'UpdateAccount':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							account: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p0._0, settingsModel.account)
						});
				case 'UpdateCursor':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							cursor: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p0._0, settingsModel.cursor)
						});
				case 'UpdateLimit':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							limit: A2(_bluedogtraining$bdt_elm$Form_IntInput$update, _p0._0, settingsModel.limit)
						});
				default:
					var _p1 = _p0._0;
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							sorting: _elm_lang$core$Native_Utils.eq(
								settingsModel.sorting,
								_elm_lang$core$Maybe$Just(_p1)) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(_p1)
						});
			}
		}();
		return _elm_lang$core$Native_Utils.update(
			model,
			{settings: newSettingsModel});
	});
var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_Update$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'SettingsMsg':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					A2(_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_Update$updateSettings, _p2._0, model),
					{ctor: '[]'});
			case 'Request':
				var request = A2(_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_RequestBuilder$requestBuilder, _p2._0, _p2._1);
				var msg = function (_p3) {
					return _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_MsgFactory$composeMsg(
						_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_Msg$Response(_p3));
				};
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{isLoading: true}),
					{
						ctor: '::',
						_0: A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForAccount$send, msg, request),
						_1: {ctor: '[]'}
					});
			default:
				if (_p2._0.ctor === 'Err') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									A2(_ryan_senn$stellar_elm_sdk$Stellar_Error$flattenError, _p2._0._0, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForAccount$Error))
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									_elm_lang$core$Result$Ok(_p2._0._0))
							}),
						{ctor: '[]'});
				}
		}
	});

var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_View$view = F2(
	function (endpoint, model) {
		return A2(
			_rtfeldman$elm_css$Html_Styled$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(_ryan_senn$stellar_elm_demo$Endpoints_Views_Title$view, 'Payments for Account', 'https://www.stellar.org/developers/horizon/reference/endpoints/payments-for-account.html'),
				_1: {
					ctor: '::',
					_0: A2(
						_rtfeldman$elm_css$Html_Styled$div,
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$page,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_RequestTitle$view('PaymentsForAccount'),
							_1: {
								ctor: '::',
								_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Endpoint$view(endpoint),
								_1: {
									ctor: '::',
									_0: A2(
										_rtfeldman$elm_css$Html_Styled$div,
										{
											ctor: '::',
											_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$label,
												{
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$span,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelMandatory,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: _rtfeldman$elm_css$Html_Styled$text('Account'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('(eg: GA2HGBJIJKI6O4XEM7CZWY5PS6GKSXL6D34ERAJYQSPYA6X6AI7HYW36)'),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$map,
													function (_p0) {
														return _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_MsgFactory$composeMsg(
															_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_Msg$SettingsMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_Msg$UpdateAccount(_p0)));
													},
													_bluedogtraining$bdt_elm$Form_Input$render(
														_bluedogtraining$bdt_elm$Form_Input$view(model.settings.account))),
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_rtfeldman$elm_css$Html_Styled$div,
											{
												ctor: '::',
												_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$label,
													{
														ctor: '::',
														_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('Cursor'),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{
																	ctor: '::',
																	_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																	_1: {ctor: '[]'}
																},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 1)'),
																	_1: {ctor: '[]'}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$map,
														function (_p1) {
															return _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_MsgFactory$composeMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_Msg$SettingsMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_Msg$UpdateCursor(_p1)));
														},
														_bluedogtraining$bdt_elm$Form_Input$render(
															_bluedogtraining$bdt_elm$Form_Input$view(model.settings.cursor))),
													_1: {ctor: '[]'}
												}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$div,
												{
													ctor: '::',
													_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$label,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('Limit'),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{
																		ctor: '::',
																		_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																		_1: {ctor: '[]'}
																	},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 200, default: 10)'),
																		_1: {ctor: '[]'}
																	}),
																_1: {ctor: '[]'}
															}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$map,
															function (_p2) {
																return _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_MsgFactory$composeMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_Msg$SettingsMsg(
																		_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_Msg$UpdateLimit(_p2)));
															},
															_bluedogtraining$bdt_elm$Form_IntInput$render(
																_bluedogtraining$bdt_elm$Form_IntInput$view(model.settings.limit))),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$div,
													{
														ctor: '::',
														_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$label,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{ctor: '[]'},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('Sorting'),
																		_1: {ctor: '[]'}
																	}),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																			_1: {ctor: '[]'}
																		},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('(default: asc)'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {ctor: '[]'}
																}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$div,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																				_elm_lang$core$Native_Utils.eq(
																					model.settings.sorting,
																					_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc))),
																			_1: {
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																					_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_MsgFactory$composeMsg(
																						_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_Msg$SettingsMsg(
																							_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc)))),
																				_1: {ctor: '[]'}
																			}
																		},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('Asc'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {
																		ctor: '::',
																		_0: A2(
																			_rtfeldman$elm_css$Html_Styled$span,
																			{
																				ctor: '::',
																				_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																					_elm_lang$core$Native_Utils.eq(
																						model.settings.sorting,
																						_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc))),
																				_1: {
																					ctor: '::',
																					_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																						_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_MsgFactory$composeMsg(
																							_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_Msg$SettingsMsg(
																								_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc)))),
																					_1: {ctor: '[]'}
																				}
																			},
																			{
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled$text('Desc'),
																				_1: {ctor: '[]'}
																			}),
																		_1: {ctor: '[]'}
																	}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Request$view(
														A2(_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_RequestBuilder$requestBuilder, endpoint, model.settings)),
													_1: {
														ctor: '::',
														_0: A2(
															_ryan_senn$stellar_elm_demo$Endpoints_Views_Button$view,
															model.isLoading,
															_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_MsgFactory$composeMsg(
																A2(_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_Msg$Request, endpoint, model.settings))),
														_1: {
															ctor: '::',
															_0: A3(_ryan_senn$stellar_elm_demo$Endpoints_Views_Response$view, 'PaymentsForAccount', model.response, model.isLoading),
															_1: {ctor: '[]'}
														}
													}
												}
											}
										}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	});

var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_MsgFactory$composeMsg = function (_p0) {
	return _ryan_senn$stellar_elm_demo$Endpoints_MsgFactory$composeMsg(
		_ryan_senn$stellar_elm_demo$Endpoints_Msg$PaymentsForLedgerMsg(_p0));
};

var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_RequestBuilder$requestBuilder = F2(
	function (endpoint, settings) {
		return A3(
			_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfJust,
			_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForLedger$setSorting,
			settings.sorting,
			A5(
				_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChangedMaybe,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForLedger$setLimit,
				_bluedogtraining$bdt_elm$Form_IntInput$getIsChanged,
				_bluedogtraining$bdt_elm$Form_IntInput$getValue,
				settings.limit,
				A5(
					_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChanged,
					_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForLedger$setCursor,
					_bluedogtraining$bdt_elm$Form_Input$getIsChanged,
					_bluedogtraining$bdt_elm$Form_Input$getValue,
					settings.cursor,
					A2(
						_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForLedger$requestBuilder,
						_ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput(endpoint),
						A2(
							_elm_lang$core$Maybe$withDefault,
							0,
							_bluedogtraining$bdt_elm$Form_IntInput$getValue(settings.ledgerId))))));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_Update$updateSettings = F2(
	function (updateSettingsMsg, model) {
		var settingsModel = model.settings;
		var newSettingsModel = function () {
			var _p0 = updateSettingsMsg;
			switch (_p0.ctor) {
				case 'UpdateLedgerId':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							ledgerId: A2(_bluedogtraining$bdt_elm$Form_IntInput$update, _p0._0, settingsModel.ledgerId)
						});
				case 'UpdateCursor':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							cursor: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p0._0, settingsModel.cursor)
						});
				case 'UpdateLimit':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							limit: A2(_bluedogtraining$bdt_elm$Form_IntInput$update, _p0._0, settingsModel.limit)
						});
				default:
					var _p1 = _p0._0;
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							sorting: _elm_lang$core$Native_Utils.eq(
								settingsModel.sorting,
								_elm_lang$core$Maybe$Just(_p1)) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(_p1)
						});
			}
		}();
		return _elm_lang$core$Native_Utils.update(
			model,
			{settings: newSettingsModel});
	});
var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_Update$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'SettingsMsg':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					A2(_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_Update$updateSettings, _p2._0, model),
					{ctor: '[]'});
			case 'Request':
				var request = A2(_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_RequestBuilder$requestBuilder, _p2._0, _p2._1);
				var msg = function (_p3) {
					return _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_MsgFactory$composeMsg(
						_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_Msg$Response(_p3));
				};
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{isLoading: true}),
					{
						ctor: '::',
						_0: A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForLedger$send, msg, request),
						_1: {ctor: '[]'}
					});
			default:
				if (_p2._0.ctor === 'Err') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									A2(_ryan_senn$stellar_elm_sdk$Stellar_Error$flattenError, _p2._0._0, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForLedger$Error))
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									_elm_lang$core$Result$Ok(_p2._0._0))
							}),
						{ctor: '[]'});
				}
		}
	});

var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_View$view = F2(
	function (endpoint, model) {
		return A2(
			_rtfeldman$elm_css$Html_Styled$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(_ryan_senn$stellar_elm_demo$Endpoints_Views_Title$view, 'Payments for Ledger', 'https://www.stellar.org/developers/horizon/reference/endpoints/payments-for-ledger.html'),
				_1: {
					ctor: '::',
					_0: A2(
						_rtfeldman$elm_css$Html_Styled$div,
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$page,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_RequestTitle$view('PaymentsForLedger'),
							_1: {
								ctor: '::',
								_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Endpoint$view(endpoint),
								_1: {
									ctor: '::',
									_0: A2(
										_rtfeldman$elm_css$Html_Styled$div,
										{
											ctor: '::',
											_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$label,
												{
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$span,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelMandatory,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: _rtfeldman$elm_css$Html_Styled$text('Ledger'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 69859)'),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$map,
													function (_p0) {
														return _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_MsgFactory$composeMsg(
															_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_Msg$SettingsMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_Msg$UpdateLedgerId(_p0)));
													},
													_bluedogtraining$bdt_elm$Form_IntInput$render(
														_bluedogtraining$bdt_elm$Form_IntInput$view(model.settings.ledgerId))),
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_rtfeldman$elm_css$Html_Styled$div,
											{
												ctor: '::',
												_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$label,
													{
														ctor: '::',
														_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('Cursor'),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{
																	ctor: '::',
																	_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																	_1: {ctor: '[]'}
																},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 1)'),
																	_1: {ctor: '[]'}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$map,
														function (_p1) {
															return _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_MsgFactory$composeMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_Msg$SettingsMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_Msg$UpdateCursor(_p1)));
														},
														_bluedogtraining$bdt_elm$Form_Input$render(
															_bluedogtraining$bdt_elm$Form_Input$view(model.settings.cursor))),
													_1: {ctor: '[]'}
												}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$div,
												{
													ctor: '::',
													_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$label,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('Limit'),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{
																		ctor: '::',
																		_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																		_1: {ctor: '[]'}
																	},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 200, default: 10)'),
																		_1: {ctor: '[]'}
																	}),
																_1: {ctor: '[]'}
															}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$map,
															function (_p2) {
																return _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_MsgFactory$composeMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_Msg$SettingsMsg(
																		_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_Msg$UpdateLimit(_p2)));
															},
															_bluedogtraining$bdt_elm$Form_IntInput$render(
																_bluedogtraining$bdt_elm$Form_IntInput$view(model.settings.limit))),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$div,
													{
														ctor: '::',
														_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$label,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{ctor: '[]'},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('Sorting'),
																		_1: {ctor: '[]'}
																	}),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																			_1: {ctor: '[]'}
																		},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('(default: asc)'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {ctor: '[]'}
																}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$div,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																				_elm_lang$core$Native_Utils.eq(
																					model.settings.sorting,
																					_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc))),
																			_1: {
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																					_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_MsgFactory$composeMsg(
																						_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_Msg$SettingsMsg(
																							_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc)))),
																				_1: {ctor: '[]'}
																			}
																		},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('Asc'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {
																		ctor: '::',
																		_0: A2(
																			_rtfeldman$elm_css$Html_Styled$span,
																			{
																				ctor: '::',
																				_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																					_elm_lang$core$Native_Utils.eq(
																						model.settings.sorting,
																						_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc))),
																				_1: {
																					ctor: '::',
																					_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																						_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_MsgFactory$composeMsg(
																							_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_Msg$SettingsMsg(
																								_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc)))),
																					_1: {ctor: '[]'}
																				}
																			},
																			{
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled$text('Desc'),
																				_1: {ctor: '[]'}
																			}),
																		_1: {ctor: '[]'}
																	}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Request$view(
														A2(_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_RequestBuilder$requestBuilder, endpoint, model.settings)),
													_1: {
														ctor: '::',
														_0: A2(
															_ryan_senn$stellar_elm_demo$Endpoints_Views_Button$view,
															model.isLoading,
															_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_MsgFactory$composeMsg(
																A2(_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_Msg$Request, endpoint, model.settings))),
														_1: {
															ctor: '::',
															_0: A3(_ryan_senn$stellar_elm_demo$Endpoints_Views_Response$view, 'PaymentsForLedger', model.response, model.isLoading),
															_1: {ctor: '[]'}
														}
													}
												}
											}
										}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	});

var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_MsgFactory$composeMsg = function (_p0) {
	return _ryan_senn$stellar_elm_demo$Endpoints_MsgFactory$composeMsg(
		_ryan_senn$stellar_elm_demo$Endpoints_Msg$PaymentsForTransactionMsg(_p0));
};

var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_RequestBuilder$requestBuilder = F2(
	function (endpoint, settings) {
		return A3(
			_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfJust,
			_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForTransaction$setSorting,
			settings.sorting,
			A5(
				_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChangedMaybe,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForTransaction$setLimit,
				_bluedogtraining$bdt_elm$Form_IntInput$getIsChanged,
				_bluedogtraining$bdt_elm$Form_IntInput$getValue,
				settings.limit,
				A5(
					_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChanged,
					_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForTransaction$setCursor,
					_bluedogtraining$bdt_elm$Form_Input$getIsChanged,
					_bluedogtraining$bdt_elm$Form_Input$getValue,
					settings.cursor,
					A2(
						_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForTransaction$requestBuilder,
						_ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput(endpoint),
						_bluedogtraining$bdt_elm$Form_Input$getValue(settings.transaction)))));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_Update$updateSettings = F2(
	function (updateSettingsMsg, model) {
		var settingsModel = model.settings;
		var newSettingsModel = function () {
			var _p0 = updateSettingsMsg;
			switch (_p0.ctor) {
				case 'UpdateTransaction':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							transaction: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p0._0, settingsModel.transaction)
						});
				case 'UpdateCursor':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							cursor: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p0._0, settingsModel.cursor)
						});
				case 'UpdateLimit':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							limit: A2(_bluedogtraining$bdt_elm$Form_IntInput$update, _p0._0, settingsModel.limit)
						});
				default:
					var _p1 = _p0._0;
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							sorting: _elm_lang$core$Native_Utils.eq(
								settingsModel.sorting,
								_elm_lang$core$Maybe$Just(_p1)) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(_p1)
						});
			}
		}();
		return _elm_lang$core$Native_Utils.update(
			model,
			{settings: newSettingsModel});
	});
var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_Update$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'SettingsMsg':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					A2(_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_Update$updateSettings, _p2._0, model),
					{ctor: '[]'});
			case 'Request':
				var request = A2(_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_RequestBuilder$requestBuilder, _p2._0, _p2._1);
				var msg = function (_p3) {
					return _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_MsgFactory$composeMsg(
						_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_Msg$Response(_p3));
				};
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{isLoading: true}),
					{
						ctor: '::',
						_0: A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForTransaction$send, msg, request),
						_1: {ctor: '[]'}
					});
			default:
				if (_p2._0.ctor === 'Err') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									A2(_ryan_senn$stellar_elm_sdk$Stellar_Error$flattenError, _p2._0._0, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PaymentsForTransaction$Error))
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									_elm_lang$core$Result$Ok(_p2._0._0))
							}),
						{ctor: '[]'});
				}
		}
	});

var _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_View$view = F2(
	function (endpoint, model) {
		return A2(
			_rtfeldman$elm_css$Html_Styled$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(_ryan_senn$stellar_elm_demo$Endpoints_Views_Title$view, 'Payments for Transaction', 'https://www.stellar.org/developers/horizon/reference/endpoints/payments-for-transaction.html'),
				_1: {
					ctor: '::',
					_0: A2(
						_rtfeldman$elm_css$Html_Styled$div,
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$page,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_RequestTitle$view('PaymentsForTransaction'),
							_1: {
								ctor: '::',
								_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Endpoint$view(endpoint),
								_1: {
									ctor: '::',
									_0: A2(
										_rtfeldman$elm_css$Html_Styled$div,
										{
											ctor: '::',
											_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$label,
												{
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$span,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelMandatory,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: _rtfeldman$elm_css$Html_Styled$text('Hash'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 6391dd190f15f7d1665ba53c63842e368f485651a53d8d852ed442a446d1c69a)'),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$map,
													function (_p0) {
														return _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_MsgFactory$composeMsg(
															_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_Msg$SettingsMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_Msg$UpdateTransaction(_p0)));
													},
													_bluedogtraining$bdt_elm$Form_Input$render(
														_bluedogtraining$bdt_elm$Form_Input$view(model.settings.transaction))),
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_rtfeldman$elm_css$Html_Styled$div,
											{
												ctor: '::',
												_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$label,
													{
														ctor: '::',
														_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('Cursor'),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{
																	ctor: '::',
																	_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																	_1: {ctor: '[]'}
																},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 1)'),
																	_1: {ctor: '[]'}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$map,
														function (_p1) {
															return _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_MsgFactory$composeMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_Msg$SettingsMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_Msg$UpdateCursor(_p1)));
														},
														_bluedogtraining$bdt_elm$Form_Input$render(
															_bluedogtraining$bdt_elm$Form_Input$view(model.settings.cursor))),
													_1: {ctor: '[]'}
												}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$div,
												{
													ctor: '::',
													_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$label,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('Limit'),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{
																		ctor: '::',
																		_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																		_1: {ctor: '[]'}
																	},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 200, default: 10)'),
																		_1: {ctor: '[]'}
																	}),
																_1: {ctor: '[]'}
															}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$map,
															function (_p2) {
																return _ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_MsgFactory$composeMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_Msg$SettingsMsg(
																		_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_Msg$UpdateLimit(_p2)));
															},
															_bluedogtraining$bdt_elm$Form_IntInput$render(
																_bluedogtraining$bdt_elm$Form_IntInput$view(model.settings.limit))),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$div,
													{
														ctor: '::',
														_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$label,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{ctor: '[]'},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('Sorting'),
																		_1: {ctor: '[]'}
																	}),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																			_1: {ctor: '[]'}
																		},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('(default: asc)'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {ctor: '[]'}
																}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$div,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																				_elm_lang$core$Native_Utils.eq(
																					model.settings.sorting,
																					_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc))),
																			_1: {
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																					_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_MsgFactory$composeMsg(
																						_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_Msg$SettingsMsg(
																							_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc)))),
																				_1: {ctor: '[]'}
																			}
																		},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('Asc'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {
																		ctor: '::',
																		_0: A2(
																			_rtfeldman$elm_css$Html_Styled$span,
																			{
																				ctor: '::',
																				_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																					_elm_lang$core$Native_Utils.eq(
																						model.settings.sorting,
																						_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc))),
																				_1: {
																					ctor: '::',
																					_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																						_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_MsgFactory$composeMsg(
																							_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_Msg$SettingsMsg(
																								_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc)))),
																					_1: {ctor: '[]'}
																				}
																			},
																			{
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled$text('Desc'),
																				_1: {ctor: '[]'}
																			}),
																		_1: {ctor: '[]'}
																	}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Request$view(
														A2(_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_RequestBuilder$requestBuilder, endpoint, model.settings)),
													_1: {
														ctor: '::',
														_0: A2(
															_ryan_senn$stellar_elm_demo$Endpoints_Views_Button$view,
															model.isLoading,
															_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_MsgFactory$composeMsg(
																A2(_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_Msg$Request, endpoint, model.settings))),
														_1: {
															ctor: '::',
															_0: A3(_ryan_senn$stellar_elm_demo$Endpoints_Views_Response$view, 'PaymentsForTransaction', model.response, model.isLoading),
															_1: {ctor: '[]'}
														}
													}
												}
											}
										}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	});

var _ryan_senn$stellar_elm_demo$Endpoints_PostTransaction_MsgFactory$composeMsg = function (_p0) {
	return _ryan_senn$stellar_elm_demo$Endpoints_MsgFactory$composeMsg(
		_ryan_senn$stellar_elm_demo$Endpoints_Msg$PostTransactionMsg(_p0));
};

var _ryan_senn$stellar_elm_demo$Endpoints_PostTransaction_RequestBuilder$requestBuilder = F2(
	function (endpoint, settings) {
		return A2(
			_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PostTransaction$requestBuilder,
			_ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput(endpoint),
			_bluedogtraining$bdt_elm$Form_TextArea$getValue(settings.transactionEnvelopeXdr));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_PostTransaction_Update$updateSettings = F2(
	function (updateSettingsMsg, model) {
		var settingsModel = model.settings;
		var _p0 = function () {
			var _p1 = updateSettingsMsg;
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				_elm_lang$core$Native_Utils.update(
					settingsModel,
					{
						transactionEnvelopeXdr: A2(_bluedogtraining$bdt_elm$Form_TextArea$update, _p1._0, settingsModel.transactionEnvelopeXdr)
					}),
				{ctor: '[]'});
		}();
		var newSettingsModel = _p0._0;
		var cmds = _p0._1;
		return A2(
			_elm_lang$core$Platform_Cmd_ops['!'],
			_elm_lang$core$Native_Utils.update(
				model,
				{settings: newSettingsModel}),
			{
				ctor: '::',
				_0: cmds,
				_1: {ctor: '[]'}
			});
	});
var _ryan_senn$stellar_elm_demo$Endpoints_PostTransaction_Update$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'SettingsMsg':
				return A2(_ryan_senn$stellar_elm_demo$Endpoints_PostTransaction_Update$updateSettings, _p2._0, model);
			case 'Request':
				var request = A2(_ryan_senn$stellar_elm_demo$Endpoints_PostTransaction_RequestBuilder$requestBuilder, _p2._0, _p2._1);
				var msg = function (_p3) {
					return _ryan_senn$stellar_elm_demo$Endpoints_PostTransaction_MsgFactory$composeMsg(
						_ryan_senn$stellar_elm_demo$Endpoints_PostTransaction_Msg$Response(_p3));
				};
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{isLoading: true}),
					{
						ctor: '::',
						_0: A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PostTransaction$send, msg, request),
						_1: {ctor: '[]'}
					});
			default:
				if (_p2._0.ctor === 'Err') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									A2(_ryan_senn$stellar_elm_sdk$Stellar_Error$flattenError, _p2._0._0, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_PostTransaction$Error))
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									_elm_lang$core$Result$Ok(_p2._0._0))
							}),
						{ctor: '[]'});
				}
		}
	});

var _ryan_senn$stellar_elm_demo$Endpoints_PostTransaction_View$view = F2(
	function (endpoint, model) {
		return A2(
			_rtfeldman$elm_css$Html_Styled$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(_ryan_senn$stellar_elm_demo$Endpoints_Views_Title$view, 'Post Transaction', 'https://www.stellar.org/developers/horizon/reference/endpoints/transactions-create.html'),
				_1: {
					ctor: '::',
					_0: A2(
						_rtfeldman$elm_css$Html_Styled$div,
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$page,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_RequestTitle$view('PostTransaction'),
							_1: {
								ctor: '::',
								_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Endpoint$view(endpoint),
								_1: {
									ctor: '::',
									_0: A2(
										_rtfeldman$elm_css$Html_Styled$div,
										{
											ctor: '::',
											_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$label,
												{
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$span,
														{ctor: '[]'},
														{
															ctor: '::',
															_0: _rtfeldman$elm_css$Html_Styled$text('Transaction Envelope Xdr'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('(eg: AAAAABbxCy3mLg3hiTqX4VUEEp60pFOrJNxYM1JtxXTwXhY2AAAAZAAAAAMAAAAGAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAAJAAAAAAAAAAHwXhY2AAAAQCPAo8QwsZe9FA0sz/deMdhlu6/zrk7SgkBG22ApvtpETBhnGkX4trSFDz8sVlKqvweqGUVgvjUyM0AcHxyXZQw=)'),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$map,
													function (_p0) {
														return _ryan_senn$stellar_elm_demo$Endpoints_PostTransaction_MsgFactory$composeMsg(
															_ryan_senn$stellar_elm_demo$Endpoints_PostTransaction_Msg$SettingsMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_PostTransaction_Msg$UpdateTransactionEnvelopeXdr(_p0)));
													},
													_bluedogtraining$bdt_elm$Form_TextArea$render(
														_bluedogtraining$bdt_elm$Form_TextArea$view(model.settings.transactionEnvelopeXdr))),
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Request$view(
											A2(_ryan_senn$stellar_elm_demo$Endpoints_PostTransaction_RequestBuilder$requestBuilder, endpoint, model.settings)),
										_1: {
											ctor: '::',
											_0: A2(
												_ryan_senn$stellar_elm_demo$Endpoints_Views_Button$view,
												model.isLoading,
												_ryan_senn$stellar_elm_demo$Endpoints_PostTransaction_MsgFactory$composeMsg(
													A2(_ryan_senn$stellar_elm_demo$Endpoints_PostTransaction_Msg$Request, endpoint, model.settings))),
											_1: {
												ctor: '::',
												_0: A3(_ryan_senn$stellar_elm_demo$Endpoints_Views_Response$view, 'PostTransaction', model.response, model.isLoading),
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	});

var _ryan_senn$stellar_elm_demo$Endpoints_TransactionDetails_MsgFactory$composeMsg = function (_p0) {
	return _ryan_senn$stellar_elm_demo$Endpoints_MsgFactory$composeMsg(
		_ryan_senn$stellar_elm_demo$Endpoints_Msg$TransactionDetailsMsg(_p0));
};

var _ryan_senn$stellar_elm_demo$Endpoints_TransactionDetails_Update$updateSettings = F2(
	function (updateSettingsMsg, model) {
		var settingsModel = model.settings;
		var newSettingsModel = function () {
			var _p0 = updateSettingsMsg;
			return _elm_lang$core$Native_Utils.update(
				settingsModel,
				{
					hash: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p0._0, settingsModel.hash)
				});
		}();
		return _elm_lang$core$Native_Utils.update(
			model,
			{settings: newSettingsModel});
	});
var _ryan_senn$stellar_elm_demo$Endpoints_TransactionDetails_Update$update = F2(
	function (msg, model) {
		var _p1 = msg;
		switch (_p1.ctor) {
			case 'SettingsMsg':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					A2(_ryan_senn$stellar_elm_demo$Endpoints_TransactionDetails_Update$updateSettings, _p1._0, model),
					{ctor: '[]'});
			case 'Request':
				var requestBuilder = A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionDetails$requestBuilder, _p1._0, _p1._1);
				var msg = function (_p2) {
					return _ryan_senn$stellar_elm_demo$Endpoints_TransactionDetails_MsgFactory$composeMsg(
						_ryan_senn$stellar_elm_demo$Endpoints_TransactionDetails_Msg$Response(_p2));
				};
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{isLoading: true}),
					{
						ctor: '::',
						_0: A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionDetails$send, msg, requestBuilder),
						_1: {ctor: '[]'}
					});
			default:
				if (_p1._0.ctor === 'Err') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									A2(_ryan_senn$stellar_elm_sdk$Stellar_Error$flattenError, _p1._0._0, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionDetails$Error))
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									_elm_lang$core$Result$Ok(_p1._0._0))
							}),
						{ctor: '[]'});
				}
		}
	});

var _ryan_senn$stellar_elm_demo$Endpoints_TransactionDetails_View$view = F2(
	function (endpoint, model) {
		return A2(
			_rtfeldman$elm_css$Html_Styled$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(_ryan_senn$stellar_elm_demo$Endpoints_Views_Title$view, 'Transaction Details', 'https://www.stellar.org/developers/horizon/reference/endpoints/transactions-single.html'),
				_1: {
					ctor: '::',
					_0: A2(
						_rtfeldman$elm_css$Html_Styled$div,
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$page,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_RequestTitle$view('TransactionDetails'),
							_1: {
								ctor: '::',
								_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Endpoint$view(endpoint),
								_1: {
									ctor: '::',
									_0: A2(
										_rtfeldman$elm_css$Html_Styled$div,
										{
											ctor: '::',
											_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$label,
												{
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$span,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelMandatory,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: _rtfeldman$elm_css$Html_Styled$text('Hash'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 6391dd190f15f7d1665ba53c63842e368f485651a53d8d852ed442a446d1c69a)'),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$map,
													function (_p0) {
														return _ryan_senn$stellar_elm_demo$Endpoints_TransactionDetails_MsgFactory$composeMsg(
															_ryan_senn$stellar_elm_demo$Endpoints_TransactionDetails_Msg$SettingsMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_TransactionDetails_Msg$UpdateHash(_p0)));
													},
													_bluedogtraining$bdt_elm$Form_Input$render(
														_bluedogtraining$bdt_elm$Form_Input$view(model.settings.hash))),
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Request$view(
											A2(
												_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionDetails$requestBuilder,
												_ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput(endpoint),
												_bluedogtraining$bdt_elm$Form_Input$getValue(model.settings.hash))),
										_1: {
											ctor: '::',
											_0: A2(
												_ryan_senn$stellar_elm_demo$Endpoints_Views_Button$view,
												model.isLoading,
												_ryan_senn$stellar_elm_demo$Endpoints_TransactionDetails_MsgFactory$composeMsg(
													A2(
														_ryan_senn$stellar_elm_demo$Endpoints_TransactionDetails_Msg$Request,
														_ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput(endpoint),
														_bluedogtraining$bdt_elm$Form_Input$getValue(model.settings.hash)))),
											_1: {
												ctor: '::',
												_0: A3(_ryan_senn$stellar_elm_demo$Endpoints_Views_Response$view, 'TransactionDetails', model.response, model.isLoading),
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	});

var _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_MsgFactory$composeMsg = function (_p0) {
	return _ryan_senn$stellar_elm_demo$Endpoints_MsgFactory$composeMsg(
		_ryan_senn$stellar_elm_demo$Endpoints_Msg$TransactionsForAccountMsg(_p0));
};

var _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_RequestBuilder$requestBuilder = F2(
	function (endpoint, settings) {
		return A3(
			_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfJust,
			_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForAccount$setSorting,
			settings.sorting,
			A5(
				_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChangedMaybe,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForAccount$setLimit,
				_bluedogtraining$bdt_elm$Form_IntInput$getIsChanged,
				_bluedogtraining$bdt_elm$Form_IntInput$getValue,
				settings.limit,
				A5(
					_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChanged,
					_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForAccount$setCursor,
					_bluedogtraining$bdt_elm$Form_Input$getIsChanged,
					_bluedogtraining$bdt_elm$Form_Input$getValue,
					settings.cursor,
					A2(
						_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForAccount$requestBuilder,
						_ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput(endpoint),
						_ryan_senn$stellar_elm_demo$Endpoints_Helpers$publicKeyFromInput(settings.account)))));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_Update$updateSettings = F2(
	function (updateSettingsMsg, model) {
		var settingsModel = model.settings;
		var newSettingsModel = function () {
			var _p0 = updateSettingsMsg;
			switch (_p0.ctor) {
				case 'UpdateAccount':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							account: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p0._0, settingsModel.account)
						});
				case 'UpdateCursor':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							cursor: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p0._0, settingsModel.cursor)
						});
				case 'UpdateLimit':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							limit: A2(_bluedogtraining$bdt_elm$Form_IntInput$update, _p0._0, settingsModel.limit)
						});
				default:
					var _p1 = _p0._0;
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							sorting: _elm_lang$core$Native_Utils.eq(
								settingsModel.sorting,
								_elm_lang$core$Maybe$Just(_p1)) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(_p1)
						});
			}
		}();
		return _elm_lang$core$Native_Utils.update(
			model,
			{settings: newSettingsModel});
	});
var _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_Update$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'SettingsMsg':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					A2(_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_Update$updateSettings, _p2._0, model),
					{ctor: '[]'});
			case 'Request':
				var request = A2(_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_RequestBuilder$requestBuilder, _p2._0, _p2._1);
				var msg = function (_p3) {
					return _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_MsgFactory$composeMsg(
						_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_Msg$Response(_p3));
				};
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{isLoading: true}),
					{
						ctor: '::',
						_0: A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForAccount$send, msg, request),
						_1: {ctor: '[]'}
					});
			default:
				if (_p2._0.ctor === 'Err') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									A2(_ryan_senn$stellar_elm_sdk$Stellar_Error$flattenError, _p2._0._0, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForAccount$Error))
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									_elm_lang$core$Result$Ok(_p2._0._0))
							}),
						{ctor: '[]'});
				}
		}
	});

var _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_View$view = F2(
	function (endpoint, model) {
		return A2(
			_rtfeldman$elm_css$Html_Styled$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(_ryan_senn$stellar_elm_demo$Endpoints_Views_Title$view, 'Transactions for Account', 'https://www.stellar.org/developers/horizon/reference/endpoints/transactions-for-account.html'),
				_1: {
					ctor: '::',
					_0: A2(
						_rtfeldman$elm_css$Html_Styled$div,
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$page,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_RequestTitle$view('TRansactionsForAccount'),
							_1: {
								ctor: '::',
								_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Endpoint$view(endpoint),
								_1: {
									ctor: '::',
									_0: A2(
										_rtfeldman$elm_css$Html_Styled$div,
										{
											ctor: '::',
											_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$label,
												{
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$span,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelMandatory,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: _rtfeldman$elm_css$Html_Styled$text('Account'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('(eg: GA2HGBJIJKI6O4XEM7CZWY5PS6GKSXL6D34ERAJYQSPYA6X6AI7HYW36)'),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$map,
													function (_p0) {
														return _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_MsgFactory$composeMsg(
															_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_Msg$SettingsMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_Msg$UpdateAccount(_p0)));
													},
													_bluedogtraining$bdt_elm$Form_Input$render(
														_bluedogtraining$bdt_elm$Form_Input$view(model.settings.account))),
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_rtfeldman$elm_css$Html_Styled$div,
											{
												ctor: '::',
												_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$label,
													{
														ctor: '::',
														_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('Cursor'),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{
																	ctor: '::',
																	_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																	_1: {ctor: '[]'}
																},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 1)'),
																	_1: {ctor: '[]'}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$map,
														function (_p1) {
															return _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_MsgFactory$composeMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_Msg$SettingsMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_Msg$UpdateCursor(_p1)));
														},
														_bluedogtraining$bdt_elm$Form_Input$render(
															_bluedogtraining$bdt_elm$Form_Input$view(model.settings.cursor))),
													_1: {ctor: '[]'}
												}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$div,
												{
													ctor: '::',
													_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$label,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('Limit'),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{
																		ctor: '::',
																		_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																		_1: {ctor: '[]'}
																	},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 200, default: 10)'),
																		_1: {ctor: '[]'}
																	}),
																_1: {ctor: '[]'}
															}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$map,
															function (_p2) {
																return _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_MsgFactory$composeMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_Msg$SettingsMsg(
																		_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_Msg$UpdateLimit(_p2)));
															},
															_bluedogtraining$bdt_elm$Form_IntInput$render(
																_bluedogtraining$bdt_elm$Form_IntInput$view(model.settings.limit))),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$div,
													{
														ctor: '::',
														_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$label,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{ctor: '[]'},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('Sorting'),
																		_1: {ctor: '[]'}
																	}),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																			_1: {ctor: '[]'}
																		},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('(default: asc)'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {ctor: '[]'}
																}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$div,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																				_elm_lang$core$Native_Utils.eq(
																					model.settings.sorting,
																					_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc))),
																			_1: {
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																					_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_MsgFactory$composeMsg(
																						_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_Msg$SettingsMsg(
																							_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc)))),
																				_1: {ctor: '[]'}
																			}
																		},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('Asc'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {
																		ctor: '::',
																		_0: A2(
																			_rtfeldman$elm_css$Html_Styled$span,
																			{
																				ctor: '::',
																				_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																					_elm_lang$core$Native_Utils.eq(
																						model.settings.sorting,
																						_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc))),
																				_1: {
																					ctor: '::',
																					_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																						_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_MsgFactory$composeMsg(
																							_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_Msg$SettingsMsg(
																								_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc)))),
																					_1: {ctor: '[]'}
																				}
																			},
																			{
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled$text('Desc'),
																				_1: {ctor: '[]'}
																			}),
																		_1: {ctor: '[]'}
																	}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Request$view(
														A2(_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_RequestBuilder$requestBuilder, endpoint, model.settings)),
													_1: {
														ctor: '::',
														_0: A2(
															_ryan_senn$stellar_elm_demo$Endpoints_Views_Button$view,
															model.isLoading,
															_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_MsgFactory$composeMsg(
																A2(_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_Msg$Request, endpoint, model.settings))),
														_1: {
															ctor: '::',
															_0: A3(_ryan_senn$stellar_elm_demo$Endpoints_Views_Response$view, 'TRansactionsForAccount', model.response, model.isLoading),
															_1: {ctor: '[]'}
														}
													}
												}
											}
										}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	});

var _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_MsgFactory$composeMsg = function (_p0) {
	return _ryan_senn$stellar_elm_demo$Endpoints_MsgFactory$composeMsg(
		_ryan_senn$stellar_elm_demo$Endpoints_Msg$TransactionsForLedgerMsg(_p0));
};

var _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_RequestBuilder$requestBuilder = F2(
	function (endpoint, settings) {
		return A3(
			_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfJust,
			_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForLedger$setSorting,
			settings.sorting,
			A5(
				_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChangedMaybe,
				_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForLedger$setLimit,
				_bluedogtraining$bdt_elm$Form_IntInput$getIsChanged,
				_bluedogtraining$bdt_elm$Form_IntInput$getValue,
				settings.limit,
				A5(
					_ryan_senn$stellar_elm_demo$Endpoints_Helpers$setIfChanged,
					_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForLedger$setCursor,
					_bluedogtraining$bdt_elm$Form_Input$getIsChanged,
					_bluedogtraining$bdt_elm$Form_Input$getValue,
					settings.cursor,
					A2(
						_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForLedger$requestBuilder,
						_ryan_senn$stellar_elm_demo$Endpoints_Helpers$endpointFromInput(endpoint),
						A2(
							_elm_lang$core$Maybe$withDefault,
							0,
							_bluedogtraining$bdt_elm$Form_IntInput$getValue(settings.ledgerId))))));
	});

var _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_Update$updateSettings = F2(
	function (updateSettingsMsg, model) {
		var settingsModel = model.settings;
		var newSettingsModel = function () {
			var _p0 = updateSettingsMsg;
			switch (_p0.ctor) {
				case 'UpdateLedgerId':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							ledgerId: A2(_bluedogtraining$bdt_elm$Form_IntInput$update, _p0._0, settingsModel.ledgerId)
						});
				case 'UpdateCursor':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							cursor: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p0._0, settingsModel.cursor)
						});
				case 'UpdateLimit':
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							limit: A2(_bluedogtraining$bdt_elm$Form_IntInput$update, _p0._0, settingsModel.limit)
						});
				default:
					var _p1 = _p0._0;
					return _elm_lang$core$Native_Utils.update(
						settingsModel,
						{
							sorting: _elm_lang$core$Native_Utils.eq(
								settingsModel.sorting,
								_elm_lang$core$Maybe$Just(_p1)) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(_p1)
						});
			}
		}();
		return _elm_lang$core$Native_Utils.update(
			model,
			{settings: newSettingsModel});
	});
var _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_Update$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'SettingsMsg':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					A2(_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_Update$updateSettings, _p2._0, model),
					{ctor: '[]'});
			case 'Request':
				var request = A2(_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_RequestBuilder$requestBuilder, _p2._0, _p2._1);
				var msg = function (_p3) {
					return _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_MsgFactory$composeMsg(
						_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_Msg$Response(_p3));
				};
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{isLoading: true}),
					{
						ctor: '::',
						_0: A2(_ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForLedger$send, msg, request),
						_1: {ctor: '[]'}
					});
			default:
				if (_p2._0.ctor === 'Err') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									A2(_ryan_senn$stellar_elm_sdk$Stellar_Error$flattenError, _p2._0._0, _ryan_senn$stellar_elm_sdk$Stellar_Endpoints_TransactionsForLedger$Error))
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								isLoading: false,
								response: _elm_lang$core$Maybe$Just(
									_elm_lang$core$Result$Ok(_p2._0._0))
							}),
						{ctor: '[]'});
				}
		}
	});

var _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_View$view = F2(
	function (endpoint, model) {
		return A2(
			_rtfeldman$elm_css$Html_Styled$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(_ryan_senn$stellar_elm_demo$Endpoints_Views_Title$view, 'Transactions for Ledger', 'https://www.stellar.org/developers/horizon/reference/endpoints/transactions-for-ledger.html'),
				_1: {
					ctor: '::',
					_0: A2(
						_rtfeldman$elm_css$Html_Styled$div,
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$page,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_RequestTitle$view('TransactionsForLedger'),
							_1: {
								ctor: '::',
								_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Endpoint$view(endpoint),
								_1: {
									ctor: '::',
									_0: A2(
										_rtfeldman$elm_css$Html_Styled$div,
										{
											ctor: '::',
											_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$label,
												{
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$span,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelMandatory,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: _rtfeldman$elm_css$Html_Styled$text('Ledger'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 69859)'),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$map,
													function (_p0) {
														return _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_MsgFactory$composeMsg(
															_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_Msg$SettingsMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_Msg$UpdateLedgerId(_p0)));
													},
													_bluedogtraining$bdt_elm$Form_IntInput$render(
														_bluedogtraining$bdt_elm$Form_IntInput$view(model.settings.ledgerId))),
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_rtfeldman$elm_css$Html_Styled$div,
											{
												ctor: '::',
												_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$label,
													{
														ctor: '::',
														_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$span,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _rtfeldman$elm_css$Html_Styled$text('Cursor'),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{
																	ctor: '::',
																	_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																	_1: {ctor: '[]'}
																},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 1)'),
																	_1: {ctor: '[]'}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$map,
														function (_p1) {
															return _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_MsgFactory$composeMsg(
																_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_Msg$SettingsMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_Msg$UpdateCursor(_p1)));
														},
														_bluedogtraining$bdt_elm$Form_Input$render(
															_bluedogtraining$bdt_elm$Form_Input$view(model.settings.cursor))),
													_1: {ctor: '[]'}
												}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_rtfeldman$elm_css$Html_Styled$div,
												{
													ctor: '::',
													_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_rtfeldman$elm_css$Html_Styled$label,
														{
															ctor: '::',
															_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$span,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _rtfeldman$elm_css$Html_Styled$text('Limit'),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{
																		ctor: '::',
																		_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																		_1: {ctor: '[]'}
																	},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('(eg: 200, default: 10)'),
																		_1: {ctor: '[]'}
																	}),
																_1: {ctor: '[]'}
															}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$map,
															function (_p2) {
																return _ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_MsgFactory$composeMsg(
																	_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_Msg$SettingsMsg(
																		_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_Msg$UpdateLimit(_p2)));
															},
															_bluedogtraining$bdt_elm$Form_IntInput$render(
																_bluedogtraining$bdt_elm$Form_IntInput$view(model.settings.limit))),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rtfeldman$elm_css$Html_Styled$div,
													{
														ctor: '::',
														_0: _rtfeldman$elm_css$Html_Styled_Attributes$class('form-group'),
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_rtfeldman$elm_css$Html_Styled$label,
															{
																ctor: '::',
																_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$label,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: A2(
																	_rtfeldman$elm_css$Html_Styled$span,
																	{ctor: '[]'},
																	{
																		ctor: '::',
																		_0: _rtfeldman$elm_css$Html_Styled$text('Sorting'),
																		_1: {ctor: '[]'}
																	}),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$labelExample,
																			_1: {ctor: '[]'}
																		},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('(default: asc)'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {ctor: '[]'}
																}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_rtfeldman$elm_css$Html_Styled$div,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: A2(
																		_rtfeldman$elm_css$Html_Styled$span,
																		{
																			ctor: '::',
																			_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																				_elm_lang$core$Native_Utils.eq(
																					model.settings.sorting,
																					_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc))),
																			_1: {
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																					_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_MsgFactory$composeMsg(
																						_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_Msg$SettingsMsg(
																							_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Asc)))),
																				_1: {ctor: '[]'}
																			}
																		},
																		{
																			ctor: '::',
																			_0: _rtfeldman$elm_css$Html_Styled$text('Asc'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {
																		ctor: '::',
																		_0: A2(
																			_rtfeldman$elm_css$Html_Styled$span,
																			{
																				ctor: '::',
																				_0: _ryan_senn$stellar_elm_demo$Endpoints_Styles$radioButton(
																					_elm_lang$core$Native_Utils.eq(
																						model.settings.sorting,
																						_elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc))),
																				_1: {
																					ctor: '::',
																					_0: _rtfeldman$elm_css$Html_Styled_Events$onClick(
																						_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_MsgFactory$composeMsg(
																							_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_Msg$SettingsMsg(
																								_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_Msg$UpdateSorting(_ryan_senn$stellar_elm_sdk$Stellar_Sorting$Desc)))),
																					_1: {ctor: '[]'}
																				}
																			},
																			{
																				ctor: '::',
																				_0: _rtfeldman$elm_css$Html_Styled$text('Desc'),
																				_1: {ctor: '[]'}
																			}),
																		_1: {ctor: '[]'}
																	}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: _ryan_senn$stellar_elm_demo$Endpoints_Views_Request$view(
														A2(_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_RequestBuilder$requestBuilder, endpoint, model.settings)),
													_1: {
														ctor: '::',
														_0: A2(
															_ryan_senn$stellar_elm_demo$Endpoints_Views_Button$view,
															model.isLoading,
															_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_MsgFactory$composeMsg(
																A2(_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_Msg$Request, endpoint, model.settings))),
														_1: {
															ctor: '::',
															_0: A3(_ryan_senn$stellar_elm_demo$Endpoints_Views_Response$view, 'TransactionsForLedger', model.response, model.isLoading),
															_1: {ctor: '[]'}
														}
													}
												}
											}
										}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	});

var _ryan_senn$stellar_elm_demo$Endpoints_Update$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'UpdateEndpoint':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{
							endpoint: A2(_bluedogtraining$bdt_elm$Form_Input$update, _p0._0, model.endpoint)
						}),
					{ctor: '[]'});
			case 'AccountDetailsMsg':
				var _p1 = A2(_ryan_senn$stellar_elm_demo$Endpoints_AccountDetails_Update$update, _p0._0, model.accountDetails);
				var accountDetailsModel = _p1._0;
				var cmd = _p1._1;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{accountDetails: accountDetailsModel}),
					{
						ctor: '::',
						_0: cmd,
						_1: {ctor: '[]'}
					});
			case 'AllAssetsMsg':
				var _p2 = A2(_ryan_senn$stellar_elm_demo$Endpoints_AllAssets_Update$update, _p0._0, model.allAssets);
				var allAssetsModel = _p2._0;
				var cmd = _p2._1;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{allAssets: allAssetsModel}),
					{
						ctor: '::',
						_0: cmd,
						_1: {ctor: '[]'}
					});
			case 'DataForAccountMsg':
				var _p3 = A2(_ryan_senn$stellar_elm_demo$Endpoints_DataForAccount_Update$update, _p0._0, model.dataForAccount);
				var dataForAccountModel = _p3._0;
				var cmd = _p3._1;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{dataForAccount: dataForAccountModel}),
					{
						ctor: '::',
						_0: cmd,
						_1: {ctor: '[]'}
					});
			case 'AllEffectsMsg':
				var _p4 = A2(_ryan_senn$stellar_elm_demo$Endpoints_AllEffects_Update$update, _p0._0, model.allEffects);
				var allEffectsModel = _p4._0;
				var cmd = _p4._1;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{allEffects: allEffectsModel}),
					{
						ctor: '::',
						_0: cmd,
						_1: {ctor: '[]'}
					});
			case 'EffectsForAccountMsg':
				var _p5 = A2(_ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_Update$update, _p0._0, model.effectsForAccount);
				var effectsForAccountModel = _p5._0;
				var cmd = _p5._1;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{effectsForAccount: effectsForAccountModel}),
					{
						ctor: '::',
						_0: cmd,
						_1: {ctor: '[]'}
					});
			case 'EffectsForLedgerMsg':
				var _p6 = A2(_ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_Update$update, _p0._0, model.effectsForLedger);
				var effectsForLedgerModel = _p6._0;
				var cmd = _p6._1;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{effectsForLedger: effectsForLedgerModel}),
					{
						ctor: '::',
						_0: cmd,
						_1: {ctor: '[]'}
					});
			case 'EffectsForOperationMsg':
				var _p7 = A2(_ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_Update$update, _p0._0, model.effectsForOperation);
				var effectsForOperationModel = _p7._0;
				var cmd = _p7._1;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{effectsForOperation: effectsForOperationModel}),
					{
						ctor: '::',
						_0: cmd,
						_1: {ctor: '[]'}
					});
			case 'EffectsForTransactionMsg':
				var _p8 = A2(_ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_Update$update, _p0._0, model.effectsForTransaction);
				var effectsForTransactionModel = _p8._0;
				var cmd = _p8._1;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{effectsForTransaction: effectsForTransactionModel}),
					{
						ctor: '::',
						_0: cmd,
						_1: {ctor: '[]'}
					});
			case 'AllLedgersMsg':
				var _p9 = A2(_ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_Update$update, _p0._0, model.allLedgers);
				var allLedgersModel = _p9._0;
				var cmd = _p9._1;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{allLedgers: allLedgersModel}),
					{
						ctor: '::',
						_0: cmd,
						_1: {ctor: '[]'}
					});
			case 'LedgerDetailsMsg':
				var _p10 = A2(_ryan_senn$stellar_elm_demo$Endpoints_LedgerDetails_Update$update, _p0._0, model.ledgerDetails);
				var ledgerDetailsModel = _p10._0;
				var cmd = _p10._1;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{ledgerDetails: ledgerDetailsModel}),
					{
						ctor: '::',
						_0: cmd,
						_1: {ctor: '[]'}
					});
			case 'OffersForAccountMsg':
				var _p11 = A2(_ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_Update$update, _p0._0, model.offersForAccount);
				var offersForAccountModel = _p11._0;
				var cmd = _p11._1;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{offersForAccount: offersForAccountModel}),
					{
						ctor: '::',
						_0: cmd,
						_1: {ctor: '[]'}
					});
			case 'AllOperationsMsg':
				var _p12 = A2(_ryan_senn$stellar_elm_demo$Endpoints_AllOperations_Update$update, _p0._0, model.allOperations);
				var allOperationsModel = _p12._0;
				var cmd = _p12._1;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{allOperations: allOperationsModel}),
					{
						ctor: '::',
						_0: cmd,
						_1: {ctor: '[]'}
					});
			case 'OperationsForAccountMsg':
				var _p13 = A2(_ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_Update$update, _p0._0, model.operationsForAccount);
				var operationsForAccountModel = _p13._0;
				var cmd = _p13._1;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{operationsForAccount: operationsForAccountModel}),
					{
						ctor: '::',
						_0: cmd,
						_1: {ctor: '[]'}
					});
			case 'OperationsForLedgerMsg':
				var _p14 = A2(_ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_Update$update, _p0._0, model.operationsForLedger);
				var operationsForLedgerModel = _p14._0;
				var cmd = _p14._1;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{operationsForLedger: operationsForLedgerModel}),
					{
						ctor: '::',
						_0: cmd,
						_1: {ctor: '[]'}
					});
			case 'OperationsForTransactionMsg':
				var _p15 = A2(_ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_Update$update, _p0._0, model.operationsForTransaction);
				var operationsForTransactionModel = _p15._0;
				var cmd = _p15._1;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{operationsForTransaction: operationsForTransactionModel}),
					{
						ctor: '::',
						_0: cmd,
						_1: {ctor: '[]'}
					});
			case 'OperationDetailsMsg':
				var _p16 = A2(_ryan_senn$stellar_elm_demo$Endpoints_OperationDetails_Update$update, _p0._0, model.operationDetails);
				var operationDetailsModel = _p16._0;
				var cmd = _p16._1;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{operationDetails: operationDetailsModel}),
					{
						ctor: '::',
						_0: cmd,
						_1: {ctor: '[]'}
					});
			case 'OrderbookDetailsMsg':
				var _p17 = A2(_ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_Update$update, _p0._0, model.orderbookDetails);
				var orderbookDetailsModel = _p17._0;
				var cmd = _p17._1;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{orderbookDetails: orderbookDetailsModel}),
					{
						ctor: '::',
						_0: cmd,
						_1: {ctor: '[]'}
					});
			case 'FindPaymentPathsMsg':
				var _p18 = A2(_ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_Update$update, _p0._0, model.findPaymentPaths);
				var findPaymentPathsModel = _p18._0;
				var cmd = _p18._1;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{findPaymentPaths: findPaymentPathsModel}),
					{
						ctor: '::',
						_0: cmd,
						_1: {ctor: '[]'}
					});
			case 'AllPaymentsMsg':
				var _p19 = A2(_ryan_senn$stellar_elm_demo$Endpoints_AllPayments_Update$update, _p0._0, model.allPayments);
				var allPaymentsModel = _p19._0;
				var cmd = _p19._1;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{allPayments: allPaymentsModel}),
					{
						ctor: '::',
						_0: cmd,
						_1: {ctor: '[]'}
					});
			case 'PaymentsForAccountMsg':
				var _p20 = A2(_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_Update$update, _p0._0, model.paymentsForAccount);
				var paymentsForAccountModel = _p20._0;
				var cmd = _p20._1;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{paymentsForAccount: paymentsForAccountModel}),
					{
						ctor: '::',
						_0: cmd,
						_1: {ctor: '[]'}
					});
			case 'PaymentsForLedgerMsg':
				var _p21 = A2(_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_Update$update, _p0._0, model.paymentsForLedger);
				var paymentsForLedgerModel = _p21._0;
				var cmd = _p21._1;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{paymentsForLedger: paymentsForLedgerModel}),
					{
						ctor: '::',
						_0: cmd,
						_1: {ctor: '[]'}
					});
			case 'PaymentsForTransactionMsg':
				var _p22 = A2(_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_Update$update, _p0._0, model.paymentsForTransaction);
				var paymentsForTransactionModel = _p22._0;
				var cmd = _p22._1;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{paymentsForTransaction: paymentsForTransactionModel}),
					{
						ctor: '::',
						_0: cmd,
						_1: {ctor: '[]'}
					});
			case 'AllTransactionsMsg':
				var _p23 = A2(_ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_Update$update, _p0._0, model.allTransactions);
				var allTransactionsModel = _p23._0;
				var cmd = _p23._1;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{allTransactions: allTransactionsModel}),
					{
						ctor: '::',
						_0: cmd,
						_1: {ctor: '[]'}
					});
			case 'PostTransactionMsg':
				var _p24 = A2(_ryan_senn$stellar_elm_demo$Endpoints_PostTransaction_Update$update, _p0._0, model.postTransaction);
				var postTransactionModel = _p24._0;
				var cmd = _p24._1;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{postTransaction: postTransactionModel}),
					{
						ctor: '::',
						_0: cmd,
						_1: {ctor: '[]'}
					});
			case 'TransactionsForAccountMsg':
				var _p25 = A2(_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_Update$update, _p0._0, model.transactionsForAccount);
				var transactionsForAccountModel = _p25._0;
				var cmd = _p25._1;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{transactionsForAccount: transactionsForAccountModel}),
					{
						ctor: '::',
						_0: cmd,
						_1: {ctor: '[]'}
					});
			case 'TransactionsForLedgerMsg':
				var _p26 = A2(_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_Update$update, _p0._0, model.transactionsForLedger);
				var transactionsForLedgerModel = _p26._0;
				var cmd = _p26._1;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{transactionsForLedger: transactionsForLedgerModel}),
					{
						ctor: '::',
						_0: cmd,
						_1: {ctor: '[]'}
					});
			default:
				var _p27 = A2(_ryan_senn$stellar_elm_demo$Endpoints_TransactionDetails_Update$update, _p0._0, model.transactionDetails);
				var transactionDetailsModel = _p27._0;
				var cmd = _p27._1;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{transactionDetails: transactionDetailsModel}),
					{
						ctor: '::',
						_0: cmd,
						_1: {ctor: '[]'}
					});
		}
	});

var _ryan_senn$stellar_elm_demo$Endpoints_View$view = F2(
	function (endpoints, endpoint) {
		var _p0 = endpoint;
		switch (_p0.ctor) {
			case 'AccountDetails':
				return A2(_ryan_senn$stellar_elm_demo$Endpoints_AccountDetails_View$view, endpoints.endpoint, endpoints.accountDetails);
			case 'AllAssets':
				return A2(_ryan_senn$stellar_elm_demo$Endpoints_AllAssets_View$view, endpoints.endpoint, endpoints.allAssets);
			case 'DataForAccount':
				return A2(_ryan_senn$stellar_elm_demo$Endpoints_DataForAccount_View$view, endpoints.endpoint, endpoints.dataForAccount);
			case 'AllEffects':
				return A2(_ryan_senn$stellar_elm_demo$Endpoints_AllEffects_View$view, endpoints.endpoint, endpoints.allEffects);
			case 'EffectsForAccount':
				return A2(_ryan_senn$stellar_elm_demo$Endpoints_EffectsForAccount_View$view, endpoints.endpoint, endpoints.effectsForAccount);
			case 'EffectsForLedger':
				return A2(_ryan_senn$stellar_elm_demo$Endpoints_EffectsForLedger_View$view, endpoints.endpoint, endpoints.effectsForLedger);
			case 'EffectsForOperation':
				return A2(_ryan_senn$stellar_elm_demo$Endpoints_EffectsForOperation_View$view, endpoints.endpoint, endpoints.effectsForOperation);
			case 'EffectsForTransaction':
				return A2(_ryan_senn$stellar_elm_demo$Endpoints_EffectsForTransaction_View$view, endpoints.endpoint, endpoints.effectsForTransaction);
			case 'AllLedgers':
				return A2(_ryan_senn$stellar_elm_demo$Endpoints_AllLedgers_View$view, endpoints.endpoint, endpoints.allLedgers);
			case 'LedgerDetails':
				return A2(_ryan_senn$stellar_elm_demo$Endpoints_LedgerDetails_View$view, endpoints.endpoint, endpoints.ledgerDetails);
			case 'OffersForAccount':
				return A2(_ryan_senn$stellar_elm_demo$Endpoints_OffersForAccount_View$view, endpoints.endpoint, endpoints.offersForAccount);
			case 'AllOperations':
				return A2(_ryan_senn$stellar_elm_demo$Endpoints_AllOperations_View$view, endpoints.endpoint, endpoints.allOperations);
			case 'OperationsForAccount':
				return A2(_ryan_senn$stellar_elm_demo$Endpoints_OperationsForAccount_View$view, endpoints.endpoint, endpoints.operationsForAccount);
			case 'OperationsForLedger':
				return A2(_ryan_senn$stellar_elm_demo$Endpoints_OperationsForLedger_View$view, endpoints.endpoint, endpoints.operationsForLedger);
			case 'OperationsForTransaction':
				return A2(_ryan_senn$stellar_elm_demo$Endpoints_OperationsForTransaction_View$view, endpoints.endpoint, endpoints.operationsForTransaction);
			case 'OperationDetails':
				return A2(_ryan_senn$stellar_elm_demo$Endpoints_OperationDetails_View$view, endpoints.endpoint, endpoints.operationDetails);
			case 'OrderbookDetails':
				return A2(_ryan_senn$stellar_elm_demo$Endpoints_OrderbookDetails_View$view, endpoints.endpoint, endpoints.orderbookDetails);
			case 'FindPaymentPaths':
				return A2(_ryan_senn$stellar_elm_demo$Endpoints_FindPaymentPaths_View$view, endpoints.endpoint, endpoints.findPaymentPaths);
			case 'AllPayments':
				return A2(_ryan_senn$stellar_elm_demo$Endpoints_AllPayments_View$view, endpoints.endpoint, endpoints.allPayments);
			case 'PaymentsForAccount':
				return A2(_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForAccount_View$view, endpoints.endpoint, endpoints.paymentsForAccount);
			case 'PaymentsForLedger':
				return A2(_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForLedger_View$view, endpoints.endpoint, endpoints.paymentsForLedger);
			case 'PaymentsForTransaction':
				return A2(_ryan_senn$stellar_elm_demo$Endpoints_PaymentsForTransaction_View$view, endpoints.endpoint, endpoints.paymentsForTransaction);
			case 'AllTransactions':
				return A2(_ryan_senn$stellar_elm_demo$Endpoints_AllTransactions_View$view, endpoints.endpoint, endpoints.allTransactions);
			case 'PostTransaction':
				return A2(_ryan_senn$stellar_elm_demo$Endpoints_PostTransaction_View$view, endpoints.endpoint, endpoints.postTransaction);
			case 'TransactionsForAccount':
				return A2(_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForAccount_View$view, endpoints.endpoint, endpoints.transactionsForAccount);
			case 'TransactionsForLedger':
				return A2(_ryan_senn$stellar_elm_demo$Endpoints_TransactionsForLedger_View$view, endpoints.endpoint, endpoints.transactionsForLedger);
			default:
				return A2(_ryan_senn$stellar_elm_demo$Endpoints_TransactionDetails_View$view, endpoints.endpoint, endpoints.transactionDetails);
		}
	});

var _ryan_senn$stellar_elm_demo$Model$initialModel = {
	route: _elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_demo$Routes$Home),
	endpoints: _ryan_senn$stellar_elm_demo$Endpoints_Model$initialModel,
	allAssetsResponse: _elm_lang$core$Maybe$Nothing,
	dataForAccountResponse: _elm_lang$core$Maybe$Nothing
};
var _ryan_senn$stellar_elm_demo$Model$Model = F4(
	function (a, b, c, d) {
		return {route: a, endpoints: b, allAssetsResponse: c, dataForAccountResponse: d};
	});

var _ryan_senn$stellar_elm_demo$Update$setRoute = F2(
	function (route, model) {
		var _p0 = route;
		if (_p0.ctor === 'Nothing') {
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				_elm_lang$core$Native_Utils.update(
					model,
					{route: _elm_lang$core$Maybe$Nothing}),
				{ctor: '[]'});
		} else {
			if (_p0._0.ctor === 'Home') {
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{
							route: _elm_lang$core$Maybe$Just(_ryan_senn$stellar_elm_demo$Routes$Home)
						}),
					{ctor: '[]'});
			} else {
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{
							route: _elm_lang$core$Maybe$Just(
								_ryan_senn$stellar_elm_demo$Routes$Endpoints(_p0._0._0))
						}),
					{ctor: '[]'});
			}
		}
	});
var _ryan_senn$stellar_elm_demo$Update$update = F2(
	function (msg, model) {
		var _p1 = msg;
		if (_p1.ctor === 'SetRoute') {
			return A2(_ryan_senn$stellar_elm_demo$Update$setRoute, _p1._0, model);
		} else {
			var _p2 = A2(_ryan_senn$stellar_elm_demo$Endpoints_Update$update, _p1._0, model.endpoints);
			var endpointsModel = _p2._0;
			var cmd = _p2._1;
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				_elm_lang$core$Native_Utils.update(
					model,
					{endpoints: endpointsModel}),
				{
					ctor: '::',
					_0: cmd,
					_1: {ctor: '[]'}
				});
		}
	});

var _ryan_senn$stellar_elm_demo$View$home = A2(
	_rtfeldman$elm_css$Html_Styled$div,
	{
		ctor: '::',
		_0: _ryan_senn$stellar_elm_demo$Styles$home,
		_1: {ctor: '[]'}
	},
	{
		ctor: '::',
		_0: A2(
			_rtfeldman$elm_css$Html_Styled$h1,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: _rtfeldman$elm_css$Html_Styled$text('Stellar Elm Api Examples'),
				_1: {ctor: '[]'}
			}),
		_1: {
			ctor: '::',
			_0: A2(
				_rtfeldman$elm_css$Html_Styled$p,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_rtfeldman$elm_css$Html_Styled$span,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _rtfeldman$elm_css$Html_Styled$text('This SPA is written in Elm, hosted on Github Pages. It aimes to replicate the '),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_rtfeldman$elm_css$Html_Styled$a,
							{
								ctor: '::',
								_0: _rtfeldman$elm_css$Html_Styled_Attributes$href('https://www.stellar.org/laboratory/#explorer?resource=accounts&endpoint=single'),
								_1: {
									ctor: '::',
									_0: _rtfeldman$elm_css$Html_Styled_Attributes$target('blank_'),
									_1: {ctor: '[]'}
								}
							},
							{
								ctor: '::',
								_0: _rtfeldman$elm_css$Html_Styled$text('official Stellar Laboratory Endpoint Explorer.'),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_rtfeldman$elm_css$Html_Styled$span,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _rtfeldman$elm_css$Html_Styled$text(' Click on any Endoint in the menu on the left to see what it looks like!'),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_rtfeldman$elm_css$Html_Styled$p,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_rtfeldman$elm_css$Html_Styled$a,
							{
								ctor: '::',
								_0: _rtfeldman$elm_css$Html_Styled_Attributes$href('https://github.com/ryan-senn/stellar-elm-demo'),
								_1: {
									ctor: '::',
									_0: _rtfeldman$elm_css$Html_Styled_Attributes$target('blank_'),
									_1: {ctor: '[]'}
								}
							},
							{
								ctor: '::',
								_0: _rtfeldman$elm_css$Html_Styled$text('The source code is visible on Github.'),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_rtfeldman$elm_css$Html_Styled$p,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _rtfeldman$elm_css$Html_Styled$text('The Readme contains a section about the structure, future plans and how to build!'),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			}
		}
	});
var _ryan_senn$stellar_elm_demo$View$page = F2(
	function (endpoints, route) {
		var _p0 = route;
		if (_p0.ctor === 'Home') {
			return _ryan_senn$stellar_elm_demo$View$home;
		} else {
			return A2(_ryan_senn$stellar_elm_demo$Endpoints_View$view, endpoints, _p0._0);
		}
	});
var _ryan_senn$stellar_elm_demo$View$content = function (model) {
	var _p1 = model.route;
	if (_p1.ctor === 'Nothing') {
		return A2(
			_rtfeldman$elm_css$Html_Styled$div,
			{
				ctor: '::',
				_0: _ryan_senn$stellar_elm_demo$Styles$content,
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: _rtfeldman$elm_css$Html_Styled$text('Page not found D:'),
				_1: {ctor: '[]'}
			});
	} else {
		return A2(
			_rtfeldman$elm_css$Html_Styled$div,
			{
				ctor: '::',
				_0: _ryan_senn$stellar_elm_demo$Styles$content,
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(_ryan_senn$stellar_elm_demo$View$page, model.endpoints, _p1._0),
				_1: {ctor: '[]'}
			});
	}
};
var _ryan_senn$stellar_elm_demo$View$menuItem = F2(
	function (mRoute, endpoint) {
		return A2(
			_rtfeldman$elm_css$Html_Styled$li,
			{
				ctor: '::',
				_0: _ryan_senn$stellar_elm_demo$Styles$sidebarItem(
					A2(
						_ryan_senn$stellar_elm_demo$Routes$isActiveRoute,
						mRoute,
						_ryan_senn$stellar_elm_demo$Routes$Endpoints(endpoint))),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_rtfeldman$elm_css$Html_Styled$a,
					{
						ctor: '::',
						_0: _ryan_senn$stellar_elm_demo$Styles$sidebarItemLink,
						_1: {
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Routes$href(
								_ryan_senn$stellar_elm_demo$Routes$Endpoints(endpoint)),
							_1: {ctor: '[]'}
						}
					},
					{
						ctor: '::',
						_0: _rtfeldman$elm_css$Html_Styled$text(
							_elm_community$string_extra$String_Extra$toTitleCase(
								_elm_community$string_extra$String_Extra$humanize(
									_elm_lang$core$Basics$toString(endpoint)))),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			});
	});
var _ryan_senn$stellar_elm_demo$View$sidebar = function (mRoute) {
	return A2(
		_rtfeldman$elm_css$Html_Styled$div,
		{
			ctor: '::',
			_0: _ryan_senn$stellar_elm_demo$Styles$sidebar,
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_rtfeldman$elm_css$Html_Styled$h4,
				{
					ctor: '::',
					_0: _ryan_senn$stellar_elm_demo$Styles$sidebarTitle,
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _rtfeldman$elm_css$Html_Styled$text('Endpoints'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_rtfeldman$elm_css$Html_Styled$ul,
					{
						ctor: '::',
						_0: _ryan_senn$stellar_elm_demo$Styles$sidebarList,
						_1: {ctor: '[]'}
					},
					A2(
						_elm_lang$core$List$map,
						_ryan_senn$stellar_elm_demo$View$menuItem(mRoute),
						_ryan_senn$stellar_elm_demo$Endpoints$asList)),
				_1: {ctor: '[]'}
			}
		});
};
var _ryan_senn$stellar_elm_demo$View$body = function (model) {
	return A2(
		_rtfeldman$elm_css$Html_Styled$div,
		{
			ctor: '::',
			_0: _ryan_senn$stellar_elm_demo$Styles$body,
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _ryan_senn$stellar_elm_demo$View$sidebar(model.route),
			_1: {
				ctor: '::',
				_0: _ryan_senn$stellar_elm_demo$View$content(model),
				_1: {ctor: '[]'}
			}
		});
};
var _ryan_senn$stellar_elm_demo$View$header = A2(
	_rtfeldman$elm_css$Html_Styled$div,
	{
		ctor: '::',
		_0: _ryan_senn$stellar_elm_demo$Styles$header,
		_1: {ctor: '[]'}
	},
	{
		ctor: '::',
		_0: A2(
			_rtfeldman$elm_css$Html_Styled$h1,
			{
				ctor: '::',
				_0: _ryan_senn$stellar_elm_demo$Styles$title,
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_rtfeldman$elm_css$Html_Styled$a,
					{
						ctor: '::',
						_0: _ryan_senn$stellar_elm_demo$Styles$stellarTitle,
						_1: {
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Routes$href(_ryan_senn$stellar_elm_demo$Routes$Home),
							_1: {ctor: '[]'}
						}
					},
					{
						ctor: '::',
						_0: _rtfeldman$elm_css$Html_Styled$text('stellar'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_rtfeldman$elm_css$Html_Styled$a,
						{
							ctor: '::',
							_0: _ryan_senn$stellar_elm_demo$Styles$elmTitle,
							_1: {
								ctor: '::',
								_0: _ryan_senn$stellar_elm_demo$Routes$href(_ryan_senn$stellar_elm_demo$Routes$Home),
								_1: {ctor: '[]'}
							}
						},
						{
							ctor: '::',
							_0: _rtfeldman$elm_css$Html_Styled$text('elm api'),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			}),
		_1: {ctor: '[]'}
	});
var _ryan_senn$stellar_elm_demo$View$view = function (model) {
	return A2(
		_rtfeldman$elm_css$Html_Styled$div,
		{
			ctor: '::',
			_0: _ryan_senn$stellar_elm_demo$Styles$layout,
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _ryan_senn$stellar_elm_demo$View$header,
			_1: {
				ctor: '::',
				_0: _ryan_senn$stellar_elm_demo$View$body(model),
				_1: {ctor: '[]'}
			}
		});
};

var _ryan_senn$stellar_elm_demo$Main$main = A2(
	_elm_lang$navigation$Navigation$program,
	function (_p0) {
		return _ryan_senn$stellar_elm_demo$Msg$SetRoute(
			_ryan_senn$stellar_elm_demo$Routes$fromLocation(_p0));
	},
	{
		init: function (location) {
			return A2(
				_ryan_senn$stellar_elm_demo$Update$setRoute,
				_ryan_senn$stellar_elm_demo$Routes$fromLocation(location),
				_ryan_senn$stellar_elm_demo$Model$initialModel);
		},
		update: _ryan_senn$stellar_elm_demo$Update$update,
		subscriptions: _elm_lang$core$Basics$always(_elm_lang$core$Platform_Sub$none),
		view: function (_p1) {
			return _rtfeldman$elm_css$Html_Styled$toUnstyled(
				_ryan_senn$stellar_elm_demo$View$view(_p1));
		}
	})();

var Elm = {};
Elm['Main'] = Elm['Main'] || {};
if (typeof _ryan_senn$stellar_elm_demo$Main$main !== 'undefined') {
    _ryan_senn$stellar_elm_demo$Main$main(Elm['Main'], 'Main', undefined);
}

if (typeof define === "function" && define['amd'])
{
  define([], function() { return Elm; });
  return;
}

if (typeof module === "object")
{
  module['exports'] = Elm;
  return;
}

var globalElm = this['Elm'];
if (typeof globalElm === "undefined")
{
  this['Elm'] = Elm;
  return;
}

for (var publicModule in Elm)
{
  if (publicModule in globalElm)
  {
    throw new Error('There are two Elm modules called `' + publicModule + '` on this page! Rename one of them.');
  }
  globalElm[publicModule] = Elm[publicModule];
}

}).call(this);

